(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1535642,      32562]
NotebookOptionsPosition[   1508268,      32102]
NotebookOutlinePosition[   1508705,      32120]
CellTagsIndexPosition[   1508662,      32117]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Analytical solutions for the motion of spinning particles near spherically \
symmetric compact objects\
\>", "Title",
 CellChangeTimes->{{3.8986837614604063`*^9, 3.898683794393318*^9}, {
  3.899543183820113*^9, 
  3.899543187973509*^9}},ExpressionUUID->"66b2ecea-b430-453a-a3c6-\
cbc44d55d7b9"],

Cell["\<\
In this notebook we go through the computations presented in the paper \
\[OpenCurlyDoubleQuote]Analytical solutions for the motion of spinning \
particles near spherically symmetric black holes and exotic compact objects\
\[CloseCurlyDoubleQuote] by Vojt\[EHacek]ch Witzany and Gabriel Andres \
Piovano, preprint at https://arxiv.org/abs/2308.00021. 

The reader should be able to in principle follow almost every step of the \
computation from the paper by examining this notebook. There is one step for \
which Maple was better suited (expression of quadratures in terms of Jacobi \
elliptic integrals), which can be found in an additional Maple notebook (here \
one can at least directly verify the resulting expressions).

This notebook was written by Vojt\[EHacek]ch Witzany and Gabriel Andres \
Piovano in July 2023.\
\>", "Text",
 CellChangeTimes->{{3.8986837614604063`*^9, 3.898683896056691*^9}, {
  3.898684643883115*^9, 3.898684704519411*^9}, {3.89868516350366*^9, 
  3.898685222247407*^9}, {3.899543196259119*^9, 3.899543227110588*^9}, {
  3.8997917748560143`*^9, 3.899791782084721*^9}, {3.8997919075923243`*^9, 
  3.8997919300875387`*^9}, {3.900136339923736*^9, 
  3.900136343166048*^9}},ExpressionUUID->"6c3a4c55-95b0-4a5d-b4c8-\
c61cf681604a"],

Cell[CellGroupData[{

Cell["Setting up Static, spherically symmetric metric ", "Section",
 CellChangeTimes->{{3.896940395886209*^9, 3.896940414707168*^9}, {
  3.8971188588402653`*^9, 
  3.897118867638599*^9}},ExpressionUUID->"e8e02dbe-f151-4993-a0b6-\
8c9a41ec76f7"],

Cell[CellGroupData[{

Cell["Christoffel, Riemann for any space-time", "Subsection",
 CellChangeTimes->{
  3.896940395886209*^9, {3.898683919103199*^9, 3.898683935211522*^9}, {
   3.899178526689287*^9, 
   3.899178559616212*^9}},ExpressionUUID->"9a203dc2-7d6b-4f01-82bf-\
5a0438d7999b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"InverseMetric", "[", "g_", "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Inverse", "[", "g", "]"}], "]"}]}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"First", " ", "index", " ", "up"}], ",", " ", 
    RowBox[{"second", " ", "two", " ", 
     RowBox[{"down", ":"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChristoffelSymbol", "[", 
    RowBox[{"g_", ",", "xx_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "ig", ",", "res"}], "}"}], ",", 
     RowBox[{
      RowBox[{"n", "=", "4"}], ";", 
      RowBox[{"ig", "=", 
       RowBox[{"InverseMetric", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}], "*", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ig", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "s"}], "]"}], "]"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"g", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "k"}], "]"}], "]"}], ",", 
                  RowBox[{"xx", "[", 
                   RowBox[{"[", "s", "]"}], "]"}]}], "]"}]}], "+", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"g", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", "s"}], "]"}], "]"}], ",", 
                 RowBox[{"xx", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "+", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"g", "[", 
                  RowBox[{"[", 
                   RowBox[{"s", ",", "k"}], "]"}], "]"}], ",", 
                 RowBox[{"xx", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"s", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", "res", "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"First", " ", "index", " ", "up"}], ",", " ", 
    RowBox[{"rest", " ", 
     RowBox[{"down", ":"}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RiemannTensor", "[", 
    RowBox[{"g_", ",", "xx_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "Chr", ",", "res"}], "}"}], ",", 
     RowBox[{
      RowBox[{"n", "=", "4"}], ";", 
      RowBox[{"Chr", "=", 
       RowBox[{"ChristoffelSymbol", "[", 
        RowBox[{"g", ",", "xx"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"Chr", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "k", ",", "m"}], "]"}], "]"}], ",", 
            RowBox[{"xx", "[", 
             RowBox[{"[", "l", "]"}], "]"}]}], "]"}], "-", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"Chr", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "k", ",", "l"}], "]"}], "]"}], ",", 
            RowBox[{"xx", "[", 
             RowBox[{"[", "m", "]"}], "]"}]}], "]"}], "+", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Chr", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "s", ",", "l"}], "]"}], "]"}], "*", 
             RowBox[{"Chr", "[", 
              RowBox[{"[", 
               RowBox[{"s", ",", "k", ",", "m"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"s", ",", "1", ",", "n"}], "}"}]}], "]"}], "-", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Chr", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "s", ",", "m"}], "]"}], "]"}], "*", 
             RowBox[{"Chr", "[", 
              RowBox[{"[", 
               RowBox[{"s", ",", "k", ",", "l"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"s", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"l", ",", "1", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", "res", "]"}]}]}], "]"}]}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Two", " ", "lower", " ", 
    RowBox[{"indices", ":"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RicciTensor", "[", 
   RowBox[{"g_", ",", "xx_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Rie", ",", "res", ",", "n"}], "}"}], ",", 
    RowBox[{
     RowBox[{"n", "=", "4"}], ";", 
     RowBox[{"Rie", "=", 
      RowBox[{"RiemannTensor", "[", 
       RowBox[{"g", ",", "xx"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"Rie", "[", 
           RowBox[{"[", 
            RowBox[{"s", ",", "i", ",", "s", ",", "j"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"s", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Simplify", "[", "res", "]"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RicciScalar", "[", 
   RowBox[{"g_", ",", "xx_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Ricc", ",", "ig", ",", "res", ",", "n"}], "}"}], ",", 
    RowBox[{
     RowBox[{"n", "=", "4"}], ";", 
     RowBox[{"Ricc", "=", 
      RowBox[{"RicciTensor", "[", 
       RowBox[{"g", ",", "xx"}], "]"}]}], ";", 
     RowBox[{"ig", "=", 
      RowBox[{"InverseMetric", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"res", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ig", "[", 
          RowBox[{"[", 
           RowBox[{"s", ",", "i"}], "]"}], "]"}], " ", 
         RowBox[{"Ricc", "[", 
          RowBox[{"[", 
           RowBox[{"s", ",", "i"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "1", ",", "n"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Simplify", "[", "res", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.896940395886209*^9, {3.898683919103199*^9, 3.898683935211522*^9}, 
   3.899178526689287*^9, {3.89917859201966*^9, 3.899178593417687*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"ab0f109b-116e-41bf-be2b-37a65641a354"]
}, Closed]],

Cell[CellGroupData[{

Cell["Specializing to static, spherically symmetric metric", "Subsection",
 CellChangeTimes->{
  3.8991785821674223`*^9},ExpressionUUID->"5dc9029d-102f-4ab6-971b-\
e336275861b6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gtt", " ", "=", " ", 
   RowBox[{"-", 
    RowBox[{"f", "[", "r", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grr", "=", " ", 
   RowBox[{"h", "[", "r", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fhRule", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "-", 
          RowBox[{"2", 
           RowBox[{"M", "/", "#"}]}]}], "&"}], ")"}]}], ",", 
      RowBox[{"h", " ", "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", 
             RowBox[{"M", "/", "#"}]}]}], ")"}]}], "&"}], " ", ")"}]}]}], 
     "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "In", " ", "case", " ", "you", " ", "want", " ", "to", " ", "substitute", 
    " ", "Schwarzschild"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g\[Theta]\[Theta]", "=", " ", 
   SuperscriptBox["r", "2"]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g\[Phi]\[Phi]", "=", " ", 
   RowBox[{
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx", "=", 
   RowBox[{"{", 
    RowBox[{"t", ",", "\[Phi]", ",", "r", ",", "\[Theta]"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gtt", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "g\[Phi]\[Phi]", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "grr", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "g\[Theta]\[Theta]"}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ig", " ", "=", " ", 
   RowBox[{"InverseMetric", "[", "g", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sqrtg", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"-", 
       RowBox[{"Det", "[", "g", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", ">", "0"}], ",", 
       RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ChrisSchw", "=", 
   RowBox[{"ChristoffelSymbol", "[", 
    RowBox[{"g", ",", "xx"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RiemSchw", " ", "=", " ", 
    RowBox[{"RiemannTensor", "[", 
     RowBox[{"g", ",", "xx"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"All", " ", "lower", " ", "indices"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Riemd", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"RiemSchw", "[", 
         RowBox[{"[", 
          RowBox[{"s", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}], 
        RowBox[{"g", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "s"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.896930294078179*^9, 3.89693050329508*^9}, {
   3.896930553805229*^9, 3.896930593665873*^9}, {3.896931310023983*^9, 
   3.8969313131171494`*^9}, 3.896931612104539*^9, {3.896932001220887*^9, 
   3.896932008585019*^9}, {3.8969323478844976`*^9, 3.896932368322858*^9}, {
   3.8969324027159853`*^9, 3.896932463199173*^9}, {3.896933095861124*^9, 
   3.896933137831069*^9}, {3.896933323966498*^9, 3.896933334353155*^9}, {
   3.89868394186692*^9, 3.8986839643029957`*^9}, {3.899178574491535*^9, 
   3.8991785855813437`*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"cad8aa8e-71c6-4f38-9453-4e14a851686e"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Killing vectors", "Section",
 CellChangeTimes->{{3.896940429377676*^9, 
  3.89694044742074*^9}},ExpressionUUID->"8d53d2e3-4d2d-4fb7-9ec8-\
f7636cb4010d"],

Cell[CellGroupData[{

Cell["Killing vectors with indices up", "Subsection",
 CellChangeTimes->{{3.896930763848486*^9, 3.89693077288186*^9}, {
  3.8991786194070597`*^9, 
  3.89917862422042*^9}},ExpressionUUID->"67300c36-f5ac-4153-a131-\
fb5cf4f192cd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xit", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xix", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], 
      RowBox[{"Cot", "[", "\[Theta]", "]"}]}], ",", "0", ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xiy", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
      RowBox[{"Cot", "[", "\[Theta]", "]"}]}], ",", "0", ",", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xiz", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.89693074886535*^9, 3.896931201347351*^9}, 
   3.896931294344936*^9, {3.896931334935363*^9, 3.8969313844954033`*^9}, {
   3.8969328329789467`*^9, 3.896932990360662*^9}, {3.8969330307644253`*^9, 
   3.896933088846839*^9}, 3.8969349603153677`*^9, 3.896946818745799*^9, {
   3.896947022982506*^9, 3.8969470390165977`*^9}, {3.8991786350437183`*^9, 
   3.899178635856683*^9}},
 CellLabel->
  "In[172]:=",ExpressionUUID->"4b2cc0af-bc5f-49d8-8501-ae5001762b5e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Lie derivative of metric by xi", "Subsection",
 CellChangeTimes->{{3.899178643304538*^9, 
  3.8991786533966713`*^9}},ExpressionUUID->"dbf53751-8576-4c99-9ee9-\
01a91d9dc1b2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Lxig", "[", "xi_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "xid", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xid", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"xi", "[", 
            RowBox[{"[", "i", "]"}], "]"}], 
           RowBox[{"g", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"xid", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           RowBox[{"xx", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "+", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"xid", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", 
           RowBox[{"xx", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "-", " ", 
         RowBox[{"2", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ChrisSchw", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], 
             RowBox[{"xid", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ximunu", "[", "xi_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "xid", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xid", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"xi", "[", 
            RowBox[{"[", "i", "]"}], "]"}], 
           RowBox[{"g", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"Simplify", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"xid", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"xx", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "-", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"xid", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"xx", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.89693074886535*^9, 3.896931201347351*^9}, 
   3.896931294344936*^9, {3.896931334935363*^9, 3.8969313844954033`*^9}, {
   3.8969328329789467`*^9, 3.896932990360662*^9}, {3.8969330307644253`*^9, 
   3.896933088846839*^9}, 3.8969349603153677`*^9, 3.896946818745799*^9, {
   3.896947022982506*^9, 3.8969470390165977`*^9}, {3.8991786350437183`*^9, 
   3.899178635856683*^9}, {3.899178667449058*^9, 3.899178670939225*^9}},
 CellLabel->
  "In[176]:=",ExpressionUUID->"da398593-11da-4196-8c62-ea72521285b3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Verifying Killing equation", "Subsection",
 CellChangeTimes->{
  3.8991786750552053`*^9},ExpressionUUID->"46748927-ee4c-4370-8de7-\
b7dd1a621f6f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Lxig", "[", "xit", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Lxig", "[", "xix", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Lxig", "[", "xiy", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Lxig", "[", "xiz", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ximunu", "[", "xit", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ximunu", "[", "xix", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ximunu", "[", "xiy", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ximunu", "[", "xiz", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.89693074886535*^9, 3.896931201347351*^9}, 
   3.896931294344936*^9, {3.896931334935363*^9, 3.8969313844954033`*^9}, {
   3.8969328329789467`*^9, 3.896932990360662*^9}, {3.8969330307644253`*^9, 
   3.896933088846839*^9}, 3.8969349603153677`*^9, 3.896946818745799*^9, {
   3.896947022982506*^9, 3.8969470390165977`*^9}, {3.8991786350437183`*^9, 
   3.899178635856683*^9}, {3.899178667449058*^9, 3.899178670939225*^9}},
 CellLabel->
  "In[178]:=",ExpressionUUID->"3cd38f6a-2e01-465c-ab07-ecded47b75ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896931387275691*^9, 3.896931615784917*^9, 3.8969320173632*^9, {
   3.896932873889092*^9, 3.8969329011098223`*^9}, {3.896932949927449*^9, 
   3.896932983199604*^9}, {3.896933053923349*^9, 3.896933065246232*^9}, {
   3.89693314661197*^9, 3.8969331531172943`*^9}, 3.896933345298059*^9, 
   3.8969349612054243`*^9, 3.896935051338669*^9, 3.8969470404047728`*^9, 
   3.897020335306699*^9, 3.897031997513315*^9, 3.897032161476136*^9, 
   3.897112142110279*^9, 3.897112220445435*^9, 3.897555590879108*^9, 
   3.8976345845879908`*^9, 3.897634651856186*^9, 3.897635474692801*^9, 
   3.898590025870207*^9, 3.898656802477743*^9, 3.898664212436535*^9, 
   3.89868408308902*^9, 3.8987649236064157`*^9, 3.898783617765622*^9, 
   3.898932448309708*^9, 3.899180240741209*^9, 3.899196978839018*^9, 
   3.899201993836191*^9, 3.8992047522578897`*^9, 3.899267897660763*^9, 
   3.89935313562444*^9, 3.899366258409705*^9, 3.8993689660303173`*^9, 
   3.899386104625937*^9, 3.8994329186547194`*^9, 3.899439873081026*^9, 
   3.900136562865288*^9, 3.900136797563088*^9, 3.9001369983061533`*^9, 
   3.9001378579665823`*^9, 3.900139105122558*^9, 3.90119231713859*^9, 
   3.907041548673843*^9, 3.907043154262557*^9, 3.9074011215355043`*^9, 
   3.907647058844157*^9},
 CellLabel->
  "Out[178]=",ExpressionUUID->"a5546f54-491b-4e36-85b1-831354180ce4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896931387275691*^9, 3.896931615784917*^9, 3.8969320173632*^9, {
   3.896932873889092*^9, 3.8969329011098223`*^9}, {3.896932949927449*^9, 
   3.896932983199604*^9}, {3.896933053923349*^9, 3.896933065246232*^9}, {
   3.89693314661197*^9, 3.8969331531172943`*^9}, 3.896933345298059*^9, 
   3.8969349612054243`*^9, 3.896935051338669*^9, 3.8969470404047728`*^9, 
   3.897020335306699*^9, 3.897031997513315*^9, 3.897032161476136*^9, 
   3.897112142110279*^9, 3.897112220445435*^9, 3.897555590879108*^9, 
   3.8976345845879908`*^9, 3.897634651856186*^9, 3.897635474692801*^9, 
   3.898590025870207*^9, 3.898656802477743*^9, 3.898664212436535*^9, 
   3.89868408308902*^9, 3.8987649236064157`*^9, 3.898783617765622*^9, 
   3.898932448309708*^9, 3.899180240741209*^9, 3.899196978839018*^9, 
   3.899201993836191*^9, 3.8992047522578897`*^9, 3.899267897660763*^9, 
   3.89935313562444*^9, 3.899366258409705*^9, 3.8993689660303173`*^9, 
   3.899386104625937*^9, 3.8994329186547194`*^9, 3.899439873081026*^9, 
   3.900136562865288*^9, 3.900136797563088*^9, 3.9001369983061533`*^9, 
   3.9001378579665823`*^9, 3.900139105122558*^9, 3.90119231713859*^9, 
   3.907041548673843*^9, 3.907043154262557*^9, 3.9074011215355043`*^9, 
   3.9076470588763933`*^9},
 CellLabel->
  "Out[179]=",ExpressionUUID->"51974588-060c-48ee-a8cd-adc788425577"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896931387275691*^9, 3.896931615784917*^9, 3.8969320173632*^9, {
   3.896932873889092*^9, 3.8969329011098223`*^9}, {3.896932949927449*^9, 
   3.896932983199604*^9}, {3.896933053923349*^9, 3.896933065246232*^9}, {
   3.89693314661197*^9, 3.8969331531172943`*^9}, 3.896933345298059*^9, 
   3.8969349612054243`*^9, 3.896935051338669*^9, 3.8969470404047728`*^9, 
   3.897020335306699*^9, 3.897031997513315*^9, 3.897032161476136*^9, 
   3.897112142110279*^9, 3.897112220445435*^9, 3.897555590879108*^9, 
   3.8976345845879908`*^9, 3.897634651856186*^9, 3.897635474692801*^9, 
   3.898590025870207*^9, 3.898656802477743*^9, 3.898664212436535*^9, 
   3.89868408308902*^9, 3.8987649236064157`*^9, 3.898783617765622*^9, 
   3.898932448309708*^9, 3.899180240741209*^9, 3.899196978839018*^9, 
   3.899201993836191*^9, 3.8992047522578897`*^9, 3.899267897660763*^9, 
   3.89935313562444*^9, 3.899366258409705*^9, 3.8993689660303173`*^9, 
   3.899386104625937*^9, 3.8994329186547194`*^9, 3.899439873081026*^9, 
   3.900136562865288*^9, 3.900136797563088*^9, 3.9001369983061533`*^9, 
   3.9001378579665823`*^9, 3.900139105122558*^9, 3.90119231713859*^9, 
   3.907041548673843*^9, 3.907043154262557*^9, 3.9074011215355043`*^9, 
   3.907647058904949*^9},
 CellLabel->
  "Out[180]=",ExpressionUUID->"5da8bff6-dd3f-414d-8e7c-832c7eb88a5b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896931387275691*^9, 3.896931615784917*^9, 3.8969320173632*^9, {
   3.896932873889092*^9, 3.8969329011098223`*^9}, {3.896932949927449*^9, 
   3.896932983199604*^9}, {3.896933053923349*^9, 3.896933065246232*^9}, {
   3.89693314661197*^9, 3.8969331531172943`*^9}, 3.896933345298059*^9, 
   3.8969349612054243`*^9, 3.896935051338669*^9, 3.8969470404047728`*^9, 
   3.897020335306699*^9, 3.897031997513315*^9, 3.897032161476136*^9, 
   3.897112142110279*^9, 3.897112220445435*^9, 3.897555590879108*^9, 
   3.8976345845879908`*^9, 3.897634651856186*^9, 3.897635474692801*^9, 
   3.898590025870207*^9, 3.898656802477743*^9, 3.898664212436535*^9, 
   3.89868408308902*^9, 3.8987649236064157`*^9, 3.898783617765622*^9, 
   3.898932448309708*^9, 3.899180240741209*^9, 3.899196978839018*^9, 
   3.899201993836191*^9, 3.8992047522578897`*^9, 3.899267897660763*^9, 
   3.89935313562444*^9, 3.899366258409705*^9, 3.8993689660303173`*^9, 
   3.899386104625937*^9, 3.8994329186547194`*^9, 3.899439873081026*^9, 
   3.900136562865288*^9, 3.900136797563088*^9, 3.9001369983061533`*^9, 
   3.9001378579665823`*^9, 3.900139105122558*^9, 3.90119231713859*^9, 
   3.907041548673843*^9, 3.907043154262557*^9, 3.9074011215355043`*^9, 
   3.9076470589326563`*^9},
 CellLabel->
  "Out[181]=",ExpressionUUID->"45af00aa-3086-41b7-bc92-ca99ba4a1f41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], "2"], ",", "0", ",", "0", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896931387275691*^9, 3.896931615784917*^9, 3.8969320173632*^9, {
   3.896932873889092*^9, 3.8969329011098223`*^9}, {3.896932949927449*^9, 
   3.896932983199604*^9}, {3.896933053923349*^9, 3.896933065246232*^9}, {
   3.89693314661197*^9, 3.8969331531172943`*^9}, 3.896933345298059*^9, 
   3.8969349612054243`*^9, 3.896935051338669*^9, 3.8969470404047728`*^9, 
   3.897020335306699*^9, 3.897031997513315*^9, 3.897032161476136*^9, 
   3.897112142110279*^9, 3.897112220445435*^9, 3.897555590879108*^9, 
   3.8976345845879908`*^9, 3.897634651856186*^9, 3.897635474692801*^9, 
   3.898590025870207*^9, 3.898656802477743*^9, 3.898664212436535*^9, 
   3.89868408308902*^9, 3.8987649236064157`*^9, 3.898783617765622*^9, 
   3.898932448309708*^9, 3.899180240741209*^9, 3.899196978839018*^9, 
   3.899201993836191*^9, 3.8992047522578897`*^9, 3.899267897660763*^9, 
   3.89935313562444*^9, 3.899366258409705*^9, 3.8993689660303173`*^9, 
   3.899386104625937*^9, 3.8994329186547194`*^9, 3.899439873081026*^9, 
   3.900136562865288*^9, 3.900136797563088*^9, 3.9001369983061533`*^9, 
   3.9001378579665823`*^9, 3.900139105122558*^9, 3.90119231713859*^9, 
   3.907041548673843*^9, 3.907043154262557*^9, 3.9074011215355043`*^9, 
   3.907647058959632*^9},
 CellLabel->
  "Out[182]=",ExpressionUUID->"02fffb31-9c98-4b12-9f77-0bb9d8a51dd9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox["1", "2"], " ", "r", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ",", "0", ",", 
     RowBox[{"r", " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["r", "2"]}], " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ",", 
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.896931387275691*^9, 3.896931615784917*^9, 3.8969320173632*^9, {
   3.896932873889092*^9, 3.8969329011098223`*^9}, {3.896932949927449*^9, 
   3.896932983199604*^9}, {3.896933053923349*^9, 3.896933065246232*^9}, {
   3.89693314661197*^9, 3.8969331531172943`*^9}, 3.896933345298059*^9, 
   3.8969349612054243`*^9, 3.896935051338669*^9, 3.8969470404047728`*^9, 
   3.897020335306699*^9, 3.897031997513315*^9, 3.897032161476136*^9, 
   3.897112142110279*^9, 3.897112220445435*^9, 3.897555590879108*^9, 
   3.8976345845879908`*^9, 3.897634651856186*^9, 3.897635474692801*^9, 
   3.898590025870207*^9, 3.898656802477743*^9, 3.898664212436535*^9, 
   3.89868408308902*^9, 3.8987649236064157`*^9, 3.898783617765622*^9, 
   3.898932448309708*^9, 3.899180240741209*^9, 3.899196978839018*^9, 
   3.899201993836191*^9, 3.8992047522578897`*^9, 3.899267897660763*^9, 
   3.89935313562444*^9, 3.899366258409705*^9, 3.8993689660303173`*^9, 
   3.899386104625937*^9, 3.8994329186547194`*^9, 3.899439873081026*^9, 
   3.900136562865288*^9, 3.900136797563088*^9, 3.9001369983061533`*^9, 
   3.9001378579665823`*^9, 3.900139105122558*^9, 3.90119231713859*^9, 
   3.907041548673843*^9, 3.907043154262557*^9, 3.9074011215355043`*^9, 
   3.907647058987105*^9},
 CellLabel->
  "Out[183]=",ExpressionUUID->"13a53ae1-3ed9-4dab-8184-4f03952f0e9e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox["1", "2"], " ", "r", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["r", "2"]}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.896931387275691*^9, 3.896931615784917*^9, 3.8969320173632*^9, {
   3.896932873889092*^9, 3.8969329011098223`*^9}, {3.896932949927449*^9, 
   3.896932983199604*^9}, {3.896933053923349*^9, 3.896933065246232*^9}, {
   3.89693314661197*^9, 3.8969331531172943`*^9}, 3.896933345298059*^9, 
   3.8969349612054243`*^9, 3.896935051338669*^9, 3.8969470404047728`*^9, 
   3.897020335306699*^9, 3.897031997513315*^9, 3.897032161476136*^9, 
   3.897112142110279*^9, 3.897112220445435*^9, 3.897555590879108*^9, 
   3.8976345845879908`*^9, 3.897634651856186*^9, 3.897635474692801*^9, 
   3.898590025870207*^9, 3.898656802477743*^9, 3.898664212436535*^9, 
   3.89868408308902*^9, 3.8987649236064157`*^9, 3.898783617765622*^9, 
   3.898932448309708*^9, 3.899180240741209*^9, 3.899196978839018*^9, 
   3.899201993836191*^9, 3.8992047522578897`*^9, 3.899267897660763*^9, 
   3.89935313562444*^9, 3.899366258409705*^9, 3.8993689660303173`*^9, 
   3.899386104625937*^9, 3.8994329186547194`*^9, 3.899439873081026*^9, 
   3.900136562865288*^9, 3.900136797563088*^9, 3.9001369983061533`*^9, 
   3.9001378579665823`*^9, 3.900139105122558*^9, 3.90119231713859*^9, 
   3.907041548673843*^9, 3.907043154262557*^9, 3.9074011215355043`*^9, 
   3.9076470590137043`*^9},
 CellLabel->
  "Out[184]=",ExpressionUUID->"5b1221a3-2b30-4604-a52c-7c50912da6b1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"r", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["r", "2"]}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.896931387275691*^9, 3.896931615784917*^9, 3.8969320173632*^9, {
   3.896932873889092*^9, 3.8969329011098223`*^9}, {3.896932949927449*^9, 
   3.896932983199604*^9}, {3.896933053923349*^9, 3.896933065246232*^9}, {
   3.89693314661197*^9, 3.8969331531172943`*^9}, 3.896933345298059*^9, 
   3.8969349612054243`*^9, 3.896935051338669*^9, 3.8969470404047728`*^9, 
   3.897020335306699*^9, 3.897031997513315*^9, 3.897032161476136*^9, 
   3.897112142110279*^9, 3.897112220445435*^9, 3.897555590879108*^9, 
   3.8976345845879908`*^9, 3.897634651856186*^9, 3.897635474692801*^9, 
   3.898590025870207*^9, 3.898656802477743*^9, 3.898664212436535*^9, 
   3.89868408308902*^9, 3.8987649236064157`*^9, 3.898783617765622*^9, 
   3.898932448309708*^9, 3.899180240741209*^9, 3.899196978839018*^9, 
   3.899201993836191*^9, 3.8992047522578897`*^9, 3.899267897660763*^9, 
   3.89935313562444*^9, 3.899366258409705*^9, 3.8993689660303173`*^9, 
   3.899386104625937*^9, 3.8994329186547194`*^9, 3.899439873081026*^9, 
   3.900136562865288*^9, 3.900136797563088*^9, 3.9001369983061533`*^9, 
   3.9001378579665823`*^9, 3.900139105122558*^9, 3.90119231713859*^9, 
   3.907041548673843*^9, 3.907043154262557*^9, 3.9074011215355043`*^9, 
   3.907647059040819*^9},
 CellLabel->
  "Out[185]=",ExpressionUUID->"9a1cbe4c-4a50-4003-b8e9-e3c9b38dfd49"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Dynamics of spinning particle", "Section",
 CellChangeTimes->{{3.896940464175743*^9, 
  3.8969404709567633`*^9}},ExpressionUUID->"dedcc5ec-489b-4ef0-aa4b-\
dbb02f42656f"],

Cell[CellGroupData[{

Cell["Dynamical variables", "Subsection",
 CellChangeTimes->{{3.8969314173609943`*^9, 3.896931846186133*^9}, {
   3.8969319108683243`*^9, 3.896931948957797*^9}, {3.896932038232312*^9, 
   3.896932048467902*^9}, {3.896932093331916*^9, 3.896932149254133*^9}, {
   3.8969323319959497`*^9, 3.896932332304796*^9}, {3.896932495671736*^9, 
   3.8969324970321083`*^9}, {3.896932714929493*^9, 3.896932799338982*^9}, {
   3.8969331815351458`*^9, 3.8969333055790987`*^9}, {3.8969333541505833`*^9, 
   3.896933386409017*^9}, {3.896935723238756*^9, 3.896935768526053*^9}, 
   3.897634580975752*^9, {3.898656430255069*^9, 3.898656453742325*^9}, 
   3.8986568141724787`*^9, {3.898684016253788*^9, 3.898684043004592*^9}, {
   3.8986841195772676`*^9, 3.8986841581941147`*^9}, {3.898684197189333*^9, 
   3.898684372757249*^9}, {3.898684450024403*^9, 3.89868447542845*^9}, {
   3.898684526053136*^9, 3.8986845604547577`*^9}, {3.8991787033153353`*^9, 
   3.899178717796179*^9}},ExpressionUUID->"b6fa96fc-d000-4190-80dc-\
03fc9501dc95"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xt", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"tt", "[", "\[Tau]", "]"}], ",", 
     RowBox[{"\[Phi]t", "[", "\[Tau]", "]"}], ",", 
     RowBox[{"rt", "[", "\[Tau]", "]"}], ",", 
     RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrRule", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "->", 
       RowBox[{"xt", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Substitute", " ", "trajectory", " ", "into", " ", "coordinate", " ", 
    "expressions"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DeTrRule", " ", "=", " ", 
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"xt", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "->", 
         RowBox[{"xx", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"xt", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]"}], "]"}], "->", 
         SuperscriptBox["u", 
          RowBox[{"xx", "[", 
           RowBox[{"[", "i", "]"}], "]"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"St", "[", "\[Tau]", "]"}], "->", 
         SuperscriptBox["s", "t"]}], ",", 
        RowBox[{
         RowBox[{"Sr", "[", "\[Tau]", "]"}], "->", 
         SuperscriptBox["s", "r"]}], ",", 
        RowBox[{
         RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], "->", 
         SuperscriptBox["s", "\[Phi]"]}], ",", 
        RowBox[{
         RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", 
         SuperscriptBox["s", "\[Theta]"]}]}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
   "Not", " ", "useful", " ", "but", " ", "visually", " ", "nice", " ", 
    "symbolic", " ", "presentation"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ucov", " ", "=", " ", 
    RowBox[{"D", "[", 
     RowBox[{"xt", ",", "\[Tau]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Four", "-", "velocity"}], ",", " ", 
    RowBox[{"indices", " ", "up"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ucon", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ucov", "[", 
          RowBox[{"[", "i", "]"}], "]"}], 
         RowBox[{"g", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Four", "-", "velocity"}], ",", " ", 
    RowBox[{"indices", " ", "down"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8969314173609943`*^9, 3.896931846186133*^9}, {
   3.8969319108683243`*^9, 3.896931948957797*^9}, {3.896932038232312*^9, 
   3.896932048467902*^9}, {3.896932093331916*^9, 3.896932149254133*^9}, {
   3.8969323319959497`*^9, 3.896932332304796*^9}, {3.896932495671736*^9, 
   3.8969324970321083`*^9}, {3.896932714929493*^9, 3.896932799338982*^9}, {
   3.8969331815351458`*^9, 3.8969333055790987`*^9}, {3.8969333541505833`*^9, 
   3.896933386409017*^9}, {3.896935723238756*^9, 3.896935768526053*^9}, 
   3.897634580975752*^9, {3.898656430255069*^9, 3.898656453742325*^9}, 
   3.8986568141724787`*^9, {3.898684016253788*^9, 3.898684043004592*^9}, {
   3.8986841195772676`*^9, 3.8986841581941147`*^9}, {3.898684197189333*^9, 
   3.898684372757249*^9}, {3.898684450024403*^9, 3.89868447542845*^9}, {
   3.898684526053136*^9, 3.8986845604547577`*^9}, {3.8991787033153353`*^9, 
   3.899178711029131*^9}},
 CellLabel->
  "In[186]:=",ExpressionUUID->"9936dec3-58f9-414c-b3fd-d7a15b20b2f1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Spin vector and tensor", "Subsection",
 CellChangeTimes->{{3.899178729046084*^9, 
  3.899178733184455*^9}},ExpressionUUID->"51b63890-f152-4eb3-82ca-\
9c209d60ae55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Svec", " ", "is", " ", "the", " ", "spin", " ", "vector", " ", "and", " ",
     "has", " ", "indices", " ", "up"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Svec", " ", "=", " ", 
     RowBox[{"\[Epsilon]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"St", "[", "\[Tau]", "]"}], ",", 
        RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], ",", 
        RowBox[{"Sr", "[", "\[Tau]", "]"}], ",", 
        RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Spin", " ", "tensor", " ", "in", " ", "terms", " ", "of", " ", "spin", 
      " ", "vector"}], ",", " ", 
     RowBox[{"indices", " ", "up"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Stens", " ", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", 
          RowBox[{" ", "sqrtg"}]], 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"LeviCivitaTensor", "[", "4", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}], 
            RowBox[{"ucon", "[", 
             RowBox[{"[", "k", "]"}], "]"}], 
            RowBox[{"g", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}], 
            RowBox[{"Svec", "[", 
             RowBox[{"[", "m", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Pretty", " ", "representation", " ", "of", " ", "spin", " ", 
     RowBox[{"tensor", ":"}]}], "*)"}], 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Stens", "/.", "DeTrRule"}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", "->", "1"}], "}"}]}], ")"}], "//", "Simplify"}],
     "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.8969314173609943`*^9, 3.896931846186133*^9}, {
   3.8969319108683243`*^9, 3.896931948957797*^9}, {3.896932038232312*^9, 
   3.896932048467902*^9}, {3.896932093331916*^9, 3.896932149254133*^9}, {
   3.8969323319959497`*^9, 3.896932332304796*^9}, {3.896932495671736*^9, 
   3.8969324970321083`*^9}, {3.896932714929493*^9, 3.896932799338982*^9}, {
   3.8969331815351458`*^9, 3.8969333055790987`*^9}, {3.8969333541505833`*^9, 
   3.896933386409017*^9}, {3.896935723238756*^9, 3.896935768526053*^9}, 
   3.897634580975752*^9, {3.898656430255069*^9, 3.898656453742325*^9}, 
   3.8986568141724787`*^9, {3.898684054684731*^9, 3.89868407628555*^9}, {
   3.8986841665667*^9, 3.8986841794543867`*^9}, {3.898684407793787*^9, 
   3.898684432180835*^9}, {3.8986844889710827`*^9, 3.89868450948917*^9}, {
   3.89875075272967*^9, 3.8987507630507183`*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"cc90965d-ac37-4cd2-827d-80b74fff7db3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["s", "\[Theta]"], " ", 
           SuperscriptBox["u", "r"]}], "-", 
          RowBox[{
           SuperscriptBox["s", "r"], " ", 
           SuperscriptBox["u", "\[Theta]"]}]}], ")"}], " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"h", "[", "r", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["s", "\[Phi]"], " ", 
           SuperscriptBox["u", "\[Theta]"]}], "-", 
          RowBox[{
           SuperscriptBox["s", "\[Theta]"], " ", 
           SuperscriptBox["u", "\[Phi]"]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["s", "\[Phi]"]}], " ", 
           SuperscriptBox["u", "r"]}], "+", 
          RowBox[{
           SuperscriptBox["s", "r"], " ", 
           SuperscriptBox["u", "\[Phi]"]}]}], ")"}], " ", 
        RowBox[{"h", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["s", "\[Theta]"]}], " ", 
           SuperscriptBox["u", "r"]}], "+", 
          RowBox[{
           SuperscriptBox["s", "r"], " ", 
           SuperscriptBox["u", "\[Theta]"]}]}], ")"}], " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"h", "[", "r", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]], "0", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["s", "\[Theta]"]}], " ", 
           SuperscriptBox["u", "t"]}], "+", 
          RowBox[{
           SuperscriptBox["s", "t"], " ", 
           SuperscriptBox["u", "\[Theta]"]}]}], ")"}], " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"f", "[", "r", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["s", "t"]}], " ", 
           SuperscriptBox["u", "r"]}], "+", 
          RowBox[{
           SuperscriptBox["s", "r"], " ", 
           SuperscriptBox["u", "t"]}]}], ")"}], " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"f", "[", "r", "]"}], " ", 
          RowBox[{"h", "[", "r", "]"}]}]]}], 
       SuperscriptBox["r", "2"]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["s", "\[Phi]"], " ", 
            SuperscriptBox["u", "\[Theta]"]}], "-", 
           RowBox[{
            SuperscriptBox["s", "\[Theta]"], " ", 
            SuperscriptBox["u", "\[Phi]"]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
        SqrtBox[
         RowBox[{
          RowBox[{"f", "[", "r", "]"}], " ", 
          RowBox[{"h", "[", "r", "]"}]}]]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["s", "\[Theta]"], " ", 
           SuperscriptBox["u", "t"]}], "-", 
          RowBox[{
           SuperscriptBox["s", "t"], " ", 
           SuperscriptBox["u", "\[Theta]"]}]}], ")"}], " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"f", "[", "r", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]], "0", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["s", "\[Phi]"]}], " ", 
           SuperscriptBox["u", "t"]}], "+", 
          RowBox[{
           SuperscriptBox["s", "t"], " ", 
           SuperscriptBox["u", "\[Phi]"]}]}], ")"}], " ", 
        RowBox[{"f", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["s", "\[Phi]"], " ", 
           SuperscriptBox["u", "r"]}], "-", 
          RowBox[{
           SuperscriptBox["s", "r"], " ", 
           SuperscriptBox["u", "\[Phi]"]}]}], ")"}], " ", 
        RowBox[{"h", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["s", "t"], " ", 
           SuperscriptBox["u", "r"]}], "-", 
          RowBox[{
           SuperscriptBox["s", "r"], " ", 
           SuperscriptBox["u", "t"]}]}], ")"}], " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"f", "[", "r", "]"}], " ", 
          RowBox[{"h", "[", "r", "]"}]}]]}], 
       SuperscriptBox["r", "2"]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["s", "\[Phi]"], " ", 
           SuperscriptBox["u", "t"]}], "-", 
          RowBox[{
           SuperscriptBox["s", "t"], " ", 
           SuperscriptBox["u", "\[Phi]"]}]}], ")"}], " ", 
        RowBox[{"f", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.896932045722739*^9, {3.896933268785829*^9, 3.896933306108165*^9}, {
   3.896933348584228*^9, 3.896933357577005*^9}, 3.89693338864781*^9, 
   3.8969336099309072`*^9, 3.896935051481242*^9, 3.896935832524097*^9, 
   3.89702033573158*^9, 3.897031997883338*^9, 3.8970321617267437`*^9, 
   3.8971121424651003`*^9, 3.897112220747271*^9, 3.897555591297689*^9, 
   3.897634585062833*^9, 3.8976346523034687`*^9, 3.897635475143992*^9, 
   3.8985900263215446`*^9, {3.898656768616735*^9, 3.8986568027552*^9}, 
   3.898656861784412*^9, 3.8986642129482403`*^9, {3.898684059240691*^9, 
   3.8986840835041*^9}, {3.898684162343594*^9, 3.898684201517363*^9}, {
   3.898684361020406*^9, 3.8986843814501534`*^9}, {3.898684414525689*^9, 
   3.8986844337770367`*^9}, {3.898684481727833*^9, 3.8986845104548883`*^9}, 
   3.898684564241416*^9, 3.8987649240563593`*^9, 3.898783618160555*^9, 
   3.8989324487365103`*^9, 3.8991802415449743`*^9, 3.899196979356193*^9, 
   3.899201994356049*^9, 3.899204752730379*^9, 3.899267898139879*^9, 
   3.8993531360883512`*^9, 3.899366258924197*^9, 3.899368966574881*^9, 
   3.899386105136167*^9, 3.899432919136817*^9, 3.899439873599662*^9, 
   3.900136563382503*^9, 3.90013679808254*^9, 3.900136998820291*^9, 
   3.900137858504182*^9, 3.9001391056767063`*^9, 3.907041549228758*^9, 
   3.907043154753298*^9, 3.907401122091837*^9, 3.907647059330183*^9},
 CellLabel->
  "Out[193]//MatrixForm=",ExpressionUUID->"0cca0e32-3951-463a-8edc-\
8d6f528c465a"]
}, Closed]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Consistency", " ", "checks"}], "*)"}]], "Input",
 CellChangeTimes->{{3.899178810275691*^9, 3.8991788160108547`*^9}},
 CellLabel->
  "In[194]:=",ExpressionUUID->"5e32ac32-2576-4528-93d6-917bf0ee1f15"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"suOnShell", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["tt", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}], " ", "->", " ", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"grr", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["rt", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}], "2"]}], "-", 
          RowBox[{"g\[Phi]\[Phi]", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]t", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}], "2"]}], " ", 
          "-", 
          RowBox[{"g\[Theta]\[Theta]", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Theta]t", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}], "2"]}]}], 
         "gtt"], " "}]]}], ",", 
     RowBox[{
      RowBox[{"St", "[", "\[Tau]", "]"}], "->", " ", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["S", "2"]}], "-", 
          RowBox[{"grr", " ", 
           SuperscriptBox[
            RowBox[{"Sr", "[", "\[Tau]", "]"}], "2"]}], "-", 
          RowBox[{"g\[Phi]\[Phi]", " ", 
           SuperscriptBox[
            RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], "2"]}], " ", "-", 
          RowBox[{"g\[Theta]\[Theta]", " ", 
           SuperscriptBox[
            RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "2"]}]}], "gtt"], 
        " "}]]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"ExpandAll", "[", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Stens", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], 
         RowBox[{"g", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "l"}], "]"}], "]"}], 
         RowBox[{"Svec", "[", 
          RowBox[{"[", "l", "]"}], "]"}]}], "/.", "suOnShell"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"ExpandAll", "[", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Stens", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], 
         RowBox[{"ucon", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "/.", "suOnShell"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8976347996440573`*^9, 3.897635161980936*^9}, {
  3.897635218506898*^9, 3.897635269003684*^9}, {3.8976353015400248`*^9, 
  3.897635350331506*^9}, {3.8986566887304697`*^9, 3.898656749676649*^9}, {
  3.89917874414775*^9, 3.899178754929385*^9}},
 CellLabel->
  "In[195]:=",ExpressionUUID->"7d8945b5-98b8-415e-9689-4985272aa12a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.8976349056619473`*^9, 3.8976349387641497`*^9}, {
   3.897635158764051*^9, 3.897635175927105*^9}, {3.897635339593762*^9, 
   3.8976353524782457`*^9}, 3.897635477274941*^9, 3.8985900283408747`*^9, 
   3.8986567599266567`*^9, 3.898656802812131*^9, 3.898664213013907*^9, 
   3.898684083572322*^9, 3.898764924131103*^9, 3.8987836182114*^9, 
   3.89893244879882*^9, 3.899180241701305*^9, 3.8991969794162397`*^9, 
   3.899201994434435*^9, 3.89920475280066*^9, 3.899267898195936*^9, 
   3.89935313614929*^9, 3.899366258985433*^9, 3.8993689666378098`*^9, 
   3.899386105196183*^9, 3.899432919192094*^9, 3.899439873666695*^9, 
   3.9001365634463587`*^9, 3.900136798146717*^9, 3.90013699891691*^9, 
   3.90013785858493*^9, 3.900139105755512*^9, 3.907041549295445*^9, 
   3.907043154812476*^9, 3.9074011221759167`*^9, 3.907647059391739*^9},
 CellLabel->
  "Out[196]=",ExpressionUUID->"4d7457aa-e1e3-4fbf-b00d-562f8420c4ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.8976349056619473`*^9, 3.8976349387641497`*^9}, {
   3.897635158764051*^9, 3.897635175927105*^9}, {3.897635339593762*^9, 
   3.8976353524782457`*^9}, 3.897635477274941*^9, 3.8985900283408747`*^9, 
   3.8986567599266567`*^9, 3.898656802812131*^9, 3.898664213013907*^9, 
   3.898684083572322*^9, 3.898764924131103*^9, 3.8987836182114*^9, 
   3.89893244879882*^9, 3.899180241701305*^9, 3.8991969794162397`*^9, 
   3.899201994434435*^9, 3.89920475280066*^9, 3.899267898195936*^9, 
   3.89935313614929*^9, 3.899366258985433*^9, 3.8993689666378098`*^9, 
   3.899386105196183*^9, 3.899432919192094*^9, 3.899439873666695*^9, 
   3.9001365634463587`*^9, 3.900136798146717*^9, 3.90013699891691*^9, 
   3.90013785858493*^9, 3.900139105755512*^9, 3.907041549295445*^9, 
   3.907043154812476*^9, 3.9074011221759167`*^9, 3.907647059416663*^9},
 CellLabel->
  "Out[197]=",ExpressionUUID->"ee437161-0d5a-40f7-8e25-1b7a149af635"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equations of motion", "Subsection",
 CellChangeTimes->{{3.8969314173609943`*^9, 3.896931846186133*^9}, {
   3.8969319108683243`*^9, 3.896931948957797*^9}, {3.896932038232312*^9, 
   3.896932041406851*^9}, {3.896933467407468*^9, 3.896933469244429*^9}, {
   3.896933544674555*^9, 3.8969335645388737`*^9}, 3.896933606912093*^9, 
   3.896933666607025*^9, {3.89693370073359*^9, 3.896933793917666*^9}, {
   3.896934378131613*^9, 3.8969344383447638`*^9}, {3.8969345213566723`*^9, 
   3.89693456170076*^9}, {3.896947191553883*^9, 3.89694721316336*^9}, {
   3.8986591594543743`*^9, 3.898659161494543*^9}, {3.8991787844045143`*^9, 
   3.899178787256159*^9}},ExpressionUUID->"1b963e1d-919a-4ca8-8d6a-\
bdb5811e76c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Equations", " ", "of", " ", "motion", " ", "in", " ", "the", " ", "form", 
    " ", "of", " ", 
    RowBox[{"substitutions", "/", "rules"}]}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"xEOM", " ", "=", " ", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"ucov", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]"}], "]"}], "->", " ", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ChrisSchw", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], 
              RowBox[{"ucov", "[", 
               RowBox[{"[", "j", "]"}], "]"}], 
              RowBox[{"ucov", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "-", " ", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"RiemSchw", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}], 
              RowBox[{"ucov", "[", 
               RowBox[{"[", "j", "]"}], "]"}], 
              RowBox[{"Stens", "[", 
               RowBox[{"[", 
                RowBox[{"k", ",", "l"}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}]}], " ", 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
      "TrRule"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SEOM", " ", "=", " ", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Svec", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "/", "\[Epsilon]"}], ",", 
           "\[Tau]"}], "]"}], "->", " ", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ChrisSchw", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], " ", 
               RowBox[{"Svec", "[", 
                RowBox[{"[", "j", "]"}], "]"}], 
               RowBox[{"ucov", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "/", 
           "\[Epsilon]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
      "TrRule"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8969314173609943`*^9, 3.896931846186133*^9}, {
   3.8969319108683243`*^9, 3.896931948957797*^9}, {3.896932038232312*^9, 
   3.896932041406851*^9}, {3.896933467407468*^9, 3.896933469244429*^9}, {
   3.896933544674555*^9, 3.8969335645388737`*^9}, 3.896933606912093*^9, 
   3.896933666607025*^9, {3.89693370073359*^9, 3.896933793917666*^9}, {
   3.896934378131613*^9, 3.8969344383447638`*^9}, {3.8969345213566723`*^9, 
   3.89693456170076*^9}, {3.896947191553883*^9, 3.89694721316336*^9}, {
   3.8986591594543743`*^9, 3.898659161494543*^9}, 3.8991787844045143`*^9},
 CellLabel->
  "In[198]:=",ExpressionUUID->"03c385a9-28fe-44ec-b98b-a8337cdeb3b6"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Constants of motion", "Section",
 CellChangeTimes->{{3.896940488115079*^9, 
  3.8969404922839003`*^9}},ExpressionUUID->"76946252-83fb-4288-866a-\
371bbe58976e"],

Cell[CellGroupData[{

Cell["Killing constants of motion", "Subsection",
 CellChangeTimes->{{3.896934598879077*^9, 3.896934847024322*^9}, {
   3.896934996198616*^9, 3.896935023463715*^9}, {3.896935135177882*^9, 
   3.896935141181439*^9}, {3.8969353947308903`*^9, 3.896935432235372*^9}, {
   3.8969354631887503`*^9, 3.896935482401833*^9}, {3.8969357820320683`*^9, 
   3.8969357970696917`*^9}, {3.896940789152491*^9, 3.896940797702455*^9}, {
   3.897042410253681*^9, 3.8970424124820337`*^9}, {3.8970432351440907`*^9, 
   3.897043237252162*^9}, {3.897043348407268*^9, 3.897043362799342*^9}, 
   3.897112136489996*^9, {3.897635942751834*^9, 3.897635945392706*^9}, {
   3.8991788485972643`*^9, 
   3.899178884526622*^9}},ExpressionUUID->"0161c64f-fadd-4408-8797-\
e23557b25c18"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpConst", "[", "xi_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ucon", "[", 
       RowBox[{"[", "i", "]"}], "]"}], 
      RowBox[{"xi", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], " ", "-", " ", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"xi", "[", 
             RowBox[{"[", "k", "]"}], "]"}], 
            RowBox[{"g", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "k"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
         RowBox[{"xx", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "]"}], 
       RowBox[{"Stens", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Es", " ", "=", " ", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"SpConst", "[", "xit", "]"}]}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Jx", " ", "=", " ", 
  RowBox[{
   RowBox[{"SpConst", "[", "xix", "]"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Jy", " ", "=", " ", 
  RowBox[{
   RowBox[{"SpConst", "[", "xiy", "]"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Jz", " ", "=", 
  RowBox[{
   RowBox[{"SpConst", "[", "xiz", "]"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Jv", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Jx", ",", "Jy", ",", "Jz"}], "}"}], "//", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"h", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}]}], "}"}]}], "]"}], 
     "&"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.896934598879077*^9, 3.896934847024322*^9}, {
   3.896934996198616*^9, 3.896935023463715*^9}, {3.896935135177882*^9, 
   3.896935141181439*^9}, {3.8969353947308903`*^9, 3.896935432235372*^9}, {
   3.8969354631887503`*^9, 3.896935482401833*^9}, {3.8969357820320683`*^9, 
   3.8969357970696917`*^9}, {3.896940789152491*^9, 3.896940797702455*^9}, {
   3.897042410253681*^9, 3.8970424124820337`*^9}, {3.8970432351440907`*^9, 
   3.897043237252162*^9}, {3.897043348407268*^9, 3.897043362799342*^9}, 
   3.897112136489996*^9, {3.897635942751834*^9, 3.897635945392706*^9}, {
   3.8991788485972643`*^9, 3.8991788621590147`*^9}},
 CellLabel->
  "In[200]:=",ExpressionUUID->"6ae2a763-581a-4444-83f3-2be611138283"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "r", "]"}], " ", 
   RowBox[{
    SuperscriptBox["tt", "\[Prime]",
     MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "\[Epsilon]", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}]}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]t", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]t", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
   RowBox[{"2", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"f", "[", "r", "]"}], " ", 
      RowBox[{"h", "[", "r", "]"}]}]]}]]}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAuJppxPaL3C8dfRjPCl/GUgLTfj/9SeQ/pd7ePl/IP1C
3nIPiL7UuGAvC+dbx63qW1VYgbTDlhoTEP2B9fJJNSC9497syyA6Pel9wH8g
3eKm8ViV663jObP+1yD604p1QWpAWsUkqBdEl1RPz/zB/dbxlHoGiyTPW8dF
j9YvkgHSZSb1YWpA2uT/xPO+QPpZtf+HMCDds1BtznwgnXbSZZYE71vHiPDq
YwpAOvhMtKUykGb6rzZJBUj3HQpOdwbSMR5CbLlAem1HXl4xkP73+fGBEiDN
98JYvhZIZ6V//jUZSB++6pwwHUi/WlLd95oP6J97l1aD6NkRr4+A6KLzCQZv
gLRYntsZEL0maoeiuAzQXWrpr0B0D2PIlmNA2vx95Sk72beOAG4oodI=
  "],
 CellLabel->
  "Out[201]=",ExpressionUUID->"b339ae22-d336-4c39-b3b1-86db4594ae64"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["r", "2"]}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]t", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]t", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], "+", 
    FractionBox[
     RowBox[{"\[Epsilon]", " ", 
      RowBox[{"f", "[", "r", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["rt", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["tt", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
        "+", 
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], " ", 
            RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["tt", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["tt", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]t", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]t", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}]}], 
       ")"}]}], 
     SqrtBox[
      RowBox[{
       RowBox[{"f", "[", "r", "]"}], " ", 
       RowBox[{"h", "[", "r", "]"}]}]]]}], ")"}]}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAuJppxPaL3C8dfRjPCl/GUgLTfj/9SeQ/pd7ePl/IP1C
3nIPiL7UuGAvC+dbx63qW1VYgbTDlhoTEP2B9fJJNSC9497syyA6Pel9wH8g
3eKm8ViV663jObP+1yD604p1QWpAWsUkqBdEl1RPz/zB/dbxlHoGiyTPW8dF
j9YvkgHSZSb1YWpA2uT/xPO+QPpZtf+HMCDds1BtznwgnXbSZZYE71vHiPDq
YwpAOvhMtKUykGb6rzZJBUj3HQpOdwbSMR5CbLlAem1HXl4xkP73+fGBEiDN
98JYvhZIZ6V//jUZSB++6pwwHUi/WlLd95oP6J97l1aD6NkRr4+A6KLzCQZv
gLRYntsZEL0maoeiuAzQXWrpr0B0D2PIlmNA+tQrp9N2sm8dAXFYoio=
  "],
 CellLabel->
  "Out[202]=",ExpressionUUID->"023929e0-0527-4cc2-bcfe-8a9f8c6997d4"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]t", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]t", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{"\[Epsilon]", " ", 
    RowBox[{"f", "[", "r", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"h", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["rt", "\[Prime]",
               MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["tt", "\[Prime]",
               MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{"r", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}]}], " ", 
             RowBox[{
              SuperscriptBox["tt", "\[Prime]",
               MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]t", "\[Prime]",
               MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"r", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}]}], " ", 
          RowBox[{
           SuperscriptBox["tt", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}]}], 
     ")"}]}], 
   SqrtBox[
    RowBox[{
     RowBox[{"f", "[", "r", "]"}], " ", 
     RowBox[{"h", "[", "r", "]"}]}]]]}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAuJppxPaL3C8dfRjPCl/GUgLTfj/9SeQ/pd7ePl/IP1C
3nIPiL7UuGAvC+dbx63qW1VYgbTDlhoTEP2B9fJJNSC9497syyA6Pel9wH8g
3eKm8ViV663jObP+1yD604p1QWpAWsUkqBdEl1RPz/zB/dbxlHoGiyTPW8dF
j9YvkgHSZSb1YWpA2uT/xPO+QPpZtf+HMCDds1BtznwgnXbSZZYE71vHiPDq
YwpAOvhMtKUykGb6rzZJBUj3HQpOdwbSMR5CbLlAem1HXl4xkP73+fGBEiDN
98JYvhZIZ6V//jUZSB++6pwwHUi/WlLd95oP6J97l1aD6NkRr4+A6KLzCQZv
gLRYntsZEL0maoeiuAzQXWrpr0B0D2PIlmNAmiXq8Gk72beOAGo+oVU=
  "],
 CellLabel->
  "Out[203]=",ExpressionUUID->"fd2a926f-37e2-47b1-b860-07f0c91ea9a4"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[Epsilon]", " ", 
    RowBox[{"f", "[", "r", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"h", "[", "r", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["rt", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["tt", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], "+", 
      
      RowBox[{"r", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["tt", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}]}], 
     ")"}]}], 
   SqrtBox[
    RowBox[{
     RowBox[{"f", "[", "r", "]"}], " ", 
     RowBox[{"h", "[", "r", "]"}]}]]], "+", 
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
   RowBox[{
    SuperscriptBox["\[Phi]t", "\[Prime]",
     MultilineFunction->None], "[", "\[Tau]", "]"}]}]}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAuJppxPaL3C8dfRjPCl/GUgLTfj/9SeQ/pd7ePl/IP1C
3nIPiL7UuGAvC+dbx63qW1VYgbTDlhoTEP2B9fJJNSC9497syyA6Pel9wH8g
3eKm8ViV663jObP+1yD604p1QWpAWsUkqBdEl1RPz/zB/dbxlHoGiyTPW8dF
j9YvkgHSZSb1YWpA2uT/xPO+QPpZtf+HMCDds1BtznwgnXbSZZYE71vHiPDq
YwpAOvhMtKUykGb6rzZJBUj3HQpOdwbSMR5CbLlAem1HXl4xkP73+fGBEiDN
98JYvhZIZ6V//jUZSB++6pwwHUi/WlLd95oP6J97l1aD6NkRr4+A6KLzCQZv
gLRYntsZEL0maoeiuAzQXWrpr0B0D2PIlmNA+tbTW6ftZN86AgB1RaLN
  "],
 CellLabel->
  "Out[204]=",ExpressionUUID->"854b6e62-b0c2-4311-9b7e-e2107d4fee3e"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Verify", " ", "that", " ", "constants", " ", "are", " ", "conserved", " ",
     "by", " ", "EOM", " ", "up", " ", "to", " ", "spin", " ", "squared", " ",
     "terms"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"Es", "/.", "TrRule"}], ",", "\[Tau]"}], "]"}], "/.", 
         "xEOM"}], "/.", "SEOM"}], "/.", "TrRule"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"Jx", "/.", "TrRule"}], ",", "\[Tau]"}], "]"}], "/.", 
         "xEOM"}], "/.", "SEOM"}], "/.", "TrRule"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"Jy", "/.", "TrRule"}], ",", "\[Tau]"}], "]"}], "/.", 
         "xEOM"}], "/.", "SEOM"}], "/.", "TrRule"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"Jz", "/.", "TrRule"}], ",", "\[Tau]"}], "]"}], "/.", 
         "xEOM"}], "/.", "SEOM"}], "/.", "TrRule"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.896934598879077*^9, 3.896934847024322*^9}, {
  3.896934996198616*^9, 3.896935023463715*^9}, {3.896935135177882*^9, 
  3.896935141181439*^9}, {3.8969353947308903`*^9, 3.896935459371348*^9}, {
  3.896935546102886*^9, 3.896935610294128*^9}, {3.896935663115157*^9, 
  3.896935669589469*^9}, {3.896935801446746*^9, 3.896935811253969*^9}, {
  3.896935848765432*^9, 3.896935885327705*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"2bf91785-eef0-4168-beea-00b0fe02527b"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
  SeriesData[$CellContext`\[Epsilon], 0, {}, 2, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.896934817871505*^9, 3.896934847971258*^9, {3.89693502920892*^9, 
   3.896935051523539*^9}, 3.896935142528916*^9, 3.896935400507824*^9, {
   3.896935552770275*^9, 3.896935611499619*^9}, 3.896935670396966*^9, {
   3.8969358272036953`*^9, 3.896935872459445*^9}, 3.897020340092498*^9, 
   3.897032001958075*^9, 3.897032161885377*^9, 3.897112153904867*^9, 
   3.897112221449458*^9, 3.897555603928841*^9, 3.897634595502626*^9, 
   3.897634659019681*^9, 3.897635489576812*^9, 3.898590039797245*^9, 
   3.898656815141849*^9, 3.898664226090074*^9, 3.898684095184359*^9, 
   3.898764936241542*^9, 3.898783619105143*^9, 3.898932460398388*^9, 
   3.899180253367518*^9, 3.899196991454432*^9, 3.899202010617303*^9, 
   3.899204764583913*^9, 3.8992679103688993`*^9, 3.8993531476381483`*^9, 
   3.8993662740039186`*^9, 3.899368982371057*^9, 3.899386116671389*^9, 
   3.8994329308454933`*^9, 3.899439889640912*^9, 3.9001365749612913`*^9, 
   3.900136809853654*^9, 3.900137010092255*^9, 3.9001378705279627`*^9, 
   3.9001391182153254`*^9, 3.907041560972989*^9, 3.907043166963181*^9, 
   3.907401134484619*^9, 3.907647071906248*^9},
 CellLabel->
  "Out[206]=",ExpressionUUID->"635807d2-567a-45b7-9508-65c8ecf7fcb9"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
  SeriesData[$CellContext`\[Epsilon], 0, {}, 2, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.896934817871505*^9, 3.896934847971258*^9, {3.89693502920892*^9, 
   3.896935051523539*^9}, 3.896935142528916*^9, 3.896935400507824*^9, {
   3.896935552770275*^9, 3.896935611499619*^9}, 3.896935670396966*^9, {
   3.8969358272036953`*^9, 3.896935872459445*^9}, 3.897020340092498*^9, 
   3.897032001958075*^9, 3.897032161885377*^9, 3.897112153904867*^9, 
   3.897112221449458*^9, 3.897555603928841*^9, 3.897634595502626*^9, 
   3.897634659019681*^9, 3.897635489576812*^9, 3.898590039797245*^9, 
   3.898656815141849*^9, 3.898664226090074*^9, 3.898684095184359*^9, 
   3.898764936241542*^9, 3.898783619105143*^9, 3.898932460398388*^9, 
   3.899180253367518*^9, 3.899196991454432*^9, 3.899202010617303*^9, 
   3.899204764583913*^9, 3.8992679103688993`*^9, 3.8993531476381483`*^9, 
   3.8993662740039186`*^9, 3.899368982371057*^9, 3.899386116671389*^9, 
   3.8994329308454933`*^9, 3.899439889640912*^9, 3.9001365749612913`*^9, 
   3.900136809853654*^9, 3.900137010092255*^9, 3.9001378705279627`*^9, 
   3.9001391182153254`*^9, 3.907041560972989*^9, 3.907043166963181*^9, 
   3.907401134484619*^9, 3.90764707193349*^9},
 CellLabel->
  "Out[207]=",ExpressionUUID->"01dfc833-dc36-4f21-b1d1-c1581e572456"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
  SeriesData[$CellContext`\[Epsilon], 0, {}, 2, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.896934817871505*^9, 3.896934847971258*^9, {3.89693502920892*^9, 
   3.896935051523539*^9}, 3.896935142528916*^9, 3.896935400507824*^9, {
   3.896935552770275*^9, 3.896935611499619*^9}, 3.896935670396966*^9, {
   3.8969358272036953`*^9, 3.896935872459445*^9}, 3.897020340092498*^9, 
   3.897032001958075*^9, 3.897032161885377*^9, 3.897112153904867*^9, 
   3.897112221449458*^9, 3.897555603928841*^9, 3.897634595502626*^9, 
   3.897634659019681*^9, 3.897635489576812*^9, 3.898590039797245*^9, 
   3.898656815141849*^9, 3.898664226090074*^9, 3.898684095184359*^9, 
   3.898764936241542*^9, 3.898783619105143*^9, 3.898932460398388*^9, 
   3.899180253367518*^9, 3.899196991454432*^9, 3.899202010617303*^9, 
   3.899204764583913*^9, 3.8992679103688993`*^9, 3.8993531476381483`*^9, 
   3.8993662740039186`*^9, 3.899368982371057*^9, 3.899386116671389*^9, 
   3.8994329308454933`*^9, 3.899439889640912*^9, 3.9001365749612913`*^9, 
   3.900136809853654*^9, 3.900137010092255*^9, 3.9001378705279627`*^9, 
   3.9001391182153254`*^9, 3.907041560972989*^9, 3.907043166963181*^9, 
   3.907401134484619*^9, 3.9076470719596024`*^9},
 CellLabel->
  "Out[208]=",ExpressionUUID->"029438d5-95d4-4e13-8bb0-f6005aa133a1"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
  SeriesData[$CellContext`\[Epsilon], 0, {}, 2, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.896934817871505*^9, 3.896934847971258*^9, {3.89693502920892*^9, 
   3.896935051523539*^9}, 3.896935142528916*^9, 3.896935400507824*^9, {
   3.896935552770275*^9, 3.896935611499619*^9}, 3.896935670396966*^9, {
   3.8969358272036953`*^9, 3.896935872459445*^9}, 3.897020340092498*^9, 
   3.897032001958075*^9, 3.897032161885377*^9, 3.897112153904867*^9, 
   3.897112221449458*^9, 3.897555603928841*^9, 3.897634595502626*^9, 
   3.897634659019681*^9, 3.897635489576812*^9, 3.898590039797245*^9, 
   3.898656815141849*^9, 3.898664226090074*^9, 3.898684095184359*^9, 
   3.898764936241542*^9, 3.898783619105143*^9, 3.898932460398388*^9, 
   3.899180253367518*^9, 3.899196991454432*^9, 3.899202010617303*^9, 
   3.899204764583913*^9, 3.8992679103688993`*^9, 3.8993531476381483`*^9, 
   3.8993662740039186`*^9, 3.899368982371057*^9, 3.899386116671389*^9, 
   3.8994329308454933`*^9, 3.899439889640912*^9, 3.9001365749612913`*^9, 
   3.900136809853654*^9, 3.900137010092255*^9, 3.9001378705279627`*^9, 
   3.9001391182153254`*^9, 3.907041560972989*^9, 3.907043166963181*^9, 
   3.907401134484619*^9, 3.907647071987404*^9},
 CellLabel->
  "Out[209]=",ExpressionUUID->"f6adf0a2-65b6-4d20-bf0f-94244a2f8326"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Angular - momentum vector ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["l", "\[Mu]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "262ca1d2-68b6-4abd-b80a-493296193c44"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "||"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b9a8ebbf-da76-4a77-9ca1-0486b13bf6be"]
}], "Subsection",
 CellChangeTimes->{{3.89917890001789*^9, 
  3.899178949960725*^9}},ExpressionUUID->"27caf928-003a-4cc6-bfd1-\
fe967dbca317"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "An", " ", "additional", " ", "constant", " ", "is", " ", "associated", 
     " ", "with", " ", "the", " ", "angular"}], "-", 
    RowBox[{"momentum", " ", "vector", " ", "l"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"l", " ", "=", " ", 
     RowBox[{
      RowBox[{"rt", "[", "\[Tau]", "]"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Theta]t", "'"}], "[", "\[Tau]", "]"}], "/", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}], "]"}]}], ",", "0", ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}], "]"}]}], 
         RowBox[{
          RowBox[{"\[Phi]t", "'"}], "[", "\[Tau]", "]"}]}]}], "}"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ug", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SuperscriptBox["tt", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}], ",", 
       RowBox[{
        SuperscriptBox["\[Phi]t", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}], ",", 
       RowBox[{
        RowBox[{"rt", "'"}], "[", "\[Tau]", "]"}], ",", 
       RowBox[{
        RowBox[{"\[Theta]t", "'"}], "[", "\[Tau]", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Verify", " ", "parallel", " ", "transport", " ", "of", " ", "l", " ", 
     RowBox[{"vector", ":"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]"}], "]"}], "+", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ChrisSchw", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], 
               RowBox[{"ug", "[", 
                RowBox[{"[", "j", "]"}], "]"}], 
               RowBox[{"l", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ")"}], "/.",
           "TrRule"}], "/.", "xEOM"}], "/.", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], "/.", "TrRule"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "//", 
    "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.898658823281313*^9, 3.8986591359939404`*^9}, {
  3.898659175285775*^9, 3.8986591973741293`*^9}, {3.898659238643696*^9, 
  3.898659272507402*^9}, {3.898659380197628*^9, 3.8986594252615557`*^9}, {
  3.8987508216920958`*^9, 3.898750826142089*^9}, {3.9001366589034567`*^9, 
  3.900136667332426*^9}},
 CellLabel->
  "In[210]:=",ExpressionUUID->"fcb4e0ab-ac66-4209-ae8b-d18caee3d3f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.8986594124634027`*^9, 3.8986594285151052`*^9}, 
   3.8986642279262238`*^9, 3.898684096980384*^9, 3.898764938096478*^9, 
   3.898783619191538*^9, 3.8989324621935253`*^9, 3.8991802552186937`*^9, 
   3.899196991556883*^9, 3.899202010733672*^9, 3.899204766420192*^9, 
   3.899267912178257*^9, 3.89935314939459*^9, 3.899366274112812*^9, 
   3.8993689824843082`*^9, 3.89938611844307*^9, 3.899432932643263*^9, 
   3.8994398897519503`*^9, 3.900136576731216*^9, {3.900136663908101*^9, 
   3.900136668254342*^9}, 3.900136809972541*^9, 3.900137010207416*^9, 
   3.900137870649523*^9, 3.900139118338883*^9, 3.9070415627960253`*^9, 
   3.907043167104542*^9, 3.907401136403144*^9, 3.907647072018278*^9},
 CellLabel->
  "Out[212]=",ExpressionUUID->"1a9eec36-d8d0-4199-aaab-60adf4297034"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"The", " ", "aligned", " ", "component", " ", "of", " ", "spin"}],
     ",", " ", 
    RowBox[{"denoted", " ", "by", " ", 
     SubscriptBox["s", "\[DoubleVerticalBar]"], " ", "in", " ", "paper"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"spara", " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", " ", 
       FractionBox[
        RowBox[{"l", ".", "g", ".", "Svec"}], 
        SqrtBox[
         RowBox[{"l", ".", "g", ".", "l"}]]], ")"}], "/.", "TrRule"}], "//", 
     "Simplify"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Verify", " ", "conservation", " ", "of", " ", 
     SubscriptBox["s", "\[DoubleVerticalBar]"]}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"spara", ",", "\[Tau]"}], "]"}], "/.", "xEOM"}], "/.", 
         "SEOM"}], "/.", "TrRule"}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
    "FullSimplify"}]}]}]], "Input",
 CellChangeTimes->{{3.898658823281313*^9, 3.8986591359939404`*^9}, {
  3.898659175285775*^9, 3.8986591973741293`*^9}, {3.898659238643696*^9, 
  3.898659272507402*^9}, {3.898659380197628*^9, 3.898659474308009*^9}},
 CellLabel->
  "In[213]:=",ExpressionUUID->"a8869a9e-aadc-4019-be8d-d658a7d89962"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Epsilon]", " ", 
   SuperscriptBox[
    RowBox[{"rt", "[", "\[Tau]", "]"}], "3"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]t", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
     RowBox[{
      RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]t", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
  SqrtBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"rt", "[", "\[Tau]", "]"}], "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]t", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}], "2"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Phi]t", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}], "2"]}]}], 
     ")"}]}]]]], "Output",
 CellChangeTimes->{{3.898658972572579*^9, 3.89865898391442*^9}, {
   3.8986590191426373`*^9, 3.898659137240917*^9}, {3.898659389510161*^9, 
   3.898659403084126*^9}, 3.898659477133979*^9, 3.898664227981674*^9, 
   3.898684097027926*^9, 3.898764938142188*^9, 3.898783619229907*^9, 
   3.898932462237056*^9, 3.8991802552776213`*^9, 3.899196991603163*^9, 
   3.899202010790056*^9, 3.8992047664706507`*^9, 3.899267912224214*^9, 
   3.899353149442054*^9, 3.899366274164886*^9, 3.899368982536874*^9, 
   3.899386118509295*^9, 3.8994329326893063`*^9, 3.8994398897992773`*^9, 
   3.90013657679357*^9, 3.900136675743149*^9, 3.900136810023217*^9, 
   3.900137010262706*^9, 3.900137870704812*^9, 3.900139118447098*^9, 
   3.907041562846874*^9, 3.907043167164275*^9, 3.907401136454937*^9, 
   3.9076470720564947`*^9},
 CellLabel->
  "Out[213]=",ExpressionUUID->"99de71e9-7b29-4037-a797-56476a5406a3"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
  SeriesData[$CellContext`\[Epsilon], 0, {}, 2, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.898658972572579*^9, 3.89865898391442*^9}, {
   3.8986590191426373`*^9, 3.898659137240917*^9}, {3.898659389510161*^9, 
   3.898659403084126*^9}, 3.898659477133979*^9, 3.898664227981674*^9, 
   3.898684097027926*^9, 3.898764938142188*^9, 3.898783619229907*^9, 
   3.898932462237056*^9, 3.8991802552776213`*^9, 3.899196991603163*^9, 
   3.899202010790056*^9, 3.8992047664706507`*^9, 3.899267912224214*^9, 
   3.899353149442054*^9, 3.899366274164886*^9, 3.899368982536874*^9, 
   3.899386118509295*^9, 3.8994329326893063`*^9, 3.8994398897992773`*^9, 
   3.90013657679357*^9, 3.900136675743149*^9, 3.900136810023217*^9, 
   3.900137010262706*^9, 3.900137870704812*^9, 3.900139118447098*^9, 
   3.907041562846874*^9, 3.907043167164275*^9, 3.907401136454937*^9, 
   3.9076470720800962`*^9},
 CellLabel->
  "Out[214]=",ExpressionUUID->"03c6d2ca-c52d-48c3-9a75-55160805b740"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Rotating into aligned plane", "Section",
 CellChangeTimes->{{3.8985954942086477`*^9, 
  3.898595504765497*^9}},ExpressionUUID->"25265eec-160b-47d9-8387-\
8cfa0ab0414f"],

Cell[CellGroupData[{

Cell["Alignment of general vector", "Subsection",
 CellChangeTimes->{{3.89917899579184*^9, 
  3.899179009074786*^9}},ExpressionUUID->"03e61f85-dafa-4f68-bf60-\
14af5454d829"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Defining", " ", "quantitities", " ", "such", " ", "as", " ", "cos", 
     RowBox[{"(", "\[Iota]", ")"}]}], ",", " ", 
    RowBox[{"sin", 
     RowBox[{"(", "\[Iota]", ")"}]}], ",", " ", "\[ScriptCapitalJ]", ",", 
    "..."}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Note", " ", "that", " ", "the", " ", "values", " ", "of", " ", 
     SubscriptBox["\[ScriptCapitalJ]", "x"], " ", "etc", " ", "do", " ", 
     "not", " ", "need", " ", "to", " ", "be", " ", "substituted", " ", 
     "explicitly"}], ",", " ", 
    RowBox[{
    "since", " ", "the", " ", "formulas", " ", "apply", " ", "in", " ", 
     "general"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ci", " ", "=", " ", 
     RowBox[{"JJz", "/", "JJ"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"si", " ", "=", 
     SqrtBox[
      RowBox[{"1", " ", "-", " ", 
       SuperscriptBox["ci", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"JJ", " ", "=", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"], "+", 
       SuperscriptBox["JJz", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", " ", "=", " ", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"JJ", " ", "si"}]], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "JJy"}], ",", "JJx", ",", "0"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Align", "[", "v_", "]"}], ":=", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", ".", "v"}], ")"}]}], " ", "+", " ", 
      RowBox[{"ci", 
       RowBox[{"(", 
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"Cross", "[", 
           RowBox[{"n", ",", "v"}], "]"}], ",", "n"}], "]"}], ")"}]}], " ", 
      "-", " ", 
      RowBox[{"si", 
       RowBox[{"(", 
        RowBox[{"Cross", "[", 
         RowBox[{"n", ",", "v"}], "]"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"BackAlign", "[", "v_", "]"}], ":=", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", ".", "v"}], ")"}]}], " ", "+", " ", 
      RowBox[{"ci", 
       RowBox[{"(", 
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"Cross", "[", 
           RowBox[{"n", ",", "v"}], "]"}], ",", "n"}], "]"}], ")"}]}], " ", 
      "+", " ", 
      RowBox[{"si", 
       RowBox[{"(", 
        RowBox[{"Cross", "[", 
         RowBox[{"n", ",", "v"}], "]"}], ")"}]}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8985954942086477`*^9, 3.8985955061418*^9}, {
  3.898595545372663*^9, 3.8985955633156424`*^9}, {3.898596047668797*^9, 
  3.898596169103059*^9}, {3.898596220923689*^9, 3.898596321735456*^9}, {
  3.89859645693365*^9, 3.898596460519618*^9}, {3.898597398074711*^9, 
  3.8985974122331*^9}, {3.898656924444478*^9, 3.898657012438146*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"b199a1f3-334c-4542-9498-849a96567973"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Check", " ", "that", " ", "alignment", " ", "works"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Jalign", " ", "=", " ", 
    RowBox[{
     RowBox[{"Align", "[", 
      RowBox[{"{", 
       RowBox[{"JJx", ",", "JJy", ",", "JJz"}], "}"}], "]"}], "//", 
     "FullSimplify"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Check", " ", "that", " ", "inverse", " ", "transofrm", " ", "works"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BackAlign", "[", "Jalign", "]"}], "//", 
    "FullSimplify"}]}]}]], "Input",
 CellChangeTimes->{{3.8985954942086477`*^9, 3.8985955061418*^9}, {
  3.898595545372663*^9, 3.8985955633156424`*^9}, {3.898596047668797*^9, 
  3.898596169103059*^9}, {3.898596220923689*^9, 3.898596347842802*^9}, {
  3.898597427953835*^9, 3.89859744279001*^9}, {3.898657021368763*^9, 
  3.898657046365394*^9}},
 CellLabel->
  "In[221]:=",ExpressionUUID->"03d94bc0-f308-44d6-90f6-f33bfa8dea34"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["JJx", "2"], "+", 
     SuperscriptBox["JJy", "2"], "+", 
     SuperscriptBox["JJz", "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.898596335556787*^9, 3.89859634818575*^9}, 
   3.8985964640928917`*^9, 3.898597443149604*^9, 3.898656815299827*^9, 
   3.898664228191395*^9, 3.898684097215678*^9, 3.898764938338469*^9, 
   3.89878361928608*^9, 3.898932462412044*^9, 3.899180255459807*^9, 
   3.899196991670661*^9, 3.899202010860463*^9, 3.8992047666594048`*^9, 
   3.899267912410674*^9, 3.899353149618658*^9, 3.899366274227487*^9, 
   3.899368982603425*^9, 3.899386118688259*^9, 3.899432932871339*^9, 
   3.899439889872209*^9, 3.9001365769725227`*^9, 3.900136810101902*^9, 
   3.900137010346882*^9, 3.900137870791086*^9, 3.900139118559112*^9, 
   3.907041563067102*^9, 3.907043167249093*^9, 3.907401136680028*^9, 
   3.907647072122356*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"5c0db8c4-046b-40d1-9943-84f840e1ad88"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"JJx", ",", "JJy", ",", "JJz"}], "}"}]], "Output",
 CellChangeTimes->{{3.898596335556787*^9, 3.89859634818575*^9}, 
   3.8985964640928917`*^9, 3.898597443149604*^9, 3.898656815299827*^9, 
   3.898664228191395*^9, 3.898684097215678*^9, 3.898764938338469*^9, 
   3.89878361928608*^9, 3.898932462412044*^9, 3.899180255459807*^9, 
   3.899196991670661*^9, 3.899202010860463*^9, 3.8992047666594048`*^9, 
   3.899267912410674*^9, 3.899353149618658*^9, 3.899366274227487*^9, 
   3.899368982603425*^9, 3.899386118688259*^9, 3.899432932871339*^9, 
   3.899439889872209*^9, 3.9001365769725227`*^9, 3.900136810101902*^9, 
   3.900137010346882*^9, 3.900137870791086*^9, 3.900139118559112*^9, 
   3.907041563067102*^9, 3.907043167249093*^9, 3.907401136680028*^9, 
   3.907647072145043*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"c094634e-94ff-4c0c-8255-e21d56c333e6"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Transformation of spherical polar coordinates", "Subsection",
 CellChangeTimes->{{3.8991790167624474`*^9, 
  3.899179026356125*^9}},ExpressionUUID->"1e70321f-a7c1-414b-bb3a-\
5a3ba9d69e2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Unit", " ", "position", " ", "vectors", " ", "transformed", " ", "there", 
    " ", "and", " ", "back"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xp", ",", "yp", ",", "zp"}], "}"}], "=", 
    RowBox[{
     RowBox[{"Align", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}], "]"}], "//", 
     "FullSimplify"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xh", ",", "yh", ",", "zh"}], "}"}], "=", 
    RowBox[{
     RowBox[{"BackAlign", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], 
         RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], ",", 
        RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}]}], "}"}], "]"}], "//", 
     "FullSimplify"}]}]}]}]], "Input",
 CellChangeTimes->{{3.898596925922181*^9, 3.898597003281492*^9}, {
  3.898597558514565*^9, 3.89859759921793*^9}, {3.898655293521556*^9, 
  3.898655315700107*^9}, {3.898657052107205*^9, 3.8986570705996513`*^9}},
 CellLabel->
  "In[223]:=",ExpressionUUID->"e68e003f-5313-4947-ba46-93bcafd0a18b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "JJx"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["JJx", "2"], "+", 
        SuperscriptBox["JJy", "2"]}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"JJx", " ", "JJy", " ", 
         RowBox[{"(", 
          RowBox[{"JJz", "-", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["JJx", "2"], "+", 
             SuperscriptBox["JJy", "2"], "+", 
             SuperscriptBox["JJz", "2"]}]]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["JJx", "2"], " ", "JJz"}], "+", 
           RowBox[{
            SuperscriptBox["JJy", "2"], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["JJx", "2"], "+", 
              SuperscriptBox["JJy", "2"], "+", 
              SuperscriptBox["JJz", "2"]}]]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"]}], ")"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"], "+", 
       SuperscriptBox["JJz", "2"]}]]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "JJy"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["JJx", "2"], "+", 
        SuperscriptBox["JJy", "2"]}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["JJy", "2"], " ", "JJz"}], "+", 
           RowBox[{
            SuperscriptBox["JJx", "2"], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["JJx", "2"], "+", 
              SuperscriptBox["JJy", "2"], "+", 
              SuperscriptBox["JJz", "2"]}]]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"JJx", " ", "JJy", " ", 
         RowBox[{"(", 
          RowBox[{"JJz", "-", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["JJx", "2"], "+", 
             SuperscriptBox["JJy", "2"], "+", 
             SuperscriptBox["JJz", "2"]}]]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"]}], ")"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"], "+", 
       SuperscriptBox["JJz", "2"]}]]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"JJz", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"JJy", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"JJx", " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox["JJx", "2"], "+", 
      SuperscriptBox["JJy", "2"], "+", 
      SuperscriptBox["JJz", "2"]}]]]}], "}"}]], "Output",
 CellChangeTimes->{3.898597632772993*^9, 3.8986553173350353`*^9, 
  3.898656816444828*^9, 3.898664229340156*^9, 3.8986840982950287`*^9, 
  3.898764939467945*^9, 3.89878361939511*^9, 3.898932463485814*^9, 
  3.899180256521036*^9, 3.89919699278373*^9, 3.899202012006873*^9, 
  3.899204767747801*^9, 3.899267913476557*^9, 3.899353150684801*^9, 
  3.899366275443746*^9, 3.899368983263246*^9, 3.899386119752825*^9, 
  3.899432933950603*^9, 3.8994398906056223`*^9, 3.90013657804147*^9, 
  3.900136810660699*^9, 3.900137010668921*^9, 3.900137871142612*^9, 
  3.9001391190154753`*^9, 3.907041564161248*^9, 3.907043168142627*^9, 
  3.9074011378502407`*^9, 3.907647072590713*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"4d69833e-3338-4a41-8df5-0cb9d2b7d3ef"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"JJx", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["JJx", "2"], "+", 
        SuperscriptBox["JJy", "2"]}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"JJx", " ", "JJy", " ", 
         RowBox[{"(", 
          RowBox[{"JJz", "-", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["JJx", "2"], "+", 
             SuperscriptBox["JJy", "2"], "+", 
             SuperscriptBox["JJz", "2"]}]]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["JJx", "2"], " ", "JJz"}], "+", 
           RowBox[{
            SuperscriptBox["JJy", "2"], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["JJx", "2"], "+", 
              SuperscriptBox["JJy", "2"], "+", 
              SuperscriptBox["JJz", "2"]}]]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}]}], ")"}]}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"]}], ")"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"], "+", 
       SuperscriptBox["JJz", "2"]}]]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"JJy", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["JJx", "2"], "+", 
        SuperscriptBox["JJy", "2"]}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["JJy", "2"], " ", "JJz"}], "+", 
           RowBox[{
            SuperscriptBox["JJx", "2"], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["JJx", "2"], "+", 
              SuperscriptBox["JJy", "2"], "+", 
              SuperscriptBox["JJz", "2"]}]]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "+", 
        RowBox[{"JJx", " ", "JJy", " ", 
         RowBox[{"(", 
          RowBox[{"JJz", "-", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["JJx", "2"], "+", 
             SuperscriptBox["JJy", "2"], "+", 
             SuperscriptBox["JJz", "2"]}]]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}]}], ")"}]}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"]}], ")"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"], "+", 
       SuperscriptBox["JJz", "2"]}]]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"JJz", " ", 
      RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}]}], "-", 
     RowBox[{
      RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"JJy", " ", 
         RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "+", 
        RowBox[{"JJx", " ", 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}]}], ")"}]}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox["JJx", "2"], "+", 
      SuperscriptBox["JJy", "2"], "+", 
      SuperscriptBox["JJz", "2"]}]]]}], "}"}]], "Output",
 CellChangeTimes->{3.898597632772993*^9, 3.8986553173350353`*^9, 
  3.898656816444828*^9, 3.898664229340156*^9, 3.8986840982950287`*^9, 
  3.898764939467945*^9, 3.89878361939511*^9, 3.898932463485814*^9, 
  3.899180256521036*^9, 3.89919699278373*^9, 3.899202012006873*^9, 
  3.899204767747801*^9, 3.899267913476557*^9, 3.899353150684801*^9, 
  3.899366275443746*^9, 3.899368983263246*^9, 3.899386119752825*^9, 
  3.899432933950603*^9, 3.8994398906056223`*^9, 3.90013657804147*^9, 
  3.900136810660699*^9, 3.900137010668921*^9, 3.900137871142612*^9, 
  3.9001391190154753`*^9, 3.907041564161248*^9, 3.907043168142627*^9, 
  3.9074011378502407`*^9, 3.907647073320932*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"3a770dbc-abdc-4c29-8d34-8a7d783b9ca9"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Forward", " ", "transform"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"cos", 
     RowBox[{"(", "\[CurlyTheta]", ")"}]}], ":"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"zp", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"tan", 
      RowBox[{"(", "\[CurlyPhi]", ")"}]}], ":"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xp", "/", "yp"}], "//", "FullSimplify"}]}]}]], "Input",
 CellChangeTimes->{{3.898597013675419*^9, 3.898597055076755*^9}, {
   3.8985971111770983`*^9, 3.898597111894224*^9}, {3.898597640918729*^9, 
   3.898597654252049*^9}, {3.898598894843524*^9, 3.898599084585779*^9}, {
   3.898599331231292*^9, 3.898599339416079*^9}, 3.898600289259787*^9, {
   3.8986562752741833`*^9, 3.898656331587476*^9}, {3.898932489541355*^9, 
   3.898932501577848*^9}, {3.898934895090399*^9, 3.898934901616129*^9}},
 CellLabel->
  "In[225]:=",ExpressionUUID->"d776cc5b-660e-426f-88c2-532899eee5a2"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"JJz", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"JJy", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{"JJx", " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
  SqrtBox[
   RowBox[{
    SuperscriptBox["JJx", "2"], "+", 
    SuperscriptBox["JJy", "2"], "+", 
    SuperscriptBox["JJz", "2"]}]]]], "Output",
 CellChangeTimes->{3.898656271320169*^9, 3.898656817559815*^9, 
  3.898664230458048*^9, 3.898684099330076*^9, 3.8987649406003523`*^9, 
  3.898783619665213*^9, 3.898932464528537*^9, 3.898932502382977*^9, 
  3.899180257577792*^9, 3.899196993887495*^9, 3.899202013141046*^9, 
  3.899204768810555*^9, 3.89926791450974*^9, 3.899353151690523*^9, 
  3.899366276617531*^9, 3.8993689842569933`*^9, 3.8993861207773046`*^9, 
  3.899432934963418*^9, 3.899439891647314*^9, 3.9001365790615387`*^9, 
  3.900136811318932*^9, 3.900137011231844*^9, 3.90013787167152*^9, 
  3.9001391196169567`*^9, 3.907041565214532*^9, 3.907043168990735*^9, 
  3.907401138933914*^9, 3.907647073377533*^9},
 CellLabel->
  "Out[225]=",ExpressionUUID->"d91e4fed-ca8a-4782-8792-409f8645a856"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "JJx"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["JJx", "2"], "+", 
      SuperscriptBox["JJy", "2"]}], ")"}], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"JJx", " ", "JJy", " ", 
       RowBox[{"(", 
        RowBox[{"JJz", "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["JJx", "2"], "+", 
           SuperscriptBox["JJy", "2"], "+", 
           SuperscriptBox["JJz", "2"]}]]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["JJx", "2"], " ", "JJz"}], "+", 
         RowBox[{
          SuperscriptBox["JJy", "2"], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["JJx", "2"], "+", 
            SuperscriptBox["JJy", "2"], "+", 
            SuperscriptBox["JJz", "2"]}]]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
  RowBox[{
   RowBox[{
    RowBox[{"-", "JJy"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["JJx", "2"], "+", 
      SuperscriptBox["JJy", "2"]}], ")"}], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["JJy", "2"], " ", "JJz"}], "+", 
         RowBox[{
          SuperscriptBox["JJx", "2"], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["JJx", "2"], "+", 
            SuperscriptBox["JJy", "2"], "+", 
            SuperscriptBox["JJz", "2"]}]]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{"JJx", " ", "JJy", " ", 
       RowBox[{"(", 
        RowBox[{"JJz", "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["JJx", "2"], "+", 
           SuperscriptBox["JJy", "2"], "+", 
           SuperscriptBox["JJz", "2"]}]]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{3.898656271320169*^9, 3.898656817559815*^9, 
  3.898664230458048*^9, 3.898684099330076*^9, 3.8987649406003523`*^9, 
  3.898783619665213*^9, 3.898932464528537*^9, 3.898932502382977*^9, 
  3.899180257577792*^9, 3.899196993887495*^9, 3.899202013141046*^9, 
  3.899204768810555*^9, 3.89926791450974*^9, 3.899353151690523*^9, 
  3.899366276617531*^9, 3.8993689842569933`*^9, 3.8993861207773046`*^9, 
  3.899432934963418*^9, 3.899439891647314*^9, 3.9001365790615387`*^9, 
  3.900136811318932*^9, 3.900137011231844*^9, 3.90013787167152*^9, 
  3.9001391196169567`*^9, 3.907041565214532*^9, 3.907043168990735*^9, 
  3.907401138933914*^9, 3.907647074380467*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"7f9a39b7-0d7e-4330-b914-564dd1730688"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Inverse", " ", "transform"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"cos", 
     RowBox[{"(", "\[Theta]", ")"}]}], ":"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"c\[Theta]", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"zh", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"JJx", " ", "->", " ", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Xi]", "]"}], 
               RowBox[{"Sin", "[", "\[Iota]", "]"}]}]}], ",", 
             RowBox[{"JJy", " ", "->", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Xi]", "]"}], 
               RowBox[{"Sin", "[", "\[Iota]", "]"}]}]}], ",", 
             RowBox[{"JJz", " ", "->", " ", 
              RowBox[{"Cos", "[", "\[Iota]", "]"}]}]}], "}"}]}], ")"}], "//", 
         "FullSimplify"}], "//", "TrigReduce"}], "//", "FullSimplify"}], "//",
       "TrigReduce"}], "//", "FullSimplify"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"tan", 
      RowBox[{"(", "\[Phi]", ")"}]}], ":"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"t\[Phi]", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xh", "/", "yh"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"JJx", " ", "->", " ", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[Xi]", "]"}], 
                 RowBox[{"Sin", "[", "\[Iota]", "]"}]}]}], ",", 
               RowBox[{"JJy", " ", "->", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Xi]", "]"}], 
                 RowBox[{"Sin", "[", "\[Iota]", "]"}]}]}], ",", 
               RowBox[{"JJz", " ", "->", " ", 
                RowBox[{"Cos", "[", "\[Iota]", "]"}]}]}], "}"}]}], ")"}], "//",
            "FullSimplify"}], "//", "TrigReduce"}], "//", "Simplify"}], "//", 
        "TrigReduce"}], "//", "FullSimplify"}], "//", "ExpandAll"}], "//", 
     "FullSimplify"}]}]}]}]], "Input",
 CellChangeTimes->{{3.898597013675419*^9, 3.898597055076755*^9}, {
   3.8985971111770983`*^9, 3.898597111894224*^9}, {3.898597640918729*^9, 
   3.898597654252049*^9}, {3.898598894843524*^9, 3.898599084585779*^9}, {
   3.898599331231292*^9, 3.898599339416079*^9}, 3.898600289259787*^9, {
   3.89865533410618*^9, 3.898655337752283*^9}, {3.89865536949732*^9, 
   3.898655374427074*^9}, {3.898655424491172*^9, 3.898655597286353*^9}, {
   3.898655637514399*^9, 3.898655669422608*^9}, {3.8986557588380823`*^9, 
   3.898655762609251*^9}, {3.898656340795998*^9, 3.898656365968205*^9}, {
   3.898932578496714*^9, 3.8989326080352383`*^9}, {3.898932713302566*^9, 
   3.898932724674521*^9}, {3.898934905108788*^9, 3.898934909695101*^9}},
 CellLabel->
  "In[227]:=",ExpressionUUID->"81b38675-dced-494b-ae73-0a6bf423cefc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}], " ", 
   RowBox[{"Cos", "[", "\[Iota]", "]"}]}], "-", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"\[Xi]", "-", "\[CurlyPhi]"}], "]"}], " ", 
   RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], " ", 
   RowBox[{"Sin", "[", "\[Iota]", "]"}]}]}]], "Output",
 CellChangeTimes->{3.898934918121932*^9, 3.899180258677744*^9, 
  3.899196994960855*^9, 3.899202014411119*^9, 3.8992047698873577`*^9, 
  3.8992679155730743`*^9, 3.899353152711081*^9, 3.899366277901023*^9, 
  3.899368985537817*^9, 3.899386121805818*^9, 3.899432936016179*^9, 
  3.899439892706274*^9, 3.90013658007512*^9, 3.900136812178007*^9, 
  3.900137012133593*^9, 3.900137872590357*^9, 3.900139120707518*^9, 
  3.907041566224667*^9, 3.9070431699691563`*^9, 3.90740114008214*^9, 
  3.9076470744753847`*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"890f0e73-300e-4062-b27b-0c2da9053e65"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Iota]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Xi]", "-", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Iota]", "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "\[Xi]", "]"}]}], "-", 
   RowBox[{"2", " ", 
    RowBox[{"Cos", "[", "\[Xi]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Xi]", "-", "\[CurlyPhi]"}], "]"}]}]}], 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", "\[Iota]", "]"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"2", " ", "\[Xi]"}], "-", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox["\[Iota]", "2"], "]"}], "2"], " ", 
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}], " ", 
    RowBox[{"Cos", "[", "\[Xi]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Iota]", "]"}]}]}]]], "Output",
 CellChangeTimes->{3.898934918121932*^9, 3.899180258677744*^9, 
  3.899196994960855*^9, 3.899202014411119*^9, 3.8992047698873577`*^9, 
  3.8992679155730743`*^9, 3.899353152711081*^9, 3.899366277901023*^9, 
  3.899368985537817*^9, 3.899386121805818*^9, 3.899432936016179*^9, 
  3.899439892706274*^9, 3.90013658007512*^9, 3.900136812178007*^9, 
  3.900137012133593*^9, 3.900137872590357*^9, 3.900139120707518*^9, 
  3.907041566224667*^9, 3.9070431699691563`*^9, 3.90740114008214*^9, 
  3.907647075419626*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"7230d44a-c86d-4058-b00d-f897e0304d5d"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ArcCos", "[", "c\[Theta]", "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[CurlyTheta]", "->", 
       RowBox[{
        RowBox[{"\[Pi]", "/", "2"}], "+", "\[Delta]\[CurlyTheta]"}]}], 
      "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Delta]\[CurlyTheta]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ArcTan", "[", 
      RowBox[{"t\[Phi]", "//", "TrigReduce"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[CurlyTheta]", "->", 
       RowBox[{
        RowBox[{"\[Pi]", "/", "2"}], "+", "\[Delta]\[CurlyTheta]"}]}], 
      "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Delta]\[CurlyTheta]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//",
   "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.898597013675419*^9, 3.898597055076755*^9}, {
   3.8985971111770983`*^9, 3.898597111894224*^9}, {3.898597640918729*^9, 
   3.898597654252049*^9}, {3.898598894843524*^9, 3.898599084585779*^9}, {
   3.898599331231292*^9, 3.898599339416079*^9}, 3.898600289259787*^9, {
   3.89865533410618*^9, 3.898655337752283*^9}, {3.89865536949732*^9, 
   3.898655374427074*^9}, {3.898655424491172*^9, 3.898655597286353*^9}, {
   3.898655637514399*^9, 3.898655669422608*^9}, {3.8986557588380823`*^9, 
   3.898655762609251*^9}, {3.898656340795998*^9, 3.898656365968205*^9}, {
   3.898932578496714*^9, 3.8989326928110743`*^9}, {3.898932737044433*^9, 
   3.898932776731285*^9}, {3.898935173262804*^9, 3.898935238052302*^9}},
 CellLabel->
  "In[229]:=",ExpressionUUID->"dfe459ee-c713-4632-a235-fe9152f62bd6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\[Pi]", "-", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Xi]", "-", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Iota]", "]"}]}], "]"}]}], ")"}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"Cos", "[", "\[Iota]", "]"}], " ", "\[Delta]\[CurlyTheta]"}], 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Xi]", "-", "\[CurlyPhi]"}], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Iota]", "]"}], "2"]}]}]]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Delta]\[CurlyTheta]", "]"}], "2"],
    SeriesData[$CellContext`\[Delta]\[CurlyTheta], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Delta]\[CurlyTheta], 0, {
   Pi - ArcCos[
    Cos[$CellContext`\[Xi] - $CellContext`\[CurlyPhi]] 
     Sin[$CellContext`\[Iota]]], 
    Cos[$CellContext`\[Iota]] (1 - 
      Cos[$CellContext`\[Xi] - $CellContext`\[CurlyPhi]]^2 
      Sin[$CellContext`\[Iota]]^2)^Rational[-1, 2]}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.898599056699061*^9, 3.898599085128553*^9}, 
   3.898600290910658*^9, {3.8986553214906*^9, 3.8986553381686087`*^9}, 
   3.8986553751739063`*^9, {3.898655428269526*^9, 3.898655597700157*^9}, {
   3.898655640925544*^9, 3.898655669875532*^9}, 3.8986557632932863`*^9, 
   3.898656817917997*^9, 3.898664230801214*^9, 3.898684099595326*^9, 
   3.898764940845783*^9, 3.8987836200402803`*^9, 3.898932464774747*^9, 
   3.898932602419394*^9, {3.8989326690053473`*^9, 3.8989326932877007`*^9}, {
   3.898932750797701*^9, 3.898932777185923*^9}, {3.898935179795432*^9, 
   3.898935238386816*^9}, 3.899180261554966*^9, 3.89919699762462*^9, 
   3.899202017203662*^9, 3.899204772776455*^9, 3.899267918522442*^9, 
   3.8993531555491867`*^9, 3.899366280855502*^9, 3.899368987307255*^9, 
   3.8993861246695843`*^9, 3.8994329388829823`*^9, 3.899439894336774*^9, 
   3.900136582933258*^9, 3.9001368134044724`*^9, 3.900137012827691*^9, 
   3.900137873299717*^9, 3.90013912150883*^9, 3.907041569135412*^9, 
   3.907043171763373*^9, 3.907401143216959*^9, 3.9076470756288548`*^9},
 CellLabel->
  "Out[229]=",ExpressionUUID->"bb90470f-d7c1-40b0-8ebe-6c1364ef11ac"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"ArcTan", "[", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          FractionBox["\[Iota]", "2"], "]"}], "2"]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"2", " ", "\[Xi]"}], "-", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox["\[Iota]", "2"], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}]}], 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox["\[Iota]", "2"], "]"}], "2"], " ", 
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"2", " ", "\[Xi]"}], "-", "\[CurlyPhi]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["\[Iota]", "2"], "]"}], "2"]}]}]], "]"}], "-", 
   FractionBox[
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Iota]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Xi]", "-", "\[CurlyPhi]"}], "]"}]}], ")"}], " ", 
     "\[Delta]\[CurlyTheta]"}], 
    RowBox[{"3", "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Iota]"}], "]"}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"\[Xi]", "-", "\[CurlyPhi]"}], ")"}]}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Iota]", "]"}], "2"]}]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Delta]\[CurlyTheta]", "]"}], "2"],
    SeriesData[$CellContext`\[Delta]\[CurlyTheta], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Delta]\[CurlyTheta], 0, {
    ArcTan[(
       Cos[Rational[1, 2] $CellContext`\[Iota]]^2 
        Cos[$CellContext`\[CurlyPhi]] - 
       Cos[2 $CellContext`\[Xi] - $CellContext`\[CurlyPhi]] 
       Sin[Rational[1, 2] $CellContext`\[Iota]]^2)^(-1) (-
       Sin[Rational[1, 2] $CellContext`\[Iota]]^2 
       Sin[2 $CellContext`\[Xi] - $CellContext`\[CurlyPhi]] + 
      Cos[Rational[1, 2] $CellContext`\[Iota]]^2 
       Sin[$CellContext`\[CurlyPhi]])], (-4) 
    Sin[$CellContext`\[Iota]] (3 + Cos[2 $CellContext`\[Iota]] - 2 
      Cos[2 ($CellContext`\[Xi] - $CellContext`\[CurlyPhi])] 
      Sin[$CellContext`\[Iota]]^2)^(-1) 
    Sin[$CellContext`\[Xi] - $CellContext`\[CurlyPhi]]}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.898599056699061*^9, 3.898599085128553*^9}, 
   3.898600290910658*^9, {3.8986553214906*^9, 3.8986553381686087`*^9}, 
   3.8986553751739063`*^9, {3.898655428269526*^9, 3.898655597700157*^9}, {
   3.898655640925544*^9, 3.898655669875532*^9}, 3.8986557632932863`*^9, 
   3.898656817917997*^9, 3.898664230801214*^9, 3.898684099595326*^9, 
   3.898764940845783*^9, 3.8987836200402803`*^9, 3.898932464774747*^9, 
   3.898932602419394*^9, {3.8989326690053473`*^9, 3.8989326932877007`*^9}, {
   3.898932750797701*^9, 3.898932777185923*^9}, {3.898935179795432*^9, 
   3.898935238386816*^9}, 3.899180261554966*^9, 3.89919699762462*^9, 
   3.899202017203662*^9, 3.899204772776455*^9, 3.899267918522442*^9, 
   3.8993531555491867`*^9, 3.899366280855502*^9, 3.899368987307255*^9, 
   3.8993861246695843`*^9, 3.8994329388829823`*^9, 3.899439894336774*^9, 
   3.900136582933258*^9, 3.9001368134044724`*^9, 3.900137012827691*^9, 
   3.900137873299717*^9, 3.90013912150883*^9, 3.907041569135412*^9, 
   3.907043171763373*^9, 3.907401143216959*^9, 3.9076470760389137`*^9},
 CellLabel->
  "Out[230]=",ExpressionUUID->"f434fbb7-432b-4cea-90f1-302583b14e87"]
}, Closed]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "More", " ", "elegant", " ", "expression", " ", "for", " ", "tan", 
    RowBox[{"(", "\[Phi]", ")"}]}], ":"}], "*)"}]], "Input",
 CellChangeTimes->{{3.898656237364944*^9, 3.898656263886826*^9}, {
  3.898937559841062*^9, 3.898937560289069*^9}},
 CellLabel->
  "In[231]:=",ExpressionUUID->"08de6e5f-c8df-4cf1-938c-cee6cf5ff126"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"t\[Phi]", " ", "-", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}], 
         RowBox[{"Sin", "[", "\[Iota]", "]"}], 
         RowBox[{"Sin", "[", "\[Xi]", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Iota]", "/", "2"}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], " ", "-", " ", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Iota]", "/", "2"}], "]"}], "2"], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{
              RowBox[{"2", "\[Xi]"}], " ", "-", " ", "\[CurlyPhi]"}], 
             "]"}]}]}], ")"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}], 
         RowBox[{"Sin", "[", "\[Iota]", "]"}], 
         RowBox[{"Cos", "[", "\[Xi]", "]"}]}], " ", "+", " ", 
        RowBox[{
         RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox[
             RowBox[{"Cos", "[", 
              RowBox[{"\[Iota]", "/", "2"}], "]"}], "2"], " ", 
            RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], " ", "-", " ", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"Sin", "[", 
              RowBox[{"\[Iota]", "/", "2"}], "]"}], "2"], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{
              RowBox[{"2", "\[Xi]"}], " ", "-", " ", "\[CurlyPhi]"}], 
             "]"}]}]}], ")"}]}]}], ")"}]}], ")"}]}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{
  3.8985972400973597`*^9, {3.8986557679243107`*^9, 3.8986557708447866`*^9}, {
   3.898655870187248*^9, 3.8986560077967176`*^9}, {3.898937564071154*^9, 
   3.898937566053916*^9}},
 CellLabel->
  "In[232]:=",ExpressionUUID->"5518958b-e634-43a9-b546-5854f3aef5e2"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.8986560032436743`*^9, 3.898656008265255*^9}, 
   3.898656820766967*^9, 3.8986642332514*^9, 3.898684102355311*^9, 
   3.898764943724967*^9, 3.898783620737585*^9, 3.898932467484098*^9, 
   3.898937566762562*^9, 3.899180263128755*^9, 3.8991969985737753`*^9, 
   3.899202018175411*^9, 3.8992047743477182`*^9, 3.899267920070702*^9, 
   3.899353157070423*^9, 3.899366281888142*^9, 3.899368988001615*^9, 
   3.899386126208354*^9, 3.899432940415431*^9, 3.899439895245626*^9, 
   3.900136584471716*^9, 3.900136813726568*^9, 3.900137013122324*^9, 
   3.900137873583652*^9, 3.900139121949194*^9, 3.907041570719287*^9, 
   3.9070431721485033`*^9, 3.907401144889127*^9, 3.90764707618302*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"e982efc6-9d02-4615-9d77-7d36a436b891"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Solving for motion in aligned coordinates", "Section",
 CellChangeTimes->{{3.899179106471015*^9, 3.899179138646975*^9}, {
  3.899179178626473*^9, 
  3.899179179036676*^9}},ExpressionUUID->"51a50405-5f39-45d3-bd34-\
805c04e27922"],

Cell[CellGroupData[{

Cell["Solving for \[CurlyTheta] in aligned coordinates", "Subsection",
 CellChangeTimes->{{3.896940503611871*^9, 3.896940510683374*^9}, {
  3.898595472402727*^9, 
  3.8985954880885057`*^9}},ExpressionUUID->"7685156a-9502-485e-bc19-\
7a12603fe77f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Now", " ", "the", " ", "constraints", " ", "following", " ", "from", " ", 
    "rotating", " ", "the", " ", "coordinate", " ", "system", " ", "into", 
    " ", "J"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Jx", "/.", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "->", 
          RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Theta]t", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
            RowBox[{"\[Epsilon]", " ", 
             RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], ")"}]}],
         "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
    "Simplify"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Jy", "/.", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "->", 
          RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Theta]t", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Pi]", "/", "2"}], "+", 
            RowBox[{"\[Epsilon]", " ", 
             RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], ")"}]}],
         "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
    "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.896935205859728*^9, 3.896935246374448*^9}, {
  3.896935922455879*^9, 3.896935937427124*^9}, {3.896937566096096*^9, 
  3.896937746365444*^9}, {3.8969377965582533`*^9, 3.896937820885103*^9}, {
  3.896938040125537*^9, 3.896938055768371*^9}, {3.896938518424436*^9, 
  3.896938543861743*^9}, {3.8969387272860327`*^9, 3.896938730312518*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"58ec0087-6d37-430e-98cf-746c3983c5d9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], " ", 
          RowBox[{
           SuperscriptBox["\[Delta]\[Theta]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"\[Delta]\[Theta]t", "[", "\[Tau]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], "+", 
      
      FractionBox[
       RowBox[{
        RowBox[{"f", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"h", "[", "r", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["rt", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["tt", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
          "+", 
          RowBox[{"r", " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["tt", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Phi]t", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}]}],
          ")"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]]}], ")"}], " ", "\[Epsilon]"}], "+", 
   
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, 1, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 
   0, {$CellContext`r^2 (-Sin[$CellContext`\[Phi]] 
       Derivative[1][$CellContext`\[Delta]\[Theta]t][$CellContext`\[Tau]] + 
      Cos[$CellContext`\[Phi]] $CellContext`\[Delta]\[Theta]t[$CellContext`\
\[Tau]] Derivative[
        1][$CellContext`\[Phi]t][$CellContext`\[Tau]]) + \
$CellContext`f[$CellContext`r] ($CellContext`f[$CellContext`r] \
$CellContext`h[$CellContext`r])^Rational[-1, 2] (
      Cos[$CellContext`\[Phi]] $CellContext`h[$CellContext`r] \
($CellContext`St[$CellContext`\[Tau]] 
         Derivative[
          1][$CellContext`rt][$CellContext`\[Tau]] - \
$CellContext`Sr[$CellContext`\[Tau]] 
        Derivative[1][$CellContext`tt][$CellContext`\[Tau]]) + $CellContext`r 
       Sin[$CellContext`\[Phi]] ($CellContext`S\[Phi][$CellContext`\[Tau]] 
         Derivative[
          1][$CellContext`tt][$CellContext`\[Tau]] - \
$CellContext`St[$CellContext`\[Tau]] 
        Derivative[1][$CellContext`\[Phi]t][$CellContext`\[Tau]]))}, 1, 2, 1],
  
  Editable->False]], "Output",
 CellChangeTimes->{
  3.8969375673771353`*^9, {3.896937630620171*^9, 3.896937715624483*^9}, 
   3.896937746989635*^9, {3.896937800302867*^9, 3.896937821599197*^9}, 
   3.896938056880426*^9, 3.896938589896834*^9, 3.8969387311695547`*^9, 
   3.896940546827866*^9, 3.897020342859869*^9, 3.897032004509449*^9, 
   3.8970321619649153`*^9, 3.8971121684556017`*^9, 3.897112221515691*^9, 
   3.897555619237879*^9, 3.897634610541712*^9, 3.8976346593329268`*^9, 
   3.897635504759083*^9, 3.898590041913748*^9, 3.898656821186838*^9, 
   3.8986642336838017`*^9, 3.8986841027457123`*^9, 3.898764944147708*^9, 
   3.8987836207643423`*^9, 3.89893246788095*^9, 3.8991802635330276`*^9, 
   3.8991969989867067`*^9, 3.89920201858596*^9, 3.899204774762642*^9, 
   3.899267920473316*^9, 3.8993531574687147`*^9, 3.899366282326147*^9, 
   3.8993689884443693`*^9, 3.899386126610374*^9, 3.899432940823369*^9, 
   3.899439895691264*^9, 3.900136584879794*^9, 3.900136814132682*^9, 
   3.900137013515552*^9, 3.9001376280147457`*^9, 3.900137873984378*^9, 
   3.9001391224143877`*^9, 3.907041571129395*^9, 3.90704317256376*^9, 
   3.907401145343781*^9, 3.9076470765762653`*^9},
 CellLabel->
  "Out[233]=",ExpressionUUID->"65704119-524a-4209-b4f5-6f04b029db27"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Delta]\[Theta]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"\[Delta]\[Theta]t", "[", "\[Tau]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], "+", 
      
      FractionBox[
       RowBox[{
        RowBox[{"f", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"h", "[", "r", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["rt", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["tt", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
          "+", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}]}], " ", 
              RowBox[{
               SuperscriptBox["tt", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Phi]t", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}]}],
          ")"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]]}], ")"}], " ", "\[Epsilon]"}], "+", 
   
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, 1, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 
   0, {$CellContext`r^2 (
      Cos[$CellContext`\[Phi]] 
       Derivative[1][$CellContext`\[Delta]\[Theta]t][$CellContext`\[Tau]] + 
      Sin[$CellContext`\[Phi]] $CellContext`\[Delta]\[Theta]t[$CellContext`\
\[Tau]] Derivative[
        1][$CellContext`\[Phi]t][$CellContext`\[Tau]]) + \
$CellContext`f[$CellContext`r] ($CellContext`f[$CellContext`r] \
$CellContext`h[$CellContext`r])^
      Rational[-1, 2] ($CellContext`h[$CellContext`r] 
       Sin[$CellContext`\[Phi]] ($CellContext`St[$CellContext`\[Tau]] 
         Derivative[
          1][$CellContext`rt][$CellContext`\[Tau]] - \
$CellContext`Sr[$CellContext`\[Tau]] 
        Derivative[1][$CellContext`tt][$CellContext`\[Tau]]) + $CellContext`r 
       Cos[$CellContext`\[Phi]] (-$CellContext`S\[Phi][$CellContext`\[Tau]] 
         Derivative[
          1][$CellContext`tt][$CellContext`\[Tau]] + \
$CellContext`St[$CellContext`\[Tau]] 
         Derivative[1][$CellContext`\[Phi]t][$CellContext`\[Tau]]))}, 1, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.8969375673771353`*^9, {3.896937630620171*^9, 3.896937715624483*^9}, 
   3.896937746989635*^9, {3.896937800302867*^9, 3.896937821599197*^9}, 
   3.896938056880426*^9, 3.896938589896834*^9, 3.8969387311695547`*^9, 
   3.896940546827866*^9, 3.897020342859869*^9, 3.897032004509449*^9, 
   3.8970321619649153`*^9, 3.8971121684556017`*^9, 3.897112221515691*^9, 
   3.897555619237879*^9, 3.897634610541712*^9, 3.8976346593329268`*^9, 
   3.897635504759083*^9, 3.898590041913748*^9, 3.898656821186838*^9, 
   3.8986642336838017`*^9, 3.8986841027457123`*^9, 3.898764944147708*^9, 
   3.8987836207643423`*^9, 3.89893246788095*^9, 3.8991802635330276`*^9, 
   3.8991969989867067`*^9, 3.89920201858596*^9, 3.899204774762642*^9, 
   3.899267920473316*^9, 3.8993531574687147`*^9, 3.899366282326147*^9, 
   3.8993689884443693`*^9, 3.899386126610374*^9, 3.899432940823369*^9, 
   3.899439895691264*^9, 3.900136584879794*^9, 3.900136814132682*^9, 
   3.900137013515552*^9, 3.9001376280147457`*^9, 3.900137873984378*^9, 
   3.9001391224143877`*^9, 3.907041571129395*^9, 3.90704317256376*^9, 
   3.907401145343781*^9, 3.907647076866117*^9},
 CellLabel->
  "Out[234]=",ExpressionUUID->"f6c0bc76-f25e-4340-8105-e8f8129dd1ee"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "two", " ", "expressions", " ", "below", " ", "vanish", " ", 
    "independently"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"k1", " ", "=", " ", 
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Jx", "/.", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", "->", 
             RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}]}], "}"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Theta]t", "->", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
               RowBox[{"\[Epsilon]", " ", 
                RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], 
             ")"}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
       "Simplify"}], ",", 
      RowBox[{"\[Epsilon]", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"k2", " ", "=", " ", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Jx", "/.", 
            RowBox[{"{", 
             RowBox[{"\[Theta]", "->", 
              RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}]}], "}"}]}], "/.", 
           RowBox[{"{", 
            RowBox[{"\[Theta]t", "->", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
                RowBox[{"\[Epsilon]", " ", 
                 RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], 
              ")"}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
        "Simplify"}], ",", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "information", " ", "you", " ", "obtain", " ", "from", " ", 
     "Jx", " ", "is", " ", "equivalent", " ", "to", " ", "the", " ", "one", 
     " ", "you", " ", "get", " ", "from", " ", 
     RowBox[{"Jy", ":"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"k1", " ", "-", " ", 
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Jy", "/.", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", "->", 
             RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}]}], "}"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Theta]t", "->", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
               RowBox[{"\[Epsilon]", " ", 
                RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], 
             ")"}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
       "Simplify"}], ",", 
      RowBox[{"\[Epsilon]", " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k2", "+", 
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Jy", "/.", 
            RowBox[{"{", 
             RowBox[{"\[Theta]", "->", 
              RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}]}], "}"}]}], "/.", 
           RowBox[{"{", 
            RowBox[{"\[Theta]t", "->", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
                RowBox[{"\[Epsilon]", " ", 
                 RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], 
              ")"}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
        "Simplify"}], ",", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], "]"}]}], "//", 
    "Simplify"}]}]}]], "Input",
 CellChangeTimes->{
  3.896937785863517*^9, {3.8969378338599873`*^9, 3.896937856149604*^9}, {
   3.8969380683295193`*^9, 3.8969380725880537`*^9}, {3.896938247483856*^9, 
   3.89693831307843*^9}, {3.896938548377475*^9, 3.896938563381028*^9}, {
   3.896938740445856*^9, 3.896938744581655*^9}, {3.89763610412428*^9, 
   3.8976361240561934`*^9}, {3.897636253146324*^9, 3.897636258732924*^9}, {
   3.8995429815926113`*^9, 3.899543101572914*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"9dbd40e3-d0a7-40bc-af75-d7d6de4e5340"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"f", "[", "r", "]"}], " ", 
    RowBox[{"h", "[", "r", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
       RowBox[{
        SuperscriptBox["rt", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
       RowBox[{
        SuperscriptBox["tt", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
   SqrtBox[
    RowBox[{
     RowBox[{"f", "[", "r", "]"}], " ", 
     RowBox[{"h", "[", "r", "]"}]}]]], "+", 
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"\[Delta]\[Theta]t", "[", "\[Tau]", "]"}], " ", 
   RowBox[{
    SuperscriptBox["\[Phi]t", "\[Prime]",
     MultilineFunction->None], "[", "\[Tau]", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.896937845786333*^9, 3.896937856775515*^9}, 
   3.896938073308558*^9, {3.8969382586293364`*^9, 3.896938313462144*^9}, 
   3.896938592152417*^9, 3.896938745456786*^9, 3.89702034323132*^9, 
   3.897032004848926*^9, 3.897032162020814*^9, 3.897112168759255*^9, 
   3.897112221558978*^9, 3.897555619637445*^9, 3.8976346109280148`*^9, 
   3.897634659593864*^9, 3.897635505155717*^9, 3.8976361264804*^9, 
   3.897636264866487*^9, 3.898590042242608*^9, 3.898656821552081*^9, 
   3.8986642340386953`*^9, 3.8986841030723953`*^9, 3.89876494448575*^9, 
   3.898783620827767*^9, 3.898932468213912*^9, 3.899180263887106*^9, 
   3.899196999315052*^9, 3.899202018934493*^9, 3.899204775116439*^9, 
   3.8992679208225393`*^9, 3.899353157790255*^9, 3.899366282685507*^9, 
   3.89936898881573*^9, 3.899386126945732*^9, 3.899432941165559*^9, 
   3.899439896050126*^9, {3.8995430278685627`*^9, 3.899543069207024*^9}, 
   3.8995431033438587`*^9, 3.9001365852191763`*^9, 3.900136814495308*^9, 
   3.9001370138642073`*^9, 3.900137628375815*^9, 3.9001378743382874`*^9, 
   3.90013912290129*^9, 3.9070415714697*^9, 3.907043172906502*^9, 
   3.907401145712384*^9, 3.9076470769235153`*^9},
 CellLabel->
  "Out[235]=",ExpressionUUID->"4ac4a30f-eb1c-4e4a-8723-2bc248dc9b31"],

Cell[BoxData[
 RowBox[{"r", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "r"}], " ", 
     RowBox[{
      SuperscriptBox["\[Delta]\[Theta]t", "\[Prime]",
       MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"f", "[", "r", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], " ", 
         RowBox[{
          SuperscriptBox["tt", "\[Prime]",
           MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]t", "\[Prime]",
           MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
     SqrtBox[
      RowBox[{
       RowBox[{"f", "[", "r", "]"}], " ", 
       RowBox[{"h", "[", "r", "]"}]}]]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.896937845786333*^9, 3.896937856775515*^9}, 
   3.896938073308558*^9, {3.8969382586293364`*^9, 3.896938313462144*^9}, 
   3.896938592152417*^9, 3.896938745456786*^9, 3.89702034323132*^9, 
   3.897032004848926*^9, 3.897032162020814*^9, 3.897112168759255*^9, 
   3.897112221558978*^9, 3.897555619637445*^9, 3.8976346109280148`*^9, 
   3.897634659593864*^9, 3.897635505155717*^9, 3.8976361264804*^9, 
   3.897636264866487*^9, 3.898590042242608*^9, 3.898656821552081*^9, 
   3.8986642340386953`*^9, 3.8986841030723953`*^9, 3.89876494448575*^9, 
   3.898783620827767*^9, 3.898932468213912*^9, 3.899180263887106*^9, 
   3.899196999315052*^9, 3.899202018934493*^9, 3.899204775116439*^9, 
   3.8992679208225393`*^9, 3.899353157790255*^9, 3.899366282685507*^9, 
   3.89936898881573*^9, 3.899386126945732*^9, 3.899432941165559*^9, 
   3.899439896050126*^9, {3.8995430278685627`*^9, 3.899543069207024*^9}, 
   3.8995431033438587`*^9, 3.9001365852191763`*^9, 3.900136814495308*^9, 
   3.9001370138642073`*^9, 3.900137628375815*^9, 3.9001378743382874`*^9, 
   3.90013912290129*^9, 3.9070415714697*^9, 3.907043172906502*^9, 
   3.907401145712384*^9, 3.907647076971669*^9},
 CellLabel->
  "Out[236]=",ExpressionUUID->"2b0a036e-3d58-432e-86f4-d604df49c59b"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.896937845786333*^9, 3.896937856775515*^9}, 
   3.896938073308558*^9, {3.8969382586293364`*^9, 3.896938313462144*^9}, 
   3.896938592152417*^9, 3.896938745456786*^9, 3.89702034323132*^9, 
   3.897032004848926*^9, 3.897032162020814*^9, 3.897112168759255*^9, 
   3.897112221558978*^9, 3.897555619637445*^9, 3.8976346109280148`*^9, 
   3.897634659593864*^9, 3.897635505155717*^9, 3.8976361264804*^9, 
   3.897636264866487*^9, 3.898590042242608*^9, 3.898656821552081*^9, 
   3.8986642340386953`*^9, 3.8986841030723953`*^9, 3.89876494448575*^9, 
   3.898783620827767*^9, 3.898932468213912*^9, 3.899180263887106*^9, 
   3.899196999315052*^9, 3.899202018934493*^9, 3.899204775116439*^9, 
   3.8992679208225393`*^9, 3.899353157790255*^9, 3.899366282685507*^9, 
   3.89936898881573*^9, 3.899386126945732*^9, 3.899432941165559*^9, 
   3.899439896050126*^9, {3.8995430278685627`*^9, 3.899543069207024*^9}, 
   3.8995431033438587`*^9, 3.9001365852191763`*^9, 3.900136814495308*^9, 
   3.9001370138642073`*^9, 3.900137628375815*^9, 3.9001378743382874`*^9, 
   3.90013912290129*^9, 3.9070415714697*^9, 3.907043172906502*^9, 
   3.907401145712384*^9, 3.907647076997245*^9},
 CellLabel->
  "Out[237]=",ExpressionUUID->"d398cb37-815e-4036-a3e9-5de074a0772d"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.896937845786333*^9, 3.896937856775515*^9}, 
   3.896938073308558*^9, {3.8969382586293364`*^9, 3.896938313462144*^9}, 
   3.896938592152417*^9, 3.896938745456786*^9, 3.89702034323132*^9, 
   3.897032004848926*^9, 3.897032162020814*^9, 3.897112168759255*^9, 
   3.897112221558978*^9, 3.897555619637445*^9, 3.8976346109280148`*^9, 
   3.897634659593864*^9, 3.897635505155717*^9, 3.8976361264804*^9, 
   3.897636264866487*^9, 3.898590042242608*^9, 3.898656821552081*^9, 
   3.8986642340386953`*^9, 3.8986841030723953`*^9, 3.89876494448575*^9, 
   3.898783620827767*^9, 3.898932468213912*^9, 3.899180263887106*^9, 
   3.899196999315052*^9, 3.899202018934493*^9, 3.899204775116439*^9, 
   3.8992679208225393`*^9, 3.899353157790255*^9, 3.899366282685507*^9, 
   3.89936898881573*^9, 3.899386126945732*^9, 3.899432941165559*^9, 
   3.899439896050126*^9, {3.8995430278685627`*^9, 3.899543069207024*^9}, 
   3.8995431033438587`*^9, 3.9001365852191763`*^9, 3.900136814495308*^9, 
   3.9001370138642073`*^9, 3.900137628375815*^9, 3.9001378743382874`*^9, 
   3.90013912290129*^9, 3.9070415714697*^9, 3.907043172906502*^9, 
   3.907401145712384*^9, 3.9076470770220137`*^9},
 CellLabel->
  "Out[238]=",ExpressionUUID->"c9ac7dc5-52a2-4e76-89da-211290368e49"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "One", " ", "expression", " ", "gives", " ", "a", " ", "constraint", " ", 
     "for", " ", "\[Delta]\[Theta]t"}], ",", " ", 
    RowBox[{
     RowBox[{"another", " ", "one", " ", "for", " ", 
      RowBox[{
       RowBox[{"\[Delta]\[Theta]t", "'"}], ".", " ", "Are"}], " ", "they", 
      " ", "self"}], "-", 
     RowBox[{"consistent", "?"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"k1", " ", "==", "0"}], ",", 
     RowBox[{"\[Delta]\[Theta]t", "[", "\[Tau]", "]"}]}], "]"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.8969383588195353`*^9, 3.896938391971249*^9}, {
  3.8969384427352858`*^9, 3.896938446138661*^9}, {3.896938828893261*^9, 
  3.896938879141696*^9}, {3.896940564318679*^9, 3.8969406032575893`*^9}, {
  3.897636273141967*^9, 3.8976362733865*^9}},
 CellLabel->
  "In[239]:=",ExpressionUUID->"ab3a76bc-4637-474e-9fea-e967b7bd4bda"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Delta]\[Theta]t", "[", "\[Tau]", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"f", "[", "r", "]"}], " ", 
        RowBox[{"h", "[", "r", "]"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"St", "[", "\[Tau]", "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["rt", "\[Prime]",
           MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
         RowBox[{
          SuperscriptBox["tt", "\[Prime]",
           MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]t", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}]}]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.896938368692872*^9, 3.8969383923954287`*^9}, 
   3.896938448871838*^9, {3.896938844098547*^9, 3.896938860588696*^9}, 
   3.897020343349091*^9, 3.897032004954821*^9, 3.897032162058466*^9, 
   3.897112168848954*^9, 3.897112221603364*^9, 3.897555619744533*^9, 
   3.8976346110365543`*^9, 3.8976346596943913`*^9, 3.897635505257124*^9, 
   3.897636274095929*^9, 3.898590042341732*^9, 3.898656821658544*^9, 
   3.898664234142165*^9, 3.8986841031560793`*^9, 3.8987649445861588`*^9, 
   3.898783620879223*^9, 3.898932468300377*^9, 3.899180263992124*^9, 
   3.8991969994157*^9, 3.8992020190309973`*^9, 3.8992047752127247`*^9, 
   3.899267920944023*^9, 3.89935315787353*^9, 3.899366282828567*^9, 
   3.899368988906075*^9, 3.899386127038151*^9, 3.899432941258645*^9, 
   3.8994398961581717`*^9, 3.900136585374816*^9, 3.900136814662418*^9, 
   3.900137014017284*^9, 3.900137628547852*^9, 3.900137874501256*^9, 
   3.900139123061351*^9, 3.907041571632965*^9, 3.907043173045126*^9, 
   3.907401145867839*^9, 3.9076470770591803`*^9},
 CellLabel->
  "Out[239]=",ExpressionUUID->"c427f592-e295-43cf-8541-a00ce7ea35b5"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    RowBox[{"f", "[", "r", "]"}], " ", 
                    RowBox[{"h", "[", "r", "]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"St", "[", "\[Tau]", "]"}]}], " ", 
                    RowBox[{
                    SuperscriptBox["rt", "\[Prime]",
                    MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
                    RowBox[{
                    SuperscriptBox["tt", "\[Prime]",
                    MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], 
                    ")"}]}], 
                  RowBox[{" ", 
                   RowBox[{
                    SuperscriptBox["r", "2"], " ", 
                    RowBox[{
                    SuperscriptBox["\[Phi]t", "\[Prime]",
                    MultilineFunction->None], "[", "\[Tau]", "]"}]}]}]], "/.",
                  "TrRule"}], ",", "\[Tau]"}], "]"}], "//", 
              RowBox[{
               RowBox[{"Simplify", "/.", "xEOM"}], "/.", "SEOM"}]}], ")"}], "/.", 
            RowBox[{"{", 
             RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], "/.", "SEOM"}], "/.",
           "xEOM"}], "/.", 
         RowBox[{"{", 
          RowBox[{"\[Theta]t", "->", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
              RowBox[{"\[Epsilon]", " ", 
               RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], 
            ")"}]}], "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], "/.", "TrRule"}], "//", 
      "Simplify"}], ")"}], "/.", "TrRule"}], "/.", 
   RowBox[{"{", 
    RowBox[{"\[Theta]t", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Pi]", "/", "2"}], " ", "&"}], ")"}]}], "}"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.8969388831780233`*^9, 3.896938925293845*^9}, {
   3.8969389761320143`*^9, 3.896938997369741*^9}, {3.896939032247736*^9, 
   3.8969390345842037`*^9}, {3.896939109804639*^9, 3.896939194583394*^9}, {
   3.896939546806018*^9, 3.8969396901425323`*^9}, 3.896939828867157*^9, 
   3.8976363102286787`*^9},
 CellLabel->
  "In[240]:=",ExpressionUUID->"b20d5812-0935-4b99-9a20-af9c1f350794"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], " ", 
      RowBox[{
       SuperscriptBox["tt", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
     RowBox[{
      RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]t", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
  RowBox[{
   SqrtBox[
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
     RowBox[{"h", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]], " ", 
   RowBox[{"rt", "[", "\[Tau]", "]"}]}]]], "Output",
 CellChangeTimes->{{3.89693966494562*^9, 3.896939691771145*^9}, 
   3.89693982942411*^9, 3.897020343424848*^9, 3.897032005021969*^9, 
   3.8970321620932703`*^9, 3.897112168876957*^9, 3.897112221626824*^9, 
   3.897555619821999*^9, 3.897634611091073*^9, 3.897634659735568*^9, 
   3.8976355053335257`*^9, 3.898590042422948*^9, 3.898656821737543*^9, 
   3.898664234238769*^9, 3.898684103221794*^9, 3.8987649447009583`*^9, 
   3.898783620913806*^9, 3.898932468365893*^9, 3.89918026412027*^9, 
   3.8991969994733877`*^9, 3.899202019096602*^9, 3.899204775307143*^9, 
   3.899267921054933*^9, 3.899353157941449*^9, 3.899366282904439*^9, 
   3.89936898898193*^9, 3.899386127109171*^9, 3.899432941328382*^9, 
   3.899439896224729*^9, 3.900136585446436*^9, 3.9001368147126427`*^9, 
   3.900137014074897*^9, 3.90013762861417*^9, 3.900137874561034*^9, 
   3.900139123146133*^9, 3.9070415717149763`*^9, 3.907043173106307*^9, 
   3.907401145944357*^9, 3.907647077097619*^9},
 CellLabel->
  "Out[240]=",ExpressionUUID->"c6eec0a6-2ee4-4dc2-abbf-45d9b7e877e6"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"The", " ", "first", " ", "identity", " ", "for", " ", 
    RowBox[{"\[Delta]\[Theta]t", "[", "\[Tau]", "]"}], " ", "implies", " ", 
    "the", " ", "vanishing", " ", "of", " ", "the", " ", "second", " ", 
    "identity", " ", "involving", " ", 
    RowBox[{
     RowBox[{"\[Delta]\[Theta]t", "'"}], "[", "\[Tau]", "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "r", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "r"}], " ", 
         RowBox[{
          SuperscriptBox["\[Delta]\[Theta]t", "\[Prime]",
           MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"f", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["tt", "\[Prime]",
               MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]t", "\[Prime]",
               MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
         SqrtBox[
          RowBox[{
           RowBox[{"f", "[", "r", "]"}], " ", 
           RowBox[{"h", "[", "r", "]"}]}]]]}], ")"}]}], "/.", "TrRule"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Delta]\[Theta]t", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}], "->", 
      FractionBox[
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["tt", "\[Prime]",
             MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]t", "\[Prime]",
             MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
          RowBox[{"h", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]], " ", 
        RowBox[{"rt", "[", "\[Tau]", "]"}]}]]}], "}"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.896939267726922*^9, 3.8969393049009037`*^9}, {
  3.8969397096085978`*^9, 3.8969397691942368`*^9}, {3.896939836544549*^9, 
  3.896939843750503*^9}, {3.897636318344349*^9, 3.897636323901462*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"004c1d1f-58d3-4e21-8703-b43263cc4449"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.896939292159437*^9, 3.896939305580555*^9}, 
   3.896939710528883*^9, {3.896939836938748*^9, 3.896939844584877*^9}, 
   3.897020343469885*^9, 3.8970320050440073`*^9, 3.897032162114575*^9, 
   3.897112168897427*^9, 3.897112221653986*^9, 3.897555619873826*^9, 
   3.8976346111261883`*^9, 3.897634659772884*^9, 3.8976355053827343`*^9, 
   3.898590042458828*^9, 3.898656821775075*^9, 3.898664234276758*^9, 
   3.898684103267098*^9, 3.898764944727103*^9, 3.89878362093777*^9, 
   3.8989324684287567`*^9, 3.8991802641707277`*^9, 3.899196999524228*^9, 
   3.8992020191427803`*^9, 3.8992047753543167`*^9, 3.8992679210816708`*^9, 
   3.8993531579842176`*^9, 3.899366282967619*^9, 3.899368989012205*^9, 
   3.899386127172513*^9, 3.8994329413830338`*^9, 3.8994398962553062`*^9, 
   3.9001365854789953`*^9, 3.900136814743422*^9, 3.900137014105057*^9, 
   3.90013762865412*^9, 3.900137874593998*^9, 3.900139123179946*^9, 
   3.90704157174763*^9, 3.9070431731387568`*^9, 3.907401145981144*^9, 
   3.907647077127118*^9},
 CellLabel->
  "Out[241]=",ExpressionUUID->"d79dc6e2-34b3-4d49-ade4-5649d766b6c3"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Solving for r,t,\[CurlyPhi] in aligned coordinates", "Subsection",
 CellChangeTimes->{{3.896940618574464*^9, 3.8969406377977943`*^9}, {
  3.899179064976758*^9, 
  3.899179078838683*^9}},ExpressionUUID->"63b52513-bb28-4c60-bcb9-\
65b09eb24e7f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "remaining", " ", "constants", " ", "of", " ", "motion", " ", 
    "have", " ", "no", " ", "dependence", " ", "on", " ", "theta", " ", "at", 
    " ", "given", " ", "order"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Es", "/.", "TrRule"}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Theta]t", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], ")"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"/.", "fhRule"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", " ", 
       RowBox[{
        RowBox[{"-", " ", "sp"}], "/", 
        RowBox[{"rt", "[", "\[Tau]", "]"}]}]}], "}"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Jz", "/.", "TrRule"}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Theta]t", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], ")"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"spara", "/.", "TrRule"}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Theta]t", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
            RowBox[{"\[Epsilon]", " ", 
             RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], ")"}]}],
         "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Phi]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}]}], "}"}]}], "]"}], 
     "&"}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"/.", "fhRule"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", " ", 
        RowBox[{
         RowBox[{"-", " ", "sp"}], "/", 
         RowBox[{"rt", "[", "\[Tau]", "]"}]}]}], "}"}]}], 
     "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.896940695537272*^9, 3.896940721258299*^9}, {
  3.896940752795742*^9, 3.8969407808192987`*^9}, {3.8969408233872757`*^9, 
  3.8969408479856873`*^9}, {3.89694105491425*^9, 3.896941074589807*^9}, {
  3.897554468045313*^9, 3.897554530234317*^9}, {3.897554630175596*^9, 
  3.8975546327870092`*^9}, {3.8986593329670067`*^9, 3.8986593403621683`*^9}, {
  3.898659497551775*^9, 3.8986595292987823`*^9}, {3.900137302583664*^9, 
  3.9001373072266703`*^9}},
 CellLabel->
  "In[242]:=",ExpressionUUID->"ffed0b28-13ba-4acd-92c9-386bcb51f69e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["tt", "\[Prime]",
      MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"rt", "[", "\[Tau]", "]"}], "2"], " ", 
     RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Phi]t", "\[Prime]",
       MultilineFunction->None], "[", "\[Tau]", "]"}], " ", "\[Epsilon]"}], 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
       RowBox[{"h", "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 0, {$CellContext`f[
      $CellContext`rt[$CellContext`\[Tau]]] 
    Derivative[1][$CellContext`tt][$CellContext`\[Tau]], 
    Rational[1, 2] ($CellContext`f[
        $CellContext`rt[$CellContext`\[Tau]]] $CellContext`h[
        $CellContext`rt[$CellContext`\[Tau]]])^
     Rational[-1, 
       2] $CellContext`rt[$CellContext`\[Tau]]^2 \
$CellContext`S\[Theta][$CellContext`\[Tau]] Derivative[1][$CellContext`f][
      $CellContext`rt[$CellContext`\[Tau]]] 
    Derivative[1][$CellContext`\[Phi]t][$CellContext`\[Tau]]}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.8969407376937838`*^9, 3.896940770341337*^9}, {
   3.896940830908326*^9, 3.896940848682592*^9}, 3.8969411498945227`*^9, 
   3.89702034349326*^9, 3.897032005077059*^9, 3.897032162148458*^9, 
   3.897112168926569*^9, 3.8971122216744328`*^9, 3.897554478804242*^9, 
   3.897554530963085*^9, 3.897554633727893*^9, 3.89755561990691*^9, 
   3.89763461117807*^9, 3.8976346598016577`*^9, 3.8976355054252234`*^9, 
   3.898590042512697*^9, 3.8986568218262177`*^9, 3.898659340910799*^9, 
   3.89865948399144*^9, 3.898659530067257*^9, 3.8986642343275833`*^9, 
   3.898684103297247*^9, 3.8987649447757196`*^9, 3.898783620969182*^9, 
   3.898932468457752*^9, 3.899180264197771*^9, 3.899196999554605*^9, 
   3.899202019172461*^9, 3.8992047753823633`*^9, 3.899267921131426*^9, 
   3.899353158013179*^9, 3.8993662830091333`*^9, 3.899368989049863*^9, 
   3.899386127207572*^9, 3.899432941412548*^9, 3.899439896301798*^9, 
   3.900136585519025*^9, 3.9001368147933493`*^9, 3.900137014159446*^9, 
   3.900137628710353*^9, 3.9001378746390553`*^9, 3.900139123279262*^9, 
   3.907041571793448*^9, 3.907043173175763*^9, 3.9074011460215893`*^9, 
   3.907647077162375*^9},
 CellLabel->
  "Out[242]=",ExpressionUUID->"5641b8a8-c0f8-4b6b-a54a-3e078f2ce8dc"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"rt", "[", "\[Tau]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]t", "\[Prime]",
      MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
     RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
     RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
     RowBox[{
      SuperscriptBox["tt", "\[Prime]",
       MultilineFunction->None], "[", "\[Tau]", "]"}], " ", "\[Epsilon]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
      RowBox[{"h", "[", 
       RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 
   0, {$CellContext`rt[$CellContext`\[Tau]]^2 
    Derivative[1][$CellContext`\[Phi]t][$CellContext`\[Tau]], $CellContext`f[
      $CellContext`rt[$CellContext`\[Tau]]] ($CellContext`f[
        $CellContext`rt[$CellContext`\[Tau]]] $CellContext`h[
        $CellContext`rt[$CellContext`\[Tau]]])^
     Rational[-1, 
       2] $CellContext`rt[$CellContext`\[Tau]] \
$CellContext`S\[Theta][$CellContext`\[Tau]] 
    Derivative[1][$CellContext`tt][$CellContext`\[Tau]]}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.8969407376937838`*^9, 3.896940770341337*^9}, {
   3.896940830908326*^9, 3.896940848682592*^9}, 3.8969411498945227`*^9, 
   3.89702034349326*^9, 3.897032005077059*^9, 3.897032162148458*^9, 
   3.897112168926569*^9, 3.8971122216744328`*^9, 3.897554478804242*^9, 
   3.897554530963085*^9, 3.897554633727893*^9, 3.89755561990691*^9, 
   3.89763461117807*^9, 3.8976346598016577`*^9, 3.8976355054252234`*^9, 
   3.898590042512697*^9, 3.8986568218262177`*^9, 3.898659340910799*^9, 
   3.89865948399144*^9, 3.898659530067257*^9, 3.8986642343275833`*^9, 
   3.898684103297247*^9, 3.8987649447757196`*^9, 3.898783620969182*^9, 
   3.898932468457752*^9, 3.899180264197771*^9, 3.899196999554605*^9, 
   3.899202019172461*^9, 3.8992047753823633`*^9, 3.899267921131426*^9, 
   3.899353158013179*^9, 3.8993662830091333`*^9, 3.899368989049863*^9, 
   3.899386127207572*^9, 3.899432941412548*^9, 3.899439896301798*^9, 
   3.900136585519025*^9, 3.9001368147933493`*^9, 3.900137014159446*^9, 
   3.900137628710353*^9, 3.9001378746390553`*^9, 3.900139123279262*^9, 
   3.907041571793448*^9, 3.907043173175763*^9, 3.9074011460215893`*^9, 
   3.9076470771863117`*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"3b8f9a0e-ceed-4501-993f-074a1ee39a2a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
     RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", "\[Epsilon]"}]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, 1, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 
   0, {-$CellContext`rt[$CellContext`\[Tau]] \
$CellContext`S\[Theta][$CellContext`\[Tau]]}, 1, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.8969407376937838`*^9, 3.896940770341337*^9}, {
   3.896940830908326*^9, 3.896940848682592*^9}, 3.8969411498945227`*^9, 
   3.89702034349326*^9, 3.897032005077059*^9, 3.897032162148458*^9, 
   3.897112168926569*^9, 3.8971122216744328`*^9, 3.897554478804242*^9, 
   3.897554530963085*^9, 3.897554633727893*^9, 3.89755561990691*^9, 
   3.89763461117807*^9, 3.8976346598016577`*^9, 3.8976355054252234`*^9, 
   3.898590042512697*^9, 3.8986568218262177`*^9, 3.898659340910799*^9, 
   3.89865948399144*^9, 3.898659530067257*^9, 3.8986642343275833`*^9, 
   3.898684103297247*^9, 3.8987649447757196`*^9, 3.898783620969182*^9, 
   3.898932468457752*^9, 3.899180264197771*^9, 3.899196999554605*^9, 
   3.899202019172461*^9, 3.8992047753823633`*^9, 3.899267921131426*^9, 
   3.899353158013179*^9, 3.8993662830091333`*^9, 3.899368989049863*^9, 
   3.899386127207572*^9, 3.899432941412548*^9, 3.899439896301798*^9, 
   3.900136585519025*^9, 3.9001368147933493`*^9, 3.900137014159446*^9, 
   3.900137628710353*^9, 3.9001378746390553`*^9, 3.900139123279262*^9, 
   3.907041571793448*^9, 3.907043173175763*^9, 3.9074011460215893`*^9, 
   3.907647077211*^9},
 CellLabel->
  "Out[244]=",ExpressionUUID->"c44e24dd-8216-40ab-b5a1-bbf1a2a7a64d"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Perturbative", " ", "inversion", " ", "to", " ", "obtain", " ", "time", 
     " ", "and", " ", "phi", " ", "components", " ", "of", " ", "four"}], "-",
     "velocity"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"utint", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", 
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], 
        RowBox[{"(", 
         RowBox[{"\[ScriptCapitalE]", " ", "-", " ", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"rt", "[", "\[Tau]", "]"}], "2"], " ", 
              RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["f", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Phi]t", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}], ")"}], " ", 
            "\[Epsilon]"}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"f", "[", 
               RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
              RowBox[{"h", "[", 
               RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]]}]]}], ")"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Phi]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}], "->", 
          RowBox[{"\[ScriptCapitalJ]", "/", 
           SuperscriptBox[
            RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]}], ",", 
         RowBox[{
          RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", 
          RowBox[{
           RowBox[{"-", "sp"}], "/", 
           RowBox[{"rt", "[", "\[Tau]", "]"}]}]}]}], "}"}]}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u\[CurlyPhi]int", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", 
         SuperscriptBox[
          RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]], 
        RowBox[{"(", 
         RowBox[{"\[ScriptCapitalJ]", " ", "-", 
          FractionBox[
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
            RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["tt", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}], " ", 
            "\[Epsilon]"}], 
           RowBox[{" ", 
            SqrtBox[
             RowBox[{
              RowBox[{"f", "[", 
               RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
              RowBox[{"h", "[", 
               RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]]}]]}], ")"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["tt", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}], "->", 
          RowBox[{"\[ScriptCapitalE]", "/", 
           RowBox[{"f", "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", 
          RowBox[{
           RowBox[{"-", "sp"}], "/", 
           RowBox[{"rt", "[", "\[Tau]", "]"}]}]}]}], "}"}]}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t\[CurlyPhi]Rule", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["tt", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}], "->", "utint"}], 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]t", "'"}], "[", "\[Tau]", "]"}], "->", 
        "u\[CurlyPhi]int"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"urint2", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"-", "1"}], " ", "-", " ", 
            RowBox[{"gtt", " ", 
             SuperscriptBox["utint", "2"]}], " ", "-", " ", 
            RowBox[{"g\[Phi]\[Phi]", " ", 
             SuperscriptBox["u\[CurlyPhi]int", "2"]}]}], "grr"], "/.", 
          "TrRule"}], "/.", 
         RowBox[{"{", 
          RowBox[{"\[Theta]t", "->", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
              RowBox[{"\[Epsilon]", " ", 
               RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], 
            ")"}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
      "Simplify"}], "//", "Normal"}]}], "\[IndentingNewLine]", 
   RowBox[{"URule", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["tt", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}], "->", "utint"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]t", "'"}], "[", "\[Tau]", "]"}], "->", 
       "u\[CurlyPhi]int"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"rt", "'"}], "[", "\[Tau]", "]"}], "->", 
       RowBox[{"Sqrt", "[", "urint2", "]"}]}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.89694134348731*^9, 3.896941567779666*^9}, {
   3.896941640579129*^9, 3.896941651390273*^9}, {3.8969417221140957`*^9, 
   3.896941813900628*^9}, {3.896941906587262*^9, 3.8969419071422253`*^9}, {
   3.896941939227611*^9, 3.89694210700211*^9}, {3.896942282849847*^9, 
   3.896942289298559*^9}, 3.896942334393632*^9, {3.896942605792634*^9, 
   3.8969426413319073`*^9}, 3.896947965969316*^9, {3.897112201219845*^9, 
   3.897112204741836*^9}, {3.897554657178062*^9, 3.8975546732189293`*^9}, {
   3.897555556204692*^9, 3.897555561820264*^9}, {3.8976354651862288`*^9, 
   3.897635468440422*^9}, {3.8991967554724293`*^9, 3.899196773202084*^9}, 
   3.8991969291427097`*^9, {3.9001369209012623`*^9, 3.900136922190971*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"58308630-958f-4fbd-88ff-8a9214db59c4"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    FractionBox[
     SuperscriptBox["\[ScriptCapitalE]", "2"], 
     RowBox[{"f", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], "-", 
    FractionBox[
     SuperscriptBox["\[ScriptCapitalJ]", "2"], 
     SuperscriptBox[
      RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]]}], 
   RowBox[{"h", "[", 
    RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], "+", 
  FractionBox[
   RowBox[{
   "sp", " ", "\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]", " ", 
    "\[Epsilon]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"f", "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
       RowBox[{"h", "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    SuperscriptBox[
     RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]]}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAOJtEwRf3OR46/ip5eO3n0D6vNeSFf+BtN0Stz0g+lae
/Fk1zreObK7bL4PoE75l9/4BaZb9cb7/gTSrSn0IiG6zz3imyvXWUait+g2I
fqNsEKYGpI+0hmT/4H7raPF6D5skz1tHtwS/pTJAek3n2wg1IF0RJHPJF0hL
BC38EAakr1RNmjcfSP/g454rwfvWsXzSlxMKQPpXToaNMpCezfRxigqQvtmu
keUMpMUWH+HIBdJbmpMLi4F0zZ4lh0uA9HX214q1QPpv1sa/k4H020e8ydOB
dIaA6cTXfG8d89bdWQui+XtOHAPRlXqzhN8A6UnLwo1A9Cv73HMgWkqkTkVc
5q3jjiUr3oBovZuu248B6UD9FWfsZN86AgAGJpl5
  "],
 CellLabel->
  "Out[248]=",ExpressionUUID->"ee33668a-3c12-448c-8a98-a145e5bf5459"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["tt", "\[Prime]",
      MultilineFunction->None], "[", "\[Tau]", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ScriptCapitalE]", "+", 
      FractionBox[
       RowBox[{"sp", " ", "\[ScriptCapitalJ]", " ", "\[Epsilon]", " ", 
        RowBox[{
         SuperscriptBox["f", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
          RowBox[{"h", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]], " ", 
        RowBox[{"rt", "[", "\[Tau]", "]"}]}]]}], 
     RowBox[{"f", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Phi]t", "\[Prime]",
      MultilineFunction->None], "[", "\[Tau]", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ScriptCapitalJ]", "+", 
      FractionBox[
       RowBox[{"sp", " ", "\[ScriptCapitalE]", " ", "\[Epsilon]"}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
         RowBox[{"h", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]]]}], 
     SuperscriptBox[
      RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["rt", "\[Prime]",
      MultilineFunction->None], "[", "\[Tau]", "]"}], "\[Rule]", 
    SqrtBox[
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        FractionBox[
         SuperscriptBox["\[ScriptCapitalE]", "2"], 
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], "-", 
        FractionBox[
         SuperscriptBox["\[ScriptCapitalJ]", "2"], 
         SuperscriptBox[
          RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]]}], 
       RowBox[{"h", "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], "+", 
      FractionBox[
       RowBox[{
       "sp", " ", "\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]", " ", 
        "\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"f", "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["f", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
           RowBox[{"h", "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}], ")"}], 
         RowBox[{"3", "/", "2"}]], " ", 
        SuperscriptBox[
         RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]]}]]}]}], "}"}]], "Output",\

 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAOJtEwRf3OR46/ip5eO3n0D6vNeSFf+BtN0Stz0g+lae
/Fk1zreObK7bL4PoE75l9/4BaZb9cb7/gTSrSn0IiG6zz3imyvXWUait+g2I
fqNsEKYGpI+0hmT/4H7raPF6D5skz1tHtwS/pTJAek3n2wg1IF0RJHPJF0hL
BC38EAakr1RNmjcfSP/g454rwfvWsXzSlxMKQPpXToaNMpCezfRxigqQvtmu
keUMpMUWH+HIBdJbmpMLi4F0zZ4lh0uA9HX214q1QPpv1sa/k4H020e8ydOB
dIaA6cTXfG8d89bdWQui+XtOHAPRlXqzhN8A6UnLwo1A9Cv73HMgWkqkTkVc
5q3jjiUr3oBovZuu248B6SsMK8/Yyb51BAAI+5nO
  "],
 CellLabel->
  "Out[249]=",ExpressionUUID->"c891d7bf-1f62-478c-aa21-9b8115943b0e"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Parallel transport in Marck-like tetrad", "Subsection",
 CellChangeTimes->{{3.897104557987749*^9, 3.8971045693212023`*^9}, {
  3.898658225255525*^9, 
  3.898658226752953*^9}},ExpressionUUID->"87861389-68a6-48a5-9d18-\
d0063a9a2feb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"The", " ", "spin", " ", "vector", " ", "fulfills", " ", "non"}], 
    "-", 
    RowBox[{"trivial", " ", "parallel"}], "-", 
    RowBox[{"transport", " ", "equations"}]}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"Svec", ",", "\[Tau]"}], "]"}], "/.", "SEOM"}], "/.", 
       "TrRule"}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Theta]t", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], ")"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.896939956491477*^9, 3.896940060974391*^9}, {
   3.896940201063921*^9, 3.896940214412848*^9}, 3.896941234613433*^9, {
   3.8969421827274837`*^9, 3.896942219488669*^9}, {3.896942262961382*^9, 
   3.896942263544795*^9}, {3.896942319957762*^9, 3.896942430510363*^9}, 
   3.896942988500832*^9, {3.896944648365781*^9, 3.896944700266099*^9}, 
   3.896946452124037*^9, 3.8969482556801357`*^9, 3.896959764867244*^9, {
   3.8969598046291533`*^9, 3.896959807759108*^9}, {3.897032151764832*^9, 
   3.897032154771344*^9}, {3.898658252992379*^9, 3.898658298483004*^9}},
 CellLabel->
  "In[250]:=",ExpressionUUID->"25eafbae-e458-41b3-8f4a-383145936054"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["rt", "\[Prime]",
               MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["tt", "\[Prime]",
               MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
         ")"}], " ", "\[Epsilon]"}], 
       RowBox[{"2", " ", 
        RowBox[{"f", "[", 
         RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
      SeriesData[$CellContext`\[Epsilon], 0, {}, 1, 2, 1],
      Editable->False]}],
    SeriesData[$CellContext`\[Epsilon], 0, {Rational[-1, 2] $CellContext`f[
         $CellContext`rt[$CellContext`\[Tau]]]^(-1) 
      Derivative[1][$CellContext`f][
        $CellContext`rt[$CellContext`\[Tau]]] ($CellContext`St[$CellContext`\
\[Tau]] Derivative[
         1][$CellContext`rt][$CellContext`\[Tau]] + \
$CellContext`Sr[$CellContext`\[Tau]] 
        Derivative[1][$CellContext`tt][$CellContext`\[Tau]])}, 1, 2, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["rt", "\[Prime]",
             MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]t", "\[Prime]",
             MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}], " ", 
        "\[Epsilon]"}], 
       RowBox[{"rt", "[", "\[Tau]", "]"}]]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
      SeriesData[$CellContext`\[Epsilon], 0, {}, 1, 2, 1],
      Editable->False]}],
    SeriesData[$CellContext`\[Epsilon], 
     0, {-$CellContext`rt[$CellContext`\[Tau]]^(-1) \
($CellContext`S\[Phi][$CellContext`\[Tau]] 
        Derivative[
         1][$CellContext`rt][$CellContext`\[Tau]] + \
$CellContext`Sr[$CellContext`\[Tau]] 
        Derivative[1][$CellContext`\[Phi]t][$CellContext`\[Tau]])}, 1, 2, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["h", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["rt", "\[Prime]",
             MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["f", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["tt", "\[Prime]",
             MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
           RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]t", "\[Prime]",
             MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}], " ", 
        "\[Epsilon]"}], 
       RowBox[{"2", " ", 
        RowBox[{"h", "[", 
         RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
      SeriesData[$CellContext`\[Epsilon], 0, {}, 1, 2, 1],
      Editable->False]}],
    SeriesData[$CellContext`\[Epsilon], 0, {Rational[-1, 2] $CellContext`h[
         $CellContext`rt[$CellContext`\[Tau]]]^(-1) \
($CellContext`Sr[$CellContext`\[Tau]] Derivative[1][$CellContext`h][
          $CellContext`rt[$CellContext`\[Tau]]] 
        Derivative[
         1][$CellContext`rt][$CellContext`\[Tau]] + \
$CellContext`St[$CellContext`\[Tau]] Derivative[1][$CellContext`f][
          $CellContext`rt[$CellContext`\[Tau]]] 
        Derivative[1][$CellContext`tt][$CellContext`\[Tau]] - 
       2 $CellContext`rt[$CellContext`\[Tau]] \
$CellContext`S\[Phi][$CellContext`\[Tau]] 
       Derivative[1][$CellContext`\[Phi]t][$CellContext`\[Tau]])}, 1, 2, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
        RowBox[{
         SuperscriptBox["rt", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}], " ", "\[Epsilon]"}], 
       RowBox[{"rt", "[", "\[Tau]", "]"}]]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
      SeriesData[$CellContext`\[Epsilon], 0, {}, 1, 2, 1],
      Editable->False]}],
    SeriesData[$CellContext`\[Epsilon], 
     0, {-$CellContext`rt[$CellContext`\[Tau]]^(-1) \
$CellContext`S\[Theta][$CellContext`\[Tau]] 
      Derivative[1][$CellContext`rt][$CellContext`\[Tau]]}, 1, 2, 1],
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896940024351173*^9, 3.8969400626905622`*^9, 3.8969402150531473`*^9, {
   3.896941225350616*^9, 3.896941235254032*^9}, {3.896942195392992*^9, 
   3.896942220175866*^9}, {3.8969423772104597`*^9, 3.8969424315547*^9}, 
   3.8969429891659307`*^9, {3.896944656864316*^9, 3.8969447019921827`*^9}, 
   3.896946455318823*^9, 3.896948256855917*^9, 3.896959766497377*^9, 
   3.896959808883615*^9, 3.8970203437290287`*^9, 3.897032005325115*^9, {
   3.897032157549478*^9, 3.8970321622903347`*^9}, 3.897112169145862*^9, 
   3.8971122218072987`*^9, 3.897555620133731*^9, 3.8976346114192867`*^9, 
   3.897634659951427*^9, 3.897635505656351*^9, 3.898590042790859*^9, 
   3.898656822063777*^9, {3.898658293187458*^9, 3.898658300108007*^9}, 
   3.8986642345504017`*^9, 3.8986841035000277`*^9, 3.898764944960498*^9, 
   3.898783621092502*^9, 3.8989324686508913`*^9, 3.8991802644181004`*^9, 
   3.899196999715106*^9, 3.899202019341592*^9, 3.899204775618297*^9, 
   3.899267921367848*^9, 3.8993531582237377`*^9, 3.899366283222879*^9, 
   3.89936898923083*^9, 3.899386127435585*^9, 3.8994329416256027`*^9, 
   3.899439896516378*^9, 3.9001365857531557`*^9, 3.900136814975892*^9, 
   3.90013701434733*^9, 3.900137628896203*^9, 3.90013787480751*^9, 
   3.9001391235164557`*^9, 3.907041572028771*^9, 3.9070431733553543`*^9, 
   3.9074011462767057`*^9, 3.907647077335247*^9},
 CellLabel->
  "Out[250]=",ExpressionUUID->"827a2a79-6676-4259-a5d6-e14add2fdc90"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"A", " ", "Marck"}], "-", 
     RowBox[{"like", " ", "tetrad", " ", "e0"}]}], ",", "er", ",", "e\[Phi]", 
    ",", 
    RowBox[{"e\[Theta]", " ", 
     RowBox[{"(", 
      RowBox[{"with", " ", "indices", " ", "up"}], ")"}], " ", "allows", " ", 
     "to", " ", "simplify", " ", "parallel", " ", "transport"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"LeadURule", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["tt", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}], "->", 
        RowBox[{"\[ScriptCapitalE]", "/", 
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Phi]t", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}], "->", 
        RowBox[{"\[ScriptCapitalJ]", "/", 
         SuperscriptBox[
          RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"rt", "'"}], "[", "\[Tau]", "]"}], "->", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            SuperscriptBox["\[ScriptCapitalE]", "2"], 
            RowBox[{"f", "[", 
             RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], "-", 
           FractionBox[
            SuperscriptBox["\[ScriptCapitalJ]", "2"], 
            SuperscriptBox[
             RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]]}], 
          RowBox[{"h", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]]]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"e\[Theta]", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       FractionBox[
        RowBox[{"-", "1"}], "r"]}], "}"}], "/.", "TrRule"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"e0", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["tt", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}], ",", 
        RowBox[{
         SuperscriptBox["\[Phi]t", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}], ",", 
        RowBox[{
         RowBox[{"rt", "'"}], "[", "\[Tau]", "]"}], ",", "0"}], "}"}], "/.", 
      "LeadURule"}], "/.", "TrRule"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Note", " ", "the", " ", "component", " ", "order", " ", "t"}], 
     ",", "\[CurlyPhi]", ",", "t", ",", 
     RowBox[{"\[Theta]", "."}]}], "*)"}], "\[IndentingNewLine]", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"These", " ", "are", " ", "denoted", " ", "as", " ", 
      SubscriptBox[
       OverscriptBox["e", "~"], "r"]}], ",", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["e", "~"], "\[CurlyPhi]"], " ", "in", " ", "the", " ", 
      RowBox[{"paper", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ersol", " ", "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 SuperscriptBox["etr", "2"], "gtt"}], " ", "+", " ", 
                RowBox[{
                 SuperscriptBox["err", "2"], "grr"}]}], "/.", "TrRule"}], "/.", 
              RowBox[{"{", 
               RowBox[{"\[Theta]t", "->", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Pi]", "/", "2"}], " ", "&"}], ")"}]}], "}"}]}], 
             " ", ")"}], "==", " ", "1"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"etr", " ", 
                 RowBox[{"e0", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "gtt"}], " ", "+", " ", 
                RowBox[{"err", " ", 
                 RowBox[{"e0", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "grr"}]}], "/.", "TrRule"}],
               "/.", 
              RowBox[{"{", 
               RowBox[{"\[Theta]t", "->", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Pi]", "/", "2"}], " ", "&"}], ")"}]}], "}"}]}], 
             ")"}], " ", "==", "0"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"etr", ",", "err"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", " ", 
         RowBox[{
          RowBox[{"h", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"er", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"etr", ",", "0", ",", "err", ",", "0"}], "}"}], "/.", 
     RowBox[{"ersol", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e\[Phi]sol", " ", "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  SuperscriptBox["et\[Phi]", "2"], "gtt"}], " ", "+", " ", 
                 RowBox[{
                  SuperscriptBox["e\[Phi]\[Phi]", "2"], "grr"}], "+", " ", 
                 RowBox[{
                  SuperscriptBox["er\[Phi]", "2"], "grr"}]}], "/.", 
                "TrRule"}], "/.", 
               RowBox[{"{", 
                RowBox[{"\[Theta]t", "->", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Pi]", "/", "2"}], " ", "&"}], ")"}]}], "}"}]}], 
              " ", ")"}], "==", " ", "1"}], ","}], "*)"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"et\[Phi]", " ", 
                 RowBox[{"e0", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "gtt"}], "+", 
                RowBox[{"1", " ", 
                 RowBox[{"e0", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "g\[Phi]\[Phi]"}], " ", "+",
                 " ", 
                RowBox[{"er\[Phi]", " ", 
                 RowBox[{"e0", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "grr"}]}], "/.", "TrRule"}],
               "/.", 
              RowBox[{"{", 
               RowBox[{"\[Theta]t", "->", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Pi]", "/", "2"}], " ", "&"}], ")"}]}], "}"}]}], 
             ")"}], " ", "==", "0"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"et\[Phi]", " ", 
                 RowBox[{"er", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "gtt"}], "+", 
                RowBox[{"1", " ", 
                 RowBox[{"er", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "g\[Phi]\[Phi]"}], " ", "+",
                 " ", 
                RowBox[{"er\[Phi]", " ", 
                 RowBox[{"er", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "grr"}]}], "/.", "TrRule"}],
               "/.", 
              RowBox[{"{", 
               RowBox[{"\[Theta]t", "->", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Pi]", "/", "2"}], " ", "&"}], ")"}]}], "}"}]}], 
             ")"}], " ", "==", "0"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"et\[Phi]", ",", 
           RowBox[{"(*", 
            RowBox[{"e\[Phi]\[Phi]", ","}], "*)"}], "er\[Phi]"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", " ", 
         RowBox[{
          RowBox[{"h", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
           SuperscriptBox[
            RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ">", "0"}]}], "}"}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"N\[Phi]", " ", "=", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"et\[Phi]", " ", ",", "1", ",", "er\[Phi]", ",", "0"}], "}"}], 
      "/.", 
      RowBox[{"e\[Phi]sol", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"e\[Phi]", " ", "=", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{"N\[Phi]", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"N\[Phi]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], 
             RowBox[{"N\[Phi]", "[", 
              RowBox[{"[", "j", "]"}], "]"}], 
             RowBox[{"g", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "/.", "TrRule"}], "/.", 
           RowBox[{"{", 
            RowBox[{"\[Theta]t", "->", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "2"}], " ", "&"}], ")"}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], ")"}], 
     "//", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}], ",", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", " ", 
          RowBox[{
           RowBox[{"h", "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ">", "0"}]}], 
         "}"}]}], "]"}], "&"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "These", " ", "reduce", " ", "to", " ", "the", " ", "legs", " ", "of", 
     " ", "the", " ", "Marck", " ", "tetrad", " ", "in", " ", 
     "Schwarzschild"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8969440671722937`*^9, 3.896944212221252*^9}, {
   3.896944628321567*^9, 3.896944636964793*^9}, {3.896944732921709*^9, 
   3.896944996634864*^9}, {3.896945203864024*^9, 3.896945221678597*^9}, {
   3.89694569171835*^9, 3.896945725142815*^9}, 3.896946111417325*^9, {
   3.89694646593657*^9, 3.8969464689197683`*^9}, {3.896952398064419*^9, 
   3.896952427744338*^9}, {3.89695246795844*^9, 3.8969525141578197`*^9}, {
   3.896952563942121*^9, 3.896952564418521*^9}, {3.8969525969150543`*^9, 
   3.8969526248559523`*^9}, {3.896952691226131*^9, 3.896952859895483*^9}, {
   3.8969528906293783`*^9, 3.896952950393342*^9}, {3.896953038141088*^9, 
   3.896953120642099*^9}, {3.896953846483046*^9, 3.8969538495630293`*^9}, {
   3.896954713034017*^9, 3.8969547150996304`*^9}, {3.896955072960103*^9, 
   3.896955130362166*^9}, {3.8969553275857773`*^9, 3.896955338006734*^9}, 
   3.89695547010664*^9, {3.896957663136204*^9, 3.896957682504258*^9}, {
   3.896957712975816*^9, 3.896957723481279*^9}, {3.8969578237340593`*^9, 
   3.896957850851632*^9}, {3.8970349436618557`*^9, 3.897034946847337*^9}, 
   3.897035099437593*^9, {3.897035421111298*^9, 3.897035465554144*^9}, {
   3.89703647834004*^9, 3.8970365025250063`*^9}, {3.89703655355606*^9, 
   3.897036556568378*^9}, {3.897036640661276*^9, 3.897036643942874*^9}, {
   3.897037276419685*^9, 3.897037304743421*^9}, {3.898658313408847*^9, 
   3.8986583717928953`*^9}, {3.898658443882965*^9, 3.89865848075972*^9}, {
   3.898658511293988*^9, 3.8986585665972157`*^9}, {3.899435785094964*^9, 
   3.8994358068283453`*^9}, 3.900136960256528*^9},
 CellLabel->
  "In[251]:=",ExpressionUUID->"605dcd28-01f2-433f-92da-b35e917b7d06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", 
   RowBox[{"-", 
    FractionBox["1", 
     RowBox[{"rt", "[", "\[Tau]", "]"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.897036479284357*^9, 3.897036502895377*^9}, 
   3.897036557290436*^9, 3.897036644315075*^9, 3.897037312788228*^9, 
   3.8971121691851263`*^9, 3.897112221829756*^9, 3.897555620164565*^9, 
   3.897634611456807*^9, 3.897634659981737*^9, 3.897635505687973*^9, 
   3.898590042827484*^9, 3.8986568221042967`*^9, 3.898658384738109*^9, 
   3.8986642345917473`*^9, 3.89868410352927*^9, 3.898764944988161*^9, 
   3.8987836211179447`*^9, 3.898932468678752*^9, 3.899180264463151*^9, 
   3.899196999759907*^9, 3.89920201937719*^9, 3.89920477564788*^9, 
   3.899267921398653*^9, 3.8993531582533073`*^9, 3.8993662832709208`*^9, 
   3.899368989266224*^9, 3.899386127482749*^9, 3.899432941655999*^9, 
   3.8994398965479507`*^9, 3.900136585788986*^9, 3.9001368150090857`*^9, 
   3.9001370143786707`*^9, 3.900137628929736*^9, 3.900137874840609*^9, 
   3.900139123551053*^9, 3.907041572065035*^9, 3.907043173388538*^9, 
   3.907401146312028*^9, 3.907647077363365*^9},
 CellLabel->
  "Out[252]=",ExpressionUUID->"d771bc95-8df6-41e0-aa84-dc3818332aec"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["\[ScriptCapitalE]", 
    RowBox[{"f", "[", 
     RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], ",", 
   FractionBox["\[ScriptCapitalJ]", 
    SuperscriptBox[
     RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]], ",", 
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox[
       SuperscriptBox["\[ScriptCapitalE]", "2"], 
       RowBox[{"f", "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], "-", 
      FractionBox[
       SuperscriptBox["\[ScriptCapitalJ]", "2"], 
       SuperscriptBox[
        RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]]}], 
     RowBox[{"h", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]]], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.897036479284357*^9, 3.897036502895377*^9}, 
   3.897036557290436*^9, 3.897036644315075*^9, 3.897037312788228*^9, 
   3.8971121691851263`*^9, 3.897112221829756*^9, 3.897555620164565*^9, 
   3.897634611456807*^9, 3.897634659981737*^9, 3.897635505687973*^9, 
   3.898590042827484*^9, 3.8986568221042967`*^9, 3.898658384738109*^9, 
   3.8986642345917473`*^9, 3.89868410352927*^9, 3.898764944988161*^9, 
   3.8987836211179447`*^9, 3.898932468678752*^9, 3.899180264463151*^9, 
   3.899196999759907*^9, 3.89920201937719*^9, 3.89920477564788*^9, 
   3.899267921398653*^9, 3.8993531582533073`*^9, 3.8993662832709208`*^9, 
   3.899368989266224*^9, 3.899386127482749*^9, 3.899432941655999*^9, 
   3.8994398965479507`*^9, 3.900136585788986*^9, 3.9001368150090857`*^9, 
   3.9001370143786707`*^9, 3.900137628929736*^9, 3.900137874840609*^9, 
   3.900139123551053*^9, 3.907041572065035*^9, 3.907043173388538*^9, 
   3.907401146312028*^9, 3.9076470773896217`*^9},
 CellLabel->
  "Out[253]=",ExpressionUUID->"952a0e9b-a2b7-4528-a7d1-bb6ddab4f6ac"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        SuperscriptBox["\[ScriptCapitalE]", "2"], 
        RowBox[{"f", "[", 
         RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], "-", 
       FractionBox[
        SuperscriptBox["\[ScriptCapitalJ]", "2"], 
        SuperscriptBox[
         RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]]}]], " ", 
     RowBox[{"rt", "[", "\[Tau]", "]"}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
        SuperscriptBox[
         RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]]], ",", "0", ",", 
   FractionBox[
    RowBox[{"\[ScriptCapitalE]", " ", 
     RowBox[{"rt", "[", "\[Tau]", "]"}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
      RowBox[{"h", "[", 
       RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
        SuperscriptBox[
         RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]]], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.897036479284357*^9, 3.897036502895377*^9}, 
   3.897036557290436*^9, 3.897036644315075*^9, 3.897037312788228*^9, 
   3.8971121691851263`*^9, 3.897112221829756*^9, 3.897555620164565*^9, 
   3.897634611456807*^9, 3.897634659981737*^9, 3.897635505687973*^9, 
   3.898590042827484*^9, 3.8986568221042967`*^9, 3.898658384738109*^9, 
   3.8986642345917473`*^9, 3.89868410352927*^9, 3.898764944988161*^9, 
   3.8987836211179447`*^9, 3.898932468678752*^9, 3.899180264463151*^9, 
   3.899196999759907*^9, 3.89920201937719*^9, 3.89920477564788*^9, 
   3.899267921398653*^9, 3.8993531582533073`*^9, 3.8993662832709208`*^9, 
   3.899368989266224*^9, 3.899386127482749*^9, 3.899432941655999*^9, 
   3.8994398965479507`*^9, 3.900136585788986*^9, 3.9001368150090857`*^9, 
   3.9001370143786707`*^9, 3.900137628929736*^9, 3.900137874840609*^9, 
   3.900139123551053*^9, 3.907041572065035*^9, 3.907043173388538*^9, 
   3.907401146312028*^9, 3.907647077523871*^9},
 CellLabel->
  "Out[255]=",ExpressionUUID->"50d4a2ee-b3fb-4336-9cfd-0afcee01adee"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]"}], 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]]}]], ",", 
   FractionBox[
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
      SuperscriptBox[
       RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]], 
    SuperscriptBox[
     RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]], ",", 
   FractionBox[
    RowBox[{"\[ScriptCapitalJ]", " ", 
     SqrtBox[
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ScriptCapitalE]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]]}], 
       RowBox[{"h", "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]]]}], 
    RowBox[{"rt", "[", "\[Tau]", "]"}]], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.897036479284357*^9, 3.897036502895377*^9}, 
   3.897036557290436*^9, 3.897036644315075*^9, 3.897037312788228*^9, 
   3.8971121691851263`*^9, 3.897112221829756*^9, 3.897555620164565*^9, 
   3.897634611456807*^9, 3.897634659981737*^9, 3.897635505687973*^9, 
   3.898590042827484*^9, 3.8986568221042967`*^9, 3.898658384738109*^9, 
   3.8986642345917473`*^9, 3.89868410352927*^9, 3.898764944988161*^9, 
   3.8987836211179447`*^9, 3.898932468678752*^9, 3.899180264463151*^9, 
   3.899196999759907*^9, 3.89920201937719*^9, 3.89920477564788*^9, 
   3.899267921398653*^9, 3.8993531582533073`*^9, 3.8993662832709208`*^9, 
   3.899368989266224*^9, 3.899386127482749*^9, 3.899432941655999*^9, 
   3.8994398965479507`*^9, 3.900136585788986*^9, 3.9001368150090857`*^9, 
   3.9001370143786707`*^9, 3.900137628929736*^9, 3.900137874840609*^9, 
   3.900139123551053*^9, 3.907041572065035*^9, 3.907043173388538*^9, 
   3.907401146312028*^9, 3.907647077825135*^9},
 CellLabel->
  "Out[258]=",ExpressionUUID->"2da52d02-c211-4f3c-b375-afa9af0ff5d6"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Sanity", " ", 
    RowBox[{"check", ":", " ", 
     RowBox[{"is", " ", "tetrad", " ", 
      RowBox[{"orthonormal", "?"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Emat", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"e0", ",", "e\[Phi]", ",", "er", ",", "e\[Theta]"}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Emat", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], 
            RowBox[{"Emat", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "l"}], "]"}], "]"}], 
            RowBox[{"g", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "l"}], "]"}], "]"}]}], "/.", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", "->", 
             RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "/.", "TrRule"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}], ",", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"h", "[", 
         RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ">", "0"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8969440671722937`*^9, 3.896944212221252*^9}, {
   3.896944628321567*^9, 3.896944636964793*^9}, {3.896944732921709*^9, 
   3.896944996634864*^9}, {3.896945203864024*^9, 3.896945221678597*^9}, {
   3.89694569171835*^9, 3.896945725142815*^9}, 3.896946111417325*^9, {
   3.89694646593657*^9, 3.8969464689197683`*^9}, {3.896952398064419*^9, 
   3.896952427744338*^9}, {3.89695246795844*^9, 3.8969525141578197`*^9}, {
   3.896952563942121*^9, 3.896952564418521*^9}, {3.8969525969150543`*^9, 
   3.8969526248559523`*^9}, {3.896952691226131*^9, 3.896952859895483*^9}, {
   3.8969528906293783`*^9, 3.896952950393342*^9}, {3.896953038141088*^9, 
   3.896953120642099*^9}, {3.896953846483046*^9, 3.8969538495630293`*^9}, {
   3.896954713034017*^9, 3.8969547150996304`*^9}, {3.896955072960103*^9, 
   3.896955130362166*^9}, {3.8969553275857773`*^9, 3.896955338006734*^9}, {
   3.89695547010664*^9, 3.896955599899535*^9}, {3.896955630083638*^9, 
   3.896955676342862*^9}, {3.896955721389625*^9, 3.8969557951280003`*^9}, {
   3.896955835822418*^9, 3.896955836169303*^9}, 3.896957768132409*^9, {
   3.896957840040515*^9, 3.896957866529848*^9}, 3.897036598803113*^9, {
   3.897036656679285*^9, 3.8970366618655376`*^9}, {3.898658394605908*^9, 
   3.8986584104445963`*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"72bcd2eb-92cd-4c2b-8551-61ee1faba4ce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8969547174489527`*^9, {3.8969551078295918`*^9, 3.8969551328285217`*^9}, 
   3.896955338755353*^9, {3.8969555894642344`*^9, 3.896955600991404*^9}, {
   3.8969556495700912`*^9, 3.896955676987454*^9}, {3.896955723289358*^9, 
   3.896955744405796*^9}, {3.89695578590763*^9, 3.896955795634204*^9}, 
   3.896955836901766*^9, 3.896957731556458*^9, 3.896957769279046*^9, {
   3.896957840746704*^9, 3.8969578670039682`*^9}, 3.896959784955084*^9, 
   3.896959815197279*^9, 3.897020343898273*^9, 3.897032005780389*^9, 
   3.897032162423183*^9, {3.897036592134714*^9, 3.897036599704844*^9}, 
   3.8970366630343857`*^9, 3.897112169869123*^9, 3.8971122220645723`*^9, 
   3.8975556208907423`*^9, 3.8976346121799498`*^9, 3.8976346605615683`*^9, 
   3.897635506406151*^9, 3.89859004353122*^9, 3.8986568228174467`*^9, 
   3.898664235316453*^9, 3.898684104231579*^9, 3.898764945730692*^9, 
   3.898783621512525*^9, 3.898932469380579*^9, 3.899180265562989*^9, 
   3.899197000434716*^9, 3.899202020091331*^9, 3.899204776360956*^9, 
   3.899267922104991*^9, 3.8993531589475603`*^9, 3.8993662840880423`*^9, 
   3.899368989979228*^9, 3.899386128184615*^9, 3.899432942367276*^9, 
   3.899439897227393*^9, 3.900136586488888*^9, 3.900136815638788*^9, 
   3.900137015005436*^9, 3.900137629536968*^9, 3.9001378754339857`*^9, 
   3.90013912427289*^9, 3.907041572792109*^9, 3.9070431740120163`*^9, 
   3.907401147098792*^9, 3.90764707812598*^9},
 CellLabel->
  "Out[260]=",ExpressionUUID->"902ac516-a454-4e27-a25e-85dc614933c0"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Similarly", " ", "to", " ", "Marck"}], ",", " ", 
    RowBox[{
     RowBox[{"we", " ", "define", " ", "a", " ", "parallel"}], "-", 
     RowBox[{
     "transported", " ", "tetrad", " ", "using", " ", "the", " ", "just", " ",
       "defined", " ", "legs"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"erder", " ", "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"er", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]"}], "]"}], "+", 
              
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"ChrisSchw", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], 
                 RowBox[{"er", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], 
                 RowBox[{"e0", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ")"}], "/.", 
            RowBox[{"{", 
             RowBox[{"\[Theta]", "->", 
              RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "/.", "TrRule"}], "/.", 
          "LeadURule"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"h", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"\[Psi]dot", " ", "=", " ", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"erder", "[", 
            RowBox[{"[", "i", "]"}], "]"}], 
           RowBox[{"e\[Phi]", "[", 
            RowBox[{"[", "l", "]"}], "]"}], 
           RowBox[{"g", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "l"}], "]"}], "]"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", "->", 
            RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "/.", "TrRule"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}], ",", 
        RowBox[{"\[ScriptCapitalE]", ">", "0"}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ">", "0"}]}], "}"}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]dot", "/.", "fhRule"}], "//", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], ">", 
          RowBox[{"2", "M"}], ">", "0"}], ",", 
         RowBox[{"\[ScriptCapitalE]", ">", "0"}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
           SuperscriptBox[
            RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ">", "0"}]}], "}"}]}],
       "]"}], "&"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8969440671722937`*^9, 3.896944212221252*^9}, {
   3.896944628321567*^9, 3.896944636964793*^9}, {3.896944732921709*^9, 
   3.896944996634864*^9}, {3.896945203864024*^9, 3.896945221678597*^9}, {
   3.89694569171835*^9, 3.896945725142815*^9}, 3.896946111417325*^9, {
   3.89694646593657*^9, 3.8969464689197683`*^9}, {3.896952398064419*^9, 
   3.896952427744338*^9}, {3.89695246795844*^9, 3.8969525141578197`*^9}, {
   3.896952563942121*^9, 3.896952564418521*^9}, {3.8969525969150543`*^9, 
   3.8969526248559523`*^9}, {3.896952691226131*^9, 3.896952859895483*^9}, {
   3.8969528906293783`*^9, 3.896952950393342*^9}, {3.896953038141088*^9, 
   3.896953120642099*^9}, {3.896953846483046*^9, 3.8969538495630293`*^9}, {
   3.896954713034017*^9, 3.896954786334655*^9}, {3.8969548369834538`*^9, 
   3.8969549489342422`*^9}, {3.896954981696892*^9, 3.896954986088073*^9}, {
   3.896955196029868*^9, 3.896955222535067*^9}, 3.8969553045896378`*^9, {
   3.896955380516986*^9, 3.8969554093746843`*^9}, {3.896955443605876*^9, 
   3.8969554491416883`*^9}, {3.896955808932869*^9, 3.8969558311290703`*^9}, {
   3.896955906552322*^9, 3.896955933037631*^9}, {3.89695669778307*^9, 
   3.89695682344287*^9}, {3.8969568597233067`*^9, 3.8969568621854067`*^9}, {
   3.8969569198461437`*^9, 3.8969569281997557`*^9}, {3.8969570402534103`*^9, 
   3.896957040694272*^9}, {3.896957071453967*^9, 3.89695711828141*^9}, 
   3.896958565753355*^9, {3.8970369414819593`*^9, 3.8970369517312107`*^9}},
 CellLabel->
  "In[261]:=",ExpressionUUID->"3e3ecdad-303d-434f-9796-eaf7ebbb6773"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]"}], 
  RowBox[{
   SqrtBox[
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
     RowBox[{"h", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
     SuperscriptBox[
      RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]]], "Output",
 CellChangeTimes->{
  3.896959829267824*^9, 3.8970203538284073`*^9, 3.8970320159631777`*^9, 
   3.897032163915744*^9, {3.897036933493881*^9, 3.897036952245824*^9}, 
   3.897112170559968*^9, 3.897112222222929*^9, 3.8975556216099854`*^9, 
   3.897634612920129*^9, 3.8976346612156267`*^9, 3.897635507149783*^9, 
   3.898590044198923*^9, 3.8986568235067177`*^9, 3.898664236068293*^9, 
   3.8986841049606333`*^9, 3.8987649464958143`*^9, 3.898783622035541*^9, 
   3.8989324700952168`*^9, 3.899180266266114*^9, 3.89919700113356*^9, 
   3.899202020819789*^9, 3.899204777131143*^9, 3.8992679228402767`*^9, 
   3.8993531596475153`*^9, 3.89936628484062*^9, 3.899368990698687*^9, 
   3.899386128917*^9, 3.8994329430762253`*^9, 3.899439897967554*^9, 
   3.900136587207815*^9, 3.900136816291623*^9, 3.900137015641438*^9, 
   3.9001376301646347`*^9, 3.9001378759688272`*^9, 3.900139124932732*^9, 
   3.907041573510551*^9, 3.907043174681408*^9, 3.907401147844986*^9, 
   3.907647078849609*^9},
 CellLabel->
  "Out[262]=",ExpressionUUID->"4366568f-7a0f-4687-8d80-10f8cfdfcbed"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]"}], 
  RowBox[{
   SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
   SuperscriptBox[
    RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]]], "Output",
 CellChangeTimes->{
  3.896959829267824*^9, 3.8970203538284073`*^9, 3.8970320159631777`*^9, 
   3.897032163915744*^9, {3.897036933493881*^9, 3.897036952245824*^9}, 
   3.897112170559968*^9, 3.897112222222929*^9, 3.8975556216099854`*^9, 
   3.897634612920129*^9, 3.8976346612156267`*^9, 3.897635507149783*^9, 
   3.898590044198923*^9, 3.8986568235067177`*^9, 3.898664236068293*^9, 
   3.8986841049606333`*^9, 3.8987649464958143`*^9, 3.898783622035541*^9, 
   3.8989324700952168`*^9, 3.899180266266114*^9, 3.89919700113356*^9, 
   3.899202020819789*^9, 3.899204777131143*^9, 3.8992679228402767`*^9, 
   3.8993531596475153`*^9, 3.89936628484062*^9, 3.899368990698687*^9, 
   3.899386128917*^9, 3.8994329430762253`*^9, 3.899439897967554*^9, 
   3.900136587207815*^9, 3.900136816291623*^9, 3.900137015641438*^9, 
   3.9001376301646347`*^9, 3.9001378759688272`*^9, 3.900139124932732*^9, 
   3.907041573510551*^9, 3.907043174681408*^9, 3.907401147844986*^9, 
   3.907647078885675*^9},
 CellLabel->
  "Out[263]=",ExpressionUUID->"86b24e7a-3f18-498b-8435-b5c6783e9ed8"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"The", " ", "parallel"}], "-", 
    RowBox[{
    "transported", " ", "spin", " ", "vector", " ", "can", " ", "than", " ", 
     "be", " ", "expressed", " ", "through", " ", "this", " ", "tetrad", " ", 
     "as"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"SvecSol", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"sp", " ", "e\[Theta]"}], " ", "+", " ", 
     RowBox[{
      SqrtBox[
       RowBox[{
        SuperscriptBox["s", "2"], "-", 
        SuperscriptBox["sp", "2"]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[Psi]", "]"}], "er"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Psi]", "]"}], "e\[Phi]"}]}], ")"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.897037572683124*^9, 3.8970376467414083`*^9}, {
  3.897037940237897*^9, 3.897037944909327*^9}, {3.89865858455103*^9, 
  3.898658621243314*^9}},
 CellLabel->
  "In[264]:=",ExpressionUUID->"67a2876a-f9ab-4457-9bf2-0a5dd74919e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"s", "-", "sp"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"s", "+", "sp"}], ")"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]", " ", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}]}], 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]]}]], "+", 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox[
           SuperscriptBox["\[ScriptCapitalE]", "2"], 
           RowBox[{"f", "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], "-", 
          FractionBox[
           SuperscriptBox["\[ScriptCapitalJ]", "2"], 
           SuperscriptBox[
            RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]]}]], " ", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Psi]", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
           SuperscriptBox[
            RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]]]}], ")"}]}], 
   ",", 
   FractionBox[
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"s", "-", "sp"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"s", "+", "sp"}], ")"}]}]], " ", 
     RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]]}], 
    SuperscriptBox[
     RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]], ",", 
   RowBox[{
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"s", "-", "sp"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"s", "+", "sp"}], ")"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"\[ScriptCapitalJ]", " ", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ScriptCapitalE]", "2"], " ", 
             SuperscriptBox[
              RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], 
            RowBox[{
             RowBox[{"f", "[", 
              RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
               SuperscriptBox[
                RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]]}], 
          RowBox[{"h", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]]]}], 
       RowBox[{"rt", "[", "\[Tau]", "]"}]], "+", 
      FractionBox[
       RowBox[{"\[ScriptCapitalE]", " ", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Psi]", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
         RowBox[{"h", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
           SuperscriptBox[
            RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]]]}], ")"}]}], 
   ",", 
   RowBox[{"-", 
    FractionBox["sp", 
     RowBox[{"rt", "[", "\[Tau]", "]"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8970376765815697`*^9, 3.897037946221345*^9, 
  3.897112171574698*^9, 3.897112222865835*^9, 3.897555622636539*^9, 
  3.897634613984552*^9, 3.897634661996407*^9, 3.897635508207906*^9, 
  3.8985900452313337`*^9, 3.898656824548635*^9, 3.898664237155074*^9, 
  3.898684105942205*^9, 3.898764947548511*^9, 3.898783622788547*^9, 
  3.898932471095141*^9, 3.899180267329506*^9, 3.899197002197744*^9, 
  3.89920202191914*^9, 3.899204778138946*^9, 3.899267923848501*^9, 
  3.899353160648097*^9, 3.899366286066272*^9, 3.899368991601882*^9, 
  3.899386129926646*^9, 3.899432944078784*^9, 3.8994398990730247`*^9, 
  3.9001365882226763`*^9, 3.900136817128104*^9, 3.900137016452427*^9, 
  3.90013763085192*^9, 3.900137876675712*^9, 3.900139125745385*^9, 
  3.9070415745357027`*^9, 3.907043175565028*^9, 3.907401149034173*^9, 
  3.907647079848393*^9},
 CellLabel->
  "Out[264]=",ExpressionUUID->"7343637e-6ccb-4456-933a-8d11f3f5322b"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "With", " ", "the", " ", "use", " ", "of", " ", "the", " ", "precession", 
    " ", "angle", " ", "we", " ", "can", " ", "now", " ", "elegantly", " ", 
    "reexpress", " ", "\[Delta]\[CurlyTheta]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"f", "[", "r", "]"}], " ", 
           RowBox[{"h", "[", "r", "]"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"St", "[", "\[Tau]", "]"}]}], " ", 
            RowBox[{
             SuperscriptBox["rt", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["tt", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
        RowBox[{" ", 
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}]}]], ")"}], "/.", 
      "TrRule"}], "/.", "LeadURule"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"St", "[", "\[Tau]", "]"}], "->", 
       RowBox[{"SvecSol", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], " ", ",", 
      RowBox[{
       RowBox[{"Sr", "[", "\[Tau]", "]"}], "->", 
       RowBox[{"SvecSol", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}], ",", 
        RowBox[{"\[ScriptCapitalE]", ">", "0"}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}]}], "}"}]}], 
     "]"}], "&"}]}]}]], "Input",
 CellChangeTimes->{{3.897046373087237*^9, 3.897046384859725*^9}, {
   3.897046430027377*^9, 3.897046572887672*^9}, 3.897636486918432*^9, {
   3.898658688318387*^9, 3.898658723732085*^9}},
 CellLabel->
  "In[265]:=",ExpressionUUID->"31870c69-715b-4431-ab63-abf28ff2f2c7"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "-", "sp"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"s", "+", "sp"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]], " ", 
   RowBox[{"Sin", "[", "\[Psi]", "]"}]}], 
  RowBox[{"\[ScriptCapitalJ]", " ", 
   RowBox[{"rt", "[", "\[Tau]", "]"}]}]]], "Output",
 CellChangeTimes->{{3.897046486156107*^9, 3.897046573691627*^9}, 
   3.897112172371689*^9, 3.897112223477252*^9, 3.897555623471023*^9, 
   3.897634614824477*^9, 3.897634662670024*^9, 3.897635509041504*^9, 
   3.897636487667454*^9, 3.898590046350205*^9, 3.898656825336331*^9, 
   3.89866423746768*^9, 3.898684106241932*^9, 3.89876494787472*^9, 
   3.898783622961834*^9, 3.898932471390408*^9, 3.899180267670032*^9, 
   3.899197002512145*^9, 3.8992020222377167`*^9, 3.899204778435336*^9, 
   3.899267924145233*^9, 3.899353160938464*^9, 3.899366286362998*^9, 
   3.89936899188374*^9, 3.8993861303892603`*^9, 3.899432944368223*^9, 
   3.899439899355343*^9, 3.900136588515993*^9, 3.900136817352128*^9, 
   3.9001370166774483`*^9, 3.900137630998786*^9, 3.900137876954761*^9, 
   3.900139125999317*^9, 3.907041574835453*^9, 3.9070431758353643`*^9, 
   3.907401149360856*^9, 3.907647080107565*^9},
 CellLabel->
  "Out[265]=",ExpressionUUID->"1b7e59d8-ba22-4262-b67c-c0667e1dc254"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Schwarzschild p,e parametrization", "Section",
 CellChangeTimes->{{3.8971177130906353`*^9, 3.8971177273195763`*^9}, {
  3.897194401249525*^9, 3.897194403060565*^9}, {3.898664608602283*^9, 
  3.8986646165037746`*^9}},ExpressionUUID->"5b819c66-de88-40f9-94ea-\
2b7b73fc7897"],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"r", ";", "\[ScriptCapitalE]"}], ",", "\[ScriptCapitalJ]", ",", 
      
      SubscriptBox["s", "||"]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ae9ed4cd-e75d-496b-9397-555d70f475c5"],
 ") polynomial"
}], "Subsection",
 CellChangeTimes->{{3.8991792280426197`*^9, 3.899179290434066*^9}, {
  3.899179615006844*^9, 
  3.89917961540944*^9}},ExpressionUUID->"83a82e81-2935-4a55-8308-\
156c333ca950"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Omitting", " ", "the", " ", 
     RowBox[{"1", "/", 
      RowBox[{"r", "^", "3"}]}]}], ",", " ", 
    RowBox[{
    "\[ScriptCapitalR]", " ", "is", " ", "a", " ", "cubic", " ", "in", " ", 
     "Schwarzschild"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Rpol", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"rt", "[", "\[Tau]", "]"}], "4"], "urint2"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", 
         FractionBox[
          RowBox[{"-", "sp"}], 
          RowBox[{"rt", "[", "\[Tau]", "]"}]]}], "}"}]}], "/.", "fhRule"}], "//",
      "Simplify"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CoefficientList", "[", 
     RowBox[{"Rpol", ",", 
      RowBox[{"rt", "[", "\[Tau]", "]"}]}], "]"}], "//", "Simplify"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{"Rpol", ",", "sp"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"\[Epsilon]", "->", "1"}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.897102835433017*^9, 3.897102837916753*^9}, {
   3.897115053715169*^9, 3.897115147784685*^9}, {3.897115788445966*^9, 
   3.897115801418167*^9}, {3.89711586237955*^9, 3.897115917721497*^9}, {
   3.8971159576157312`*^9, 3.8971159702114773`*^9}, {3.897116300545128*^9, 
   3.89711632931131*^9}, {3.897191140184738*^9, 3.897191152953718*^9}, {
   3.897192519956683*^9, 3.8971925650601254`*^9}, 3.897286350215109*^9, {
   3.897553801395857*^9, 3.897553840786695*^9}, {3.8975606536326733`*^9, 
   3.89756067622298*^9}, 3.9001372472316628`*^9},
 CellLabel->
  "In[266]:=",ExpressionUUID->"4ca21be1-83cf-445f-afab-6f56ef3b6238"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", "M", " ", "\[ScriptCapitalJ]", " ", 
     RowBox[{"(", 
      RowBox[{"\[ScriptCapitalJ]", "+", 
       RowBox[{
       "3", " ", "sp", " ", "\[ScriptCapitalE]", " ", "\[Epsilon]"}]}], 
      ")"}]}], "-", 
    RowBox[{"\[ScriptCapitalJ]", " ", 
     RowBox[{"(", 
      RowBox[{"\[ScriptCapitalJ]", "+", 
       RowBox[{
       "2", " ", "sp", " ", "\[ScriptCapitalE]", " ", "\[Epsilon]"}]}], ")"}],
      " ", 
     RowBox[{"rt", "[", "\[Tau]", "]"}]}], "+", 
    RowBox[{"2", " ", "M", " ", 
     SuperscriptBox[
      RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"rt", "[", "\[Tau]", "]"}], "3"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.897191153293778*^9, 3.897194381268194*^9, 3.8972863516922483`*^9, {
   3.897553802748857*^9, 3.8975538411413803`*^9}, 3.897554813249263*^9, 
   3.897555623616744*^9, 3.897557625858824*^9, {3.897560664107498*^9, 
   3.897560677399727*^9}, 3.8976346149826097`*^9, 3.897634662822146*^9, 
   3.897635509195487*^9, 3.898590046526314*^9, 3.898656825516108*^9, 
   3.898664237507709*^9, 3.898684106281645*^9, 3.898764947928233*^9, 
   3.898783622998776*^9, 3.898932471430235*^9, 3.899180267776449*^9, 
   3.899197002562237*^9, 3.8992020222913513`*^9, 3.899204778487671*^9, 
   3.8992679241891813`*^9, 3.899353160977903*^9, 3.89936628640271*^9, 
   3.899368991925405*^9, 3.8993861304426527`*^9, 3.899432944410411*^9, 
   3.899439899411366*^9, 3.9001365885599318`*^9, 3.900136817402872*^9, 
   3.900137016739278*^9, 3.9001373331390257`*^9, 3.900137635906508*^9, 
   3.900137877010125*^9, 3.900139126081612*^9, 3.907041574882304*^9, 
   3.9070431758697853`*^9, 3.907401149414163*^9, 3.907647080160722*^9},
 CellLabel->
  "Out[266]=",ExpressionUUID->"2834bf3f-c942-4941-9d00-8d38165fd5f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"2", " ", "M", " ", "\[ScriptCapitalJ]", " ", 
    RowBox[{"(", 
     RowBox[{"\[ScriptCapitalJ]", "+", 
      RowBox[{"3", " ", "sp", " ", "\[ScriptCapitalE]", " ", "\[Epsilon]"}]}],
      ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", "\[ScriptCapitalJ]"}], " ", 
    RowBox[{"(", 
     RowBox[{"\[ScriptCapitalJ]", "+", 
      RowBox[{"2", " ", "sp", " ", "\[ScriptCapitalE]", " ", "\[Epsilon]"}]}],
      ")"}]}], ",", 
   RowBox[{"2", " ", "M"}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ScriptCapitalE]", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.897191153293778*^9, 3.897194381268194*^9, 3.8972863516922483`*^9, {
   3.897553802748857*^9, 3.8975538411413803`*^9}, 3.897554813249263*^9, 
   3.897555623616744*^9, 3.897557625858824*^9, {3.897560664107498*^9, 
   3.897560677399727*^9}, 3.8976346149826097`*^9, 3.897634662822146*^9, 
   3.897635509195487*^9, 3.898590046526314*^9, 3.898656825516108*^9, 
   3.898664237507709*^9, 3.898684106281645*^9, 3.898764947928233*^9, 
   3.898783622998776*^9, 3.898932471430235*^9, 3.899180267776449*^9, 
   3.899197002562237*^9, 3.8992020222913513`*^9, 3.899204778487671*^9, 
   3.8992679241891813`*^9, 3.899353160977903*^9, 3.89936628640271*^9, 
   3.899368991925405*^9, 3.8993861304426527`*^9, 3.899432944410411*^9, 
   3.899439899411366*^9, 3.9001365885599318`*^9, 3.900136817402872*^9, 
   3.900137016739278*^9, 3.9001373331390257`*^9, 3.900137635906508*^9, 
   3.900137877010125*^9, 3.900139126081612*^9, 3.907041574882304*^9, 
   3.9070431758697853`*^9, 3.907401149414163*^9, 3.907647080184699*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"01fc3596-ab7f-4ea3-9707-a18c740e5272"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
    "6", " ", "M", " ", "\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]"}], "-", 
    
    RowBox[{"2", " ", "\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]", " ", 
     RowBox[{"rt", "[", "\[Tau]", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.897191153293778*^9, 3.897194381268194*^9, 3.8972863516922483`*^9, {
   3.897553802748857*^9, 3.8975538411413803`*^9}, 3.897554813249263*^9, 
   3.897555623616744*^9, 3.897557625858824*^9, {3.897560664107498*^9, 
   3.897560677399727*^9}, 3.8976346149826097`*^9, 3.897634662822146*^9, 
   3.897635509195487*^9, 3.898590046526314*^9, 3.898656825516108*^9, 
   3.898664237507709*^9, 3.898684106281645*^9, 3.898764947928233*^9, 
   3.898783622998776*^9, 3.898932471430235*^9, 3.899180267776449*^9, 
   3.899197002562237*^9, 3.8992020222913513`*^9, 3.899204778487671*^9, 
   3.8992679241891813`*^9, 3.899353160977903*^9, 3.89936628640271*^9, 
   3.899368991925405*^9, 3.8993861304426527`*^9, 3.899432944410411*^9, 
   3.899439899411366*^9, 3.9001365885599318`*^9, 3.900136817402872*^9, 
   3.900137016739278*^9, 3.9001373331390257`*^9, 3.900137635906508*^9, 
   3.900137877010125*^9, 3.900139126081612*^9, 3.907041574882304*^9, 
   3.9070431758697853`*^9, 3.907401149414163*^9, 3.9076470802105293`*^9},
 CellLabel->
  "Out[268]=",ExpressionUUID->"d294be4e-54a4-4207-83f1-debeb5953c69"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Corrections to \[ScriptCapitalE] and \[ScriptCapitalJ] relation to \
eccentricity ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3f8458f2-be05-45d3-bb78-3b3ce168801f"],
 " and semi-latus rectum ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e6925c6d-3ddd-47d4-9914-3b6df65b2555"]
}], "Subsection",
 CellChangeTimes->{{3.897117184641844*^9, 3.8971172849209003`*^9}, {
  3.897117757527516*^9, 3.89711780105193*^9}, {3.897117845456586*^9, 
  3.897117889281123*^9}, {3.897118343314732*^9, 3.897118368318022*^9}, {
  3.897286404753091*^9, 3.897286407325397*^9}, {3.897556174970346*^9, 
  3.897556188941121*^9}, {3.897560757414723*^9, 3.8975608269225807`*^9}, {
  3.897560966099464*^9, 3.897560994755376*^9}, {3.8975611883602743`*^9, 
  3.897561264531146*^9}, {3.8975613389178534`*^9, 3.8975613566109657`*^9}, {
  3.897617798933399*^9, 3.897617835383758*^9}, {3.89866425780455*^9, 
  3.898664260744031*^9}, {3.899179364107683*^9, 
  3.8991794109936657`*^9}},ExpressionUUID->"9610ae58-17c9-4f79-81ed-\
6f6084e56a31"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EJRule", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ScriptCapitalE]", " ", "->", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"p", " ", "-", " ", 
             RowBox[{"2", "M"}]}], ")"}], "^", "2"}], " ", "-", " ", 
          RowBox[{"4", 
           RowBox[{"M", "^", "2"}], " ", 
           RowBox[{"e", "^", "2"}]}]}], 
         RowBox[{"p", 
          RowBox[{"(", 
           RowBox[{"p", " ", "-", " ", 
            RowBox[{"M", 
             RowBox[{"(", 
              RowBox[{"3", " ", "+", " ", 
               RowBox[{"e", "^", "2"}]}], ")"}]}]}], ")"}]}]], "+", 
        RowBox[{"\[Epsilon]", " ", "dE"}]}]]}], ",", " ", 
     RowBox[{"\[ScriptCapitalJ]", " ", "->", " ", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"M", " ", 
          RowBox[{"p", "^", "2"}]}], 
         RowBox[{"p", " ", "-", " ", 
          RowBox[{"M", 
           RowBox[{"(", 
            RowBox[{"3", " ", "+", 
             RowBox[{"e", "^", "2"}]}], ")"}]}]}]], "+", 
        RowBox[{"\[Epsilon]", " ", "dJ"}]}]]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"koef2", " ", "=", " ", 
   RowBox[{"Coefficient", "[", 
    RowBox[{
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ExpandAll", "[", "Rpol", "]"}], "/.", "EJRule"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], "->", 
          FractionBox["p", 
           RowBox[{"1", "+", "e"}]]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
     "\[Epsilon]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"koef1", " ", "=", 
   RowBox[{"Coefficient", "[", 
    RowBox[{
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ExpandAll", "[", "Rpol", "]"}], "/.", "EJRule"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], "->", 
          FractionBox["p", 
           RowBox[{"1", "-", "e"}]]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
     "\[Epsilon]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dEdJRule", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"koef1", "==", "0"}], ",", 
        RowBox[{"koef2", "==", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dE", ",", "dJ"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", "+", 
               SuperscriptBox["e", "2"]}], ")"}], " ", "M"}], ")"}]}], "+", 
          "p"}], ">", "0"}], ",", 
        RowBox[{"p", ">", "0"}]}], "}"}]}], "]"}], "&"}]}]}]}], "Input",
 CellChangeTimes->{{3.897117184641844*^9, 3.8971172849209003`*^9}, {
  3.897117757527516*^9, 3.89711780105193*^9}, {3.897117845456586*^9, 
  3.897117889281123*^9}, {3.897118343314732*^9, 3.897118368318022*^9}, {
  3.897286404753091*^9, 3.897286407325397*^9}, {3.897556174970346*^9, 
  3.897556188941121*^9}, {3.897560757414723*^9, 3.8975608269225807`*^9}, {
  3.897560966099464*^9, 3.897560994755376*^9}, {3.8975611883602743`*^9, 
  3.897561264531146*^9}, {3.8975613389178534`*^9, 3.8975613566109657`*^9}, {
  3.897617798933399*^9, 3.897617835383758*^9}, {3.89866425780455*^9, 
  3.898664260744031*^9}, {3.899179364107683*^9, 3.899179367490683*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"818b5bea-f01b-418f-b71e-436704cd67d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"dE", "\[Rule]", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["e", "2"]}], ")"}], "2"], " ", 
      SuperscriptBox["M", 
       RowBox[{"3", "/", "2"}]], " ", 
      SqrtBox[
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["e", "2"]}], ")"}], " ", 
           SuperscriptBox["M", "2"]}], "-", 
          RowBox[{"4", " ", "M", " ", "p"}], "+", 
          SuperscriptBox["p", "2"]}], ")"}]}]], " ", "sp"}], 
     RowBox[{
      SuperscriptBox["p", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", "+", 
              SuperscriptBox["e", "2"]}], ")"}], " ", "M"}], ")"}]}], "+", 
         "p"}], ")"}], "2"]}]]}], ",", 
   RowBox[{"dJ", "\[Rule]", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"3", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           SuperscriptBox["e", "2"]}], ")"}], " ", "M"}], "-", 
        RowBox[{"2", " ", "p"}]}], ")"}], " ", 
      SqrtBox[
       RowBox[{"M", " ", "p"}]], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["e", "2"]}], ")"}], " ", 
         SuperscriptBox["M", "2"]}], "-", 
        RowBox[{"4", " ", "M", " ", "p"}], "+", 
        SuperscriptBox["p", "2"]}]], " ", "sp"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3", "+", 
             SuperscriptBox["e", "2"]}], ")"}], " ", "M"}], ")"}]}], "+", 
        "p"}], ")"}], "2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.89755618943818*^9, 3.897557637550935*^9, {3.897560787605296*^9, 
   3.897560827483387*^9}, 3.8975609956739893`*^9, {3.897561189564073*^9, 
   3.897561199980318*^9}, {3.897561255626899*^9, 3.897561265403738*^9}, 
   3.8975613572409363`*^9, 3.8976178371875267`*^9, 3.897634615995674*^9, 
   3.8976346632003*^9, 3.89763551007745*^9, 3.8985900474599237`*^9, 
   3.898656825959944*^9, 3.898664238309348*^9, 3.898684107181241*^9, 
   3.898764948884383*^9, 3.8987836239154787`*^9, 3.8989324723432207`*^9, 
   3.899180268706685*^9, 3.899197003517318*^9, 3.8992020232273912`*^9, 
   3.899204779400971*^9, 3.899267925111883*^9, 3.899353161887252*^9, 
   3.89936628740269*^9, 3.899368992924535*^9, 3.8993861313708467`*^9, 
   3.899432945314115*^9, 3.899439899801299*^9, 3.900136589481063*^9, 
   3.900136817734117*^9, 3.900137017206848*^9, 3.900137333582654*^9, 
   3.9001376362561073`*^9, 3.9001378779421053`*^9, 3.900139127104541*^9, 
   3.9070415758077183`*^9, 3.907043176258142*^9, 3.9074011504466753`*^9, 
   3.907647080563632*^9},
 CellLabel->
  "Out[272]=",ExpressionUUID->"693b1760-3bd4-405d-b065-7d7058766c72"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solving for third root ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "3"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ddfe70ea-94a4-4e90-9ac8-369afb4d7f72"]
}], "Subsection",
 CellChangeTimes->{{3.897192608202134*^9, 3.897192628421733*^9}, {
   3.897286181183247*^9, 3.897286185208969*^9}, {3.897286246625692*^9, 
   3.897286255200138*^9}, {3.897286459671075*^9, 3.897286469447299*^9}, {
   3.897286529214019*^9, 3.8972865319262877`*^9}, 3.897556847988018*^9, {
   3.897558721373784*^9, 3.8975587793784523`*^9}, {3.897558810095105*^9, 
   3.897558838896318*^9}, {3.89755887512685*^9, 3.897558982913619*^9}, {
   3.897561366916827*^9, 3.897561368825329*^9}, {3.897561453109439*^9, 
   3.8975614783966093`*^9}, 3.897561560765766*^9, {3.897561608894546*^9, 
   3.89756161736292*^9}, {3.897617172926272*^9, 3.897617177192017*^9}, {
   3.897619028544907*^9, 3.897619031084886*^9}, {3.899179425949717*^9, 
   3.8991794450680027`*^9}},ExpressionUUID->"b6af78ae-864f-459a-b34a-\
b8c78d89eb52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Coefficient", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], 
              RowBox[{"(", 
               RowBox[{"r1", " ", "-", " ", "r"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"r", "-", "r2"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"r", "-", "r3"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"r", "-", "r4"}], ")"}]}], ",", 
             SuperscriptBox["r", "2"]}], "]"}], "==", 
           RowBox[{"Coefficient", "[", 
            RowBox[{"Rpol", ",", 
             SuperscriptBox[
              RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], "]"}]}], ",", 
          "r3"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[ScriptCapitalE]", " ", "->", 
           SqrtBox[
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"p", " ", "-", " ", 
                  RowBox[{"2", "M"}]}], ")"}], "^", "2"}], " ", "-", " ", 
               RowBox[{"4", 
                RowBox[{"M", "^", "2"}], " ", 
                RowBox[{"e", "^", "2"}]}]}], 
              RowBox[{"p", 
               RowBox[{"(", 
                RowBox[{"p", " ", "-", " ", 
                 RowBox[{"M", 
                  RowBox[{"(", 
                   RowBox[{"3", " ", "+", " ", 
                    RowBox[{"e", "^", "2"}]}], ")"}]}]}], ")"}]}]], "+", 
             RowBox[{"\[Epsilon]", " ", "dE"}]}]]}], ",", " ", 
          RowBox[{"\[ScriptCapitalJ]", " ", "->", " ", 
           SqrtBox[
            RowBox[{
             FractionBox[
              RowBox[{"M", " ", 
               RowBox[{"p", "^", "2"}]}], 
              RowBox[{"p", " ", "-", " ", 
               RowBox[{"M", 
                RowBox[{"(", 
                 RowBox[{"3", " ", "+", 
                  RowBox[{"e", "^", "2"}]}], ")"}]}]}]], "+", 
             RowBox[{"\[Epsilon]", " ", "dJ"}]}]]}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r1", "->", 
          RowBox[{"p", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", "e"}], ")"}]}]}], ",", 
         RowBox[{"r2", "->", 
          RowBox[{"p", "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", "e"}], ")"}]}]}], ",", 
         RowBox[{"r4", "->", "0"}], ",", 
         RowBox[{"\[Epsilon]", "->", "1"}]}], "}"}]}], "/.", "dEdJRule"}], "//", 
     RowBox[{
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"r3", "/.", "#"}], ",", 
        RowBox[{"{", 
         RowBox[{"sp", ",", "0", ",", "1"}], "}"}]}], "]"}], "&"}]}], "//", 
    "Simplify"}], ")"}], "//", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"#", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", "+", 
              SuperscriptBox["e", "2"]}], ")"}], " ", "M"}], ")"}]}], "+", 
         "p"}], ">", "0"}], ",", 
       RowBox[{"p", ">", "0"}], ",", 
       RowBox[{"M", ">", "0"}]}], "}"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.897192608202134*^9, 3.897192628421733*^9}, {
   3.897286181183247*^9, 3.897286185208969*^9}, {3.897286246625692*^9, 
   3.897286255200138*^9}, {3.897286459671075*^9, 3.897286469447299*^9}, {
   3.897286529214019*^9, 3.8972865319262877`*^9}, 3.897556847988018*^9, {
   3.897558721373784*^9, 3.8975587793784523`*^9}, {3.897558810095105*^9, 
   3.897558838896318*^9}, {3.89755887512685*^9, 3.897558982913619*^9}, {
   3.897561366916827*^9, 3.897561368825329*^9}, {3.897561453109439*^9, 
   3.8975614783966093`*^9}, 3.897561560765766*^9, {3.897561608894546*^9, 
   3.89756161736292*^9}, {3.897617172926272*^9, 3.897617177192017*^9}, {
   3.897619028544907*^9, 3.897619031084886*^9}, {3.899179425949717*^9, 
   3.899179431130373*^9}},
 CellLabel->
  "In[273]:=",ExpressionUUID->"233d8380-b81d-444a-b186-e75cfe2c6a5a"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"M", " ", "p"}], ")"}]}], 
      RowBox[{
       RowBox[{"4", " ", "M"}], "-", "p"}]]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "2"}], " ", "p", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["M", "3"], " ", "p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["e", "2"]}], ")"}], " ", 
              SuperscriptBox["M", "2"]}], "-", 
             RowBox[{"4", " ", "M", " ", "p"}], "+", 
             SuperscriptBox["p", "2"]}], ")"}]}]]}], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           SuperscriptBox["e", "2"]}], ")"}], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["M", "5"], " ", "p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["e", "2"]}], ")"}], " ", 
              SuperscriptBox["M", "2"]}], "-", 
             RowBox[{"4", " ", "M", " ", "p"}], "+", 
             SuperscriptBox["p", "2"]}], ")"}]}]]}]}], ")"}], " ", "sp"}], 
     RowBox[{"M", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", "+", 
           SuperscriptBox["e", "2"]}], ")"}], " ", "M"}], "-", "p"}], ")"}], 
      " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", "M"}], "+", "p"}], ")"}], "2"]}]], "+", 
    InterpretationBox[
     SuperscriptBox[
      RowBox[{"O", "[", "sp", "]"}], "2"],
     SeriesData[$CellContext`sp, 0, {}, 0, 2, 1],
     Editable->False]}],
   SeriesData[$CellContext`sp, 
    0, {(-2) $CellContext`M (
       4 $CellContext`M - $CellContext`p)^(-1) $CellContext`p, \
$CellContext`M^(-1) ((
         3 + $CellContext`e^2) $CellContext`M - $CellContext`p)^(-1) ((-4) \
$CellContext`M + $CellContext`p)^(-2) ((-2) $CellContext`p ($CellContext`M^3 \
$CellContext`p ((-4) (-1 + $CellContext`e^2) $CellContext`M^2 - 
          4 $CellContext`M $CellContext`p + $CellContext`p^2))^Rational[1, 2] + 
      2 (3 + $CellContext`e^2) ($CellContext`M^5 $CellContext`p ((-4) (-1 + \
$CellContext`e^2) $CellContext`M^2 - 
          4 $CellContext`M $CellContext`p + $CellContext`p^2))^
        Rational[1, 2])}, 0, 2, 1],
   Editable->False], "}"}]], "Output",
 CellChangeTimes->{
  3.897194381695264*^9, 3.897286192389841*^9, 3.897286256829612*^9, {
   3.897286523957623*^9, 3.897286532687793*^9}, 3.8975556240915003`*^9, 
   3.897556854107267*^9, 3.8975587269184017`*^9, 3.8975587822808437`*^9, {
   3.897558910193919*^9, 3.897558929582708*^9}, 3.897558983910033*^9, 
   3.897561370705304*^9, 3.897561461325738*^9, {3.897561536335555*^9, 
   3.897561563569214*^9}, 3.89756161159654*^9, 3.897617178763835*^9, 
   3.897619034035741*^9, 3.897634617293997*^9, 3.897634663321216*^9, 
   3.897635511291*^9, 3.89859004878689*^9, 3.898656826524188*^9, 
   3.898664238898409*^9, 3.898684108503212*^9, 3.8987649502677183`*^9, 
   3.8987836252278423`*^9, 3.898932473658688*^9, 3.899180270038268*^9, 
   3.8991970048681087`*^9, 3.899202024619391*^9, 3.899204780706173*^9, 
   3.899267926447816*^9, 3.8993531631855173`*^9, 3.8993662888183327`*^9, 
   3.899368994346945*^9, 3.899386132692769*^9, 3.899432946608163*^9, 
   3.899439900629756*^9, 3.90013659080163*^9, 3.9001368180340548`*^9, 
   3.900137018431416*^9, 3.900137334312027*^9, 3.900137636814205*^9, 
   3.900137879281185*^9, 3.900139128607349*^9, 3.907041577122582*^9, 
   3.9070431765163193`*^9, 3.907401152048542*^9, 3.907647081053059*^9},
 CellLabel->
  "Out[273]=",ExpressionUUID->"5ef2aa65-d9df-47c7-a343-db9c3568995c"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Deriving", " ", "a", " ", "simpler", " ", "expression", " ", "for", " ", 
    "dr3"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"EQN", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Rpol", "/.", "EJRule"}], "/.", "dEdJRule"}], " ", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"rt", "[", "\[Tau]", "]"}], "->", "r"}], "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{"r", "->", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "M", " ", "p"}], 
            RowBox[{"p", "-", 
             RowBox[{"4", "M"}]}]], " ", "+", " ", 
           RowBox[{"\[Epsilon]", " ", "dr3"}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], " ", "//", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", 
           RowBox[{"6", "M"}], ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}]}], "}"}]}], "]"}], "&"}]}], "//", 
    
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"#", ",", "\[Epsilon]"}], "]"}], "&"}]}]}]}]], "Input",
 CellChangeTimes->{{3.89761877784833*^9, 3.897618938704274*^9}, {
  3.897618971679853*^9, 3.897618986567041*^9}, {3.897619085807642*^9, 
  3.897619162559011*^9}, {3.897619201566918*^9, 3.897619208048202*^9}, {
  3.897619459787477*^9, 3.89761952353684*^9}, {3.897619560324441*^9, 
  3.897619573552999*^9}, {3.8986645374272633`*^9, 3.8986645542291927`*^9}},
 CellLabel->
  "In[274]:=",ExpressionUUID->"9d52883b-f36c-458b-b829-6157f9775d1d"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", "M"}], "+", "p"}], ")"}], "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3", "+", 
             SuperscriptBox["e", "2"]}], ")"}], " ", "M"}], ")"}]}], "+", 
        "p"}], ")"}], "2"]}]], 
   RowBox[{"2", " ", 
    SuperscriptBox["M", "2"], " ", 
    SuperscriptBox["p", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"dr3", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", "e"}], ")"}], " ", "M"}], "-", "p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"3", "+", 
            SuperscriptBox["e", "2"]}], ")"}], " ", "M"}], "-", "p"}], ")"}], 
       " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", "M"}], "+", "p"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "e"}], ")"}], " ", "M"}], "+", "p"}], 
        ")"}]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "108"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["M", "7"], " ", "p", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["e", "2"]}], ")"}], " ", 
               SuperscriptBox["M", "2"]}], "-", 
              RowBox[{"4", " ", "M", " ", "p"}], "+", 
              SuperscriptBox["p", "2"]}], ")"}]}]]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["e", "4"], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["M", "7"], " ", "p", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["e", "2"]}], ")"}], " ", 
               SuperscriptBox["M", "2"]}], "-", 
              RowBox[{"4", " ", "M", " ", "p"}], "+", 
              SuperscriptBox["p", "2"]}], ")"}]}]]}], "+", 
         RowBox[{"72", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["M", "5"], " ", 
            SuperscriptBox["p", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["e", "2"]}], ")"}], " ", 
               SuperscriptBox["M", "2"]}], "-", 
              RowBox[{"4", " ", "M", " ", "p"}], "+", 
              SuperscriptBox["p", "2"]}], ")"}]}]]}], "-", 
         RowBox[{"15", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["M", "3"], " ", 
            SuperscriptBox["p", "5"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["e", "2"]}], ")"}], " ", 
               SuperscriptBox["M", "2"]}], "-", 
              RowBox[{"4", " ", "M", " ", "p"}], "+", 
              SuperscriptBox["p", "2"]}], ")"}]}]]}], "+", 
         SqrtBox[
          RowBox[{"M", " ", 
           SuperscriptBox["p", "7"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["e", "2"]}], ")"}], " ", 
              SuperscriptBox["M", "2"]}], "-", 
             RowBox[{"4", " ", "M", " ", "p"}], "+", 
             SuperscriptBox["p", "2"]}], ")"}]}]], "-", 
         RowBox[{
          SuperscriptBox["e", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"24", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["M", "7"], " ", "p", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["e", "2"]}], ")"}], " ", 
                  SuperscriptBox["M", "2"]}], "-", 
                 RowBox[{"4", " ", "M", " ", "p"}], "+", 
                 SuperscriptBox["p", "2"]}], ")"}]}]]}], "-", 
            RowBox[{"8", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["M", "5"], " ", 
               SuperscriptBox["p", "3"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["e", "2"]}], ")"}], " ", 
                  SuperscriptBox["M", "2"]}], "-", 
                 RowBox[{"4", " ", "M", " ", "p"}], "+", 
                 SuperscriptBox["p", "2"]}], ")"}]}]]}], "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["M", "3"], " ", 
              SuperscriptBox["p", "5"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SuperscriptBox["e", "2"]}], ")"}], " ", 
                 SuperscriptBox["M", "2"]}], "-", 
                RowBox[{"4", " ", "M", " ", "p"}], "+", 
                SuperscriptBox["p", "2"]}], ")"}]}]]}], ")"}]}]}], ")"}], " ",
        "sp"}]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{{3.897619506659773*^9, 3.897619527354055*^9}, {
   3.897619573837747*^9, 3.897619574170179*^9}, 3.897634632187223*^9, 
   3.897634667422564*^9, 3.8976355189893303`*^9, 3.89859006790991*^9, 
   3.8986568349063177`*^9, 3.898664247530348*^9, 3.898684124940192*^9, 
   3.8987649676457043`*^9, 3.8987836417771873`*^9, 3.898932490201654*^9, 
   3.899180273324555*^9, 3.899197008233593*^9, 3.8992020281231422`*^9, 
   3.8992047839300537`*^9, 3.899267929710628*^9, 3.899353166390348*^9, 
   3.8993662925517197`*^9, 3.899368997942751*^9, 3.899386135938743*^9, 
   3.899432949838876*^9, 3.899439902740484*^9, 3.9001365940630217`*^9, 
   3.9001368192997103`*^9, 3.900137021212647*^9, 3.900137335673711*^9, 
   3.900137638049823*^9, 3.900137882574136*^9, 3.900139132216449*^9, 
   3.907041580380004*^9, 3.9070431775038652`*^9, 3.90740115554991*^9, 
   3.9076470824653683`*^9},
 CellLabel->
  "Out[274]=",ExpressionUUID->"185a92d4-ea76-4799-a993-c4257e53aad1"]
}, Closed]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.897619606822247*^9, 3.897619648482383*^9}, {
   3.897619758152063*^9, 3.89761987400753*^9}, 3.899179344898075*^9},
 CellLabel->
  "In[275]:=",ExpressionUUID->"275c86fc-2801-47d6-a9b2-26ba9105707b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"dr3", "/.", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"EQN", "/.", 
          RowBox[{"{", 
           RowBox[{"M", "->", "1"}], "}"}]}], ")"}], "==", "0"}], ",", 
       "dr3"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "//", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"#", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", ">", "0"}], ",", 
       RowBox[{"0", "<", "e", "<", "1"}]}], "}"}]}], "]"}], "&"}]}]], "Input",\

 CellChangeTimes->{{3.897619606822247*^9, 3.897619648482383*^9}, {
   3.897619758152063*^9, 3.89761987400753*^9}, 3.899179344898075*^9},
 CellLabel->
  "In[276]:=",ExpressionUUID->"b03bd200-6b42-4a78-8bf9-77d1a2aa3508"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["e", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", "p"}]], 
   " ", "sp"}], 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]]], "Output",
 CellChangeTimes->{{3.897619619427821*^9, 3.897619648952921*^9}, {
   3.897619758817997*^9, 3.8976198194039173`*^9}, {3.897619851514433*^9, 
   3.8976198754997587`*^9}, 3.8976346323432217`*^9, 3.897634667547497*^9, 
   3.8976355191474648`*^9, 3.898590068096547*^9, 3.898656835063192*^9, 
   3.898664247681353*^9, 3.8986841251127453`*^9, 3.898764967810685*^9, 
   3.8987836419379587`*^9, 3.898932490383251*^9, 3.8991802734950647`*^9, 
   3.89919700840136*^9, 3.899202028299103*^9, 3.899204784097192*^9, 
   3.899267929887814*^9, 3.8993531665535994`*^9, 3.899366292723024*^9, 
   3.899368998111548*^9, 3.899386136115594*^9, 3.899432949996994*^9, 
   3.899439902888876*^9, 3.90013659421721*^9, 3.9001368194421463`*^9, 
   3.900137021382*^9, 3.900137335840025*^9, 3.900137638145432*^9, 
   3.9001378827441483`*^9, 3.900139132476231*^9, 3.90704158055508*^9, 
   3.90704317765699*^9, 3.907401155738625*^9, 3.907647082632029*^9},
 CellLabel->
  "Out[276]=",ExpressionUUID->"bfeabf63-db1a-4ffb-b90f-33077d6f4054"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rootsRule", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r1", "->", 
      FractionBox["p", 
       RowBox[{"1", "-", "e"}]]}], ",", 
     RowBox[{"r2", "->", 
      FractionBox["p", 
       RowBox[{"1", "+", "e"}]]}], ",", 
     RowBox[{"r3", "->", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "M", " ", "p"}], 
        RowBox[{"p", "-", 
         RowBox[{"4", " ", "M"}]}]], "-", 
       FractionBox[
        RowBox[{"2", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["M", "2"], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], "M"}], "+", "p"}], ")"}], "2"]}], ")"}], 
           " ", "M", " ", "p"}]], " ", "sp"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], "M"}], "+", "p"}], ")"}], "2"]]}]}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.897623971483179*^9, 3.897624030557611*^9}, {
   3.897624070898918*^9, 3.897624084144599*^9}, {3.897624267328423*^9, 
   3.897624275713868*^9}, {3.898765018521537*^9, 3.8987650300066633`*^9}, 
   3.898765267361999*^9, {3.8987655291362677`*^9, 3.8987655294254427`*^9}, 
   3.899179340030089*^9},
 CellLabel->
  "In[277]:=",ExpressionUUID->"9133c8bf-8d26-439e-bcfe-50a4ef749b96"]
}, Closed]],

Cell[CellGroupData[{

Cell["The last stable orbits near p=(6+2e)M", "Subsection",
 CellChangeTimes->{{3.897117368177498*^9, 3.897117368178729*^9}, {
   3.897117426554305*^9, 3.897117433210341*^9}, {3.897117467593924*^9, 
   3.897117592689126*^9}, {3.897119182600113*^9, 3.897119196427575*^9}, {
   3.8971926483711348`*^9, 3.897192648790222*^9}, {3.8971930594432297`*^9, 
   3.897193107609737*^9}, {3.897193169045827*^9, 3.897193181056305*^9}, {
   3.8971932352589273`*^9, 3.897193290615983*^9}, 3.897193388136936*^9, {
   3.8971945308048573`*^9, 3.8971945485795927`*^9}, {3.897556912850092*^9, 
   3.897556920232748*^9}, {3.89763668353841*^9, 3.8976367270299883`*^9}, {
   3.8976368161387444`*^9, 3.897636842381164*^9}, {3.8991794841767483`*^9, 
   3.899179510832066*^9}},ExpressionUUID->"fa375f26-e35d-47ed-81c9-\
f8bc59dcc98e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Jac", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[ScriptCapitalE]", "/.", "EJRule"}], "/.", "dEdJRule"}], 
         ",", "p"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[ScriptCapitalE]", "/.", "EJRule"}], "/.", "dEdJRule"}], 
         ",", "e"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[ScriptCapitalJ]", "/.", "EJRule"}], "/.", "dEdJRule"}], 
         ",", "p"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[ScriptCapitalJ]", "/.", "EJRule"}], "/.", "dEdJRule"}], 
         ",", "e"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"JacCoef", " ", "=", 
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Det", "[", "Jac", "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "->", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"6", "+", 
                RowBox[{"2", "e"}]}], ")"}], "M"}], " ", "+", " ", 
             RowBox[{"sp", " ", "dp"}]}]}], ",", 
           RowBox[{"\[Epsilon]", "->", "1"}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"sp", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
      "FullSimplify"}], "//", "Normal"}], ",", "sp"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.897117368177498*^9, 3.897117368178729*^9}, {
   3.897117426554305*^9, 3.897117433210341*^9}, {3.897117467593924*^9, 
   3.897117592689126*^9}, {3.897119182600113*^9, 3.897119196427575*^9}, {
   3.8971926483711348`*^9, 3.897192648790222*^9}, {3.8971930594432297`*^9, 
   3.897193107609737*^9}, {3.897193169045827*^9, 3.897193181056305*^9}, {
   3.8971932352589273`*^9, 3.897193290615983*^9}, 3.897193388136936*^9, {
   3.8971945308048573`*^9, 3.8971945485795927`*^9}, {3.897556912850092*^9, 
   3.897556920232748*^9}, {3.89763668353841*^9, 3.8976367270299883`*^9}, {
   3.8976368161387444`*^9, 3.897636842381164*^9}, {3.8991794841767483`*^9, 
   3.899179487043339*^9}},
 CellLabel->
  "In[278]:=",ExpressionUUID->"44ca1895-6e4f-4787-83b2-96798a9bfb87"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"e", " ", 
    RowBox[{"(", 
     RowBox[{"3", "+", "e"}], ")"}], " ", 
    SuperscriptBox["M", 
     RowBox[{"5", "/", "2"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox["2"], " ", "dp", " ", "e", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "9"}], "+", 
         SuperscriptBox["e", "2"]}], ")"}], " ", 
       SuperscriptBox["M", 
        RowBox[{"3", "/", "2"}]], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], " ", 
         SuperscriptBox["M", "2"]}]]}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
       SuperscriptBox["M", 
        RowBox[{"3", "/", "2"}]], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", "+", "e"}], ")"}], " ", 
         SuperscriptBox["M", "2"]}]]}], "-", 
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], " ", 
         SuperscriptBox["M", "2"]}]], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", "e"}], ")"}], " ", 
         SuperscriptBox["M", "3"]}]]}]}], ")"}]}], 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "+", "e"}], ")"}], "5"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "e"}], ")"}], "3"], " ", 
    SqrtBox[
     FractionBox["1", 
      RowBox[{"9", "-", 
       SuperscriptBox["e", "2"]}]]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "e"}], ")"}], " ", 
       SuperscriptBox["M", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"3", "+", "e"}], ")"}], "2"], " ", 
         SuperscriptBox["M", "2"]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "e"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}]}]]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.8971174336272707`*^9, 3.897117531284346*^9, {3.897117587733539*^9, 
   3.897117592992592*^9}, 3.8971931599953747`*^9, 3.897193195276595*^9, {
   3.89719327473182*^9, 3.897193300109424*^9}, 3.897194382207094*^9, 
   3.8975556332791862`*^9, 3.8975569332374477`*^9, 3.897634626642412*^9, 
   3.8976346645572367`*^9, 3.8976355132281303`*^9, 3.897636743161347*^9, {
   3.897636846570676*^9, 3.8976368468036222`*^9}, 3.898590061936763*^9, 
   3.8986568298383837`*^9, 3.898664241822608*^9, 3.89868412148006*^9, 
   3.89876496399667*^9, 3.898783638318931*^9, 3.898932486683958*^9, 
   3.899180286633325*^9, 3.899197021618003*^9, 3.8992020415579453`*^9, 
   3.899204797084732*^9, 3.8992679429458313`*^9, 3.899353179451988*^9, 
   3.899366307013195*^9, 3.8993690124075727`*^9, 3.899386149036772*^9, 
   3.899432962942089*^9, 3.899439906188045*^9, 3.900136607339941*^9, 
   3.900136821124496*^9, 3.90013703498501*^9, 3.900137338793041*^9, 
   3.9001376383644733`*^9, 3.90013789661303*^9, 3.900139147407219*^9, 
   3.907041594367997*^9, 3.907043177867105*^9, 3.9074011705050297`*^9, 
   3.907647082928288*^9},
 CellLabel->
  "Out[279]=",ExpressionUUID->"73f6fb94-de85-43d6-b0c3-f8a9a10e4a52"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Now", " ", "solve", " ", "for", " ", "the", " ", "correction", " ", "dp", 
    " ", "for", " ", "LSO"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"JacCoef", "==", "0"}], ",", "dp"}], "]"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{"M", ">", "0"}]}], "}"}]}], "]"}], "&"}]}]}]], "Input",
 CellChangeTimes->{{3.897117607931772*^9, 3.897117638920331*^9}, {
   3.897193316457534*^9, 3.8971934008834333`*^9}, {3.897194518652865*^9, 
   3.897194521396351*^9}, 3.897556974675953*^9, {3.897636755316655*^9, 
   3.897636755829154*^9}, {3.897636852587675*^9, 3.897636853117206*^9}, {
   3.898664335773204*^9, 3.898664337195326*^9}},
 CellLabel->
  "In[280]:=",ExpressionUUID->"668f2032-1387-4835-993e-61cda46ebaab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"dp", "\[Rule]", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox["2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "e"}], ")"}]}], 
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "e"}], ")"}]}]]]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.897117617261269*^9, 3.8971176392678757`*^9}, 
   3.8971933217340937`*^9, {3.897193359332219*^9, 3.897193365835136*^9}, 
   3.8971943822427483`*^9, 3.897555633376911*^9, 3.897556984678419*^9, 
   3.8976346267338257`*^9, 3.897634664632208*^9, 3.897635513318139*^9, 
   3.8976367570597677`*^9, 3.897636853817618*^9, 3.8985900620650787`*^9, 
   3.8986568299401484`*^9, 3.898664241927392*^9, 3.898684121587031*^9, 
   3.89876496411982*^9, 3.89878363840853*^9, 3.898932486795351*^9, 
   3.899180286730838*^9, 3.899197021723407*^9, 3.89920204167356*^9, 
   3.8992047971984777`*^9, 3.899267943072199*^9, 3.899353179547105*^9, 
   3.899366307121599*^9, 3.8993690125087767`*^9, 3.899386149142112*^9, 
   3.899432963046275*^9, 3.89943990632312*^9, 3.9001366074999332`*^9, 
   3.900136821226606*^9, 3.900137035098135*^9, 3.9001373389004097`*^9, 
   3.900137638431126*^9, 3.900137896742733*^9, 3.9001391475782537`*^9, 
   3.907041594477807*^9, 3.907043177952237*^9, 3.907401170624812*^9, 
   3.90764708301665*^9},
 CellLabel->
  "Out[280]=",ExpressionUUID->"9c19e28c-2a44-4591-8425-a1b7fcd4fa70"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Expressions for Mino velocities of t,\[Phi] DOF", "Subsection",
 CellChangeTimes->{
  3.8991795395070953`*^9},ExpressionUUID->"b0b8a43e-9d0a-4c51-b514-\
f270c194b935"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Expressions", " ", "for", " ", "Mino", " ", "velocities", " ", "of", " ",
      "t"}], ",", 
    RowBox[{"\[Phi]", " ", "DOF"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"CoefficientList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"r", "^", "2"}], "utint"}], "/.", "fhRule"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", " ", 
          RowBox[{
           RowBox[{"-", "sp"}], "/", "r"}]}], ",", 
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], "->", "r"}]}], "}"}]}], ",", 
      "\[Epsilon]"}], "]"}], "//", "FullSimplify"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CoefficientList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"r", "^", "2"}], "u\[CurlyPhi]int"}], "/.", "fhRule"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", " ", 
          RowBox[{
           RowBox[{"-", "sp"}], "/", "r"}]}], ",", 
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], "->", "r"}]}], "}"}]}], ",", 
      "\[Epsilon]"}], "]"}], "//", "FullSimplify"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CoefficientList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"r", "^", "2"}], 
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]"}], 
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]], ")"}]}], "/.", 
        "fhRule"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", " ", 
          RowBox[{
           RowBox[{"-", "sp"}], "/", "r"}]}], ",", 
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], "->", "r"}]}], "}"}]}], ",", 
      "\[Epsilon]"}], "]"}], "//", "FullSimplify"}]}]}]], "Input",
 CellChangeTimes->{{3.897288515924809*^9, 3.8972885561230516`*^9}, {
   3.897288592364731*^9, 3.8972886472461023`*^9}, {3.897288735868917*^9, 
   3.897288750149014*^9}, {3.897376389379676*^9, 3.897376390129863*^9}, {
   3.897380305752982*^9, 3.8973803229909143`*^9}, {3.897381482622834*^9, 
   3.897381484194475*^9}, {3.898664374305336*^9, 3.8986643897863894`*^9}, 
   3.899196775894341*^9, {3.90013728460594*^9, 3.900137292197198*^9}},
 CellLabel->
  "In[281]:=",ExpressionUUID->"306f2f49-e9f1-4a57-9cb6-7e83df56d3c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["r", "3"], " ", "\[ScriptCapitalE]"}], 
     RowBox[{
      RowBox[{"2", " ", "M"}], "-", "r"}]]}], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"M", " ", "sp", " ", "\[ScriptCapitalJ]"}], 
     RowBox[{
      RowBox[{"2", " ", "M"}], "-", "r"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8972885410541677`*^9, 3.897288556451263*^9}, {
   3.897288636742251*^9, 3.8972886486120567`*^9}, 3.897288750864643*^9, 
   3.8973763907648478`*^9, 3.897381485900559*^9, 3.897555633410172*^9, 
   3.897557050229506*^9, 3.897634626776321*^9, 3.897634664674141*^9, 
   3.8976355133610163`*^9, 3.898590062120778*^9, 3.898656829986945*^9, 
   3.898664241976198*^9, 3.89868412162541*^9, 3.898764964172151*^9, 
   3.89878363844029*^9, 3.8989324868320513`*^9, 3.899180286780559*^9, 
   3.899197021765853*^9, 3.899202041713831*^9, 3.8992047972456083`*^9, 
   3.8992679431214447`*^9, 3.899353179580862*^9, 3.899366307156889*^9, 
   3.899369012549822*^9, 3.899386149181777*^9, 3.899432963080215*^9, 
   3.899439906376734*^9, 3.900136607552267*^9, 3.900136821275289*^9, 
   3.9001370351507483`*^9, 3.9001373389442053`*^9, 3.900137638479253*^9, 
   3.900137896809596*^9, 3.900139147650055*^9, 3.9070415945225067`*^9, 
   3.907043177988892*^9, 3.907401170664605*^9, 3.907647083055832*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"bb766ce0-e822-43f0-b1c6-5dc1e4f3e88f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[ScriptCapitalJ]", ",", 
   RowBox[{"sp", " ", "\[ScriptCapitalE]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8972885410541677`*^9, 3.897288556451263*^9}, {
   3.897288636742251*^9, 3.8972886486120567`*^9}, 3.897288750864643*^9, 
   3.8973763907648478`*^9, 3.897381485900559*^9, 3.897555633410172*^9, 
   3.897557050229506*^9, 3.897634626776321*^9, 3.897634664674141*^9, 
   3.8976355133610163`*^9, 3.898590062120778*^9, 3.898656829986945*^9, 
   3.898664241976198*^9, 3.89868412162541*^9, 3.898764964172151*^9, 
   3.89878363844029*^9, 3.8989324868320513`*^9, 3.899180286780559*^9, 
   3.899197021765853*^9, 3.899202041713831*^9, 3.8992047972456083`*^9, 
   3.8992679431214447`*^9, 3.899353179580862*^9, 3.899366307156889*^9, 
   3.899369012549822*^9, 3.899386149181777*^9, 3.899432963080215*^9, 
   3.899439906376734*^9, 3.900136607552267*^9, 3.900136821275289*^9, 
   3.9001370351507483`*^9, 3.9001373389442053`*^9, 3.900137638479253*^9, 
   3.900137896809596*^9, 3.900139147650055*^9, 3.9070415945225067`*^9, 
   3.907043177988892*^9, 3.907401170664605*^9, 3.907647083079001*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"6e7c8b94-ce6b-4dae-828c-1a8d4cc9ec53"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "\[ScriptCapitalE]", " ", 
    "\[ScriptCapitalJ]"}], 
   RowBox[{
    SuperscriptBox["r", "2"], "+", 
    SuperscriptBox["\[ScriptCapitalJ]", "2"]}]], "}"}]], "Output",
 CellChangeTimes->{{3.8972885410541677`*^9, 3.897288556451263*^9}, {
   3.897288636742251*^9, 3.8972886486120567`*^9}, 3.897288750864643*^9, 
   3.8973763907648478`*^9, 3.897381485900559*^9, 3.897555633410172*^9, 
   3.897557050229506*^9, 3.897634626776321*^9, 3.897634664674141*^9, 
   3.8976355133610163`*^9, 3.898590062120778*^9, 3.898656829986945*^9, 
   3.898664241976198*^9, 3.89868412162541*^9, 3.898764964172151*^9, 
   3.89878363844029*^9, 3.8989324868320513`*^9, 3.899180286780559*^9, 
   3.899197021765853*^9, 3.899202041713831*^9, 3.8992047972456083`*^9, 
   3.8992679431214447`*^9, 3.899353179580862*^9, 3.899366307156889*^9, 
   3.899369012549822*^9, 3.899386149181777*^9, 3.899432963080215*^9, 
   3.899439906376734*^9, 3.900136607552267*^9, 3.900136821275289*^9, 
   3.9001370351507483`*^9, 3.9001373389442053`*^9, 3.900137638479253*^9, 
   3.900137896809596*^9, 3.900139147650055*^9, 3.9070415945225067`*^9, 
   3.907043177988892*^9, 3.907401170664605*^9, 3.907647083102932*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"f81d59d4-ae49-49f2-a985-91784818c3d4"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Elliptic integrals and expansion", "Section",
 CellChangeTimes->{{3.898664628360124*^9, 3.8986646743892603`*^9}, {
  3.89919934754312*^9, 
  3.899199349250587*^9}},ExpressionUUID->"6478f18a-954e-4ae9-bc84-\
2febb6b52087"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "The", " ", "elliptic", " ", "integrals", " ", "were", " ", "computed", 
     " ", "in", " ", "Maple"}], ",", " ", 
    RowBox[{
     RowBox[{"since", " ", "it", " ", "has", " ", "better", " ", "elliptic"}],
      "-", 
     RowBox[{"integral", " ", 
      RowBox[{"algorithms", "."}]}]}]}], "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Here", " ", "one", " ", "can", " ", "verify", " ", "the", " ", "results", 
    " ", "against", " ", "numerical", " ", 
    RowBox[{"integrations", "."}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.899179838593815*^9, 3.899179860803639*^9}, {
   3.899197921914483*^9, 3.899197936412674*^9}, 3.899267924492285*^9},
 CellLabel->
  "In[284]:=",ExpressionUUID->"893bc0f4-3ae0-49df-9c93-7eb435e75451"],

Cell[CellGroupData[{

Cell["The \[Lambda](r) integrals, period, frequency", "Subsection",
 CellChangeTimes->{{3.899179681812755*^9, 3.899179682261392*^9}, {
   3.8991797236055527`*^9, 3.8991797423150043`*^9}, 3.899179798039151*^9, {
   3.8991865947521467`*^9, 3.899186596989479*^9}, {3.8991866964469*^9, 
   3.899186699677617*^9}},ExpressionUUID->"20b41a83-3623-4303-9022-\
f024d8233a7d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Subs", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"EJRule", "/.", "dEdJRule"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"M", "->", "1"}], ",", 
        RowBox[{"\[Epsilon]", "->", "1"}]}], "}"}]}], ",", 
     RowBox[{"rootsRule", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"M", "->", "1"}], ",", 
        RowBox[{"\[Epsilon]", "->", "1"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"M", "->", "1"}], ",", 
       RowBox[{"\[Epsilon]", "->", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rfunc", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", " ", "-", " ", 
       SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], 
     RowBox[{"(", 
      RowBox[{"r1", " ", "-", " ", "r"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"r", "-", "r2"}], ")"}], 
     RowBox[{"(", 
      RowBox[{"r", "-", "r3"}], ")"}], "r"}], "/.", "Subs"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"N\[Lambda]r", "[", 
     RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "rf_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{
       FractionBox["1", 
        SqrtBox["Rfunc"]], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "->", "pi"}], ",", 
         RowBox[{"e", "->", "ei"}], ",", 
         RowBox[{"sp", "->", "spi"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", 
        FractionBox["pi", 
         RowBox[{"1", "+", "ei"}]], ",", "rf"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]r", " ", "[", 
     RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "r_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", 
       FractionBox[
        RowBox[{"EllipticF", "[", 
         RowBox[{
          RowBox[{"ArcSin", "[", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"r", "-", "r2"}], ")"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"r", "-", "r3"}], ")"}]}]]], "]"}], ",", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], "r2", 
          RowBox[{"(", 
           RowBox[{"r1", "-", "r3"}], ")"}]}]]]}], "/.", "Subs"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "->", "pi"}], ",", 
       RowBox[{"e", "->", "ei"}], ",", 
       RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Consistency", " ", "check"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"N\[Lambda]r", "[", 
       RowBox[{"10", ",", "0.4", ",", "0.01", ",", "r"}], "]"}], ",", 
      RowBox[{"\[Lambda]r", "[", 
       RowBox[{"10", ",", "0.4", ",", "0.01", ",", "r"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", 
      FractionBox["10", 
       RowBox[{"1", "+", "0.4"}]], ",", 
      FractionBox["10", 
       RowBox[{"1", "-", "0.4"}]]}], "}"}], ",", 
    RowBox[{"AspectRatio", "->", "1"}]}], "]"}], "//", 
  "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"N\[Lambda]r", "[", 
      RowBox[{"10", ",", "0.4", ",", "0.01", ",", "r"}], "]"}], "-", 
     RowBox[{"\[Lambda]r", "[", 
      RowBox[{"10", ",", "0.4", ",", "0.01", ",", "r"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", 
      FractionBox["10", 
       RowBox[{"1", "+", "0.4"}]], ",", 
      FractionBox["10", 
       RowBox[{"1", "-", "0.4"}]]}], "}"}], ",", 
    RowBox[{"AspectRatio", "->", "1"}]}], "]"}], "//", 
  "Quiet"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.899179681812755*^9, 3.899179682261392*^9}, {
   3.8991797236055527`*^9, 3.8991797423150043`*^9}, {3.899179800062207*^9, 
   3.899179822123213*^9}, {3.899180031136139*^9, 3.899180092782403*^9}, {
   3.899180139315366*^9, 3.899180165949873*^9}, {3.899180204319422*^9, 
   3.899180237076522*^9}, {3.899180299678746*^9, 3.899180557373704*^9}, {
   3.899180603052128*^9, 3.899180687589567*^9}, {3.899180736657943*^9, 
   3.8991807404122953`*^9}, {3.899180806554537*^9, 3.899180907203721*^9}, {
   3.899180939116651*^9, 3.899180942870222*^9}, {3.899181403534944*^9, 
   3.8991815627290297`*^9}, {3.899181599520794*^9, 3.899181737525885*^9}, 
   3.899181949335096*^9, {3.899184684588591*^9, 3.899184816065152*^9}, {
   3.899185694212044*^9, 3.899185697517461*^9}, {3.899190204223186*^9, 
   3.899190204573391*^9}, {3.90013803566673*^9, 3.900138042986662*^9}},
 CellLabel->
  "In[285]:=",ExpressionUUID->"5e4ab0dd-5c67-4612-852b-22574c229a14"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
s3JyCKyaMMyfnaTgf+5bdDY=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
CwoIWvyyqWieS8P/AHBqb9g=
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
s3JyCKyaMMyfnaTgf+5bdDY=
             "]]}, "Charting`Private`Tag#1"], 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
CwoIWvyyqWieS8P/AHBqb9g=
             "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{7.142857142857143, 16.666666666666668`}, {0., 
           1.3078467220318406`}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {7.142857142857159, 0}, "ImageSize" -> {360, 360}, 
          "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{7.142857142857143, 16.666666666666668`}, {0., 
          1.3078467220318406`}}, "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {7.142857142857159, 0}, "ImageSize" -> {360, 360}, 
         "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwV0Xk4lAsbBnBUoighiZmxDRIzvRwHJ8vz5BjRJi3iIy1CpVDHduI7RA5t
llC0CJlEY0sRFVkjIoqyJVv2ZeZ9y0mcvvn+eK7n+v11X/d1qx312eMuJiIi
ckN4//95p+7o216j4fZk8dc/PDcCz7Bt2DqJhi7iNqLetimQsyB+0yqZhp/z
xwMffk6HBzWmuyxv0VDcc0L05BAXuFd8xTCVhhl2rpFB1tmQsY9bbJ5Ow10t
EgbaW3iQRus6aZpJw8DFdc8OCfLgNu/3d0Y5NCw7Ui6b01MIN/2Cogxzaci2
WIeO/EeQbJZralBAw6XiVzwnvxVBYpNCJquYhpj1bKVa7xO4PDnmx6yi4Wj6
Hgk701KIfszQUa+loeOE2ryWaBn8HbK3V6WehtkLDny9yjIIl3rBUW6mYavn
lNMt/edwTi9OQbaLhjFikvX/9pbD8VNGT3/yaXi9OoIr/aYSPAy9Ti1SNHx/
fO/xVXJVcGzhruqPORomrr9nNn+gCg5dkbz4bZGGsa1r3Ks+VYEDr8dpSpKO
0ScMzAz7q8FqMvxHlxodIwpdM4te1oLl45L8j0w6jlwXm7j7vRYwZNKtQ5uO
bzdpWAv068BUyqGplSX0fKNRd1odGOjp3Kn/jY7dV8wYRNArUDvVYlFsT0dm
T7zC2OoGkBdnOVP76LjEPmhWmtMAEmmXAg0c6bhW3HPx2Z8NMP2OU5DnSsfS
/nXrK/oboMz0uVqWFx0dY//h5fBew76V2UuTI+nI3byxaS3RBNE54a//LKXj
75HxxJ3vzRBs9flLyXM6phT1jvZrtID3J/Ml3yromFvNOT6yswX2y343PVtH
R6N86XKT9BZQP+eTe/IdHYNieVFR6m/hua1LnPMUHVsG+gw1K9/C7OivDuZq
DJwsPSMhOtkKa8tFfa2YDMSVzC01C62wOeHNxe3aDDwbrl/kL90GF8zdXzix
GMi9z1yRyW6D9dcSmQG/MfDlGFb94tsGlqakIM+egbTTv8VZz7ZB4tWCWNVw
BrbtpxnuGn4HJga6DUsGGRiZqVVQld0Ob/3u5f0YZmBqs/PgdHE7HC9RTiRH
GXj7D6Xza2raIcVM6tDgNAMvuBlbbf7UDvPWU1TVPAN51rsblWU74Jlzvmq4
rAqGxBifYQV1gEXkL0Eiliq4VzTgy1fzD8D5aKq9mKaC50q7ScGjj/Dhvy+3
RhurooHIuiF+dDfU++dkF95QxWVdF0Kpvl7w5OXJjP5URbZIK8dO/jOciMcp
Yw817Pli6353fT9k9aQEZtWqoStPJqZ6vh8SPKSXM1nqKOXHeLTi0wA8d7Cx
enlVHXt2shreZA7C1q8yc/6T6lihcHik22UIzreReSZ7NVDFL9dptdIwzK1N
lVcu0sDbSX2xc5XDoJx8NHSFMhOrM5gBRT5fIKP+8SG580y0aHwS1C07Au6H
mqdMPzNxoSCnT5M7Ah8Mxc6f2aqJFrxmXSWLUYj0Xaysy9LEC2GN31fVj0L/
uKyEjowWvktu43Q7jkGaXHF1ZoAWWoW+YNUOjMGtDFUWdmjho49z3hKHx4Hj
y701aq6NxcpatVFD46CbyS8pSNXG+g/bDvgfnAC/vxttry1qo11XbWRh6wR4
ZVV8Dju2AS+fjuaE7pyEVHawZmzNBvRbVSGnWTEJYdRunxw9HaT9nGRdNZmC
muOP2X3XdDAxnf3TLG8KOL/33fpFoIPYuqg4rjQNfi7MVUlOG9F9C7WtM3Ya
+roJtkLZRszbEVrtvjANuZKN1QWKukjkGSaEeMyATkCoq2OoLnobDe272DkD
AzY/7qv06aK5906MUZ8F2//EU6S1HoZbuBzQOzgLk63TMyNZethAUqfdEmdB
MNd5+Ks4C2sky57oNc7CfZe+jtXeLNzg0CF+czkfbmjz5m2bWXjQ0JNpsYUP
RvoJGvFGbDx5wGjuv+f5YDy2vIp/m43hwTP2/Co++C+3WnV2gY0ZfK5pk5gA
jhy7eein2ybMWBecqr1DAJe0n7ryajbhSv5fMyLXBXC5qfBE6RoCdzuL9ZQP
C2DyAFcmSpZAbx2btewRAewYTC7ZJ0fg7dZatdRRAUjNhy6blScw1TKmNGxC
ADHau9K1FAkcqNjG3M0XwLXw8Y8JDALb5fxi1i8K4KaJho23LoGUop2Yx1oS
5qsVZkz1CDxceyaXVCDB2W7FdUkWgat6PPzCFUmgefAHM9kEmtXtOXJPmYTU
hIrQbn0Clc4qrSTVSEifdi6xMSGwP1jes4lNwoPMRC0NDoG5Qb4Pw2xJaC8f
lBoUusDx6TLl7SSIdRqQGdYELi6nVxbvIMFFurVC3YbAmT+HvAR2JMgESDup
byfQuTVlRbADCYFb/76sZk/ga8W/QtvdSLAeD5xVOUjgpYGF0+2hJPyx9FVH
n9BlVMsH7nkS0hgKL+66Eji/ZJtLUISw357HF1UOE1hb6dihEUVC7rNZdRU3
Au+KccKTYkiQv3piP+MEgQbVKaqTd0gY3ORcRvMncBfvYVNpOQk5R1cLBEJX
Vzz01Kgk4WxStU5DAIFBQaL58dXCPj90U/yDCExvNioLqSdBtW4hsDmYQE5U
hH1cm7CfS+qvYeHCPZrbNrSMkMCM3XPaIUKYN2JQkjhOwkSlOFfvAoEKXeEJ
R6ZIOKftI98ZSeCO91YGsiQJKQIg9S8SuPHr85cd/5LQEd1fMBhL4M4rWeam
ihSkPksaLY0jUP+g3Zo7yhS4T9uqxsUL83XvpUmpUEDtfRRrlkDghsGMN+u0
KJBTifBOuk6g8qUg+GZIQZe98X2vGwTG/TEe3WtCQcaFid4tyQQuE73t1mVG
gcH43p3TKQQGWjz5R4lDwe4nTL2tdwh8r3hUZMaBAsXRj270VAJbjrndL3Wm
oE/p6i1SaI1Wl5O5hynwDvu6Ii2NwO9tjzdreFFgVJRtGZBOIGQYbi70pWBx
+OC5HRkENkT6DIQFUHBle93YP/cI/PXR/gqZCAr2/XVOrSVTuN/SENeZixQo
F7KduFwCbxzwktwdT8HA4EBc8H0CRylNif0pFOQo3Ki3zyKw6EHgd4MMCs7a
bhfZ8IDAgM5OP0seBZtDfhr/K3TLplXmxFMKxPKLfN5nEzi05pVb2SsKGvo9
s3JyCKyaMMyfnaTgf+5bdDY=
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
CwoIWvyyqWieS8P/AHBqb9g=
          "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{7.142857142857143, 16.666666666666668`}, {0., 
        1.3078467220318406`}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {7.142857142857159, 0}, "ImageSize" -> {360, 360}, 
       "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{7.142857142857159, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{7.142857142857143, 16.666666666666668`}, {0., 
   1.3078467220318406`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.899180893300766*^9, 3.8991809080129547`*^9}, {
   3.899181661116849*^9, 3.899181680862946*^9}, {3.8991817217276983`*^9, 
   3.89918173906439*^9}, 3.899181950506143*^9, {3.8991847295870743`*^9, 
   3.899184751301589*^9}, 3.899184797237405*^9, 3.899185698069202*^9, 
   3.8991902063195047`*^9, 3.899202041808465*^9, 3.899204797330976*^9, 
   3.8992679432174063`*^9, 3.899353179665619*^9, 3.899366307241209*^9, 
   3.8993690126356707`*^9, 3.899386149287965*^9, 3.899432963164706*^9, 
   3.899439906469843*^9, 3.900136607697123*^9, 3.90013682137989*^9, 
   3.900137035253376*^9, 3.9001378969123707`*^9, 3.900138051218939*^9, 
   3.900139148100889*^9, 3.907041595086226*^9, 3.907043178353705*^9, 
   3.9074011712430468`*^9, 3.907647083452433*^9},
 CellLabel->
  "Out[289]=",ExpressionUUID->"80335e5f-a66f-4d38-b484-3362102af748"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQvS5nrqHnJBkHBgZhpknOGnZrTC49dZsK4jvIFv4y
2bfqD9sslxkgfoNWaoT9vhVHrP2cZoP4B640vnXat7SngMlhHlg+JVPafN+i
kKXbbBeC+Ayp2/zs9i2QuZVlvQTMP7pwkdO+eU/45C2Xg/mnT/u47puzxvmy
2Sqw/oe7Nrnvm1VS0W6yFizf2PvMc98Mm7XWRhvA8jcen3HdN43l0Xv9zWD+
7hxWj31Tzogt0d0GVn8hW8Jr36Qp3hHaO8HyH45x+uybENPAo7kHLL9MQ8Nv
X5/K1gNq+8F8c5Mn/vu637wsUTkE9u+Xq0cD9nVskdNUOgqW3xCo67evrSb4
rvwJsPxkX56AfS0uHRNlT4PNN0u+GbDP+cfyr71nZRyev+LPe1QZuA8AaxaE
qQ==
          "]], LineBox[CompressedData["
1:eJws13dcDl4XAPC2lvaeT3vX057PbWpJUkkSDaEIFZJZsiraSRRCihShktSR
rKxKqCSJkoSEVCJe7z2/v3y+n3Pvueece5/niUr4et8VHGxsbOM8bGz//7dh
bl/OwiFFh/cjwuveblkAnZInF73+538hXcVCD7h/8c8GxRHq5nRuD2jwCM5a
8pn6dsMid7g4cK3iyBi1i9dZNzi1Q/p+13fq8ooJd8iX3vROcpJav8XdHVIv
dbD7T1PbjVxxg+1zmUo5M5hfgNsNYt6l27SzKf3fteZz3WF54scAIS7q4uPH
3CBA1mOD1yzqo3dHXcHjSmlmGj/12fQgV7Cbx1XRMpv6+GiSGzDfh7XwiFLb
XP7gCmq7bgy6SFD3O7JcQUpekX23NLWm7Lk5wF+zVfGmHPUU+11XmPHutv6r
SG01JOsKY8PmASwV6onYvXNAEthjXNSp5Zx2zAGb3Mepc7Wo7e5tnAMhkUdO
++pS88cmz4E9rBWNiw2okwMS5sA5MeOuUCa1xM+1c6D1/e+xVabU1QVb5sB4
Qwv/egvqiov/4rI5eerx1tRjOWedgawKJTvsqKWSjjlDhJ1+4B576rymMmdI
FZ2KPeBEHb6x0BkuDN06kDOHuts3wxmeXs88c8Sd+s9UvjNMZS25UTyXuvVn
ijMortR6UeZNrau21RmcbL9/u7CA2kl6jTOsErkhWOtP/cww1hkOvkvTbFyE
82gMdYZL9QEOt4Nwf26ZI3RmqgY9XEqdEFXpCL8iRjd0hOL9vC5yBIZNffqL
5Xi+4kFHcBXeV9a/kjpFO8sR1gwuuPk+irqFfacj5KVXZTKSqZtq+glYmejd
5xygjiytZ0L7xtMXfr2j5jr6hgmRV+Xzvg9TZ4XNMga26dwtHz/iPEZ5jOGI
nWDIwCg18122Ppgk7nF5+RXn/SlTHx7c/K3zdBzPv9KlD+Fcm4QfTuL7ZCoY
wLTr5/HmaXxf6pIGkJO6oqd+BuvpLdcC3UevblxmU6b9PD6lBc1CAWfKOanr
Sga0IGhBa9opHuriS11a8C3XNeYoH3Voprg2pHXCwhxB6qncSlVQlbW0TROm
zjp7QhWuL7nISBaj5n3erQpkr2kCmxN107Hc6cY53bZaM8XUPluNDEjHp96N
5iXU7keWGZFQ9p3Na8uoEwzvMcmopLJIaTn12dk/DMl23aalfZXU3UWHmITf
Puy81CXqooBKY3LYj+OndzV1r+cdE6Ieedp1/1VqEbUZU3J5u0vejXpqbd58
E+KQ/e7NZCOu57pkSlrP7DNi3sT1jPtmJLhea0fkberBh2wW5ENry4Pie9RW
QjKWJH4gSubFA2p1lavmhGuKf6VoK3XEhg4LkiNYccXjCXUwL78VYajMY09+
Rm22TMWaXDAf9a7vwvmX37Ektp6ZRd96sL/SV1akZRlzRLePeviIjA0J2PDE
cvkb6mo5pi1Jv7NwncsotR2fC4vI9Uxc3/6VWmH7EkLOjh7mqxnH+7seZ08s
OK0XfZ6k9ndwIuS2dE+Jxi/qyC/B9mTG7OJaTi4Gzc/W4EBcbiTmneCmjpnv
4UjSPHyu286irpd87kiePGW87eKlfmse40Rkln3l3chPXRf42JGEDN80EhGk
fua/2ImUxuUEVMzG9UeGnMjn3+E73IWph0/vciZm+01LBkWoW/fPdiHbRLke
JolR75Re60yaC599VZCgFhT66Ux4Nc/IXJOk7ow/5ELmV22yXyhNbRamMoes
fnG1544idcliS1dyaXkKe7gyrie3XMnU50DtPwzqqmwtV0ISdOYfVaXOSG52
JXs5pjdZqFOrX5vvRor17ETLdKlNvkW6k64dTW4pltTNm0s8Sa2G+2dea+qE
FXc8Sf7jtpxUG+p9iRJeJH7TIit+O+oLeuZeJEDx9as0FvVtywAvYnFn5W4B
e2rDN3u9iNTaUe2DDtRjD894kQmJ+FZBJ5zH7ntepLNhZkO6M+a7NOlFaiP2
ygrNwXoiLbxJvuDsGxmuWM/sZBeIr86LEHbH+zu+zwUWBivwZ3lQV3SkuYAZ
V8lFkbnUgflJLiBRobcw24v6eP4eFxj3uzIt6k3dm5DqAs9+2RTnzKeeaNjp
AtWnm+eIL6AWOhXpDHlzPT/m+uJ9zix1ho3fn2RJ+FOPh4c5g1/hYotDC6mH
YiKcwcT5zUvJRTh/m8XOIPYxcld+IPXqoSXO8C1nTFM6iFpusY8zdNgkPDq8
hLog0M4JLr/9GyuzFOet6uAEOWn7pY8so+ZJMXOCOBPhRtlQ6vB2CydY0JMf
fjSMOvqmlRMwk5V45ZdT9x/RdwIR3dLKwghqTwNDJxh7YuCnsJI66ZKKE7Rv
qZkqWoXv7ZqwI1SpsI4rRlHHK4o6Qtb9287HV+M8+7kdISbW64NSNPV2iVmO
MF/2WcaJtfgex//Z8OYSM8Z66tK30w4gFDXwojiG2n3VLwcYFVmTqBJHzcE9
6gCtdd/UT23A++NtsIdHk0YLyhLx8/HAmwUtm8rPXTpMzZQLtIJT+1x3+x6h
zkqKtYQdh98Gfz9KnbdquxUEnt1pkVdErX3qkCWYXJMTMT+O9YtdtADBB7Uf
np9Ajz6zhPc9vrfiT+I8tEYtoPnjaJH0aeqGtBFzKPqdFl9Xgp8/Qy5ziJ+t
5bO4lJrtgJYFLFC6pTNdRi3C5mgO+kYhnIXnqIMtHMyAx+FXr+156t+Zi0yh
3+dwbW8F9rMqwQyuh5lm7bhAbSeZYwr5cW1RSlXURWPnTSBm9xrnG5eoW8Kq
TMEzb5Zi6BX8Pjt7zwQ0zpyeYKvB+IE3/36Pa+3bT9ZSbyz+xYSeuy/POdXh
579ixhhc+L1E7gK1fvhyJshk67969JB6yv+jDqyquCAy/Bfn4Rsy1vj7O8Nn
F7sK7bfhREdjlm1uphwn2vBBL0t9N3fbFS7qpFMfv7HqHmwWmseD8aTeQywv
sZF5Q7PQbmrDrP7FwemJfOgjDyZZG0+2PpIRQLf/YSO8HxwELwtiPuceHlLE
vDJ3rhBaukaQMBM0DgwKo2P3cpLbNw4/2CGK5l7BRwJn8fNLi1M3NfsJk0/e
2z2qJKj7OQrESFL+aIqHFDXj0V5JItEX2vJWmtrBcaMMOavxdNZ2WerQ8A/i
ZPj45B9hUxV8b2yaZPtQFDlnhuv/JGgREcPeHU4WmP/omDYp2eTd+NKSOsY4
UpdYNTb93miN8SOv9cgjLlM7IVvMl7HIgIR6ndlWZkddJaajR8Zzpa87EOr2
P8X6JOVl6vQLe+riZhlDoqD223qDI8ZnsoxI1ep1WwSdqQOX7GMSl8v9dWdc
8PwDA4ak+6fvFHGldk+TYpJoxzuW3W7UBSkdTMKWark51gPzL8swJnnt52r5
51IzrT1NiLaMwsRpL6zXj8eUNIRkmLO8qXlLxo2JTxnbps751JGlVSZkcDSu
ev0C7OdstClJsHj3ndcPzxPWMyOCOxeZnvLH+/k8ZEaK79yPsw3A+ZScMidm
s+0uP1uE99mea0Za/C98XbuYuu6LlTkJLmIYz1pCbTU4bk7GBnJiioOpRV5X
WZA9etxV1suwXtm1lkRmw+YvHSHo2lALUlH/wTA6jNqnU8GSOHAEr+NeTj0m
+dKSPPNorTweQS0Tf9iKRGU7fLZcif1s9LMm+RNR52tWUae0rbImzUtyo0yj
qFuSt1qTL00NWpdW4/tZmGlNFDSH3hlGo6+UWBOPA8IlFWvxvmx22pL4Matw
3fVYn0a2LTm9MJxxNgb7gVJb0l5/oE8jDuvRa7AlM8o1Rac34P1adtgS3b19
QSqbqLWNhm3JopFZsifiqYfZgUX2zDfuUkig7nZ/xiKXqoMOHd2C+RNGWKRP
do+fzDbM/1eaEIHEStH87dRTsfqEWA12tonvxPvzcCZkhQdbRnYitf+0oAPJ
uaDjJbwLP08rZRzIDXE//vRkvB8pdQfyKWF7C/8e6j2Vhg5Etu/MvpS91IPp
Ng7E1bnNhWc/de9qVwey4ewUx54UrP8p05EUz1a9yZ5GHdFt50gex81NTDxA
LXjXzZFMd21kzRzE++DwdyRarOO/tmagTUIdif+pe9emMvHzEh/tSHbN+ro5
Ppt63GahE7kQLWcxnoP594c5kZdPnMdj8/D9Sa1zIryWay9/OYTzOLLViZgX
5cesPYz71+Y4kXD2JsOPBVjv4hEnyFz54VPkUZz3YjEnaHgodn6oEOcVLuUE
H5h2URHHqBPi5ZxAKn+F1tvj+P59lJ3A+VfGu5BitKGaE8SE1p1+dRLn81XT
CY7deRO25DT2lznfER7oCjBelGB+Pz9HmMw06wsoxfy9ixxB/cfSomdl2M/q
JY7Qncp56GEl3vfdTAfg/qLv53ERPw/cuQ5g4h8geq8K70cn3wFCriW2uVym
lhA64gAHlc6lN1+hPmsVZw/XdnfMdajB+XAn2MPQ8C8+qMXv8z877EHcW6PF
tg7nsXy3PThc8d537Rp+XgZS7GGtTIKL5XX8frLMsoejO05y1DTg53HjOxbc
e/ugyQTw+6VphAXjbuM7q27geUVfWKBSqcgyvInfD2kTLPAWc/t1vhn7Yf1i
wdbNMdd0bv/3e/GXBWW9RzaX3cHzgwPsoLW8K2rOPXyvBj4smEiQDB5owf1n
iuxAyc3Pe9cD7Mfzgy24SmY7KD/C9/7d3BYG56XwHe7Az8dTLRtQvRFfuO81
9lP6wxKOnfS7seIn3ueOVaaQu3L2LHUD1f+76tJGdfD35UgoNaR2YFirgwSZ
HNZmUrNlPGHAc51Pi88bUxeLHWVAvuSbBwam1EnLlzEggL3TtsqMmsGuygDp
zw8qTCyomw4+VIbu7huKNZZo1yBlKLhdnWFpTd0v+0YJjqsGS82dg/klHknA
2b5yjbileD7b75ONkQ9O5I8vQzN2X2Xp1ObN2hz6n2UfskZOpib8DEM/qn/O
Kk/f+WHbcrTr6CvWmi0bgv5EoMWlBlj6KyIfJq1E73d8z/rks9SOMxLto8pJ
Ku18K/dGYb0ndLnIOm03Jd41aEdTbmIoYZeZFo32Z/GQL3+ZbLPX4fzyrWeR
qo8asZnr0ZJzeElMl9xb0Vicl6o/HzG+JeyXF4fnnQrjJ98ucN2W2ogOjBEg
l4/+NDuyCeepEyRB4vaNnpHfjHHPNxLENG5A6ngCdeiXSElS7fF46tQ29M84
KbLJvDlKYwee9/CXFLFQudpTthPrtd4rTSYEK+bqJmFcXliGXJ0qbqjYhfXa
HpEhCYOHDIx2Y/ysmTKxak87fmkPnn/ihjL5eT1R2GwfrpfQYJD6so1Jtfsx
/67VDLI1N+qrVSp11qEKBrFNXBZ+PY26PfUbg/xe7feUdRB9xkqFNAS4uzSl
U48VJKoQiy3i8raZ1D67U9RJVWHf15os7E89XZ3owrkWZg6+n4IcdXKmf+OJ
87nUMZPR6iRj9cnp/CO4f06IFuFNj34iWkjN1FqpRZIvWp49WITnX4/WIr+f
cCTOOo7nu87VJfHjjxcmn8Dz4nx1yZjUEf2ZYvTKxbpktXUEZ8Ip6uKKpbpk
cIlRz7fTOC99oktCdk5XrT2D81jvakB6iu/sHy7F9TGeBsT/Vtay5WfRH/QM
SOu7JeZ953C9i5kBcefVElx8nlrE2tqANOt+e/u0gjpwSplJ7OY1XvO+gPEn
IkxSuz4l6/5F6oJr4kzCzPFb5XKJWiZchknKq5XIjcuYn42fSdS7PkjYVOP5
KWnG5PjP6o/VNTiv3ExjIquQ1Gx0lTohOc+YcJRWKMo3Umu7CpuS7S2bxw8B
zi+U3ZRMjDg9FGminnKcZUpiZgudOnCTunv5PjMyYvQigecW3s/3BDMS4Vsy
f9dtnHfVTjPSt3G95u871IxHyWYk8LDNTPw9rFcy1Yw8vcb97GsL3p/khDnx
7m0vj36A7+/EtDlp+VO46/1DfA9P2SyIk8qqwPDHGI+eZUEanE2MXrVSu/+c
MicWK2e4A9vxPqsTLElVSktvxxOcr1WiJdE9n3tl3lOcz+8YS1LyeFlayzPq
FtF/65XGdMKcO6nP8vxbXyD270u2C+M2v62ImHmTkPULal7lMSuSvujAuys9
2M/uSSvCuzWgwbD3v/0zViS5SCX33CtcX/bVivyGT1Hqr6mrStfbkPg3Vx1O
9GN9OZtsyBjnbmm5txjX2mFDVmt6j+YNYH9vY23IoLvsHeF31JGOCTZk2ZrB
wrQhaqt9P2xJd/rFOO5hvO/zM7bEt2qrR9IHara/Y7bkUcccxq8R7H/NT1vi
9kNkctMnanWBhY7QkDTGLjpKXXRUwhGYgu2CFV/wfVx/4ABnDl+UdvuK9+mf
5gByapmqb79RDyY7OEDmhXUGO8apP9lVOQCXjbeVzATmb1vvAFvuGDhfmaSO
/q7x7//rPrO9vX/iexN+aA/Lez8FfpimltlkaQ/dqx4t3/Ob+raShAPM+35+
nfIffH+JefbQvPPAlvq/+P5Oi9uDJf+aPQvZ1eg8/yQSqDjkmTnGQV2w+tO/
33MV3aMHuKhFjHsJ5FfwndHkoU7a7k5gcDmHX5cyNfP3K2vY1fH9gpUfdcyF
SSZMSh6XkL9CzXa6baKRTdujo74abXdxpJHXZjwzqBbzjc+fahT1OjFv+irG
j1Z+bpRb5ilw9Bq6SvFJo13pBLtsE/rroU+sJIv5X6QeUzcV1vERvkVsD8Te
Uzv49ikTsajz+y8P4/qhbwpEblvAHN8RPE8iT5mopbNzfvuI8dopBtE/UdGU
/Zk69KiHKjG7tGin8RfM5/CcQVi3OOyejOF59zRUievzyp8x36j7PfzViPf7
wKsi45g/iVOVBPzk3FT1A+cX8i8eInDRxGcS83HtVieRikFjX6ZwXsynGiTG
iPtC5jQ141iYOsnZfKlEiF2dntfWpEmOpgaHX+Cg7t8jqk1OF85ieHNRM7/Z
65CKysuvPnNjfG2WLqm+sbQwfRZ1loWKDumcxZ8jKETNprhbj8gXhCfyy+P+
XeZM0tc/cOqUAnVLVhWTFOusuGujRB3DoWtMwuOGPnQoU8uwnzEm6tdXzV6j
gvmfMk3IEOcHJqca7vcONSZnvVb7F6pTj616aUxWH/q42VSTOmVPgAnR74su
fKiF50e+NSGjmqOwXAfzxS41JVXr17/9pUt9VqXLlMTVjXHn6VPX1f/7fjVj
j9PRN8R8H5L/ff96fPe6bYT1PhMyI3U5G2OCjamnvvz7/tz68kfuuAm1Aw+3
ObFT33z1oBk1r1ySOfkTPdWjboHxA81mpKlmy58GS+phGztzkvxnWmWhNXVg
1FVz4uK2fc5nG+ruPBMLwpM1E7nXjro4GixIS/fOg4qEOnSi2h7SVNiqauyp
i/zd/30+V+96Os8R++cTcwCRKxyT75wwX8pVe+j4tVtupwvmG7S1hzwXbiLl
ivki2wgEpO8Lu+CG8/4cTkCmc9ZeVw9qRh3LHnqUUs/2eVJbJTURKFrF/yje
C+sf8SOwrOrAFyFv7C/wPQsYPwXFy+ZjvG0rC946ZljYL8DzLP7aQUmacFCX
L97/t24WrHyatWO9vzp+nqJZoK0gdnJWADru3/qRiNzbJxZh/R05dlBRKTFs
uRj7rZS0g/UThwTag9CC52zBxF7aKDKYWuT2LjsY31/gy7YM32uhlB3UtsvG
F4RgfSuO2EKCbOERZhjWc13fFmzCFRpbwnG9dJMN/C4/1h8age9hlZ8NwHcl
rp8rcL75craQZFeslb2K2qen0gac9qrM1YnC+3/nYANcrafW3VyNn6ea59Zw
V0o9Z3E0vmf2KGtICTlT83Utnv/0oxV4ntV8kboe55nQbA2CX8t+q8RifxUL
raHVWodRH4fzfDtsBdnJ5c6+G/E9X11jBf4P9VaNbML+Pv6xBCmJyrTkzdTt
V3ItoTvY8ILcFmrtBVFWcPTMxSeXt2J/kp8sIXiU+cNzO35fOCZagpLlZZmB
Hfj5sRGzhP5EU7ttiRgPO2MBp1qqQ8R3YX+HrSxgxvAze1YydeQJEwsIPKRR
IrgH57HC1gKu/FrqmroX78fC3AKEwvOHuffj/kMsC4hqaU1LTsH+/LnN4bbh
LIO/qXj/Yn/NQPmQfdu2A1hv9ixz2Pprc+zUQZzPVlFzeB5WJb4pA+fryWcO
zJbhmq+ZeF+/xMzhgKFK4LpsfF/OL01hKG/x9EgOfn7rn5mC46/solV5+N5P
95pCUdgDMngI7yPiX3zqHseb0MPYz8tXpuBnaLv7VQH6cKkJcOXdLC2rwu8f
NXlDCJn+6a5+GefF1DeE+lCTj8VXqKvGZA1B8t7qdMUa9GFdQ4gxOG10tBbv
q0DaEB7mvnwiVYf1smkbgua0+Mbca/jeXBr1YFeol5TIdZxnVrke9N7dU3ew
AecZUK8HlgaNQXyA9UXe04Oc3B+/997Aecpf1YPPPw1OcNzE+oLm6YB76ErH
xGacp+lSHTh99/jAr1voJR468Ee/a2/CHfx89AbqwOJcYe0fd7Ee1hwdqP7p
9iC2BeuJX6ADwqFJ0aP38ftE+6MmrL5bJ7TmIZ6/oksT7uh/rXr/CPsLGdIE
Rq6OX0Qr3q/6N03Y9jPsR38bzud1vyZ0hhw9vPQJrs9LUAfjux3WPR04L+Z+
dTioL9Ab8AzXN8Spw/sc551Pn2P/kjvVwennNoZPF/a7LFodjoVUNz/qxnpf
xqvD1J1PER492M9XMVXw09eYdfclxtX+qMCFnKXnnF7hfD8IqAL/z0Nzb/Th
exWUUoUVIa2fbftxPtc5VaHeUP529xs8bzO7Coj8WXV00wA65K8yrHxcHSP2
Ducj8UsRGorY3S4OYX8mcxkgFu2t6DWM53VnK0GkbeH34Q//9Z+uAMA/fH/v
R9zvnCoHEj1mxaqf8fy7B2Rg9bld8TdGsf8odXloSmj1Ch7D9RPKsiDlLq/2
8yvmOyIvDWukI38e+o7rQ6Ulodm/0JdvGvPNLxMFGfVh7dJfGJ/vKgzrvpv9
dZrBfnjixeB2867nr/9gfI+pCMjmtJ7fzqZB929dJggxbezcYzzUTSKbuEHJ
M/Jqpzh1UizvWONG2Zr0DZK4Pu3V68YHw+wRItLoJpNLLEadt02lDPqS/VvW
pv2FIp5y6GKRpsYHAcNDQ/LocLtuFkPTvHG3IjrJ/hMr/seuXIYyOlZnkvXo
dmtUIwN95dN7lmqevEOQKnqIZ5yVsDxSalIN6yuV/s1qNan5lKuB5pTgIGoc
HLeYWrg+W3SalfDE+8hjbexvgyg7aS0uXL9al9qBKcNN1GOG58zSRy9n8JGt
9uYKJQboDwqzSbtQ8jcHI9x/XYqXaPa1trxiYn5bZUGyvVL+xFYT6v4BMRHy
ZHvkJmkz6uLXUmJEu76wNc0G1+8pkiRdZhy7Yt0wf9dlBXJXhafzmzvut/mp
QKqF+PU2euJ5djaK5PSv2Uk/5uL+i6BIcoZFn8fPw/hdbiWS9FxSd8qbWqQ1
SYWsb5ZN3OKD8xC7pUKWXVR8Nr2AOrRnQIV4FanobPfD84tnqZJmTscn+0Kw
3sXPNMilMRdN3jCMD01pkOJX7ttSw6ljfKw1ScYDr3b+CMwnukyT7Ljqo3Fw
BZ6nmqRJokv8t85eRe3TqKBDgrID2zIiqceyHHWIx85gdZHV1FVXl+sQqzWh
W7LXYD6vMh1yoSNRpWgzzuPzEgNy7MbueMUt1O3axQbkYMX+h8e3UjM9bxmQ
rUcOMBjbqRlLPxiQqH2Zm07uwHzSeoYkcEPuA9VEal57PyZxDT2sXJKE9YxE
MIn5vMKNGslYr9l+JlG3OXG/dDfOW/8ok4hrnVbS3kudwFnBJBwSZRvO7cPz
NrYyyRjb+RbdFMwX0c8krz9fUKxIxfNbvzNJa8/lOIMD6MPEhDTcq7134SB1
5NQCE3K+ul6BmYHmjjAhR09C7KVM7K94nwlJzWi+a5JNLRM3QSBh21356hw8
b/MogZWRD2LM86infjwnsHBh653aQ9QtA48JuDh1yFkdxvprC1lgYtS5/loB
zuPQnn//H1TouW1zlHpYfBsLRPj6ZBsK8X29i2PBnx9v1rGOUXdbBbHg89t3
t+A41nvQhwW9bR9kHIrxfkzdWfCg4fPamyfRYUYsuHbua7PTaXyfDn9t4Wz+
D+nbJXhewg9byN/9M3pOKd43d58t7I2ZuXm3DOOaz2xh3V3JuZHnqLWb59pC
oILhM77zGHcesQXHONel5yuo3dvDbEG3ZdmQ1wWc96mHNiChtHn96EXqrPEo
W5jZkDmVeQnn6/PGBobul+0yvoL9fA+0gXblJv6n1bg+vN0a6jd1526sxflK
h9jA6YdjClJ1+H6h0xoOqvCVXr1GbZU73xriN6sYLb6Onxf7e1YQ+ti6broB
729fhDV4qPk6FgG+N8NeKzDZsvoBqwk/b00uVqDQluz3+ibW0/3GCng0CnuT
buF79FlsBV+2Xlmhegfztbf/+/ux/eHorbvY77SHJTRrDm5e0fLf/IcsIXLn
nKKPrTj/op5/f+8Z8L6bfImf1+UdZvBmRIxXR0STep+PHhSL194qiadm27Pq
Fau3cYmxWgLav+Q1SyaS/cTJLWixln6Wv1iZIGMbevfHN6ysBq+tx7ejnw2+
ZT1a+e29wk7M35T8i8UrWrCwMBH96+8vlst11i3ZXei4nN+spBUDzIJk3D8g
MsNqEE49LrUHfT5rhjV1zVDw0F5cf0rjD8ss4tkW8f1o0bI/rBihre+zU6gd
tAN5SUWd8kKRNHRuAS8ZDr/TnHEA1xsN8hL12WuYs9PRYRp8JOSqyPEDGeiE
WD5yNKxWgD8Lz396hY90CgRvScmm7q/xFyVitezveXKpQxW3iRLv0DL/vXnU
xd5FoiSNf14zZz6u/94sSu5WfzNKPkzd1DAoSjhCCo6xHcF4l4AYIXxEIPEo
7u/aK0W2XhlImCnEevgrpUjt0tShbcdwvVCbFPk2y8h/+jieXz4hRQwvP7uZ
UIxxFVlpsjp4q9HkSTzvlq00KeVhHNt0GvMXX5Mnb6vu8I+X4HpWrzxRWrIm
Ia4U5+XOpUCCuEWHxsow/1YtBZJ/sdZv/TnMNzlfgXQsDr75uRzns3yDAhHi
4jCKrsD8rzYziOeFsqKRSoznpTLIvsB5/FEXqRlbChlkpqLg3YrLuJ6nmUGs
FhG/wSvUYx2dDLKRfbApvAbrE/jAIFXnUw3f1OJ6Z0018mmhUVFIHTUzz0qN
aLM95+u7Rl21fZ4aiSjfujn4OtY7HaJGiv0Z73oaqGMS49RI7587vosBXb1f
jcicW9PUdYM669JNDeLvJ2oYcJNaZLBTg2TN1BY+a8Z5HP6gQR6VBfP53ab2
EfurQXh9OTY/uYP1TotqEpffZYPz76ErtTRJUuk839aW/95TqDZp8Pl+w+sB
nvd0gzaZmi4wePgQ51+Qqk3MzpBCj8fY3/0ibRIzf5C3pRXPu3RZm1T8TI13
bcd56t/VJsOnjQZvP8H1eux6RN37+QLnp1hvpoQeCZ3aeuPmMzy/VlePFJ5i
GDh0ov2IHumo6Wnt68J5KTvqE977eTE7XmA9B5T1iH2vt5jCS5zHDKc+if/C
W13fi+e38RiQCo5bCxf3YdyYz5AMSO6YnHyN/Q8JGBE5Hcsj+W/wvPJhA+Jj
99XGfADrjfloSPbPP9/7dJC6YEEuCyB8xc64IerIk9osGN+kzBAdxv2OzSzQ
S31x8+IHjJd4sCC8KHe590fM19duBwUX53F//oRWCLSDtuZZZQdGcX3aVzvg
6bzprjuG9R/fZwd2H7aNtHzF9ycoZAcbfpsfXPWdOsH3kC2UC48Z8PygTllq
aAf9quVtJRPUdUdrbOH6+pwA5Rmct9Q3G4jhWx4hwa/1f/PODraGUgVFnisC
1CkhA1bwyqirbMFs6rHh1VYg4ZztMSZE7X5DyBo8A+Z+zBChjvQ9bAUap03j
+KSps2puW0KPHVfSHzXMd9faAubEnCkcZlG37OU0BYmTUg1r7KmTgkdNYPDJ
/t5RB1z/pssEqjl+/o51oi543mwCe0xXK/5wxvWzThmDf8RLVsIcrCfrgDGo
HfJa9suVWjs53hiaJwxPsHvi+vOexpCjVXxjz1zMJ25mDGGBov2z5lG39ysZ
AzM1me2AN8ZvSBoDW/13hpAPtY8nmzG0j0Q4Zi+g7m4dYcIJ+c4wCT+Mi+ca
wTovt+TD/tQM3UgjIDvqTskFUBefsTECoQs6t44twvPyhY3gVd/RAcZi9Ly3
hlAhLMhVEkTtoHjVELY77FDXCqbu9001BK/YUZfypdQxbssMQeFUyAqDEFz/
0sQQPnW0760KpQ4d4DKE65xOpabheH7tHT1IM7tyt3Y5rtcq0IOgFervrVfg
fE5F68H0XR5th0hqtk9ievBgcrP7rSi8/0PvdeGI9odI1zVYj+U1XYhcHJR6
PxrvOzxdF6zSHp7zWof5fizTBb2Sr1erjlM3rRKUhWoBa6JfjJbilwWyIel2
2Un0CQ5ZuNdzz1PtNM5vhbks+DgJPzlegvm2m8jCi3MBi+RKsZ9IMUkIFz3+
6lAZ1jPiIgkfE94tFz2Hvu8oCRv79UcOlmO+HGtJmHHbGMNbgfPxWCMJ+y5e
n9hdievnLRAFEWnOHX8vYLzfXRSO7PTk3FaFdt8qCqpD2akTl3B9SLwoVMx7
IRx3BeeVulYUzGsY+Z+rcb4S4gIACpEKUbUYX8snAD6H+pJUWtEViX2NL35r
zDrW9p/l+xrDI9amyzxB/07qb/z4sFo8rwN9cV4/a6Pp7yPCz9Cuu/pZM0ed
GQeeowMZfax9HAdKebrQDS/7WCKrO/STu9G+Hq9ZR57IXpl5gR6eP8lStQ6z
3vISfSBxklVRfPbGeC/Ou7FwkmXOOzYnpu+/84cmWLDe8tHH1xi/LjPJcuva
6bvqDfabfZmTtJO73W/f4n2SQE6yuHR2yLJBdFosJ3k7e+G7F+8wX+IuTrJm
U9Gahe8x33JtTjLeO/C1fRjjNi6cZIeLXoLXCObXiRQgPBVxf+59RLcLC5BM
8fo9zp8xf4CuAJHZxi5wYxTdbitATr11z7YZw3zlg/xEzzNLuvYrvgfeFFFS
fanrmPF3jI9niRIiq6xeOY77S1aIkntJK8u1J9BdG0SJz3Als2QS1+vvECUv
5v+oVf6JbguUJOFX7ViF0//Vu0qSfFTac0vqN+5/HiNJNu576JEz89/nx1WS
TAVocRn+xf1XRaTJdq3dcJ9Nm9bn2CND2Kb6ElZwUBf7rpEje1psTNm5qPsb
mDKE90j+5yJuaoend2XJwahvZVazMO54UJ6I2HiHP+PF/RUqiiSXv1whhh/j
jz4qEamX3F0Cgrjfb6sCOXo+LLtsNsb5XJSI0vbGuc7C1E0SPcrklJcsz2sR
jAe0McjljJQv86Sps0L1VYlFyOC5DzLUY1PjqqTeyCFirxzu//xChRC2IiUV
BWo2njP//n/fPtndoIj9Lvz3943rSb/cQGVqkVhfdfIg9uK8cQZ1+3pLDeLt
JMCbpYr9XGVTJ0/EVjXrqVMzX71TJ/4DzdvvaVCHjlVpkO4rSpbLtdBGuZok
eM/Wr3+0MZ/bMi3S7995/qguutpFk0RomKy00Mf+Vs/WIsM/0hkdBtjPzm9a
JPruh561RtiPSaM2Gcufc4jPGOttO6FDNq46Of+MCa5PWPvv7yXLGT5HM5yP
oq8O2c67+HavOeZ/K6dL2F5U70ywpA6cemEHe86JWEtYU/N2b2UB79bo7xdt
qAt0hFlw0LOlcq4ddcupKjsQllePfM/Ceqxd7SDnY6LqbnvquuT3tiDV8LJX
yZE6cvZWOzh60PJwvRPOY5+CHSgtzV0Q4EKdNPuSLRie4LC944n9hMvbwuX1
y36EeuH9fKuyAQuH+ou/51HLrPW1gXoRqdUF86kT+oasgfUmVt1sAfVUxT4b
aLr0uK/Nl9pKSt4GXJJ1jqzxx3pCGqyhxXev36wAah91X2vwUnsz+/Qi6mG3
MWto/27XQhbjPKr2WIP/7YLkniA8z13LGrrzxu3ig7G++utWELzCZ1J0GfXZ
8GVW0G9ecakyBO/D8YsVRPDwRnuE4bySs6xguHO55rtwXD9f0wrWlN3oT4qg
rkq/Zwkphzpk2VfivA9cs4SS3e98d63C+4wtt4SbsVMH2KPw82N4zhL6QgTu
7FqN98ldaAm/5in9YY/G/YkFliBjZ2yZvBbnsz/DAsx1XWI41mM9WUkW4Cuz
6FxyDJ7PvtMCrFJHY/dsx/6eaZnDws3s57l2Umv/VjeHuBUSg3sScX7pUuaQ
4aelyL0LP19yvOZw3tEmYG8y5svlN4MWo3mZ3HvwPhi/TWFQMbRl7168z6Bp
U2AX3MDOsx/nVTZiCkrTe232pWA+h15T4FqjyJmSh+enZpqAymKmHW8+7h9J
MgHi5rwp5TDeb+tOEwgyD7jAewTnIbfJGDarRb1POYrz811pDHmi2xl8Rf85
whiq/mYsTj2Gn0cvf2N4/PlkDt8JfM+zfY1h5GX1w9RizKfmbAyzHtzj4j+F
89U2NQb1uh5W2ml8v+WWTHAs/RzPfwb7va7NhGV5bFVppdQxGTJM2JYs/oH/
LPYbKsWEghhN1QPnMP/8WUyoXma9ROA89q89agRPvLzyDlTg50XngxGM2oQ8
FriAn+e0FwbArxPHc/Ai3qf7NQPQkt5rL3gJ+/OrNgAX7oKEg5fxPr4fMoCw
7+WXBKvRdpsMYOebxpGDNXjeqhgDKGxrV5t9FevrXGAAdY0Dwel12J+OpwE8
Pz9xaHY9rrez1YNvR/ja0q/je+RW1AOhFAVeoUZ8P3aSeqAXb+SYAbg/e0IX
3COctgo1YX1NXboQ4bvwSsZNnH9Hmy7scoj8JHQL62Nd0oXjhts0Mm/j9y3v
aW2o3Xsqx+guziOlRgce997/23YP6/G+oQ2Dpl+jY+7jeZ8HteB3mkyPyEPM
3zKqCRJv7d0uPcL89WzaoGe9qnpBK1ptthY4ZWWofGvD/BpMTQh6X5OR8wS/
/485akEcefXL5Cm+fzlvTUg9xBX19BnWJx+rAcWf9Do3dOL3Xc0Odahz9nOW
6Mb7OpqhAVLFY5OH+rCejG41MJyUXmHRj3Hld6owx9u+o/MNxpm8qhB8ZqX9
5oH/+v+rCht/p1dIv0PXqKtCR6Be2JGPeN6btQzIFF35oGgK7copB6WR6Zas
aXwfq2VkAG5Ul7z6hR6zlINOqV7RnTPYb9tOGRhdy5mo9Bf9O1cKvB4UmxZz
69D7rNMShwiVlmKHWdT9j9eJwraEL7Pf8FI77AoQh5w2qW27+KmLt5wUhXJN
MqwiSJ30YK0w8O5+WXRajLopNIcXGD0c/C4S6Dk3BcHSWHfzoCSuZ33iBe+U
BYN7pKnZRJO5YeXrhAUasuhVleyw06IY7sjhes0ebjiUfk9vpQLmU57NARWD
owU8Shi3tpxpvG0rxVOmjHGtcA7ozWFtcFPBuOz3mcbvHyL636tifjHPiUZ+
x4PzUtTRpvdHG1ULrtRra+L6SxyTjTZferTua2E8SnmscYErx6EoHbTb4beN
kcd0OPj10O4W9Y1J4z7ry/XRDm8GGhckezs5G6KbOB83qop4SfYaoese3GB9
P+YxvNEYfVm8j3Vbz+36bFP0sPMI69A1l4xSs//WizxirXRzCrO3QA/dHmBZ
Prc367ZEq7F9YfEuZ82Ktcb6G/l/sF6M2fTw2WJ805lpVvlOq8pTdnifhjJs
ZJugRZItwfiucxMsr6Omfs/scX/65G+Worax5lpHjF/wZCejNYY/uZ1xf4wI
F2ly1n903AXXn3jFQ7Kf6JywdMX5s07zkfAQrbh2N9zfOYebmH1WnxPlgevl
+HkJ9zZVGY65mE/1BT/p5GV8POqF62XPziZl+Ypg6o3vUdVChCSoy2c/mo/7
t14UIB6XZSJWLMD17V1CRM5ByvKPL77n5x0i5ONjcf7D/ljPOXMx0rBE9JVR
wH/3fUycpH8QqmpZhOfv/CtBlm0W3B22mDq05KkYMeLmD5gOwvUtFhKELXeW
Tm4w5oNjkuQJg/u33jLcb8UtTU5d4Gi7HYLr50TKkA12bKeWhuF6uTZZ4vJg
ZuNEOOZPKJYmkoG/3DIjsD8+Xlky9G5KTnslfr7SVsuRqxsmPjetwn6YHfIk
hX28aXEU7t9ppkgWZ37N/bYaz594pER0Fb+sPBD9X771CuRX+Sdr9XWYb/K5
InlkNSLYuB7XG1grk2N3379eGIvzjPNhkHX+7y6PxuF5QQoqxP7t2737N1K3
dz5WISIx/YGMeOqqqZMM8nbmld61zdRMDz8VcuXAyz8LtmBcepYq2SP74snI
VpzH1TpVElDWWbJ7O+Y7ukeNaJk/26ywE88zW6RKppqfeNYkUouIC6iR+z5t
it67qH3WNqiRo32PxoaScZ6LYtTJmugHtxL3YNzBRoPYTd/Ll9mH/d3/rEFm
p9yJurSfeiz2ljrpk7xl55mK85HdpEEunm4SHkijnhq+YAdJxvB220HquitL
7GDBjes1EhnUMXa/bEF13rWUykxqK4eztvC9p3aJazaeX+pkB7cjqw1f51Dz
rv3y7+9fiaik4DxcX/jNFgpuKHa8OIT9zf5tAxxrOtQWHabW1mWzhWip/Zue
FeD9Ei5b6Lxpe2/BUepu7X/rHdaOybQVUp8lf22gXObMaq9j1JGWnLYgcXtx
w/3jeB/Dgjawc72QkFsxzr9PxAaG5W6F3D6J/VaK24Dv3c2XHE9Tt5wRsIGG
WH3OGyV4/kFhG9BUfONvV4r3E/ZvfVbLodJrZdTDXorWML3Bc8riHHUBB8Ma
IpT/elSXY72TatbA1emxIrUZ838LsIA5zq8LTb/h+/iRbQwbg9WFDi3Wpfcx
Z4MMxGWUiEkvoQ59uEECYprUpY8EUzO+siRg3bcSefll1MUGXBKwRl2DcSyE
umn6sThEBpxRVw7DfNlR4rAyRUPnZDiuNzf99/tWf8ZALQLzbZkRg/BPGiZn
VlA71OeKwfztWgE1sdRJQg/4QLdI9/jzVGq21uiuRu3W8lOLDqB9+Z80arDp
lb04iN4462Gjqsn580sy0M/W32pkROhVvcpEp30bYSnln68OyUZvr/nEUmjR
u/YmB829aZQlN32+cXkenu/TNcaS1tdvfncIfablK4urwWDox0ms91gAF+EY
rRzZfBrjd9u5CBvD8MvPEsx3vJib/Flw4fu2UnSgGA/5tdtwaqYM53VjLw+Z
qrnwO/EcxgO2C5GJ94bsHOcx/+kvQmRc9iL3ngrMXxUmTL7NNeLnuYCOeC5M
xnZcFEq5iPf1yleEfL5oJM5/CeebmSVCRt5clD54Ge+j4IEIGRZnKghVYzzB
RJQMzaliZNVg/Fm0KBnczNQQu4r1bbKSJG/PVenk1WG8KU6SvH7JNJSqx3hp
jyTJd9lfkHUd46YtksS78hWHQCPmH6iRJNxSZmv3AsY7T0uShp1pXX9vYL/a
SrJkw/t+x603Md9pYVmi62NZMd6M+0/MyJA3delS629jvPGjDClQGUz6cAf3
/3khQ+an2Xxcfg/77/FTIDzfsxb2teD8VJ0UCCx5fyPwAeY7yFQgm26zdJ8+
xPe4SUmB+K46/LThCa7XiFQmfO2fWZZPcb6SOsqkycrl7KVn1GO7fFRIwsmj
YvqdmI/XXYUY8X/dXtpFHVNor0KG4tzeM15QV9lbqpDjL48tKOzBenmMVMhC
l/Hrkr2YX+mzKhGs9NTMeoXW0LCDW5Ins/hfUweeN7CDrTsnp/f0U7vrWNiB
yft5K/6+oW6pC7aFD/NL2rYMUHfrrbCF4rpp6/FBzFe01hYCVRaUrBuitjKK
twXhtDKhD+8xf/ZOW7j7bSZh+QfqKasSG9ixxH/g1Qi1zJEKGzC7XT4v8BN1
wtdqG/ikz17X8Zk60qrRBk4fWqQ67wueV3bHBoL+VB68N4bz2vvJGsRWcU06
fqMWeThuDffbgsIavlNncc9YQ5LVpYcWPzBuw20DlidnWVyawP68/31/jvIt
K9abwvluN7WG0rhq/tKf1GdLba1h6Uv+TYxfeP8tztZgszNCiZ9d7/9u19xt
BV+H6lP2cFBb+R2wgrPzRb//4aSOdM6xgtC6VUu3cFMXZ12zBGkVuPedhzom
/aYltKZKmKzjpa7bdd8S9n1bXTTMRx244oklsJbc5FkuQJ0U+8ISxm9Jx74S
pHZ/x2YJ5/XXvVwkRB16j9cSwg/dntMhTM04KWIJsn/kqrxEsb5waUtoXxkr
d0+MelhV2RL2t93b4yhB7fDO1QKIldKX65LUvJXeFjBRvHGxhTS1dvS/7/dK
voe3qmSo2dSWWcCyl+bhc+Womee5LECksphtSB77l68wh+adAieSFLEf6RBz
2OgTz5JXxn73c5uDpuqblzUM7G/goDl0f5+71UcV63ExNYe0O7UyH9Wos172
mIHdYZWrezVwfdQuMxiNPLiQoYX9upiZQbHN5Pd6bZzHoutm4CsYnrNQF+u/
GmYGXH2PmGN6uH4+nxnUXrRsSzOgTmi8aAqRu06t1TDCeoMWmYKc32zBJibO
L37YFB6pJ5QHmVCLDGSawkd7jWwuL+oCqRtM0IlPXBaYiPXxS2rCxhUnt3Ul
UTcJ8GgC+N8qCEjG+honNIDP5V3N890YP/NeA/xNZz3134v1mXRrwAlVnbGn
+9CcIuowIjp3tl8KvidXaXUwZ1+r25GK77F5ljokjWW4LTiA9e2bUoOHr6si
2g+iR4fVQKqtY9f8DJzvri41CIPx462Z1D7t99SgolKqYV42zluVTRUmi6xe
PMrB826OqYDTwaCJuXlYP/sbFehefZzpeRjz1dxUAbWgpnn3CzCf0mUVWOfx
drX7UayPeUoFrllxpdwrpO4vu6QMXNqaZ1yPYf/ROcowX9q9+c5xfF/H45Th
KM/q1y7FaD0/ZRj8ceD3rZN4Hp+pMhi9q5R1Po37V4orw9ZnbRbNJejCvfJw
+9ZXP8dS3L9qhTwIXxGPbSrD+zk/Rx6CTpln2J/D9eoq8nAme9F5KMf1Vuzy
MJa0pYVVgTacLQ+2MYXvGirRxz7Jwb6QRg67i1iPW6g0PPF+rXy9CvMV2EuD
AmFn2VzG9cuVpWGVgVrQtSvo5D9ScFlhzmarGqxHoU8KZgRW5V2txXyf6qTA
/VfKJYs6jN/V//f/85Hy1ppruH+uoDi8evHoo9l1XO/6UQzM/HufGdzD9Rfe
C0Ki85+vFS1o5xJBeGDCENZ/gPtrwwRBUtVJ//xD9FlFQQgVjfDQfYzre3i5
4TzbvpXnWjEud5cLJr6U7dZux3h6Dxc4vL5fXPYEbZ7JBQdaPzZqPkUf9uSC
t+6/SpVf/7f/+ESj9knjKehH19iMNa79ucpj2Vt0feVA4+UFx4/ODKBjFrQ3
Tp179rHoHXrdwaFGYYELTLlPaLaju1l2j0PrJX6iBcsmWckahwWqp9EvFf6w
7u14HOz3G+tJfs9OBDs5L3ybQQupcBNfQ5u/2X/Rg+nsJCpT3EWYR5/u3+cx
i+QvuPuYT5w66fFSUdJ77rfSOQmMB02LERUO0xh3KeqmNzkSZGVQ1M330ugn
elKk4vIJsf2yuH5tlAS5Jb5lERcD4+JzpAlv9MWzp1UwLvpWhnjffvfTSQ3j
dd5yJE9BYe5bdWqHtHQZ0rPRt2iXJq7n0pQjjMcpnxnaWN++ZnmyQuMGadLB
ePASRVK+40dmiB7ms1ojT8ae6735o4/5CmcpEgvDcJPjhrj/1wklsm1fwW4W
k3rs6wVbaOprfdZrTM3kVrcDHktuze2mmH/woS14ZdpuljfH9VNRtpD9Pral
3oLaR5733/9v7M/KBllRV/3dZgsKBX2rf1pTMxTkbCF8TKKhwBb3KzbbQJn7
3NlWLKxPMfTf3wPFu5Z1EYy3P7UBk59XL8Y7UIt8i7WBhAWjbFJO1KETcjYA
59R9a5ypi+Xq/v3/hGPJaf85uP+0vg14BGWPf3fF/UfuW4N2+87bm92xP1Jr
DTyu0Xm/PKhjOk9Zw7vriyMS51Jnzcu0htvGbmac86jbX2+zhlNlZlz7vfG8
ef9+73cpqj7j96HuL0n99/ufK1ySsQDrs4i3AsI3s0HMD8+7EWYFCokjzvn+
mE/T2wp+jXeJywVg/KyNFfSsvjNwbBHGmVpWUNd/+YrKYpzvOXEryA8o3n0m
CO9j6q8lbHqU7qcTjPXHfbIEf6dtapVLsf6+bkswqYv8zgzBfLu+/Pu9Ngy4
VR2K9/HzpQV8Oe2caxWO+Vfcs4BWWePlDcsxfuGKBVRkKpk6rMD5fSy3gDRu
Qc7bK7Ffz8MWELXtZ4dbJJ6/b7cFaK56Fjd/Da7XD7YArlc3nZ5GY3ypuwUM
+F4UW7QO398ZMwtobil627Me67vnaQ7FJO3ystj/+rMwh53Vm5PfxmE+BzVz
WKq7wnflRjw/Tdgc7Ip9VUc24X3c/2UGclIO39ZuRve/N4NPT0a/vC/D/hbw
MuHb5IvQHzwG9Pzi87Kwd/blB9m86K1LZUBGLc3MkB/dOywF5Vbhxx8IULO9
7ZcBlrcN76rZGC/JkYb25WJxnMIYn1KUgvAtIy9PiFA3NT2VgB8ZzXPsxKgd
zgeJQ0rJ0Yvd4rh+u68kyNfHyW6SRHe+EocLbZ67RaXRlZli4PhO9XOlDJ4n
Iy8Kz6anAzzlMH+iqDisEnnaNCSP69uLRGFa47zubkU8r9hbBA7a7s5TVsY4
o3o2KC9Y8uc6A/1LWQAurzSNDFRFW3AKg8t2gY5xNfQXWUHoyh6wzdbA81fs
5YPVZdfPGGihU/N4oHZGft4JA1xfLcwBXuW9hck2aK/z3xpf36jmVrZD1+d+
aIx7fnD9dRbaf3dfI9fHiBeL7NGl+z83HmZjOY87oPtFBhp1pSQrs5zQZ2se
NzbofZYycEGzaV1lzXe8k3R/DrouobPxbcCxkRVu6CavY42bojf5c3igh7c9
Z/Emz4PjnugMo3eswsMa2rZeaGbUGMuwcia7a95/9+H2hnWz+fmvDfPRRfyf
Wf7dlStEFvw3n6rvrKHPe9sqfNFaPVOsLZzLrD380QPlf1iCshan3y1En56a
YB03FJqdvAjt/eA3y9hlKF5pMc5zdJqN3F4M/fVBGJ/3kZOIVCml6IehT2zl
JaXBrzuF1+H9Bp4VIR2Z625krcf3ED8qQv40z5SJxv5332aiRHfiYFZOHMZF
vETJQh2FLeIbMT54X4IkBZ8Py9uE8fp3EqQi08ZTcjPWs1lPknBNBMpLb/1v
fumShKkzzFmwDc+PeyZJgoM3f5LZgfGyMUmSksnz/MhO3H/LQopcaT7UKJeE
+S9fkSV9P9RLC3ehx9tkCb9OdYbCbuoq/xO2YBHsvPnYHmrGpsJ/vxeZHSFK
+zDukG4LGc1h7if2Y1wg0Rbqf4wxGalouX+/N0PaSbIn06hDX0TbgmiwMIfq
Qeqx+4U2YJd5fORUOta7Kt0GIpsNnqplUotoJNpA3o+G6yVZ2N/cbTbQpO1V
opGD57+ItgGl5jvD+sfR43OtwfOH/5PKE9Tt39ysIV578JrhSTx/v/W/34sl
G05dPIXzuBJpBY8zOA4wS7AetyArmLqZveHSGWrmi7lWoP6DEWxShi51swIf
7SqXK2epswytrWD7EnsDs3I8T9L83+/FeF2sbS3m0xG3hMNaFdMerf99fz02
A7g1X/pjG67/GWMGgyHfTQ8+wf6B3wz4f+f7GDyljrHZagbMApu1rc+w/4WK
ZvCA9/5r35c43x3LTWGsJPr3916cl/2MCUg7isge6sN5bIs2BfLqirlFP653
4zaFiC2LfLveYH3LzpnAnw/vbi8ZxvMMvxiD+r7UN78/oBfmGMNcVYM/xz7+
N98JY4iDdjn7z/heBAuNoSBoo2X/KJ5vbG8MMCHtv2sM918+ZQzvcq7HqH7D
fh+5GoOgUUj6re/oU/1MMHnIUR7xA/tr3c2EwFWld7kn8b40h5mQyOk5UDqF
84k8yITSE5//uk1jPVlGTHhkm63w4Rd1/8Pcf78nXWbWaTM473eWTJDd2L1Q
7y/2n37SCBxEtsc9YjOk+V9/MISVFcqZazmoi6cuGYGFca5atgV1k3KNBkhx
zS7VtcL1XMoaMNG5T/u2NbXD0v3q0HmO7fxSW2rGka9qULt9q8GkHe7vXqIG
+fPHL2YR3P/0jirEq64z0XXA/cE31SDgx/vqW47oCh01sGgJs1zqTN2/I1EV
pApfXptwQa/9oAITaxfaZblSJxX4qUCnQxvouON5N71VoVbcw/GWB5rvqgrk
DzXfCp6L+ccYKhB/zc51wgvrFTrAgICDtS2Z3hivvakMFiHMuTo+aIV8JZAy
KX/cvADrz3BmwASXuk+wH8ZXLFGGzq5jHT/80RlGSlBbLr0wM4CarZtTEfJ3
ZHdpB2I9BV3yEO8jENS8GOsvOqEIAWp7e5cswfilDQpgMfFn2Y9g9KCbPEjd
T3iTsQzzyyrIwUTht+XaoRi/9UUGOtdFD90MQ5s2SUOt41DkkuXotCuykC8R
+nE8Al2yXwbi379Ym7ESnW8iDQH1fmNakVjvFIcUWKQ/jrsZhfFfnRIgFer2
I2gNOvO+FEyY3Nw8Ho3mPCYJndy20+nr0DyxElDbXb1dKwbr9XIUh/zzhn+b
YjF/6SdRiN95dlfQBrRGkwgELFDlGt+I6y9dEgML9aJ96fHorL2iIDUpyaeV
gPmPLRSBifuZB5q24P7xBULQWcQnFLQN/einANSu3531ffv/Wq7zcCjbLgDg
GrswE5Fk32UbywxG87RQKnkjS2Rp4lVRJBW98oVIZakkisoW2otWyZyQrCkl
a3YqWcpSQuFzzZk/f9c59znnvu95npnB85WNJUPKulmJhOMYDzQUg2CpkGSN
CIwfqBcB54HRZSWRGCcdFQL6C7801yju/SgKgPTZfrmJaDS1khcmWZ4Z8TGY
L5krCE3GLcoapzH+xYofngpsy3l5BuNrrpAgpbVWwzUOnbiOB4Lvrr81Ho9e
3fCH7Rz+Uif+LHrw9SKgbzO/r34ePVIzx5ZWf0R9mYj+IjPDnvyt+8glCd2z
+xe7qSaPNn4RnUYZZT+9plQYl4IWYH9hpwSmMdQvo+UEJtjBlkvZkIpuyhtm
O0ufXe1yBS27qo9t+k2wbOwqOuJuAzu/1ezVgXR0WFI9W6vGt3wkA3168B07
qyjt9b4sdMmzt2zZO7UV37LRdjF17KQrfyv35KBjZnqZovF61Z9z0Y4b+5gn
wzxrvG+gB8L6mHP7z9X23ETH1/YxQzxK3uy8jT7u+Zk5ajtW13EH7fLoM9OX
UHnndg9d6fWb2avvUN96H73MYIrpphj9fns+muIyxfxIfvKhsQCdEjnFtOX5
0uDwiHs+96eYFaPSje8fozP8ppmre6ybtj5FW0+TiML3R5vrnqHnybyEYdmt
Fpvn6CR1XuL2w7bW6iJ0fzwvoXp98SfrYvx8WF/nJa4mrWp/zUYnP+clpKL9
OyxfYr7unDBx9nB6Z2kJxvtLhAlBn3ddq8swzqoTJiKceHrYr9DMbmFier1h
r8VrdKelCBFE9+p7XoFWcREhhjSS+k2r0NttKMS/y8o/P6nG52upE4XoEPz1
xbgW++07RSGcp9QHCt5gnJpIId4NOH8zeIvP38wlCrGx9dTgvXeYP5BFIUqr
C4d03mN99oAkwSj6NnzrA+Y7T0gSj27Lftf8iHGHWUlC94rNj9xGfP8mF1hA
blzYqGoz1ptesELYvbGsFnzf73xoAZf2d44rtqEzRxhA8SD/vPYJ38eD/Qw4
Y7vm14oOjimbPzOARBycTO3E77OoBR/Tz/69rJvj0fcL/qnQMJXcw3E9TzsD
/Ml8M5J9OG/MMgZ8mTf5k9jPcf77Be8c9flL/oLzzooxoKU7ZTbhK9a3EmeA
/fvKucXfcP7NZAbUlE7Nnxnk2O70gi0fai8SGuY40HitORRn7yDFjGD/DQum
JcXx8v1ARyz4flQx34lR3G/igo8IWokH/cX52lhmMMA6Y0mZw/5XRc3Avejt
0fvzuH5XoSnUSy69v2WRASef6W0KVv6ufYMkjs9TGkyhsCJd5gwfxzxTx01B
R6nfVlOA4wj2SlNI/0876rUgx9ToJjpINAQUegtznG+93hRidB+PLFrMcb3U
VzrMnJxWyRTFfu0X6BDQRbgQ4hwH5hF06DGLTmgnc0yh36eD44XqstAl2I/i
SoeqIfEpGUmcp4mPDqvWO+o9W8oxKzOfBvnpqV5O0hjf704DtanOSxPLOB6t
rqXBZXu1usTluL+8YBqI3vElUVdwbBcuQ4Nwvgemb+Uw36bcBP7xKxe1VsX8
vzQTGKL9eGpGxXl+kI1h179pO+e90WcmdCFWs9Dzbjn2n10kBXaNsUc1Kzhe
80xECqSjPC5kV2K8VlIK2qnUu/LVGDeVk4LrnaSKyzVo9ZUS4Bff2CX5Bs/r
gqsEUBk3p8/WYdzFSwImv4ZKirzD+G8/CShOttU7WY/zyBySgBOWStY8H9DR
JDJsHBtnHWvA/jskyCCe8Tp08iNaT5UMH7dcvniwCX3JmAxpM373h5vRXzeR
gXWTWbWnFR21Uxg0nCm9vW3ovQHCMMLb98ejHftJHRcGu26xVPJPjDveGGNL
n+1+GPsLPc4eY7dbPHrD/xtdldrMzv528kvEFHrgezPb95ILz99pdHtQC5u6
Xkc25A/arLSFPTk+azz+Fy0q2souzqy39Z9D3/zWwDzxz/U9A/PoYr8Gptpc
UUkBD5XjMMMGppBTju2BRejRsQ/MoTsJbbok9EDhB+ZbUsieQa5TQkeZBa6s
nzd40a7+o8yL+ZsiffjQApYjzBBBY3FVfvRegRHmDk+5K91cP60bZjKf8Gul
C6D/VZhhKon+eOwmiD7IM8Pk9W5Zu1wI3d8/zfzyvPRtE9fMymlmkNQeUt1i
btyaRDjttzsXK8pxxDNzEmH2ylxuoxjGWeokYoWs6i1+cfQbASFiLlCU/orr
lmlBoqfyV1kEGV01JEiUK3RtJShoUrMgcfNIVfsfdERkjSAR96bA9/kSdP9t
MWJ4ey7llATmFzBFiC19l585SqLVQZS4GxDvqbKU41GHLAsQnQnnH0WzpBwt
YP/JQ3fZUhzndwpYQB1lj0OcNMcUp2AL0L+6Y8ZlGcfdT40W/j9r/pOlIYP1
/rfwfv7+cO3Gn+jz6y8zYCtB+1G6nOMSig0D8qu1Us7JYj3Gi4XvAyc5pscK
dFYIAwK7yf0r5bjrVzLg/T7euCk0RajDHIx+TxpWyOO8DefM4cKJwZYkBdx/
iDADxsU6w3cpYtz+hTk4pL7XMFDC/SwPMIfHaq/r/qIj+pTMYWl+4eEaZY4z
bzSYwWGLuysuq3CsJG9rDo0VGWU+qtz8ebOF33dJvsZqHFNzHppBSkcMZZE6
7s/fxwwm94Y+e4vurlc2g+0//T2vanDvK9EMCsN38ftp4nmttjIDmcVOd021
sJ7apCmkmaluDNDhuP7cKVOYeSX9w0IX57NhmILbVpEUYT2OA29N0qG4bXZV
MzpTeLcpyO0e68vRx3lKZUwhbKw/NsgA+0XV0qEjrMVwDRXn23CcDoTQmxYx
Q6z3xJwO6Ukvwz+h13y9SYc5hUcat4w4tst1o8PO23l1wcaY7y1OhxJa2mEr
Ezzf+zU0UCpNWCFBw/r7/keDiC2RZV1opYPDNOhuPux7j473qZJBgzXeeynH
TNGf7GmQ9d3t2UYzXK8iTgNS6FZPaXPcT0OJCXjxW/L3o7vL9WlQdp5+t4CB
/Y/0mICK3EqHcAs8jzvXTODEDfmZLauw/w47E+gzWpIly8T1grwmYAV8GwfQ
JekHTSBn09T3JwR+ftaomQBf41By1GrMD+g2Bh9W1yr7Nfg8iScZQ8XQhz6F
tVj/+npj0AipiB1GR/A9NoYYUpFh0Tru++KAMXxNuNdyyhL3W6psDBuXZ4U7
WeF6649GcDPnoobqeuxfGWMEjdAn2oemih03AlKr0UT2BpxHPNgIDCYiW72s
8T6qFuwu9v6lykbc/7i/EZzRVMrrRZeQfYwW/l8eiM/ehPVm3Y2gzw2CvDZj
vbOXDYESLOaqYoPzeZ8zhBDrmDhle5wn9SIVcnY1HuxB8/TFUqH+mJpL1jZc
zx9JhdnkQ8QuB+7zHkKFlfllasqOeB75/lTYXrNkcQ8686OdAUT3s8YynbCe
yCoDKJh70Mxyxn7fNQygU2aerbQdTZM0gMXG/+R0c201qw9mttdiM12w3sC0
PvjsGQ5kuXI//736cCHSYrvSDnTYdj14eSWW2Y1mtZ/Xg+EnraqZbjj/oXA9
WF6vJcJyx3qiAXqwYTBkVNED7yfFXQ8O8VU2dXGdvUUPMhWk2RmeuF7aQg/q
zHyu79yJ9VmPdWBm2+Mziizu+yNbBzT9eQO70N0ieTrgeGqbc8YuzI+6qAMR
WVmrdnph/4wTOnDvxaiKojeuFzqoA22Nq4W70Gt8duqAwOjZH+n/cj+/bdpg
LNLZ6OmD9XmqtYGlplessJv7vD/ThgQiLLsTnXkhVxuKXGpPp+/B/dgka8PX
INkDnnuxXnSUNixN8HVS8MX8ooPasPZGoUUn155zmhBQKqiS7of3Fz+sCVc+
OQt57sP97G7XhKpfud/l92OcqNGEX+RfHzvQLNtCTVBZafXimj/Otz5PE7Za
JWV5BOA8f5M1Icyz95T8AXQ3WQNuHTUM6ECz3syqQ9OFCMdrgbjedUgdeO+9
Y3gcxPP61qYO1EoFZfkg7B/3SR08evwFO7jWqlaH2D/FI1cP4frnT9XhqZTo
R/fDeL7JVDXoM3ArkjuC/WIU1eC2F3l8nGvHLDUISn6lXR2M87mXqQKjKmRX
RgjWr7RUA9IfndQjR7F++1ZVqNHrrrf5D/MDAlUgkXVRSCUUvXhMBZQq/oa8
PYb1y86rwMBU/oOcMLyPRdeU4YGOz9fQ/2F+pL4KBHsuV7Q/jv1OmisDkVjn
rBmO+actlUCgPPLsLNceH5SgbpJW0RCB+3v6WBHc3dNpEScwPtCoAGrntvk7
R2G9d21yMFQqkKsbjfmx/fLw8GdRO+kknm9OkRyEah5Y2opekzsiD+t2qG55
EMPdv64ciCQ0R508hfkvteThw8u4F26n0V7eKyB1fPWE4RnsvyN4ObDUf64U
isX10X6yoOVy06uT64JUGRiNdU97HIcWOrUcCtmUD7Hx2J+csAwiRsuFdyVg
ffvLMmCt+t9a07NY/0OKNDSd7snvO4fxvEQpSH+RPPD8PMb/i5EEn++blM4n
Yv3CyKWgqzy3ffcFzLcASfjp8PDcqiTsV0ta+H0fs7tS4iKu38wnCdHPZecH
uPZRXQJbht/SXyajDTZLgKRiVEByCtYP8KVAm71p3r5LaB+/JZAdPdSx9jL2
s/Mkg9Ggg+33VIy7fRODGTmhk+VpaB0tESjdWlycdgXzZbRE4fSJwJ+BV9Ej
t4XA7omarvU1zA+5IwIyAy3e8unovYMC0CWbcGWCa/phXsizXdtQnYHrjx7m
h4CIXyKZmeiwuUVAf3RrXXAW5gvP8cLsZ4/QLdkYd2DyQLmMxEOV6xi3S5tn
xttUfJviWiNhlu14PFT5XQ56g8gke0WBvmtuLvc+r82we/t6zx/LQ+vLTbBv
S1+qsr+B5r3/mx20yYZH6yb3/PRG2YywedM5rjVce9ikB48OfLyFVjg2yK7u
2XPj9m28L+s6KvF/m4+V+A==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQvS5nrqHnJBkHBgZhpknOGnZrTC49dZsK4jvIFv4y
2bfqD9sslxkgfoNWaoT9vhVHrP2cZoP4B640vnXat7SngMlhHlg+JVPafN+i
kKXbbBeC+Ayp2/zs9i2QuZVlvQTMP7pwkdO+eU/45C2Xg/mnT/u47puzxvmy
2Sqw/oe7Nrnvm1VS0W6yFizf2PvMc98Mm7XWRhvA8jcen3HdN43l0Xv9zWD+
7hxWj31Tzogt0d0GVn8hW8Jr36Qp3hHaO8HyH45x+uybENPAo7kHLL9MQ8Nv
X5/K1gNq+8F8c5Mn/vu637wsUTkE9u+Xq0cD9nVskdNUOgqW3xCo67evrSb4
rvwJsPxkX56AfS0uHRNlT4PNN0u+GbDP+cfyr71nZRyev+LPe1QZuA8AaxaE
qQ==
             "]], 
            Line[CompressedData["
1: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
2XPj9m28L+s6KvF/m4+V+A==
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{7.142857142857143, 
           16.666666666666668`}, {-1.627589696696508*^-8, 
           1.4068808396050514`*^-8}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {7.142857142857159, 0}, "ImageSize" -> {360, 360}, 
          "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{7.142857142857143, 
          16.666666666666668`}, {-1.627589696696508*^-8, 
          1.4068808396050514`*^-8}}, 
         "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {7.142857142857159, 0}, "ImageSize" -> {360, 360}, 
         "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQvS5nrqHnJBkHBgZhpknOGnZrTC49dZsK4jvIFv4y
2bfqD9sslxkgfoNWaoT9vhVHrP2cZoP4B640vnXat7SngMlhHlg+JVPafN+i
kKXbbBeC+Ayp2/zs9i2QuZVlvQTMP7pwkdO+eU/45C2Xg/mnT/u47puzxvmy
2Sqw/oe7Nrnvm1VS0W6yFizf2PvMc98Mm7XWRhvA8jcen3HdN43l0Xv9zWD+
7hxWj31Tzogt0d0GVn8hW8Jr36Qp3hHaO8HyH45x+uybENPAo7kHLL9MQ8Nv
X5/K1gNq+8F8c5Mn/vu637wsUTkE9u+Xq0cD9nVskdNUOgqW3xCo67evrSb4
rvwJsPxkX56AfS0uHRNlT4PNN0u+GbDP+cfyr71nZRyev+LPe1QZuA8AaxaE
qQ==
          "]], 
         Line[CompressedData["
1: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
2XPj9m28L+s6KvF/m4+V+A==
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{7.142857142857143, 
        16.666666666666668`}, {-1.627589696696508*^-8, 
        1.4068808396050514`*^-8}}, 
       "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {7.142857142857159, 0}, "ImageSize" -> {360, 360}, 
       "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{7.142857142857159, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{7.142857142857143, 
   16.666666666666668`}, {-1.627589696696508*^-8, 1.4068808396050514`*^-8}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.899180893300766*^9, 3.8991809080129547`*^9}, {
   3.899181661116849*^9, 3.899181680862946*^9}, {3.8991817217276983`*^9, 
   3.89918173906439*^9}, 3.899181950506143*^9, {3.8991847295870743`*^9, 
   3.899184751301589*^9}, 3.899184797237405*^9, 3.899185698069202*^9, 
   3.8991902063195047`*^9, 3.899202041808465*^9, 3.899204797330976*^9, 
   3.8992679432174063`*^9, 3.899353179665619*^9, 3.899366307241209*^9, 
   3.8993690126356707`*^9, 3.899386149287965*^9, 3.899432963164706*^9, 
   3.899439906469843*^9, 3.900136607697123*^9, 3.90013682137989*^9, 
   3.900137035253376*^9, 3.9001378969123707`*^9, 3.900138051218939*^9, 
   3.900139148100889*^9, 3.907041595086226*^9, 3.907043178353705*^9, 
   3.9074011712430468`*^9, 3.90764708672721*^9},
 CellLabel->
  "Out[290]=",ExpressionUUID->"001cfc44-6abf-49f2-ab19-612106a89659"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mino", " ", 
    RowBox[{"period", ":"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalLambda]r", " ", "=", " ", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"\[Lambda]r", " ", "[", 
        RowBox[{"p", ",", "e", ",", "sp", ",", 
         FractionBox["p", 
          RowBox[{"1", "-", "e"}]]}], "]"}]}], "//", "FullSimplify"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Mino", " ", 
     RowBox[{"frequency", ":"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"\[CapitalUpsilon]rOS", " ", "=", "  ", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", 
         FractionBox[
          RowBox[{"EllipticF", "[", 
           RowBox[{
            RowBox[{"ArcSin", "[", 
             SqrtBox[
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r3"}], ")"}], 
                RowBox[{"(", 
                 RowBox[{"r", "-", "r2"}], ")"}]}], 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r2"}], ")"}], 
                RowBox[{"(", 
                 RowBox[{"r", "-", "r3"}], ")"}]}]]], "]"}], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", 
              SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], "r2", 
            RowBox[{"(", 
             RowBox[{"r1", "-", "r3"}], ")"}]}]]]}], ")"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"r", "->", "r1"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalUpsilon]r", "[", 
      RowBox[{"pi_", ",", "ei_", ",", "spi_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"\[CapitalUpsilon]rOS", "/.", "Subs"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "->", "pi"}], ",", 
        RowBox[{"e", "->", "ei"}], ",", 
        RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.899179681812755*^9, 3.899179682261392*^9}, {
  3.8991797236055527`*^9, 3.8991797423150043`*^9}, {3.899179800062207*^9, 
  3.899179822123213*^9}, {3.899180031136139*^9, 3.899180092782403*^9}, {
  3.899180139315366*^9, 3.899180165949873*^9}, {3.899180204319422*^9, 
  3.899180237076522*^9}, {3.899180299678746*^9, 3.899180557373704*^9}, {
  3.899180603052128*^9, 3.899180730287608*^9}, {3.8991807729970827`*^9, 
  3.8991807871450367`*^9}, {3.899181883271062*^9, 3.899181921827693*^9}, {
  3.899181973538418*^9, 3.899182063449317*^9}, {3.899182130966469*^9, 
  3.899182143721249*^9}, {3.8991850405947227`*^9, 3.8991850545728416`*^9}, {
  3.899194875119336*^9, 3.899194927318138*^9}, {3.8991986460445433`*^9, 
  3.8991987427979727`*^9}},
 CellLabel->
  "In[291]:=",ExpressionUUID->"8682a397-07af-46ba-97a1-09d31281340e"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Pi]", " ", 
   SqrtBox[
    RowBox[{"r2", " ", 
     RowBox[{"(", 
      RowBox[{"r1", "-", "r3"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}]}]]}], 
  RowBox[{"2", " ", 
   RowBox[{"EllipticK", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"r1", "-", "r2"}], ")"}], " ", "r3"}], 
     RowBox[{"r2", " ", 
      RowBox[{"(", 
       RowBox[{"r1", "-", "r3"}], ")"}]}]], "]"}]}]]], "Output",
 CellChangeTimes->{
  3.899180665469696*^9, {3.8991807311062202`*^9, 3.899180791020586*^9}, {
   3.899181914522015*^9, 3.899181922427018*^9}, 3.899181958662488*^9, {
   3.8991820277312107`*^9, 3.899182037553925*^9}, {3.899182133602317*^9, 
   3.8991821453580923`*^9}, 3.899185058590631*^9, 3.899185718678718*^9, 
   3.899194929682044*^9, {3.899198720984536*^9, 3.8991987377996397`*^9}, 
   3.899202047046253*^9, 3.899204802682907*^9, 3.899267948525243*^9, 
   3.899353184891879*^9, 3.8993663128243713`*^9, 3.899369018237822*^9, 
   3.899386154584449*^9, 3.899432968666914*^9, 3.8994399102043867`*^9, 
   3.900136613080682*^9, 3.900136825029361*^9, 3.9001370404962893`*^9, 
   3.900137902165689*^9, 3.900139153515641*^9, 3.907041600116231*^9, 
   3.907043182755672*^9, 3.907401176699276*^9, 3.9076470878772593`*^9},
 CellLabel->
  "Out[292]=",ExpressionUUID->"ddf1c054-e416-4ad9-8e8d-1c9f93e35bc3"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "r(\[Lambda]), ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "(", 
    SuperscriptBox["q", "r"]}], TraditionalForm]],ExpressionUUID->
  "46fa6ebd-dc98-4e71-8aef-7b30134250a8"],
 ") direct expression"
}], "Subsection",
 CellChangeTimes->{{3.8991866605431004`*^9, 
  3.899186690056534*^9}},ExpressionUUID->"1bbda41a-2daa-4ee4-87c1-\
f7d3e65cf7ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"The", " ", "r", 
    RowBox[{"(", "\[Lambda]", ")"}], " ", "inverse"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"r\[Lambda]", "[", 
      RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "\[Lambda]_"}], "]"}], " ",
      ":=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"r3", 
           RowBox[{"(", 
            RowBox[{"r1", " ", "-", " ", "r2"}], ")"}], 
           SuperscriptBox[
            RowBox[{"JacobiSN", "[", 
             RowBox[{
              RowBox[{
               FractionBox[
                SqrtBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", " ", "-", " ", 
                    SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], "r2", 
                  RowBox[{"(", 
                   RowBox[{"r1", "-", "r3"}], ")"}]}]], "2"], "\[Lambda]"}], 
              ",", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "2"]}], 
          "-", 
          RowBox[{"r2", 
           RowBox[{"(", 
            RowBox[{"r1", " ", "-", "r3"}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r1", "-", "r2"}], ")"}], 
           SuperscriptBox[
            RowBox[{"JacobiSN", "[", 
             RowBox[{
              RowBox[{
               FractionBox[
                SqrtBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", " ", "-", " ", 
                    SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], "r2", 
                  RowBox[{"(", 
                   RowBox[{"r1", "-", "r3"}], ")"}]}]], "2"], "\[Lambda]"}], 
              ",", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "2"]}], 
          " ", "-", 
          RowBox[{"(", 
           RowBox[{"r1", " ", "-", " ", "r3"}], ")"}]}], ")"}]}], "/.", 
       "Subs"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "->", "pi"}], ",", 
        RowBox[{"e", "->", "ei"}], ",", 
        RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Expression", " ", "in", " ", "terms", " ", "of", " ", "angle", " ", 
     "coordinate", " ", 
     SuperscriptBox["q", "r"]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"rqr", "[", 
      RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "qr_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"r3", 
           RowBox[{"(", 
            RowBox[{"r1", " ", "-", " ", "r2"}], ")"}], 
           SuperscriptBox[
            RowBox[{"JacobiSN", "[", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"EllipticK", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]], "]"}], 
                "\[Pi]"], "qr"}], ",", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "2"]}], 
          "-", 
          RowBox[{"r2", 
           RowBox[{"(", 
            RowBox[{"r1", " ", "-", "r3"}], ")"}]}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r1", "-", "r2"}], ")"}], 
           SuperscriptBox[
            RowBox[{"JacobiSN", "[", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"EllipticK", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]], "]"}], 
                "\[Pi]"], "qr"}], ",", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "2"]}], 
          " ", "-", 
          RowBox[{"(", 
           RowBox[{"r1", " ", "-", " ", "r3"}], ")"}]}], ")"}]}], "/.", 
       "Subs"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "->", "pi"}], ",", 
        RowBox[{"e", "->", "ei"}], ",", 
        RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Consistency", " ", "check"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r\[Lambda]", "[", 
           RowBox[{"10", ",", "0.4", ",", "0.01", ",", "\[Lambda]"}], "]"}], 
          ",", "\[Lambda]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", "0", ",", 
          RowBox[{
           FractionBox["\[CapitalLambda]r", "2"], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"p", "->", "10"}], ",", 
             RowBox[{"e", "->", "0.4"}], ",", 
             RowBox[{"sp", "->", "0.01"}]}], "}"}]}]}], "}"}], ",", 
        RowBox[{"AspectRatio", "->", "1"}]}], "]"}], ",", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{"N\[Lambda]r", "[", 
           RowBox[{"10", ",", "0.4", ",", "0.01", ",", "r"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", 
          FractionBox["10", 
           RowBox[{"1", "+", "0.4"}]], ",", 
          FractionBox["10", 
           RowBox[{"1", "-", "0.4"}]]}], "}"}], ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"rqr", "[", 
           RowBox[{"10", ",", "0.4", ",", "0.01", ",", "qr"}], "]"}], ",", 
          RowBox[{
           RowBox[{"qr", " ", 
            FractionBox["\[CapitalLambda]r", 
             RowBox[{"2", "\[Pi]"}]]}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"p", "->", "10"}], ",", 
             RowBox[{"e", "->", "0.4"}], ",", 
             RowBox[{"sp", "->", "0.01"}]}], "}"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"qr", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{"Yellow", ",", "Dotted"}], "}"}]}]}], "]"}]}], "]"}], "//", 
    "Quiet"}]}]}]], "Input",
 CellChangeTimes->{{3.899182162870524*^9, 3.899182219216033*^9}, {
  3.899182274431883*^9, 3.899182276202726*^9}, {3.899184266004931*^9, 
  3.8991842753443832`*^9}, {3.899184308974166*^9, 3.899184619773058*^9}, {
  3.899184810978503*^9, 3.899184820713835*^9}, {3.899184904490692*^9, 
  3.899185028622384*^9}, {3.8991850667844057`*^9, 3.899185176268401*^9}, {
  3.899185209660616*^9, 3.899185317415059*^9}, {3.8991853624748497`*^9, 
  3.899185407078719*^9}, {3.899185444096445*^9, 3.899185444571972*^9}, {
  3.899185600965753*^9, 3.899185637391033*^9}, {3.8991856727630663`*^9, 
  3.8991856769321747`*^9}, {3.899185738071171*^9, 3.899185753896762*^9}, {
  3.899186338137599*^9, 3.8991864543548317`*^9}, {3.899186494214593*^9, 
  3.899186572831777*^9}},
 CellLabel->
  "In[294]:=",ExpressionUUID->"cbdc9ebb-f0fa-4001-96c2-8b22e4df9410"],

Cell[BoxData[
 GraphicsBox[{
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
          Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
lVdkOIDhv3/bxwQ=
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[0.368417, 0.506779, 0.709798]], 
             Line[CompressedData["
1:eJxF0wk4VVsbB3BfA6FMFWEfkSERtmRI5V0oSSlFSkUD7r0hiSQy5KAoSR3z
UOIYIrqGiFMZMlxSJCWiWUoZz8pBXb7V83x8+znn2c/vWXuv9/++Zx2Foyd2
O8/h4+P7Qr6/70pbr5EPhfj+d/nfNd/329pH7mQMbDWEG/+6cv9vC+hU+/XD
grg3/JGhZ5k1ZG6fOLR9dn0/FJ5x1N5BXJlieX6t+2F412ToYjX7vCNsdg4S
siYW9l43dIfvT1D20JawnX3fBXjSu4LtiPdZKu9TZx0Hp/g3e+1n9/OALYpd
sUeI266FH34u4QkFU6br/5jd3ws6PChzV+LxwKkl4ge9Qa/B8b7HbD0fsPJG
r/1n6/lB//mXYSHEm/b2B0QOngWv4e74i7P1A0A3ZMNo4mz9c/AmPs4wnfgf
KVduCAoGm9dH+3Nn8zAhT9Dm3IPZPCEQJe73RwPx4Nz32dURoWDEXFLybDZf
GOhTt8L6ZvNdgHw+pznLWDP5LkLbCCgpExt2N4ttpC7B+q+x+WtYM3kvwU6t
4rEdrJm8l+HL7sdHI1kzeaNBI+xKVcrv5/d3bzjYEQ3Nfe1h+ayZ/FcBm/eZ
tbJm8l+DWgXzDJmYmfwscN2ts1GT2MVs90iifAwYu+QYmcTM9BMDBfK6Z1xj
ZvqJBaP7P+tqYmb6iYdKtsuT0NiZfpKA4VUneZOY7eBVOMBJAtzT3/mAWPKg
fuWARjK05qY+GSf+ZVvZNSCeApoDPS6n4ihUv71FfLAzFTRiOYHMeApppPCA
V5IGH3vqnLOIPyd1mvEG0mDf6sr6JuK0RI4lT+UmYPmIsSUJFJKIDzrAS7gJ
Rnq1i+4Q864K+PD806Ex3ZgxmUih6gtSBbxNbLDYxmQrJ1HI7/xECS+ADaFj
bzJ3Ea8Ne83hlbLhcdW4ZB5xFvNGI081E36O8Rc7JlMoMmBlL29hFkCex4tv
KRSy9dKnxtuzodx+d/feNAr1O+y9OO6UB1t+ydRGEbfFi8VoJ+XB4jMPJeuJ
K1obU11a8sA5LeOX7k0KXTLZUNi97jZc27XlsUw6hVarKLyqEsmH6FQRn/EM
Cp0Y6FeOuFcA6bhhxbwcCk1urHy3kL8Q9IWn3MyJ3buSnW/JF4KrafiKy8Qf
Tp/p37y+EM6P32qRukWhpjvaONCjEAbnJq1Zk0uhZAW2wEhXIbCuT8mdvU2h
DfMjNF/cKQKDVzWF9oUUCmze7Z9qVwLd3PTn+cR88RyHEq8SYIess58iZh5R
Mn58uQSOTaVkpxVR6MLYj/kT1SUglv9Iur+YQtHyiVds1O4C3/aXPtGlFMo4
9TZd+OddqHEMMVK/T84j5dbom1IGyYGvDocTW/S150WXlsGpmxe+9RI3F26M
ym4tA28hIcP0BxR6ZiZq/WLePZASXX9/eSWFujyKuunj96CZAfs1ayj0vXZ8
qG9jOWw/kaSc9A+FxI+HSdq+rYBylSHHRY0UirrAEcn4WQF+0t8ZwcQL00f4
h6U44F89Nc+liUILOux5EVYc8HQ9lmbcTPo11nv1oJoDvCjm4gWt5Pwv6UtU
Zt+HcJsx5dEOMs/75owffz2EzJ+nRjZ8pZAxP7+ExUQVyKi+iqkjXvjh5dNA
/mpYersvc0c/hV4+yL5UvLga5lesFj/6jUJu3lvnMzSrwXSv/qKoAQrFfYoc
HzpaDeu3ZadPjlDoW83it7HN1WCeLRKk8pNCsUEKt9/fqIHrzP24SYSBvo5v
MPM1q4W2uB8iAaIMVOSPFzXa1IK13IJ8LTEG8uO7/WKZYy0c/lTnFSfOQEIL
ZJ3vBdWC0Et+DZclDLRaaiKEd68Wrvu12qnJMJC77t1qb/U6WFo8ylukwkD4
pMZGT7F6eM4YBGdgoOl+xlrXrgaw/3uybKcPA3VdD32eY/8Yru1W2MVXzEBZ
PxzSTrOfgqWWdKLOLwYazjzJmiv9DNY0mrx4ZC6HwtKPD7Cq26Crzqq6JVkO
/Ru0Wr7pSDtEHqqrXDsth1bbV905ovwSHqrtEJznvBw9FxaxrW7qAM3+7KsF
PcuRdgVtx2R1wqV24e4QLXnkuVVS96v1ayi7O8384iGP1HPvrlw21g2bCnMt
bjyQR8lCaj45nDfQZPl+qFdIAZnI3XY/p/0Ooq2+BEs5KyCJMg2rHsn3YLeq
O/h0rQKyrhKTWzT+HoqDr11qUFyBrIqsePJNHyBD7K7zzmsrkKrSz8De/I/w
+VbMjkA+RfQgcI5EFPMTyE3diDbxUkSPtrpeFbTuhcg8tjaTp4jYMUaVurqf
4SLP2dXaTwkZ/+M+vnlBH/wZkepiKqaMKs4KvuMf6AOBMe2A0jxlxL4xvyTp
yRew/OUzzjNVQRa3HVgSN77ClY3FyTXDKqjZYIXCemY/eD6ezv+YsBIJFZhU
bLH9BnbsuNB4U1VUzqqFlSrfYaR/bl7qnFVo08TfXmUCA9BzzUhvZ/kqdGnL
ZJF61wBspuoTOphqKH9pQZrVw0FoP5F6qgKpo8jmh4l2rCHglnE070+qo0Hf
hEqZNcPAWCNbK1SzGoU+OS94JGMY6tpUB/f4aKAzsYp20otGgGEHUlk6mmh/
6o/pW0Ej0GmptlDgvSbyth+nlIZHIOHc8uQz3lpo8OotELMbBQvZM8G759DI
hj+6vL1pFMzaZXQt5tKIZxfFCmgehURkbGU8j0ZJ+ZHHVZ6OgsfTOo4GP43e
2UQonHk2CsM/3BymBWnklsGMkH01CksCEsLDxGkUhrztjvaOwh97YtVk5WlU
6rd/Ymh6FLB41ojdehpJDymtE9blQsWTySGlDTRKmf/rXp4eF0RFfMyHiOWp
5wbbDbggU/uYn2lEI9WtwQaX13NBe49+4Q1jGhlk9OiLmnBhRZXuOc4WGu3b
G6e3eCcXTsruWuVlTaOESoG1sse4sD9Ar0/VhkbUyzfFHBcumKLGsR7itO93
dQ66cUHTDQua2dIoR9pJJ/UEF5auPTCxyI5G97yq1iw/zYVIq0+1/g406ljp
q60YwgUD1Rz79r9oJBndr6meyoWU8oQDwcfIfM7KiQ1d54JvgVmIhguN5P7c
PVKUxgVuWvGOEFcaKRtVFBuyudBn++yJkjuN1n6PMLDI48IHLyVN8KLRLvNV
JsfKuaAj7Bfd4k+jSL6/9mS/4MLVXbobjwTQSOx7sp5rBxeebFosPErM6miR
0urkgs0hQ0HxIFK/QL+rtJsLzuqHwjcF0+jWQYFD9R+5wBL2PRgcRqP6e1l/
9Y5wIbj4WI3VZRr952TvWUURDNsOFVo+JLaVpJUbRTGcpDLF1KNodJvj99Rd
HEPv5JcNc66QdX4xhYolGAZyDqhlR9MoN9mw3koWw6hdru5jFjk/9VfEAlUx
2Fy4qbo6htR37SpXVMOgItpgFUk8Jabs2KiO4cmEALKIJfM+UHF3iRaGoMP2
cffjaPTv8Kf9eboYlsVpzz2bSKMsWcPMVyYYjFu0DFqIf1aF7gjchCFOXi1t
RRKNrP5o4SmaYWjju7qggXjybyeLE1sxJLvn6vOn0Gin2ZWh+VYYsoxXYPvr
NBr3+LROxx6DxkEzi0xiS0mtj68cMBzqCH72jTid4xsZeBhDZkSr5+kbNNrO
L/q20RHDnrOd/wan0ehm8rrQwy4YzuXPW+6ZTiOL+qinl30wDKPNesXEaw2X
M518MYSyirdyieUK7uiuP4vBTyXFySODRiOxrSlfAjGYOW7704FNzqezhKvp
eQyp79gH44mZnelyMuFk/+1Gli3EbpY6bcMRGDxdHi3fkEkj0LVZd/0yhpr3
OhcEs2j0eV6cwEQMhpygLGtD4tYzKpyWOAzm3y7KuBBXfC91z0rA4HN1W3w9
8eX2jhfWKRhc3xhYeGWTvGxpdkEGhqfaj/qSieWW5e4Ny8SgKC8e9Ih4QaSh
8MFsDAWGuUmiOTTq9jrgKZiHwTTyaUgycYhpKnIqwpCx78QAh9itTAMblmB4
fmez1WtiW/WH2eKlGBIv7vmP1C0aqS1+K1JZTuYRf3KnDvGSCydqYjkYvhmH
x+0gnpqc9nZ7gGGVhIcok7jtg3yPdDUG2ycrjZOI79sWRg/XYHhhle1aSJzV
ZLypoRaDg3trbjexb9HRvFP/YCjMc6ocJj6qwnXY1oRBbDy2eW4u+T2TQiRW
NGNISsxtVSGWZ7J9W1owsG/6N+gRC42t1ch6hiFSrrF0MzE+VvfO/zkGXBB+
3Zr4Tc+eGOsXZB5eJYGHiRt2fd6i1kH6FzXb60b8d93pn3ydGBbn6Kv6ECet
E7jT0YXB/lPIyDni0Pz4owXdGNYNKhdHELsrqEqGvcGQclL6+FXifbH3Gg+8
w/AsZf/yBGITwa0Baz5g8JD/3JhKvDqgkxb8hOG4VrlbOvHSkWOf3vaS/0vQ
M4Es4imnyfjSPgxLt2gk5xB/eXVx2+WvGPyNH6vkErdtl512/IYhL/f3ReZZ
lVdkOIDhv3/bxwQ=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{7.142857142857142, 16.666666666666668`}, {0., 
            1.3079173068363579`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {7.142857142857142, 0}, "ImageSize" -> {360, 360}, 
           "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[0.368417, 0.506779, 0.709798]]}, 
           "HighlightLabelingFunctions" -> <|
            "CoordinatesToolOptions" -> Identity, 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ParametricPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{7.142857142857142, 16.666666666666668`}, {0., 
           1.3079173068363579`}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {7.142857142857142, 0}, "ImageSize" -> {360, 360}, 
          "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.368417, 0.506779, 0.709798]]}, 
          "HighlightLabelingFunctions" -> <|
           "CoordinatesToolOptions" -> Identity, 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ParametricPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.368417, 0.506779, 0.709798]], 
          Line[CompressedData["
1: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
lVdkOIDhv3/bxwQ=
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{7.142857142857142, 16.666666666666668`}, {0., 
         1.3079173068363579`}}, "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {7.142857142857142, 0}, "ImageSize" -> {360, 360}, 
        "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.368417, 0.506779, 0.709798]]}, 
        "HighlightLabelingFunctions" -> <|
         "CoordinatesToolOptions" -> Identity, 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ParametricPlot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[1, 0, 0], AbsoluteThickness[2], Opacity[1.], 
          Dashing[{Small, Small}], FaceForm[Opacity[0.3]], 
          LineBox[CompressedData["
1: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
VwSW2frwzUYo+B+ypWgg
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[1, 0, 0], 
              Dashing[{Small, Small}]], 
             Line[CompressedData["
1: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
VwSW2frwzUYo+B+ypWgg
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{7.142857142857143, 16.666666666666668`}, {0., 
            1.3079173021002783`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {7.142857142857143, 0}, "ImageSize" -> {360, 432}, 
           "Axes" -> {True, True}, "AspectRatio" -> Automatic, "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[1, 0, 0], 
              Dashing[{Small, Small}]]}, 
           "HighlightLabelingFunctions" -> <|
            "CoordinatesToolOptions" -> Identity, 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ParametricPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{7.142857142857143, 16.666666666666668`}, {0., 
           1.3079173021002783`}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {7.142857142857143, 0}, "ImageSize" -> {360, 432}, 
          "Axes" -> {True, True}, "AspectRatio" -> Automatic, "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[1, 0, 0], 
             Dashing[{Small, Small}]]}, 
          "HighlightLabelingFunctions" -> <|
           "CoordinatesToolOptions" -> Identity, 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ParametricPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[1, 0, 0], 
           Dashing[{Small, Small}]], 
          Line[CompressedData["
1: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
VwSW2frwzUYo+B+ypWgg
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{7.142857142857143, 16.666666666666668`}, {0., 
         1.3079173021002783`}}, "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {7.142857142857143, 0}, "ImageSize" -> {360, 432}, 
        "Axes" -> {True, True}, "AspectRatio" -> Automatic, "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[1, 0, 0], 
           Dashing[{Small, Small}]]}, 
        "HighlightLabelingFunctions" -> <|
         "CoordinatesToolOptions" -> Identity, 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ParametricPlot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[1, 1, 0], AbsoluteThickness[2], Opacity[1.], 
          Dashing[{0, Small}], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1:eJxF0gk0Vev7B3C/BsLNUCLsIzIkwpYpKs8rJXOKSCGFe29ESiUy5KAopI55
iDiGCNcQcZQhlKGolIiGG5eU8ewc1I//e9f689tr77XXZ717P+/32c+WOXnm
kNsKLi6uEXz9e5czuY1PAnH9/xHwwPjIvyZPlGSPmehBxn892P+zKfQq/fph
ij0Y8UTvXJU15JjPHTdfXj8KpZdc1C2xH6dZXNX0coZPbXruVsvPu8A+t2A+
a2y+C7oTJVx/gLy3+jrb5ffdgSN+MMQe+7CF/BFlhie4Jn6wc1yu5w37Zfvi
T2C/uh3h/HrdOSheMNz5+3J9H+jxJow9sGeDFkSEHS6A9lOXWu/l/XzB6gJ6
H7C8nz+MXn0bHoptaDcaGDV+GXwm+xOvL+8fCFqhu6aTl/e/Ah8SE/SysJ+J
ebBDUQjYvD85WrCchw6FvDZXHi3nCYUYYf/fn2KPr/yc1xAZBvp0kYqXy/nC
QYe4Fz68nO8aFHG5rtjIWMp3HV5NgZw8tl5/h9Bu4gbs/BpftJ2xlPcGHFAr
n7FkLOWNhpFD7SejGEt5Y0El/GZ9Gvaeo/27HHpioWO4O7yIsZT/FlDGw0Zd
jKX8t6FJxjhbIm4pPwM8DmnsVsU+ZXRoKlk6Dgzc8/X3xC31EwfF0lqXPOKW
+okH/dqfzY1xS/0kQh3T/XlY/FI/KUDzaRa9i53t5FM6xkoBamC09xH2Bged
ujGVVOgqSH8+iz1nW9c3JpwGqmMD7ucTCNRs3ik83psOKvGsIHoigbalcYBT
kQlfBprdcrH/Sek14oxlwpFtdS1t2BnJLAuOwl2gpCNnRJIItC4x+Bgn6S7o
azetLcHm3OLx5QRkQWuWAW0+mUCN18SKOXuZYGpGZ8qnEOjy1bkKTiATwmY+
5BzE1gx/z+JUMqG9fla0EDuXntHKUcyBnzPc5S6pBLoRuGWI81suQKH3m29p
eB4+OsRsdx5UOx7qt8sk0KiT3fVZ10LY/0uiKQb7VaJQnHpKIay/9Fi0Bbu6
qzXdvbMQ3DKzf2ndxfX27Crt170Ptw/ub5fIwv0qyLyrFyiC2HQB39lsAnmN
jcpHPiyGLOrp5lX5BJrfXffpN+5S0OFfOG2M7dWX6nZPuhQ8DCM2R2N/uXhp
dN/OUrg6e69T7B6B2krUqSDvUhhfmbJ9ewGBUmSYPFN9pcC4syB1+T6Bdq2O
VH1TUgY73jWWOpYSKKjjUEC6fQX0s7NeF2FzJbKcKnwqgBmq67iATT8hZ9Ae
XQGnFtLyMssIdG3mx+q5hgoQKnoiPlpOoFjp5Js2Sg+Ay/ytb2wlnv/5j1n8
Px9Ao0uovnIt/h+J061+aVWQGvTOOQLbZLi7MLayCs7fvfZtCLu9dHdMXhc2
H59e1iMCvTQStH6z6iGICe6s3VRHoF7vsn7S8yF00OCoaiOBvjfNTgzvrgbz
MynyKc8IJOQZLmr7sQaqFSZc1rYSKPoaSyD7Zw34i3+nhWD/ljXFPSnGgoCG
hVXubQTi7XHkRFqx4JzHqUyDDgItIu13jxpYwImhr1/TheuLDCfLM2shwmZG
frqHQK21xrQffz6GnJ/np3Z9JRDi5l5nOlcPEorv4pqx+f9++yKIuwE23B/O
sRwl0NtHeTfK1zfA6pptwie/EcjjgslqmmoDGNrprI0ZI1DCYNTsxMkG2GmW
lzU/RaBvjes/xnc0gHGeQLDCTwLFBcvc/5zRCHfoR6k2ARoamd1l5GfUBK8S
fggECtJQaQC1ttWmCayl1hSpCdGQH9f9NxtdmsB5sNknQZiGeNdIuj0MbgK+
t9wq7iI0pCw2F8p52AR3/LvslSRoyEvrQcMF5WbYUD7NWatAQ9RZld3nhFrg
NW0c3ICGFkZpmh59T8Hxr/mqA7401Hcn7HW+YzvcPiRzkKuchpg/nDIvMl+A
hZp4ssYvGprIOctYKf4SNFv3vHliLIXCsjzHGA2voK/ZqqEzVQr9Ct4m3Xai
G6KON9dpLkqhrY71JSfk30KdkiXvKrdN6CW/gG1DWw+Qo3m3igc2IbUa0p7O
6IUb3fz9oWrSyNtEVOur9XuoerBIH/GWRlsLHmzZONMPe0sLTDMeSaMkPiXf
fNYHaLP4PDHEJ4OQ1H2vK+qf4JbVSIiYmwwSrFKxGhD9DEe29odcbJJBVvVC
UmtnP0NZyO0bT2U3I4syK45029+QLfTA7cDtzUhe7mfQUNEXGLoXZxnEJYtq
glasi6EPArGQEbvHRxbVmXjc4rUeghuFTHU6RxbdjdOv09L6B65x3Dys/eXQ
7mdes/vWDINbZLq7oZA8qrzM+4l7bBh4ZtQDKwvlUWbG6oqU5yNg9st3lmOo
gPbfd2Ksy/gKt3eXpzZOKqBnOzbL7KSPglf7YtGXpC2Iu3hPzX7bb2DPTAhL
NFREFYwm2KLwHaZGVxamr9iKDOb+8qniGYOB2/raB6q3osj982XKfWNgTLQk
9dCVUPGG4kyrx+PQfSb9fA1SRtEdj5PtGRMwW8VSrZ1XRhN+SXUS2ydBbrtk
E1/jNhT+/CrviexJaHulOH7YVwVdipe1F187BdL2IJaroYqOpv9YvBc8Bb0W
Sr/xfFZFFxxnCbnJKUi7sin10gU1NH7rHgjZT4O55KWQQytIdJg7trq7bRr2
dUtoma4k0ax9DCOwYxpSkIGVwSoSpRZFeSq8mIZzL5pZKtwk+mwTKXPp5TRM
/TjttMhLIs9seqTku2nYGJgUES5Moqvogv3JoWn443C8kqQ0iar8j85NLE4D
JZw7Zb+TROITcrr8WmxgPZ+fkNtFovTVvx4WarNBUMDXeAJbhni9w3wHGySb
2rnp+iTaahKyI3onGzQP65RmGJBIN3tAR3APG2Trta6w9pPoiF2C9voDbDgr
eXCrjzWJkup4NCVPseFooPawog2JJN9+KGe5s8EQtc4MYGd8f6DhcJoNqqcp
XiNbEuWJu2qkn2HDBs1jc2vtcV6f+u2bLrIhymqwKcCJRD1b/NRlQ9mgp5jv
2P0niURjR1WV09mQUZ10LOQUiZIvSwlN3GGDf7FRqIo7iWh/HJoqy2QDlVlu
GepBInn9mnI9JhtGbF8+l/Mikcb3yB2mhWwY9JFTBR8SHTTeuudUNRs0+P1j
OwNIFMX15+G8N2yIP6i1+0QgiQS/p2p79LCha+96/mlsRk+nmFovGw4f1+MV
DsbzKdbpq+xnw+/KxyP2hpDongPP8ZYvbGDw+zmEhJOo5WHun0NTbAgpP9Vo
FU0irrNDl2UFKDA7XmrxGNtOlJRvFaTgPJEjpBxDovss/xdewhQMzY/sWnGT
RDbcQjI1IhRM5B9TyoslUUGqXouVJAXj9gVa7Qy83nJTKEiRAptrdxW3xZEo
36OvWlaJAjnBp1ZR2AtC8i6tyhS8mONBpvF4/VjNAxE1CkKdHRNqE0j0a3Lw
aKEWBUSC+srLySTKkdTLebeHAoNOtR2d2PP1YZZBeylIkFbK3JxCogO/d3Jk
jSh4w3VrzVPs+b9cTc+YUJDqVaDDnUYiS6ObE6utKMg32Ew53iERx3tQV8OR
AhUHI9McbHNRtS/vnChw7gl5+Q37LssvKsiZgpzIrnMXM/A6t+DHVhcKbC/3
/jckk0SZqbphzu4U0ItWbTqXRSLTlpgX0b4UTKJ92uXYmnqb6K5+FFxhlJuw
sWnFJVo7L1Pgr5Dm6p1Nosn4rrSRIAr2upj94cQkUaLbOg/DqxSkf2I6JGKH
9GZJSUTg+ub6Fp3YHhYaryYjKTjr/mTTrhwSgZaN7p1oCho/a1zjzSXR8KoE
nrk4CnKDc631sDsvKbA6Eygw/nZdwh275nulV24SBb63zBJbsGO6e95Yp1Hg
+WGHqU8eibSY4szibAq61J8Mp2JLbSywC8+hQFZaOPgJNm+UHr9DHgXFegUp
gvkk6vc5do63kALDqBehqdhhhunItYyC7CNnxljYnlUqlF4FBa9L9lm9x7ZT
fpwnXElB8vXD/xG7RyLl9R8F6qrx90g8e0ADW+TamcZ4FgXfDCISLLEX5hcv
nH5EwdZ13oJ07Fd/Sw+IN+Dv/3yLQQo2y7Y0drIRz9sqz6MUO7fNYO/TJjw/
r66Cfmy/spOF559RUFroWjeJ7aLAdjJro0BoNr5jZQGJzFJC123uoCAluaBL
AVuazvTr7KSAeTfgqTY234ymSu5LCqKkWiv3YbNPNX8KeE0BVRxxxxp7YOBw
nPUbCgp9KoKcsVsO/rNfqQf/L4JGdqexS5ov/uTqpWB9vo6iL3aKLk9JTx8F
joOhU1eww4oSTxb3U6A7Ll8eie0poyga/oGCtLPinrew7eIfth77hOeRdnRT
ErYBr0ng9r8pOCP9T2s6tnJgL8k7SIGHWvXpLGyRqVODH4cokAh+yZOLveA6
n1g5TMGG/Sqp+dgj766bRX+lIMCgXaEA+5W55KLLN5y/4N+DRLX1hWV6YxT8
Hx5Ox68=
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[1, 1, 0], 
              Dashing[{0, Small}]], 
             Line[CompressedData["
1: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
Hx5Ox68=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{7.142857142857142, 16.666666666666668`}, {0., 
            1.3079173068363579`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {7.142857142857142, 0}, "ImageSize" -> {360, 432}, 
           "Axes" -> {True, True}, "AspectRatio" -> Automatic, "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[1, 1, 0], 
              Dashing[{0, Small}]]}, 
           "HighlightLabelingFunctions" -> <|
            "CoordinatesToolOptions" -> Identity, 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ParametricPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{7.142857142857142, 16.666666666666668`}, {0., 
           1.3079173068363579`}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {7.142857142857142, 0}, "ImageSize" -> {360, 432}, 
          "Axes" -> {True, True}, "AspectRatio" -> Automatic, "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[1, 1, 0], 
             Dashing[{0, Small}]]}, 
          "HighlightLabelingFunctions" -> <|
           "CoordinatesToolOptions" -> Identity, 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ParametricPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[1, 1, 0], 
           Dashing[{0, Small}]], 
          Line[CompressedData["
1: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
Hx5Ox68=
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{7.142857142857142, 16.666666666666668`}, {0., 
         1.3079173068363579`}}, "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {7.142857142857142, 0}, "ImageSize" -> {360, 432}, 
        "Axes" -> {True, True}, "AspectRatio" -> Automatic, "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[1, 1, 0], 
           Dashing[{0, Small}]]}, 
        "HighlightLabelingFunctions" -> <|
         "CoordinatesToolOptions" -> Identity, 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ParametricPlot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]]},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{7.142857142857142, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{7.142857142857142, 16.666666666666668`}, {0., 
   1.3079173068363579`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.899267949174005*^9, 3.899353185528974*^9, 
  3.8993663134563513`*^9, 3.899369018894253*^9, 3.899386155234479*^9, 
  3.899432969298251*^9, 3.8994399107978*^9, 3.9001366137513123`*^9, 
  3.90013682561215*^9, 3.900137041097705*^9, 3.900137902793449*^9, 
  3.9001391542926207`*^9, 3.9070416008162603`*^9, 3.9070431833503227`*^9, 
  3.9074011774229193`*^9, 3.907647088504857*^9},
 CellLabel->
  "Out[296]=",ExpressionUUID->"3586e124-75f9-4c49-ae74-aa5fa91baffd"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],ExpressionUUID->
  "02feeccc-28b0-4d7e-8692-621863099d23"],
 " integrals"
}], "Subsection",
 CellChangeTimes->{{3.89917965094309*^9, 3.899179674701448*^9}, {
  3.8991797486243477`*^9, 
  3.8991797543870583`*^9}},ExpressionUUID->"aade0b93-89fb-4843-bca9-\
69d421fd25dd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tintegr", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], "utint"}], 
       SqrtBox["Rfunc"]], "/.", "fhRule"}], "/.", "DeTrRule"}], "/.", 
    "Subs"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Nt", "[", 
     RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "rf_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"tintegr", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "->", "pi"}], ",", 
         RowBox[{"e", "->", "ei"}], ",", 
         RowBox[{"sp", "->", "spi"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", 
        FractionBox["pi", 
         RowBox[{"1", "+", "ei"}]], ",", "rf"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     SubscriptBox[
      OverscriptBox["T", "~"], "r"], 
     RowBox[{"(", "\[Chi]", ")"}]}], ":"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ttr", "[", 
    RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "\[Chi]_"}], "]"}], ":=", 
   " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["\[ScriptCapitalE]", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], "r2", 
          RowBox[{"(", 
           RowBox[{"r1", " ", "-", " ", "r3"}], ")"}]}]]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", 
            RowBox[{"r3", " ", "-", " ", 
             RowBox[{"2", "M"}]}]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"2", "M", 
              RowBox[{"(", 
               RowBox[{"r1", " ", "-", " ", "r3"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"r2", "-", "r3"}], ")"}]}], " ", "+", " ", 
             RowBox[{"r3", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"r3", 
                 RowBox[{"(", 
                  RowBox[{"r2", " ", "+", " ", "r3"}], ")"}]}], " ", "-", " ", 
                RowBox[{"r1", 
                 RowBox[{"(", 
                  RowBox[{"r2", " ", "-", " ", "r3"}], ")"}]}]}], ")"}]}], 
             " ", "+", 
             RowBox[{"2", " ", 
              FractionBox["\[ScriptCapitalJ]", "\[ScriptCapitalE]"], "M", " ",
               "sp"}]}], ")"}]}], 
          RowBox[{"EllipticF", "[", 
           RowBox[{"\[Chi]", ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], " ", "+",
          " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
           "r1", "  ", "+", " ", "r2", " ", "+", " ", "r3", " ", "+", 
            RowBox[{"4", "M"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"r2", " ", "-", "r3"}], ")"}], " ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"r1", "-", "r2"}], 
             RowBox[{"r1", "-", "r3"}]], ",", "\[Chi]", ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], " ", "+",
          " ", 
         RowBox[{"r2", 
          RowBox[{"(", 
           RowBox[{"r1", "-", "r3"}], ")"}], 
          RowBox[{"EllipticE", "[", 
           RowBox[{"\[Chi]", ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], " ", "-",
          " ", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "M", 
            RowBox[{"(", 
             RowBox[{"r2", "-", "r3"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", 
               SuperscriptBox["M", "2"]}], " ", "+", " ", 
              RowBox[{
               RowBox[{"\[ScriptCapitalJ]", "/", "\[ScriptCapitalE]"}], " ", 
               "sp"}]}], ")"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r2", " ", "-", " ", 
              RowBox[{"2", "M"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"r3", " ", "-", " ", 
              RowBox[{"2", " ", "M"}]}], ")"}]}]], 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"r1", "-", "r2"}], 
              RowBox[{"r1", "-", "r3"}]], " ", 
             FractionBox[
              RowBox[{"r3", "-", 
               RowBox[{"2", "M"}]}], 
              RowBox[{"r2", " ", "-", " ", 
               RowBox[{"2", "M"}]}]]}], ",", "\[Chi]", ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], " ", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r1", "-", "r2"}], ")"}], " ", 
            SqrtBox[
             RowBox[{"r2", " ", 
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"r2", " ", 
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r3"}], ")"}]}], "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r2"}], ")"}], " ", "r3", " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}]}], ")"}]}]], 
            " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Chi]"}], "]"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"r1", "+", "r2", "-", 
            RowBox[{"2", " ", "r3"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"r1", "-", "r2"}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Chi]"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
      ")"}], "/.", "Subs"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "->", "pi"}], ",", 
      RowBox[{"e", "->", "ei"}], ",", 
      RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spf", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Ttr", "[", 
         RowBox[{"10", ",", "0.4", ",", "spf", ",", 
          RowBox[{"JacobiAmplitude", "[", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"EllipticK", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]], "]"}], "\[Pi]"], 
             "qr"}], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], "]"}], "/.",
         "Subs"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "->", "10"}], ",", 
         RowBox[{"e", "->", "0.4"}], ",", 
         RowBox[{"sp", "->", "spf"}]}], "}"}]}], ",", 
      RowBox[{"Nt", "[", 
       RowBox[{"10", ",", "0.4", ",", "spf", ",", 
        RowBox[{"rqr", "[", 
         RowBox[{"10", ",", "0.4", ",", "spf", ",", "qr"}], "]"}]}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qr", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Dashed"}], "}"}]}]}], "]"}], "//", 
  "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Ttr", "[", 
         RowBox[{"10", ",", "0.4", ",", "spf", ",", 
          RowBox[{"JacobiAmplitude", "[", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"EllipticK", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]], "]"}], "\[Pi]"], 
             "qr"}], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], "]"}], "/.",
         "Subs"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "->", "10"}], ",", 
         RowBox[{"e", "->", "0.4"}], ",", 
         RowBox[{"sp", "->", "spf"}]}], "}"}]}], ")"}], "-", 
     RowBox[{"Nt", "[", 
      RowBox[{"10", ",", "0.4", ",", "spf", ",", 
       RowBox[{"rqr", "[", 
        RowBox[{"10", ",", "0.4", ",", "spf", ",", "qr"}], "]"}]}], "]"}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"qr", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Dashed"}], "}"}]}]}], "]"}], "//", 
  "Quiet"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAGIQXXXQ8Yg071vHglkxYHqydMI5EL2GJQdMf3xywVoW
SLfoPXMD0SHLtvqC6JzS1UEgOmOfeQSItmJPBdOtuZWxIHp7/rdSsPonTNUg
+vpGuw4Q3a/h1QOiD0QVbQTRzyKy9oPoTddzLoP5c4/eBtE9HIrvQLSD961P
INpHVPYviJ5zs5lVDkhf3C/OBqJXTHuVJw+kt8wXrQTR/uV760D0HvZFjSB6
Vs6ObhCddPUAmH4VOG8CiD61ZdliEM1nE59eDKQ5Ci1zQHRYMk8ViL72e3UN
iN4hMPcIiO6L0TwGoqdYLToFVif19xKIXiGTH1ICpGX+HwTTZ22kMkD0A2Fn
MC26OrIQRHOdzAXTy177hb/he+sox/MBTAMAmD2otw==
  "],
 CellLabel->
  "In[297]:=",ExpressionUUID->"714a2b35-4b48-4a6c-8ce9-0a34c7feaf9f"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0, 0, 1], AbsoluteThickness[2], Opacity[1.], 
         LineBox[CompressedData["
1:eJwVxX0803kcAPDZpN8vPSBxch42DxU6paTd6PtpqVUbx8SSPP3Yz1KZpx7I
5ZW66ejCEjXcejhLKeVShKQ6God6sfLcg4dOiEoemuTu/ni/3nRCzBdSKRSK
23/+n/ZgXlOvY9SGY8HXJyMLKzdYvatimZ75CUm0W/9K5smQ+pZ9aLs0EInF
Fo/ceddQv75o6q5UjOizorA1vHLUseXEo3xpIqLvl+yw4dWj54HSZXnSNLRo
aKHjel4H4u8z6jgnlSOv3Pymk7xBlPFp9+0s6U3EMSXaWt3UiFWzfR47phqF
vgu7YCPWhsh49+DbkUq0zOG9l49IH/aXCU9TLZ6hnWlK9tXZpaAa2IZfIVRo
4pBYzTCiQ4r9BOWubxtCVVo+zARLiLJVnq3O70Jxk03HMlYvB3XI3qLuiNdI
crCXsfaNLRD3fTzSyR7EeSBpi/e3h5CPqurqk33oS7NZ7CLZaji1qlSskLxF
Niux9Ef71gC1utTpRPwA+s6pza58gyPo2nCbXp0bRA/l481dbCfYKmdf/iAd
RtG3BqwP2jPBcLRhS2LpCGq8pcu+x2eB7Em5Bm3PBzSwed14e7wLOJtsnDUP
/YhMpYK1wlMIbF/r9P0c+wmlLuaKGCMANwr0RHeix9BGWUqTnzYbEl76t9hK
PqP7gXX7bLmbIMp5Pff3zHEk6Pe9Nz/DFdRyV2IofQKtO85wKGjYDM8iZUGH
Lk2iIY2xbXmrOMDkML51X5xCtTFErUbqVqjbzCyA3C+o2+z5nlfD2yC/+Dyz
p1CNYgsveS86yoUlFnbhAVenkWfiJwf1HDdo1sCSjCq/oufiN4nEY3e4g8Uo
ntXNIN6Y87JMjgfYLdEJJ2q+IUvmZKpyuSeMnp7QX/NiFulm6zRmr+CDRXKy
vTicApQDf8z0W3lBz67ODvY/FNBm/TBetmIHbO1v+XInQgOG16swId8bDkcL
RQbvNcDXqv7ljQM+4H43Z7vBQSqwtPWi+x4KYORreAJtggolvMNncMwXLrYe
K4mIoUHFQsux+YJdoBa5BMVN0+BScDr1zxY/MJnJ8IuK14TSs47zjTn+8JaT
Wo9pzoHBd5d9uwYD4LF1AzJNnQO15g2/9nKDIBxTaNJxLSh2TfKgGAdD6QVL
l8cZWhD4tEwsoxLQxHKu4evOBXXCqKfiNQFT4TleQafngjnh9WSoKgSUHnLv
BQYY6Fkr44xKQoFgOl+5konBYt2Zk0k5QtjzvnG8KwuDTdfCatLkQoi8GOiq
dx6DmQXc7/MuCyERP/4mIQ+Dst5mw7JCIeS21xnzFRgEstk/jlYI4UWcIP1r
KQbqAt7T4C4hbC+PjvPsxIBUveB5m5DgGaGplHRjkDckwIV0EnYysgwqX2Ew
XT3SHGtFQljKvdvWfRjsyCpKzVxJwoldlJHpYQwa3xYmq1xIqFL/Rii+YeDV
bM/1CSChpsisuJOCw26HIwqSIKGBKJ7VoeEQ7mSCHSJJ6KxX5R6Zi8PflSVd
2REkTMmMWz10cBC0+D9oP0rCrPsNK4keDkezUjYOJpGgRUOxFfo49NRdr1VL
SNDfS+haG+EQVWHeZpxGgrHZ50A/YxwMF8tC7M6QwGj5pSjdBIfjC3d+cM4m
wSbZcKbGDIelh0d+dsshYTXrKneajsNNo4/aAXIS/gXW5SnK
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
         Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVkHk41HkcgMc4+v1UT1hpZyfJiHUVOp6S4/tJBxk8Y8ooyvFjfk2TDLGJ
tURyRI7JKiTRGmPLlNCEirJjp1ZlUTlz1vZIuphlXNv+8T7v8/77GhICNpdK
oVBY3/jfqo2az0a2hDs619nw/mqscqSP3Nk8v+COqqddStTmLiHlLavgbqE/
kk9tLXR0+x1VKdALbckRdHxDewmjrhpNLVXcD9oQhnKXryiImqxHGTT5cklD
BBKX4rJ8QRMSmR4qpkiikMS6tnd1XTPq2ZP0qEwYj6wq9G8ZuT1BL/yFPxYJ
s1B2f33NZrcexA6h9VwSFiNCa93XNLcxlPPlUHWe8CaSG4wnvHJXIjuZq6ZT
RBOS9J7hmwuWQliMR2B1mBw9/KJrxOHpwvG73EyqURt6OjhEqVj8ATrf7cXL
iU50fGbhOYNmCOesFJQ7B7vQba9Ihm3sOgi3kP/aVNaH1u7P2pNjYwrKoGOS
/tBBNJxeO7BpyAKI+xxWNjmMGjuo52MOW0HQ586mptRR9GBKcHRFgQ1kWEsF
ouS3qEUWn/ooZBNQm6Rbk2LeobHcJNN6xy2gbc58NnBpDJV8FbX3OW0Fl2Kn
a5+E4+h0CcXipJUtrPrYuideOoEGTnm41bHtoODPehXVo59QjU7LeHeMA9jr
71hcG/wZaeaHW3EzEFgMao3+EvkF3ZRr8xgTAJViHV7tia+IHL7R5rvUCWJf
H+6wSJ5EbI0RngVzJ4Tbb2NeyZ1CJxNuSJfl7AJl8S7ifbYC/XahcqO4dTe0
hRUERJX+i5yqR3YXWTuDrTNjob9kGr3uuvGHSroLPN5tK4bLM0jHOoI/ML4X
yqrybYevK5Fm6hn2ijgmrDSy5PtVzCLO+PqNSnV3aFfBEmn35lC++4cEotkD
arEIUdvjecS5km+S68wCy5VafEK2gPqCCzPkpp7wMVOhu+nlIsLKWa0Xzdhg
lJJiJeBTQNxuvPDGeB8M+/T2OP1DAQ4ROHnXbD+4vOmYqQ1VgUptP5zL9oJT
J7g8vQ8qMDlk87ryJw543Cl01TtJhVJpatjoQ2+YmOPHqiqoQLHUu4BjB6Hk
VUJNaIQqlGXe/7zM2weUPIeA6FnVb589qLc7fEF/Psc3PEYNQsTvNenOh+Gt
c/oTTE0dYrYfOdg35gfNJq1oTbo6QJFZ2ggzAPiYSM0Q14CuNGBR6IEgvbrO
oTlHA25LOgQFVAKe2dnL2NpLQGEW4CkaJGCaX7gvIHMJaBnOtbx/EARyVrHX
cj0MTEuvRtNqgoGwtS8vz8VgtU9pWmIhF45+eDrVl4fBTIK3LKuYC2El/rt0
8jHIiHFYXXSNC/H4maHYIgzOHpCtunudC5e7H9PZIgyIwG3bPzZw4WW0d/ac
FIPmkJ3PA/u44Fp/ItqzF4M15n+7eemT4BmqJk/u/9aLLJxrSMIBRp7evQEM
eJlv2yONSThyrq7aZBSDRw3i9Nz1JCT5UCZmxzGwi7uW0ulAwgPleUK0gMFp
miWT40eCTGJQ1UvB4bxGpIgkSGglqha1VHFYv/F7LIokofdJ5+Wfl+Cw5ZSk
72IoCdMF9FcsLRw0PTmN3XEkLHpUGifr4PDdtrQdY4kkaKiiyAZdHMJGxS3K
ZBJ0jxHaJjQclm3f0EXPIoFuMOnvS8dhc0tekOUFEhgdZyXZ+ji46ok+2V8k
wTxl1bzMAAf7ooQ490ISbOwqmLOGOITyG9T9ikn4DxfFQPI=
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1]], 
            Line[CompressedData["
1:eJwVxX0803kcAPDZpN8vPSBxch42DxU6paTd6PtpqVUbx8SSPP3Yz1KZpx7I
5ZW66ejCEjXcejhLKeVShKQ6God6sfLcg4dOiEoemuTu/ni/3nRCzBdSKRSK
23/+n/ZgXlOvY9SGY8HXJyMLKzdYvatimZ75CUm0W/9K5smQ+pZ9aLs0EInF
Fo/ceddQv75o6q5UjOizorA1vHLUseXEo3xpIqLvl+yw4dWj54HSZXnSNLRo
aKHjel4H4u8z6jgnlSOv3Pymk7xBlPFp9+0s6U3EMSXaWt3UiFWzfR47phqF
vgu7YCPWhsh49+DbkUq0zOG9l49IH/aXCU9TLZ6hnWlK9tXZpaAa2IZfIVRo
4pBYzTCiQ4r9BOWubxtCVVo+zARLiLJVnq3O70Jxk03HMlYvB3XI3qLuiNdI
crCXsfaNLRD3fTzSyR7EeSBpi/e3h5CPqurqk33oS7NZ7CLZaji1qlSskLxF
Niux9Ef71gC1utTpRPwA+s6pza58gyPo2nCbXp0bRA/l481dbCfYKmdf/iAd
RtG3BqwP2jPBcLRhS2LpCGq8pcu+x2eB7Em5Bm3PBzSwed14e7wLOJtsnDUP
/YhMpYK1wlMIbF/r9P0c+wmlLuaKGCMANwr0RHeix9BGWUqTnzYbEl76t9hK
PqP7gXX7bLmbIMp5Pff3zHEk6Pe9Nz/DFdRyV2IofQKtO85wKGjYDM8iZUGH
Lk2iIY2xbXmrOMDkML51X5xCtTFErUbqVqjbzCyA3C+o2+z5nlfD2yC/+Dyz
p1CNYgsveS86yoUlFnbhAVenkWfiJwf1HDdo1sCSjCq/oufiN4nEY3e4g8Uo
ntXNIN6Y87JMjgfYLdEJJ2q+IUvmZKpyuSeMnp7QX/NiFulm6zRmr+CDRXKy
vTicApQDf8z0W3lBz67ODvY/FNBm/TBetmIHbO1v+XInQgOG16swId8bDkcL
RQbvNcDXqv7ljQM+4H43Z7vBQSqwtPWi+x4KYORreAJtggolvMNncMwXLrYe
K4mIoUHFQsux+YJdoBa5BMVN0+BScDr1zxY/MJnJ8IuK14TSs47zjTn+8JaT
Wo9pzoHBd5d9uwYD4LF1AzJNnQO15g2/9nKDIBxTaNJxLSh2TfKgGAdD6QVL
l8cZWhD4tEwsoxLQxHKu4evOBXXCqKfiNQFT4TleQafngjnh9WSoKgSUHnLv
BQYY6Fkr44xKQoFgOl+5konBYt2Zk0k5QtjzvnG8KwuDTdfCatLkQoi8GOiq
dx6DmQXc7/MuCyERP/4mIQ+Dst5mw7JCIeS21xnzFRgEstk/jlYI4UWcIP1r
KQbqAt7T4C4hbC+PjvPsxIBUveB5m5DgGaGplHRjkDckwIV0EnYysgwqX2Ew
XT3SHGtFQljKvdvWfRjsyCpKzVxJwoldlJHpYQwa3xYmq1xIqFL/Rii+YeDV
bM/1CSChpsisuJOCw26HIwqSIKGBKJ7VoeEQ7mSCHSJJ6KxX5R6Zi8PflSVd
2REkTMmMWz10cBC0+D9oP0rCrPsNK4keDkezUjYOJpGgRUOxFfo49NRdr1VL
SNDfS+haG+EQVWHeZpxGgrHZ50A/YxwMF8tC7M6QwGj5pSjdBIfjC3d+cM4m
wSbZcKbGDIelh0d+dsshYTXrKneajsNNo4/aAXIS/gXW5SnK
             "]]}, "Charting`Private`Tag#1"], 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Dashing[{Small, Small}]], 
            Line[CompressedData["
1:eJwVkHk41HkcgMc4+v1UT1hpZyfJiHUVOp6S4/tJBxk8Y8ooyvFjfk2TDLGJ
tURyRI7JKiTRGmPLlNCEirJjp1ZlUTlz1vZIuphlXNv+8T7v8/77GhICNpdK
oVBY3/jfqo2az0a2hDs619nw/mqscqSP3Nk8v+COqqddStTmLiHlLavgbqE/
kk9tLXR0+x1VKdALbckRdHxDewmjrhpNLVXcD9oQhnKXryiImqxHGTT5cklD
BBKX4rJ8QRMSmR4qpkiikMS6tnd1XTPq2ZP0qEwYj6wq9G8ZuT1BL/yFPxYJ
s1B2f33NZrcexA6h9VwSFiNCa93XNLcxlPPlUHWe8CaSG4wnvHJXIjuZq6ZT
RBOS9J7hmwuWQliMR2B1mBw9/KJrxOHpwvG73EyqURt6OjhEqVj8ATrf7cXL
iU50fGbhOYNmCOesFJQ7B7vQba9Ihm3sOgi3kP/aVNaH1u7P2pNjYwrKoGOS
/tBBNJxeO7BpyAKI+xxWNjmMGjuo52MOW0HQ586mptRR9GBKcHRFgQ1kWEsF
ouS3qEUWn/ooZBNQm6Rbk2LeobHcJNN6xy2gbc58NnBpDJV8FbX3OW0Fl2Kn
a5+E4+h0CcXipJUtrPrYuideOoEGTnm41bHtoODPehXVo59QjU7LeHeMA9jr
71hcG/wZaeaHW3EzEFgMao3+EvkF3ZRr8xgTAJViHV7tia+IHL7R5rvUCWJf
H+6wSJ5EbI0RngVzJ4Tbb2NeyZ1CJxNuSJfl7AJl8S7ifbYC/XahcqO4dTe0
hRUERJX+i5yqR3YXWTuDrTNjob9kGr3uuvGHSroLPN5tK4bLM0jHOoI/ML4X
yqrybYevK5Fm6hn2ijgmrDSy5PtVzCLO+PqNSnV3aFfBEmn35lC++4cEotkD
arEIUdvjecS5km+S68wCy5VafEK2gPqCCzPkpp7wMVOhu+nlIsLKWa0Xzdhg
lJJiJeBTQNxuvPDGeB8M+/T2OP1DAQ4ROHnXbD+4vOmYqQ1VgUptP5zL9oJT
J7g8vQ8qMDlk87ryJw543Cl01TtJhVJpatjoQ2+YmOPHqiqoQLHUu4BjB6Hk
VUJNaIQqlGXe/7zM2weUPIeA6FnVb589qLc7fEF/Psc3PEYNQsTvNenOh+Gt
c/oTTE0dYrYfOdg35gfNJq1oTbo6QJFZ2ggzAPiYSM0Q14CuNGBR6IEgvbrO
oTlHA25LOgQFVAKe2dnL2NpLQGEW4CkaJGCaX7gvIHMJaBnOtbx/EARyVrHX
cj0MTEuvRtNqgoGwtS8vz8VgtU9pWmIhF45+eDrVl4fBTIK3LKuYC2El/rt0
8jHIiHFYXXSNC/H4maHYIgzOHpCtunudC5e7H9PZIgyIwG3bPzZw4WW0d/ac
FIPmkJ3PA/u44Fp/ItqzF4M15n+7eemT4BmqJk/u/9aLLJxrSMIBRp7evQEM
eJlv2yONSThyrq7aZBSDRw3i9Nz1JCT5UCZmxzGwi7uW0ulAwgPleUK0gMFp
miWT40eCTGJQ1UvB4bxGpIgkSGglqha1VHFYv/F7LIokofdJ5+Wfl+Cw5ZSk
72IoCdMF9FcsLRw0PTmN3XEkLHpUGifr4PDdtrQdY4kkaKiiyAZdHMJGxS3K
ZBJ0jxHaJjQclm3f0EXPIoFuMOnvS8dhc0tekOUFEhgdZyXZ+ji46ok+2V8k
wTxl1bzMAAf7ooQ490ISbOwqmLOGOITyG9T9ikn4DxfFQPI=
             "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, Pi}, {0., 180.9802303036681}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Dashing[{Small, Small}]], 
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0, Pi}, {0., 180.9802303036681}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2], 
            Dashing[{Small, Small}]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJwVxX0803kcAPDZpN8vPSBxch42DxU6paTd6PtpqVUbx8SSPP3Yz1KZpx7I
5ZW66ejCEjXcejhLKeVShKQ6God6sfLcg4dOiEoemuTu/ni/3nRCzBdSKRSK
23/+n/ZgXlOvY9SGY8HXJyMLKzdYvatimZ75CUm0W/9K5smQ+pZ9aLs0EInF
Fo/ceddQv75o6q5UjOizorA1vHLUseXEo3xpIqLvl+yw4dWj54HSZXnSNLRo
aKHjel4H4u8z6jgnlSOv3Pymk7xBlPFp9+0s6U3EMSXaWt3UiFWzfR47phqF
vgu7YCPWhsh49+DbkUq0zOG9l49IH/aXCU9TLZ6hnWlK9tXZpaAa2IZfIVRo
4pBYzTCiQ4r9BOWubxtCVVo+zARLiLJVnq3O70Jxk03HMlYvB3XI3qLuiNdI
crCXsfaNLRD3fTzSyR7EeSBpi/e3h5CPqurqk33oS7NZ7CLZaji1qlSskLxF
Niux9Ef71gC1utTpRPwA+s6pza58gyPo2nCbXp0bRA/l481dbCfYKmdf/iAd
RtG3BqwP2jPBcLRhS2LpCGq8pcu+x2eB7Em5Bm3PBzSwed14e7wLOJtsnDUP
/YhMpYK1wlMIbF/r9P0c+wmlLuaKGCMANwr0RHeix9BGWUqTnzYbEl76t9hK
PqP7gXX7bLmbIMp5Pff3zHEk6Pe9Nz/DFdRyV2IofQKtO85wKGjYDM8iZUGH
Lk2iIY2xbXmrOMDkML51X5xCtTFErUbqVqjbzCyA3C+o2+z5nlfD2yC/+Dyz
p1CNYgsveS86yoUlFnbhAVenkWfiJwf1HDdo1sCSjCq/oufiN4nEY3e4g8Uo
ntXNIN6Y87JMjgfYLdEJJ2q+IUvmZKpyuSeMnp7QX/NiFulm6zRmr+CDRXKy
vTicApQDf8z0W3lBz67ODvY/FNBm/TBetmIHbO1v+XInQgOG16swId8bDkcL
RQbvNcDXqv7ljQM+4H43Z7vBQSqwtPWi+x4KYORreAJtggolvMNncMwXLrYe
K4mIoUHFQsux+YJdoBa5BMVN0+BScDr1zxY/MJnJ8IuK14TSs47zjTn+8JaT
Wo9pzoHBd5d9uwYD4LF1AzJNnQO15g2/9nKDIBxTaNJxLSh2TfKgGAdD6QVL
l8cZWhD4tEwsoxLQxHKu4evOBXXCqKfiNQFT4TleQafngjnh9WSoKgSUHnLv
BQYY6Fkr44xKQoFgOl+5konBYt2Zk0k5QtjzvnG8KwuDTdfCatLkQoi8GOiq
dx6DmQXc7/MuCyERP/4mIQ+Dst5mw7JCIeS21xnzFRgEstk/jlYI4UWcIP1r
KQbqAt7T4C4hbC+PjvPsxIBUveB5m5DgGaGplHRjkDckwIV0EnYysgwqX2Ew
XT3SHGtFQljKvdvWfRjsyCpKzVxJwoldlJHpYQwa3xYmq1xIqFL/Rii+YeDV
bM/1CSChpsisuJOCw26HIwqSIKGBKJ7VoeEQ7mSCHSJJ6KxX5R6Zi8PflSVd
2REkTMmMWz10cBC0+D9oP0rCrPsNK4keDkezUjYOJpGgRUOxFfo49NRdr1VL
SNDfS+haG+EQVWHeZpxGgrHZ50A/YxwMF8tC7M6QwGj5pSjdBIfjC3d+cM4m
wSbZcKbGDIelh0d+dsshYTXrKneajsNNo4/aAXIS/gXW5SnK
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Dashing[{Small, Small}]], 
         Line[CompressedData["
1:eJwVkHk41HkcgMc4+v1UT1hpZyfJiHUVOp6S4/tJBxk8Y8ooyvFjfk2TDLGJ
tURyRI7JKiTRGmPLlNCEirJjp1ZlUTlz1vZIuphlXNv+8T7v8/77GhICNpdK
oVBY3/jfqo2az0a2hDs619nw/mqscqSP3Nk8v+COqqddStTmLiHlLavgbqE/
kk9tLXR0+x1VKdALbckRdHxDewmjrhpNLVXcD9oQhnKXryiImqxHGTT5cklD
BBKX4rJ8QRMSmR4qpkiikMS6tnd1XTPq2ZP0qEwYj6wq9G8ZuT1BL/yFPxYJ
s1B2f33NZrcexA6h9VwSFiNCa93XNLcxlPPlUHWe8CaSG4wnvHJXIjuZq6ZT
RBOS9J7hmwuWQliMR2B1mBw9/KJrxOHpwvG73EyqURt6OjhEqVj8ATrf7cXL
iU50fGbhOYNmCOesFJQ7B7vQba9Ihm3sOgi3kP/aVNaH1u7P2pNjYwrKoGOS
/tBBNJxeO7BpyAKI+xxWNjmMGjuo52MOW0HQ586mptRR9GBKcHRFgQ1kWEsF
ouS3qEUWn/ooZBNQm6Rbk2LeobHcJNN6xy2gbc58NnBpDJV8FbX3OW0Fl2Kn
a5+E4+h0CcXipJUtrPrYuideOoEGTnm41bHtoODPehXVo59QjU7LeHeMA9jr
71hcG/wZaeaHW3EzEFgMao3+EvkF3ZRr8xgTAJViHV7tia+IHL7R5rvUCWJf
H+6wSJ5EbI0RngVzJ4Tbb2NeyZ1CJxNuSJfl7AJl8S7ifbYC/XahcqO4dTe0
hRUERJX+i5yqR3YXWTuDrTNjob9kGr3uuvGHSroLPN5tK4bLM0jHOoI/ML4X
yqrybYevK5Fm6hn2ijgmrDSy5PtVzCLO+PqNSnV3aFfBEmn35lC++4cEotkD
arEIUdvjecS5km+S68wCy5VafEK2gPqCCzPkpp7wMVOhu+nlIsLKWa0Xzdhg
lJJiJeBTQNxuvPDGeB8M+/T2OP1DAQ4ROHnXbD+4vOmYqQ1VgUptP5zL9oJT
J7g8vQ8qMDlk87ryJw543Cl01TtJhVJpatjoQ2+YmOPHqiqoQLHUu4BjB6Hk
VUJNaIQqlGXe/7zM2weUPIeA6FnVb589qLc7fEF/Psc3PEYNQsTvNenOh+Gt
c/oTTE0dYrYfOdg35gfNJq1oTbo6QJFZ2ggzAPiYSM0Q14CuNGBR6IEgvbrO
oTlHA25LOgQFVAKe2dnL2NpLQGEW4CkaJGCaX7gvIHMJaBnOtbx/EARyVrHX
cj0MTEuvRtNqgoGwtS8vz8VgtU9pWmIhF45+eDrVl4fBTIK3LKuYC2El/rt0
8jHIiHFYXXSNC/H4maHYIgzOHpCtunudC5e7H9PZIgyIwG3bPzZw4WW0d/ac
FIPmkJ3PA/u44Fp/ItqzF4M15n+7eemT4BmqJk/u/9aLLJxrSMIBRp7evQEM
eJlv2yONSThyrq7aZBSDRw3i9Nz1JCT5UCZmxzGwi7uW0ulAwgPleUK0gMFp
miWT40eCTGJQ1UvB4bxGpIgkSGglqha1VHFYv/F7LIokofdJ5+Wfl+Cw5ZSk
72IoCdMF9FcsLRw0PTmN3XEkLHpUGifr4PDdtrQdY4kkaKiiyAZdHMJGxS3K
ZBJ0jxHaJjQclm3f0EXPIoFuMOnvS8dhc0tekOUFEhgdZyXZ+ji46ok+2V8k
wTxl1bzMAAf7ooQ490ISbOwqmLOGOITyG9T9ikn4DxfFQPI=
          "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{0, Pi}, {0., 180.9802303036681}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Dashing[{Small, Small}]], 
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0., 180.9802303036681}}, {{0, 3.141592653589793}, {0., 
     180.9802303036681}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.899191175559408*^9, 3.8991911934962*^9}, {
   3.899191245577835*^9, 3.899191273747528*^9}, {3.899194258282827*^9, 
   3.899194313613503*^9}, {3.899194360494864*^9, 3.899194381890396*^9}, {
   3.89919452527073*^9, 3.899194582747326*^9}, {3.899194616621078*^9, 
   3.899194654832519*^9}, 3.8992020477748327`*^9, 3.899204803350974*^9, 
   3.8992679499167957`*^9, 3.899353186268264*^9, {3.899366220409192*^9, 
   3.899366243783492*^9}, 3.8993663142381687`*^9, 3.899366375428575*^9, 
   3.899366962707821*^9, {3.899367057790832*^9, 3.899367065197452*^9}, 
   3.8993681039418697`*^9, 3.8993682598287373`*^9, 3.899368303370552*^9, 
   3.899368335075498*^9, 3.899369019654413*^9, 3.899386156020056*^9, 
   3.899432970072268*^9, 3.899439911533739*^9, 3.9001366145415277`*^9, 
   3.900136826323845*^9, 3.9001370418065243`*^9, 3.900137903493483*^9, 
   3.900138178686997*^9, 3.900139155084841*^9, 3.90704160160218*^9, 
   3.907043184056617*^9, 3.9074011782915287`*^9, 3.90764708923263*^9},
 CellLabel->
  "Out[301]=",ExpressionUUID->"ba60a823-e38f-4917-b84c-8a450fa09b50"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0, 0, 1], AbsoluteThickness[2], Opacity[1.], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1: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
8D95U9Lr
          "]], LineBox[CompressedData["
1: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

          "]], 
         LineBox[{{0.3662589126368193, 1.4754280491240697`*^-6}, {
          0.3669230293326119, 1.4716740590614563`*^-6}, {0.36789106452194426`,
           1.467111673036925*^-6}, {0.3688590997112766, 
          1.4594681907453833`*^-6}, {0.369827134900609, 
          1.4526803155945345`*^-6}, {0.37079517008994134`, 
          1.4467916091831512`*^-6}, {0.37176320527927365`, 
          1.4377963868383858`*^-6}, {0.372731240468606, 
          1.4340403851065275`*^-6}, {0.3732367437589008, 
          1.4754280491240697`*^-6}}], 
         LineBox[{{0.377850115059887, 1.4754280491240697`*^-6}, {
          0.3785394516046001, 1.4706063016234339`*^-6}, {0.3795074867939325, 
          1.4606803944161584`*^-6}, {0.3796946371825849, 
          1.4754280491240697`*^-6}}]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1], 
             Dashing[{Small, Small}]], 
            Line[CompressedData["
1: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
8D95U9Lr
             "]], 
            Line[CompressedData["
1:eJws13dcjm8XAPAUSWiKJE0jlTYVOZIklbRU2iVKe++9lzztvaeshj0uSUiS
jJIRCcmqpGGEt/c6v798vp9zrnPOde7b8zyJOngaHWJmYmIyYGVi+v+/PSwb
Rjd8Htq+e/Km7qfWi+CgE+AmODa0fS6k9nJDPSjsVJGpmaGOsROuB2a1X2Mb
md7+37fHeOvhkdLVpvNs1KaPFtVD5cYI3+3c1G03/9aBzzr1TR0rqdPFZupA
Q5h5xkCMeij/SR0McSWEOChi/oGTddC8SFvt81bqNf1pdRDDzP7XV5Na53R8
HRj9vnd9Vo8aig7Vgdjk0ej4/VhfXrsOJr7s28lhQ81mvaEO2t5zL8g7TO22
fXEdZL56fFvYk/rk3v5acHiak1QfSD0570otKPSY6chHUU8sLq0F5rsrl1xO
ohbhc6mFRzde3NfIoO7y31sLlZdLjt0roG6fWVULPi22hiaV1AK1IzWgcVKU
d6CBOl/oQg3w1Lx9cqiFOqEutgaGSmpyR69Qp93nmrt/rpN5YDvW0xmshZhj
GwSY7lNzRJ6qBaOkzy+SeqlfqoXVglj0qRLuV9TSkkq1MBHsaVs4TK3Fy1wL
bT7youJj1C7MV2og0/X70IkZao8nqTXg4HiuWonp3f/dEbSzBhSsAw9fY6Oe
NvxbDcymqhJa3NRy7p5z99f//bF7JXWmrMTc/XdfO2EmRv238k0N+KhHug9K
UvuoFs7dX3WH7BFF6pCbxnP3V2D59m0r9WUhjrn7S95qDtGk7tzWUg3N4ol+
LHupuT67VUOM4J7NafupnxxsqwEjvsU/ltlQV46E1YAYx/1LJYepi1+K1sAE
67HQdZ7Uw1y3qqHtn8G2M4HUt0+7VEPmD55/ylHUYokc1XDw25PW1iTqgMu2
NWAXwjC7yKB+dHpXDVix6I2eyadO6ZStgQNpC+PryqldHBfUgCnfzVVl9dR2
qS+rwag0ojm3kbrZ9EI17Fu/ZU/6Reo1PjnVoK3aFBDeQf3FRbMadrW5LfXv
oZ6fIlENGroS1W79uC/Z2SqAJ2+3OA5S87y4UgVbrcseWo5Qm17MqQKVYQtn
43HqT/e8qkDJc/k/nR+4fy3lKpD/8TBHg+n9/51dx1wFMtFHpbewUXe97akE
SfY9N+W5qOtvl1XC+qz5Fhv4MW7xrwrWCLaOi4hQM0k8rgKRmtBEfglqoUO5
VbBaRlmIS466n82iCgQuTJxdqEI9PLSkCnjvHhma3k3toHG0EriM1gaP7qNe
ZmhVCUteDHIOm1GHpfBXwiLH4toBW+ol2j5VwPrVbFuvE7WWhnAVMAfwPuny
pJ7UeVsJ//52u7QHYj3b7EqYTUyZdzWSOnfv7kr4waWV35JIfZbjbwWkyV3w
rE0Y/r8ZJaKlwNx6QTkuZOT/vpiknwHckrrdr/M/0fuynTCG4YVl3B3l1K11
nJZw+f2ESWM99eBXQ3s4dlMrP78R81ViecGxovBF1EXqqO3XdoBq5KjQkVZq
9clLBsBhreFg2IGOUTQib7fk1qj2YL5Pgya5yP9pRLQf6x32lydHp7dJsw+i
uQQEweFJhufEB2q7l0Z2ZHPz++bnYzifT6oFWcxQnW6bwfrfDU2IzcJkFscV
n2n9pS4HieL7l1p6wtRM/SvsCdtNuRSl9dQ9zo7eZKA87r6gLPWgo4oXaY7o
51qgjOfnc3qQRCtpk69Arf441ZVYbYnK69VCjwm4EDn+J8+v6VOPk9v+ZMH0
eqFaU+rywmk/8vxxqH26Dfa7J+dHTjc9qA44TN3o4ORLYo+Jj9h4UBskMHyI
uXug1O4Aarm6slCyUfeeh2wEOrkrhDBvEG5ekUAtMjoaTJ6y+k79O4rz7o0L
Jiff3VYZycH4w6ogEt0mENZTQu31bFE0MS33uH6xBuc5fT+KSEW0MVecomZT
yIsiTFbLtZLP4f2yraJIr6pLsvc1apUXglGkYQXpOnAL+927Gkkipri5NO5T
5+vHxxHjx4eMJXuxn1tMHJFoupTLM0DdcWVrHJlNX/r81ztqxu7NceShm/3q
t1+w3qeNcaRW55zdvUl0kGgcCZVYVN0yi89PmT+OGLBafyia/4V6x3ASWfuu
UTJuCXVHVW8S+XVjvofbMur+4wuTyYMy8yYTQWqVxokkUh1+clJtDXVSqUgy
CbZkUlkrTd3IzZFM9FVNQpcqUTtPyicT8RX1ZGorNZeiZTL5Mfl73qud1OO6
scmk69G+Xbd1qfO3NiSTisaqpNPG1CM8xekkIH3mXq4ltbbK5XSi46bLGXkQ
8wcFjxFhnTIjJ1ecb++WY2Ry/fecfb7UF5/nHiN3F+x+phxKLcc8eYyUvi0U
FInF/oOsDOJ7Y9SWLZX6HbMig2iXaVSNZ2K9dlsGSezoGYgpom6tVMwgt7/Z
8PNVU9d3LM0krKu+GtWdxHkmuzLJLs3Qo6rnMB5omEHi3Bd13LtG/ePhqkzS
npvHbHObOsqFNYuwtK7dNt6N9wt9lkU0PrYExjyl7pE+nU2ieTSalw1Sn3yu
n0Vat/Z8qR2h9jPemE2YDtmsV/2G/ex4c8j29C/2935i/fzfOSTiQkixNfNX
+rzlMrMJGWR7OsZOzaYYn0P+LMrjjuGlbnwTnkvUFNfqLROk9nO2yCOhVi0J
tWuo9dzZc8nl+B03VDZSyxlz5JFfpx/87txE7bj+Vx5R7bfebA3UJ/9czCVB
8754jWlRSzueziMXJUNORO+jXnK6IZ/MGLMN85pjPLujgGwOzxWptaNurYnM
J/61ayxVjlCfvZ5YQM4+aM7p9KbODswtJJM/1HusQqhH3KwKiKLYA/axGGqD
pYGFxEfXeld0KtbnzCoizX6fI3mzqU1mXQvJt5LgyzXF1MWffYuI3J2FU8o1
uJ/dFcXEczxHtvMUdVKrSxE5vXKNi9V5jAdUFpNRjebqUUJtp369hGx0U38d
dYe6/1RhMXHL6V7J20NtnjpYQk4SK5Oafur6gaVl5POHT+nKb6iVxH+VEEnu
4Lt3P1JXi8qXkSNbFs63mqDuuLupnNQfzIHRX9Tq8nplZCRNPDiKZfT/vlyx
p5ysP9/UwrOEWkW1pIwcfr19tHoZ9ZJDTuWklq1bQnk1NbsWTwV5L2918O5a
av3FGeVkjeWnEksZ6tu8ihXkYFxQ/9fN1KN1t8pJ5SlW3qjt1KZWbhVElEk8
qdqAellxZQWx29DUtvkA5ocaVJJyo+1/Ouyp+Q/2VpDXofeVLV2wf2pSJRGq
sfT56kMt8lO0klh3fzwZGUrd79pVSYpnAj9wx1Fr+wdXkRcirGLVadSZPwSq
iIBOttXmHGqx/K4qcsBXLK+jhPp84uEqkl/c+NCillpo8epq0n8Llnw9Tf38
/bUqsmKsSyvyAvUaRnA1yc+4bv/xOvWTk3+qCL9Sc5hxB7WA0om5eF913rUe
apcZjWrCH5zXvP4Z3uf7+7n4qpT7GW+oGcaFNWQlCRv5/ZHaYadkDRFgcRDq
+UU9wR5YQwprTFS3sIz93yGqa2vJKu3dJtWLqetbSQ0p/qTqybGM2rEwspYI
HpVOCRKkllYRqiXFssI1Q2uoJXY/qSWrH3G36m2kDgoPqiWlfvNfnN9EzbVx
bR0RWjEzJQLUEV335+KXPnKlalE31KXVEWGrl1JT+tR6Xap1RKTihv1dW+q4
BxV1REwq7b53NLVHZ1Q9qbwfMfIimbo0Y+dxIu7lzaKVSa3hPFNP1pwzVRWo
orY5GnCcrNsuWtPWTs2vHN9Aat/wtkrfpx6V0Wkg6+JYX+T2Uo8weE+Q2nU/
p5heUT/vHmgg6+9+5nIdpr59puEEqXd9JdU7Sn3ymdsJIsHxUGv7DHXXcb2T
pL7xpv3xfzhPFO9Jkr3BkiyaP07n1R84QZ6EPLkHbNQyL6OrYFnX3me+S6gb
bR9UgcnqO8P1XNRbdq2sghwP9cmBZdRpfvZV0Hf90jzeldTt62uqYDm3Iqf2
aurzVz5WgqnDScFwUep+srkKclvWSjavpeb57Tt3fn6Z8ocN1EaSjZWw3JR/
l6DMOH4fTs+dr8swMlSgjslWqYK8H+x2CZupB708KqF/T5z7lS14n+ETlcBf
9CdkHKg7i4crwfxLQNLandRKuXyVkL9tPMdiN/VQgfnc+fQjVcd0qRUs0+bO
Dw41tu+jDtt0owLM5a3IT2Nqq/HZCiiI6b0nY06t/XtdJTx/rP/soBW1oPD+
ChBY2zGcb0cdMJ5UARYBOybvO1ILFV6qgMI7l+exHKF2PjxYDuODjcFjbtj/
n3UF7P5V++2FF/UnzjvlUMpbcqTDj1pae1MFTEpnvTkbRK05UVIOOlrJByrC
qH9xL66ACtvIh0ejqEffeJfDjyD/PSFx1H1zP1ZBP9P1xuEk6ttHNpdD9Ql7
VeM06uX3y8vhd7tZ03YGxvtYy8Ho1d4N0tnUJtGe5VA/s7OCPx/fD4/0MmC2
FozurKNWZxSXgutEOFPmMD4fSZkiUFu945+I4zf6ffQuLwukBrnehftN0O9j
jxor0P8g0hYQhC6SMAWvUblyzzB0qtA+yJxSj3COQots3QFnZw2s7OPQF4VX
QB+L/RaLJLSCqTL5we7Nb5yG5nxjAAI80dO6DPQDWQ1QW5nxRDMbzTbIBTYi
Fc3b8tHgq0ai1jcxNhejn0vrkUqZGx6y5Wj1e6akfdNDPYlq9OhGGzKs9kZS
tB59NesgYdP8xiZwkrq1M8yJSOrO+8DTSB2l/cqS6Blx31p8FvO1+RyIWzt3
bcF36kGTsRCSfk80LnOGulw3N5w0PpJ3SP2N1tofRR4926Ee9w/z085Fk8lB
Q6Fwlu+03wuhWLJ8xH7WfyG1SBJPNFEZ837usZi6cTolhlhMR1904qS263se
S8L+ZOTa8VIPyjjEk9L5lX4HVlDLFfnEktbFzUZGq6gNJl/GkSGeNjldYYx/
Dk4g8wUecWiKU4/bjyeSdaJDX9TWU3MZiCYQbYmJzk1S1OWT9YnERZb5uIws
1otSTiZpm3kS1yti/xjTRHKqnsf5nA+1xA6eud+Pvdd3sATifcZPZxIrZvdV
hqHUPw4nZxJFWYGp0kg8f88tk7Bb3en+Eov9gw9kksOcYZvW5GB/jydZZJva
Bk6fAup6jqQcsuxI38j1EuwHoTnkS05s29JKaqbTQTnkZptcsWUt7ndvVA4R
CXjPnHUB48xKeWSmMvPl4BWM/zTII90Ptp+XaaV2/mSXR2pnvxwLa6dWV+Es
IOEbCo90dlCrbJUrICamu3fy38fnU6pZQKRjJwUPP8R8focCwtJYMd3Si/MN
+xSQ5y/1e+Y9p+7fmVpAmhbNHt/3Cp/nuFkRSdp8PLZkiDqpN6aI2B00tf48
jPVsK4qIMoNFWfUz9cjNO0WE41ojV+IYddT3mSIy/NH605Pv1EF8csXk2vLF
7WI/cL5uq2KSvfNiidcszuOWUUxcvQ4FEqZJ+j50Xy4mGiU8hksWUJunHi8l
Ap3XJS0WURtovy0l36bd5tcvpfbazFNGOsQFXk1xU9txWJeRcoM7F3Yupx5Z
Pff7Tb9B1PW1EHWcE1c5Wfu0W3OjOPWTLYrlZJYlTCh0PXVrsUU5OWHd93C5
HPXFsBPlJCYl9oSjEnW7XG85sbggF9+sQt11maWCyL8bsGHaRj3pLl1B2LhT
VfR3UJ99az73e22bCk/xLpx/f0oFOe/y/vPHPdQ9HzorID0v85ayPrXS9RMV
cKh9e1m8EbWI9tznv9q3L0GPTTHf26UClgkVGolaUp+0066Azzq7pT1tqU2E
xCqgLXBywbWD1FFt0+VQUF3xmt2ZWs3uYTl4PdS/ZO5G/eNxXTkISx13m/Sj
fvfOsBymzUy1NIKp9czWlkN3HIsIIxzzC0bKoKap8edANLXzwcwyCHtl/Vgq
AZ/XPYUymNy9reRQCnW++2gpuDUJOpWlU5eLXygFy7gXv3jyqCU8ZUvh0dfL
7XpF6NZXJaBjVpieUEbNlVRcAlskD4j9qqMeH/1TDM1ZKl8UT+Lz7r9QDJJ/
Vpx3b8R88yPFUHl4JrLuLL4fljzFINDTt+fNRaz/4GwRZKqe5111jTpo9cEi
YK/KGTC5gfutZCuCmCX+dem3qPtHthbDT38T74671Iz0D0Xg9VpxK3M3ddKg
bxGMaPMuUHuE9UfEi6B/1aP8M88xXmZcCAbxTQ4fX+G+Uj8WQMcoQ1r8LT7f
t4EFoG7uNW31Ae93/G8+XLyxrzX3M/XgBkY+yEnJpvSM4byPV+ZDfTaHCfsk
xiPkCkDk79fVmj/w/TUm+ZDndP9D+Ox/+9qZDxwPTzZdYJqi80TcyIOELWmh
3+ZTs93Xy4O/Va67pBZR1ydeyoWApbqch5ZSM7y0c8FbTUW3NJuaC/pSgMkj
O/JYPrWBolYKpJeNt0QVU0e1PEuGBubjggerqcf7zyXBUMfK0fVnqeVqPBLA
65e/2MqL1CKL38XDX6lHpuxXsZ+9QTysOpZy/ctN7KfPGgcNrcPfB+6gdxrH
gsqEhsSDe9hPPS8GbouXWbU+oG48+jAaTPb/ZjQ9xvpSG6JhKMHsVuVT6nL9
oFjwutjyM+sFWv1KDPz9yCkT/5q6Z8uPaEhb5eYQ8Pa/fuujQWBvR67TB+y3
Qi8K6iPW3DP/jOc7RCLh1puXilu/o/fWhoIJr6qz9Ay1eu90MAxp5hSv/o3n
o+SCwCvgWw/HP+pB1soA+Fu3dwETyzR9fv5n/CDt2XHVb6zU6rtmgkBgMavH
EPs0fn8NBEC9mkPlY45pvM88f9jsQfraedB/eH2hvUxg8fnl6HwrbzB6GLC9
ToA66nCkBwwyP/bNF6Jmeq7gAh5KsvXJYmjNfYdh9lDqy5B16KNCHpCS94HL
TRIt8P4I8N/ductaBuc9E3cI6n6VBesr4LyLmexhs/Tsqe2bsZ/UuwPQbm0+
JLcFz4OWARgdO7tcDNDGIrYw2Mqly6uB3vpnP3hMuEXO10KL6+yBWfG7LVN7
0FYC6yFl/9qR4b1olWBlwp8YLdhviI57qwa/yjQdPjNwvqUO3gRmtmXK5+B8
69YEkmh95bbAApzv7t8A0l4jN3GthHrQ7ngAYfuzQWx+JdZrvB9A+Cw4hwRb
MP9JeBgxb2LjOXgBLaYZTYrZmDWOX6FuvGISTV7b/vYeu05tV70/mohdmKzY
1I7Pz+xoNJFb9txevxf73fkXR3xdH2dkP6PueSEeT863dd14PkDtpWMTT36t
vP1NZIh63PNEPNnmfV3UaZiay+xaEonquGh46hPeN3dxMmkXbo7+Porn/+1O
JgsDTzSpfqeWe5ydTHS6q99EzqA3TCWT9LWl3Ld/UzO0NVPIw7C8HUuYZui8
6+tSyLInDG+j+dStxwVSiblUSkU+G7VXrWk6KYqJffhqCeb3VqeTV8/C5q3l
ppZTlDtGxOQD5F35qJnC6o6RQ0me9k0rqQ2aFzBI/WvnjJnV1PlSGgzyZbPD
jW1i1CqDSQzi895EtFOSWr1RKIOcV9M35JKlNj9jmUF+Zu2ONlWk5tpWlUGi
NLa8GdpKzVi5LZPcLFDk3qBOnfTmaCZh/Sa9w1MT5wv7mEmOlglX/NajdnbI
zyKFs/Ptl9lgvftLcsgr478MCwesF+KXQ0RPzLSWH6buv/s+h9Qf+CSy0ZPa
ruxULvnc+NbA1xfruy7PIzJsA1GXAnFfZsl55Nz5B4O7onB+7eB88mPpXa60
OGqJG+/yidqhNvVHSdTj6eYFJPLqFS/+ozh/SV8BaeM9V26TQd04aFNIWF1P
91Tn4Dz9A4VkT1sd0+cCtP7+IpK2skJOvhT3uSm1DHq8Cu0CK6mrt2wrB0kG
12+/Wqz/AMog9kxCjk8D7iPDtgxeds/Kep3G+TKDymDzqE+nezPe1x5KgbH0
o6PrebyPkVUpfJK2/ed8mfrHkH8paOr1FhwmWM8vuRRKXHWVHNuog65ol8B0
yo1u+9v4frHuKwGDBuUjtp24b32HEmi4e4rFuhuff3dkCcz/KF5q8QjnnVhf
DDZshSrmfVjv9ZZiuLCe6/H+59Q9V3YVA9fuBHfjV7j/q7rF4HJ4dqHhEHXH
8TnPt7I5Iyn2g+bfT88D1d1ifwcqqKNOH0gFparOpDs11EznplJA5p8Pb9Nx
dEhcCohduCkR10Q9vrghGRavP2QseYNa7tvTRGCNXfqK9xZ1q5ZjIjC9Puf8
p4NaRPJtAkzmskb09FA3xg3Hw+jEabbLT6gNXu6KhxF9s6yqfowPXY+DAdb6
+oBBaq8MRixE395ozCn8k37ec1X7Q5hY38APMerBRF4/CIiIcB5ah/GwDT7g
svlB+DkZ6ihC3MExM5CtTAFd/u0I2IwKZyVtpmb6m3AYzHU6VvtsoW7VHXMA
41qvekvA+F4DG9BnXqm4SwPjbn6HQNvmxjUZLWp1k9f2oHH5iDa/zn/1Fa1A
bTnP43n6aI+DJrDZ57L1Z0Os9yFHG+S6HUae7EdPnpABScnFvuQAuv6yLFmb
0PKnzhqtlakOd3ep1qsX4/1Y23xJ0J0Imchy7N817ksk9rSfvVaNrtnjR552
Lto6W4/ne+OCSYLevhtbTlGLFK8PIZu7s3cHN2G934dDyPt9z+9fOPffPu6F
kOyHwibTl7De5/2hRNP40HMlgvsOjIwik08a7HzbqLns6qNIlen4cNNtaq/2
edHEqH+T+3gntYG3QTRhtgj9LvMA+2edjibNL1qD3R9Ty9X8iyb21qxMJ5/i
fsUH4gjXa92ETy9wf9kK8aTVLmPJhkGc1yY/nngN9WU6vcN68uPxRNhRcGXt
CDXjkGUC6X5vX/buC3UjV18CiXCqWyv+DefL2JlIZD5+OWE/hfOP3EwkAy4K
CuU/8byGchJJ+xJ48dUfnE9NMZWoeVyD1cy/aL2vHankyxjzLUtWanVjwzRS
5K2tW8hO3fP9bhr55ffYbAUvtUjy96PkQuhHL+411EmrgEEO/5GZ2SdBzT+Q
zCDLI/3C06WpndXGGMQv5l/y4k3U5RZzn/dr5u/i0lGlHvSayCCP41Nyk7ZR
a9+2yCQKyXxVC7SoR/hWZJEhdssNmjrUKpEpWSQjrfxMjD6eDxnOIuocw5tu
GFEbnNLNJuPHpK7+M6X2ir+cTcq5vTXAktrOQT6H7Ms63xFmi/EHFTnk77JZ
/SsHqbk2sZXC6dwdvT+dqNkEj5eADX+ipYob3meeRgksLex6E+CF989dUQpX
V/E4n/OjZiw/VQJuJWaj34Oo+3V1SkBQuMRPIRz7XXhdDPfKh355RWM9GZe5
v4eq3ReOJlN35OYWwfO1LUel03He9/xFkFz3g9c1kzq/4UwhqGyAwuO5mG8x
9/fQSEOsyEghtZzop0LIk75bu64Mz+8PLASt0xwbD1VRj4v9LoBpWZOWqjqc
72dAwdzfhwWqQydwf6t+5oPLb0vJ/jPYz3hpAcjtElrV3YLvA4fU3Pn0wcXt
F/B5WjHlw9X+ytlLV/D9WcmTD4//nbiecQ/nS+HMg3n6ZNeOz9RBGzuzwfrT
kGG55G+6D52/x4BPXNrF5ji1nW1mEDAyU02Pn6JubfsZBOzMnzUmm6jLd2sE
Q7y3juz285i/lt0fmN4cX5VymZpJSc8fQg0WsfUSzP+5yBumrztPCt9Eu6p5
g7dsx6DLHTz/Jd4bvpSuv3/uHnXUO1kXcOJIvMTUg/19LrnAUPhwje4TtO53
F7D+uisztx99us0e+q1qIt68pFbfMmIPxl3zXaXfYL3YHQ7QvdXRLPA9WvyQ
Iew5cXNn20e06YwhtAuIyy0dxfkbRgzBj0dg+orCLH2/973yIWPRwUOsyugb
R32Jy7f+bsOt1FG9In7kvZ3KleLt1CJTD/2IXU9e3Yed1K05Y8HkxfaZLAVt
PP+kIYSYnjGNCtdDW+uHkodC5906DKiZ8njDiF463wHe/Xh+8Y0wcueP3y6b
A+iLneFEw/2J/HFr9FhUBLn2UlFo0p6aK3skmqjoZbFvP0wtx+MQQ1quTEwn
u1Azfj2OITJSRm+feFA3KhrHEnF27qsugdj/rFMcKQ32qj8Xil489/nJ//FB
NlMUdXmHYzzJMpeN1o2j9nr6N55wdKS75yZR98QkJZBk5dEDb9Kw/p11iWR+
3V4t6Qxqg7dnE0nk8lMKgTm4r31pKeRX/BLhtgLcp+i2VOI/5bp4aSn1uPPr
VDLueG/GrBLzLbLSyPDOlJ6vDdjPe+wosW/5eFXlDN73ZUE6eSm253hsC55/
Z3KMmGXW53RfwPMZTAzyaB5bzMqr6FEbBhk9VWBj0Ir7ia5kkEUWUlsT26l/
nHnAIGtYr60gHdQXE7gziHqz/uRkF7VEjl4GsbIZ7JF6SJ0fFloCgew+pxx6
8bz9jhLIPM+SUvCMmm3PVBGcdsg53DOA+5W5WwSdHOt3Lhyi7gjMK4L3ly8K
wzBa17oIBHlf9p8Yxfu2vy2E1Jtiuon/qNUjxwug1vPsesLyh/5/Sm0sgLZV
WvOnFlKPcLoUwC/fI9ccuKiZcnvzwXlNoyyIotUq80AzftuyKQ1qiS0T2WAn
/2Bcaje1iHlaNoQO2N130KX2+iidDc2b4hJ6jKm5Ml2yoPsN38GF5tQX9y3I
go9H67aDFXU/a2EmzN+iKuhvR814uDkTRIY7f5xwRMd2ZYBaplXvkDN1Up5V
BpjBaNNKd+oOTdZM8PkUmW7gjfO45GZAei63a6I/3vfGxgxo0KjaTYKpWx0b
GXBrVGnNVDjOO7WVAYOFt5mkYzA+WngMZrXMBxwS8Hzi2XQ4x+Zb23MX46Uu
cTAcFv2V3Me41Jz5vx1TOvUQ+4eGxIHOodLQol7qcmXnGAh7drIt+RnGL7nH
gGbD8CuNj3jexDUKAoSm1sp/xfpXj0RBfSaLu/A33P90Yhg8Z+U5u3QK/cAx
DBaHivz+/QNtoBQGj3QtVpxj+0vPb9kfCPNbnW2qllCrt33ygc1KgTUZXOiN
xT7gXB//JXIZ+nOwDxQKZit68OP5r8t9wP7r/X3rJaiZUvcdgUz7l7l80uhr
bs7Q3vtpgEUO3SZvA9N7fq6ZUESTRVYgQRa6DSqjg1IswEJheUv3VrTNC3NI
q13z6+p29MtPpkAEFHec2IlW/mEM4+k7kgp2o6NeCoEYi8GDRF00U+Y8YhJo
szxgH1o7cwNJ+Oxm7Wj8Xz/hTeSibWi1kRla56g6+fQ4+bO6JbrVdRcR1M5X
kLVFL/1gTfSv1gavPogWMLYjkXLnWhc7oSs67QnHI4mf4QnUUdbtvkRdS1nd
LQXjY41+xOfyrkSLdNzf5TP+pK/SgU85F/NfHAskbCu8rdYWotUDg8iW1Mgq
3lLMrysJJiW+xfLjNeig6lDS/aEh6NVxzI+5GEaYrC5d7zqF8f7ecKLQc4f1
ShP2X/g7gjhq9u09fg69WyyG5F58l513CZ9v5o0Y0iH9/UX8NWq73D2x5Ff5
PHG/Gxjnn4gl0nxcLg638HxgfBzhPXPlZM1d7KcSF0d+aTuNjdzHeMSxOPJm
iEdB+hHOd/BUAukII36efZhf0JJAzix3udD8nFpk9c0EktvI92vqFXX5quEk
Eq5zQ031LdYT+5ZEHN+5RYZ9wPztoslEN4K/7fpnzF+qlUoU+Nvns4zjvOb7
U8nKZs/dWpPY729SKmHSW5WS/APj7KdTyYf3t7u6ZqkHT70+SrojfTi55v2j
cXWJYji/UsjIeAE119iyYihpuZudu4i6MWVRMcTt9X/6bCk1U8d0Ibh9EBFY
zYP5M2OFYBzdZWW3nFpksLcQtqwKKqsSoPbyay+Evph1DY1S1FFhPgVwTfDR
l++yeJ57fz5Unw+XVVaibuVXyodUgw0+ISpYz3tV/tzn2ZOz19Soyzf/yQMO
o9jrnXtx/u++uTD1WYaZwwjzh/Vy4WX8c01DU+pxcZlcuCmckJhtQW3A+zcH
Gi7Jdz61wfvM9mZDhvHAklUHcd4zDdkQ9DVpn40Tzrc1JBtsE5UyK1wxf9gw
G7REB5+886S2Y1uZDRHjap/+ZmD+F88MGEufXqbYh/PM+5sIX8aF2jY+x/sL
pyfAJ6PdnhKvsN5lyUT4cNZTUHwIHX0uHt4tz7+7ehjzG3QSYCioNYD/E973
xEgcvH4+Is47iv357eLhpRr3w6UTmD/7Ixael6pGsE3jvg4GxkA/k4MUyy/M
P8QUC70OKf1//mBcODAanLPcC34yM6n//3xZQhQ4mJHvo+zUrQGNYbDXaZ51
uyQ1U/GgPejl57TckEbzaZqCzt0N7Ndl0EeWm4O2lNGFSwpoj406oGU1vPSC
Elrk5Dyy62iI49nNaHU5HtAYq+Q+swX9ZXQX2SGi7HxSDQ0tGkTd8B45DuhG
WTMCMbZ8depou+L9ZFvLd9dqDbTGJXui9i6xrUIT73PN0Z5s4RNcWaaFcfPj
dkRVq9GzWBvjEkVORCVQ83aBDsYF9ZyIcn2/YJ4e+v52D7L5mZtvtj467Zs7
UWKf15lhgPZXdyeKW3NEjhlhvXg9H6LgtiEwzQT3t17Kh8iVXLufbIrxnuf+
RLbbcE2iOcZ14v2JzL/3IXEWWO/HIX8inpgo6+mCPicVRXz6lCIc3KjLB69G
k9a1Q137PajV7ZyiiU27mouaD8b1zseQU7yfLsr6YdzqQByZdchbKB5ALXLj
bywpnDdRvSiE2u6PeTz5aFD2fTYU44emEohKuZ7GeDjWi7+VQBLHfjLeRmL8
r1US6YO6133ROL/WhiSyNt1EpjOWmlGiWQR+A/PCr8VTy7m4FsFN6TP3GhOp
vYwrCoEnzEqgOhnj20kh2N9bdCQvFevxzhRAo8CFCylHsV+nSCHoX+Le752B
88x6FkAJ2/UqxyxqLqfMAvhi5jZhlkNt8KM9H1Kmbx+DArx/BHc+PNvl90q+
iLrxuFQ+SOSIblxbgv19zPMg8F13KH8Z7uOUXx7cVgzrXFxBPQ6JecAXu2Hl
v0p8focu5ILjoz6niWrsv6wrF5i95Rc8q8f5WZbkgmHrK+OuBsxfsDYXyjnT
Kq+fxHmmNHNgzEb1W/Np6h6Z/TkAp4e31zbi/iaCsuHon6z0gmbM55r7PflS
b8dA2lnsp16RDVLFo1JR57E+J8mCkM9FIb4XcV9+fVkwcYh1fGkH7pvLJgOG
LF481/iA+1telAxLtpnV2X3EeZmkkmCT8GPfiM/4vqkGJYHNvH3qxV/RKYsT
Ielt55LLY9hPKSEemm9pPXv6DeutfDb3+VPXVjP1HeNBFnEg63YZ5H9g/Qeb
Y8Fcf/Pifb8wHh4SCzFyzU/dZtG2C2Kgb/K4Vz3TvP978Gl7FISFF1QKL6Ju
7XQLg1pbPs9ti6nV2b+EwYMdGVstl6LlHgeDGGvyk1xu6qgG4UDQG5lfcZYX
42opgeDfGeX+iI+aqcfSDzrSg1g5BLC+WJw3THhNPpISRO9+5g2rjL3K9ghh
/quN7qC56Yurkwi6d8odPFY4q8SLoXXznSD/59v5VWvQu8Sdoe2F7cPWdWjN
RHv4cu1FySsJ9PxNDsBXbuYyK4nzmo45AMQ83iywEeMOe8zB2XEfi4rsf/Ma
HYCrEruLfRXRbY06MMx+0zljE5rp/NQ1zq+w6YwyOuowEzg0be7+tBUtN6BN
0rKaC9kAPd26m5zzl3Fap47+EXWAvDJrUNTUQCcXmRO2LeuYHDTR9w0OEgXB
yq5ILZz33JKDxPLv6oISbYwXDR0hcYMFh67oYJz/8RFyuo1P4Zkexl2bjpD+
6oy/0/r4PEx1vci8xKX3lhlivNPAi0geSc5TMMZ4yElfYqK7wNFgP8Zz7viS
iI3Rch5mWD+o3pfUc/6ZTT2A8dDtgeTRt6C7xy0xLqwQSH4/nsy5Y431jPQC
yZrzXg7vbTFf/EMI0c//IsPigFZ9H0KCQpx/izhifq9jBKm0encHDqNTfCNI
F9hlWznj+zFaE0GmRF7ahbhQ23nzRhMhFvON+W6Yby0STbTfP/55zoNahH9r
NAmXSg8944X5N55Fk2Zv7T/1PhiX8YghwxeYIyv9cH4WiViy6u9VpuIAdNWN
WGKgGRiTE4T9NQKKIC5Ffv6xEPz/0rS2CC71fI5PCsP88GeFMLq8dmFMBJot
qxDEre2SQ6PQ73cVgnmVwGL/GHT8twK4IXuMwzmBmnH3QAFkawfx6adTy/kv
z4e76Qp5uxnojJ48+PvkC/+OTOqeZUF54GRvL6iUi/Nc78+F4rpVpRvzMf9u
fC70fO0VXl+I++GRzoUtITriAqW4f/eUHPBsnV/DW462lsqBatbr65ZW4nnr
gWzo1wuuZ63G/bGlZMPSLEVJplqMR8llg8azryd+1uF+fF9mQYBw/cbvx7Hf
orgsOHHI4cyXE9TjemuzYPCEoPzwKcxPPJEFfBN9za/P4Py3zbNARyVD6VkT
9nvMlAUt7QtUus5hvo9uJoywt166dQHjyaMZIGgYsvX6JWqDz3kZkDAwCs3X
0EYvGHBF/HjrieuYLx3FgPEjBzVqbuA8h0QZsKZxdXvpTXweroxjcGD66a78
Wzg/1+N0SFfLvJNxB/u/WpoObTF6e1LvYr13nMdgpoP1Xtw9zGfZmw7SnDf0
Iu5j3DH/KNjvD+0OfID7ZX+eBrlFmwy8H2L8CVca/FvfYOzYi/eHrBRQ8nDs
tX6KbnyRDM5nhczMnmH9pAXJUPKrv9/gBXW5r0kSPFLPstAZwHqWsYmwMHHv
y52v8f0WCksCtfsLbba9wThfUyJ48ba93vwW77v+ewLUHAizl3uP/fZKJ8Dz
ss1vN3z47322jQeO4XFH8Y/Yb6QsDnZKnxgW/IxmvhkLQT6HnJd/RbuxxUKS
7qjTljGsF50RA3lrAp1svuH8metioPbPv8Mx33Ee7uZoON+XdLh2CvdzZFM0
3DrDfbhzBud3vBUFT5IKD43+xPqb9KPgnb34IZ5ZrLfnTiR833LScfNfdNme
UGBetsnRgomZzn8hPAR4vl47GMGMFgwNBrmyBw63WdGPcgNBPcjc4RMbtfrd
jADYZ/jGnmMxdev9Kn+wkXSxV1iK+Z9P+IEHy3c7U06MszzwhfCXoXYh3Ois
8z6Qdm6+XSkvNZNPvRsUpx+1beNDi4+7wAmn5bbDK9COnc5wWb3Mhl0A6897
eRg6V0rYyAhifHuPI4zcU7UOEEFzPLSDH9VtVoVi6LYaa1gYoWtF1vxXL+UA
LDd7Yjm0Dh0usR/WyVlbsm5Aq5oYwqZFwxaSUugojS/XNIc8LPQ3oltz5InJ
lZkDPrJoofAd5GB21IFcebRboQ7xcV904LIiOlfbkMRoZZq/2oQ+57aflP+o
Mlu3BT2TYE0aH0qb6aiht3Lbk+sN50w9AG3Be5B0x4Jppjo6Tu4QeWV1Z/95
DdzHQgsn8nWTwf7nmhjv2uBFZjmemfzVwn2X6HuTJSP2JmJ7MK5g6ENW3fhk
rKWL1kz0JZKFvsYue/H5Rub5kS2+s0bp+9BKZ/yJ+VoOoz5jrOfVHkic/+Ya
/tqP9v0WRAKfChsKmaNXfg8mCY31BhoWOF+yVCjJTZY3OGyFcbVtYaTG4fK+
FBv0P8Nwcnbrzn2n7TDf3S2CtC/r0n/kgP3vJkeSx19N9KcdMf84cwwZuj2w
V8CJejzCuBAmyg7vhSPUg6LchTAveEzPwZXarre/ALiMgvQS3KkNfmYXgIjU
PL0GT6y31rIAZOen6HZ7Y71GvgKAAR7dCV/MV3yRD/rni3SWB1AzVHPywfm7
wz++IDx/fUU+xMpJnuULofayZ+RBqfs3Z74wPP/mQx5cbLi4mi8C47y2eSBW
1jvOm0DNlbIuF9ReFtfwJmGcrTQHzFY6WvCmUJcHTeaAj6kUJ28a9mN2y4G0
rImbPOnUPSOj2VDbcymIh4HzG23NgRtLozfyZGJ+f8vc73Md7SHubNwPt3I2
TCdy5nHnYv8rjVnAdatPlzsf82f+ZIEUcykTdyG1yJLYLNDafugcVzH67Z9M
sAuTduEqpW78qTf3+/7SdyGucpz3VUcm5ExffsxZic/PWSsTGhVjkjircR9M
7RnQ6bVnG2ct7jN3cSa8O8U1wVGP+RGpGfDv09Najgasf2JJBghIlFlynMR5
38YyQOnQYS6O0zhv1zMGlB6IfbvkPPqr9jG4mKuTv+QizuMinw6PH3PvXXKZ
milM7iiMcj2bt+Qqvh+jz44Cm375+cUE37/QzjTw0biWzH4b71vrkgJaUjOy
bH2YL1YbD6OzLmEs01hvY1IQHDDX3fBzBv17dyC0t0j1jf7E+zQP+4MM55LY
d7+xfme2HxS4fJF9/gfzPfb5wvzbXS8f/MO4+qg3eIieSr41j4XeR77AC56F
Hd18hYU66jvDBzT73d82LsC4jIw3nFHUZ9QupGaKYvUCgWMy24oXYb6ApDuM
7xrLTVyKrhRyhqIWLx0bvv/yiyyBldNwxngFWvuDKXi5yFfvWYnecdcQtEQn
/iitRset2g4T6b5Ni9eit7RqE22XAP5LSuic2iOk5ZbprdOb0SEL3YiQqLJP
tQr2j1HxIN+fztw7pkatHpvlTWwU+4PiAfMP5vmQjvSLa0PVMb7zpS8p3RUc
eVgTz/9YE0AWVRyQttLCuINxIPGbVX1mqI3n3d2C5v5eEEjYrYP55bnBZE/L
L4Vtepj/7kQIOcvx4rWCPvrA8VAi5HIlTcIA9/lkMIwk3ypSFTLC870LIsik
SNgwrwn1+E7+QrANs8paZIr52+c+Xzqfqqn/M6Me9CspgLL0PwWfLKkbX64t
AJ3ZiL03Dv43n0w+nDOz/XX+ELWd4lQeiLRsrzvphHHNS3kwfYRpXr4rxn/t
yYOKp9FnPXzR85xzYfiW3Ot0f+qe+Xa5IH329aIzgdi/b+73qndlutKDYGqD
5ogcOM/YZjsWSi0y4pkDsxFfkjkjsJ5SeTbscC86KxuF+1iRnw0Jljqv98VQ
l7OmZ0PXnp+LvOKwvuTNLOBRqVdiJFBzrTmfBWbrzGwbk6jlRJuzoHgZa0pP
Cu5HdigThpjPnR1Pw/6jLzJB4tvB11zHcD/OA5ng/pqHXT6DmsHFlwnN928o
GWZhfiJ7Jvy44mXrnYP7v8CWCfrltux+F3Bf/RtTITudY1P2JXxexpeT5/6/
XLM9ewXnt3qaDI4HVp2bvI75HzyTIJjnqa1/B94nqCMequP0zwU8w3h4XxR8
8vnzOvcFxn3/RYGs/Un2CwO4H4NtkXB5G7vdzBvMt+YPhwfTt9iDPuF9I84H
wbL3fpvyv2DcRiwYLB6L210cxThrTAC8OxN97scEzmvm7weSpXKD/FMYV2L3
B8+01+yqM2iOHB84G5K+6cBPrHeIzxd+OW+zC/6N51dmeIHOFUl1/z/o+I1e
ULSUX8T7H+YHGnnCF9sFTO7z5tO4aJgzqDVPvHZmQW+Id4KI33W25oupmbq1
rKB7b852k6Xo6FELEC6PETbgRG9rOQBeE57/dLnRpyvMoVXT+vVuXjRr9i5g
SeexVV6F7udUJiaD/0BxNfqJ5xZSrfBVSFYY7bx3G5mKe/5XUhTNM6NOtJ7e
ebVOHP139X6SJBJus1wK543ldSD9Pi7AsxE9T8SBbLhlJsQhi/m9dg4kZMWu
v4vkMX6vwZl0HlF4tUAR40bnnYnAVWEybxO6748zceVYWvpnM+Zf3+lJrtr9
Cv+pgnGuvx5kScsH66ktGD+q7kmsFvRu+6aG8df5PuSUWdvqr0Ddur3Eh/w9
fubPiDq1enKxP9GfLR54p4Hxplh/Uqqfcm1QEw3R/mSsPLDkpRbWi9wfRNS/
O4b3a2O/aZ1CYOwysn6iQ834aVQIg3nbt/XoUXMJzX3eyH+SXt2lj157qgAe
pS8cuGlEbWDEUQBibyavXjfB+EKxAvBVHCq+Yko9/jcwH5b1X7VqsaAWKXmd
B46SDWpnrLC/yu88OBeWJ3jCBvsf3ZcHrA/iZmvtqAe7XfPAVNTnZaUDmikm
D2p9ba+WOlJ7Jb7IhZlbesWFh3Efh2dzId9lvVWmC9bPCcyFkavL1NLdcL6m
FzmgysksmOJBLef3Jweet7x8Ee2D83aH5oAUa+eVcD+slzSUDWHmF4qCA9Dd
rDnQ1VAd6h+E/dM9s2H1nwxL7xDqxiel2aA9tPdSXhjeJ2hrNvjdWbSCRFCX
K/dlQdnJW37vovA+Ut5Z0JkR/Yg9FvejtCwLpgK2ycnH47xcFzJBxOrnUbNE
fH7cK7NAd8e5z+HJWL/iZiYErPPeU52K9Y8czISKxRvrOo/ivJVLMqFrfGT+
t2OYr30+A370VjusyKTuWW2bAeJX7Fq3ZePzbOXKmPv8ExRyzMX5Gm4yICS+
PzQlH/dj48qAGpfsZ42FWK92NQN69hkoPy2mtjt2jAExlRy8267jvExnEuFU
YqfXwRsY/7krEfrdErqTb+LzaX2TACxGGtKNt/57X6MSQEb5b3LfHYxrqSTA
AcHLH2bv4jxHX8VD3LyAXeJdmF+bHA+Nw/JVe7oxP1w1Hl7c+8rk1YPxl6Nx
wNp03Cb3EcaVpWJBIffQ1atPcD/ne2PAOlRU4G0f1q8uiIEku4HARc/w/IqD
MaA01TVa+ea/57M+CmyfJ+ndfYvnf0xFQsp1zYax95gfExsJ56qZ2JaPoIcM
wmAw+eohtU/oteJhcFTo5MveCXSaWhBcZHHeMjuJ8xXJB8G7EfF8sZn//n+s
8gfO7tdT2j9xnzfY/GFLS5Gx52+MW8z5UL5ZU84fjJ8d9QNGOC/n1X//zSfg
A1ccHrgNzVtA8/es94Hh3amdbPOpmS6aeYCDrp3IWlb02CVPGNDfFLCDDfN1
57mCuRF7lzU7+rGJGzzZ/1o0ZAk6NNMJDA6cDczlwPN/xY7APavk+81cGOes
d4S2g4rBn5ehu3/aAzixPVi4AvP3rbWESy4Da9asRFt424CSR3OI+ir0I31T
aPRO7LFajRbIPQBS/lbrgoXRLf8MoTZIPixHFH123k4QC2N91CSODvLQhZLI
F+u716LV0pWBP7Yx/NN6NJezAMlOiH/MKvnfPjzWA2eKxQZxafTVFQok5ahs
5HYZdMTO3YQ1Y36vpRz66DcjEp39TDJIAe3gpUdm805HZSuhD782IUFFsX2N
m9HvblmSyVJz6fsquI8CEXviWbkx5uMWjF/eZ00+1TD3L9iGcaOn9uTw8acb
xbajs7sdydDJk7GwA33joxOxbox+ZrETz1d3upD+FlPZwF3ovkknYnJBKj5r
N+ZzXHYhPZeZXpzZg/YvcSe6pFeuS5e6tVDci9y+0ZAwsve/9yXBm2jcinw5
3wDrjXb6ENJhoiBqhPkjq/yIateGpG0m1CIDroVw9sHfgQOm1Hb/NhSC3OPH
igHm6PiBAjjZV5+caUGtrp5XAOufh78+bUVd3mpeAEJv1qd+sMP4ylf5sGQs
dMj8CM7T/CsPkiYMVPxdsf+nG3nAMr02PcP9v/1n5MGv2Qeqnd7Ug8Kb8yCA
qebYsC/WH2bPg28sIe+ZA3Deja9zwW3hvq3CQXj+4JW57wv2NRlbQ/B8VF4u
OHL8HDYLQ7ddyIHX3N1qfhF4PqsoByz4qjIZUWivud/DffxBIydjsN9Ouxww
FNwLd+Nw3gmdue8PYbHs9wmYf2dTDmiLz3ycl4z39RTOgZvrurYLpWK+l0E2
6KS/1ll+FC1enQ09UxP7OY5h/a6d2WBmzWrPmoF+9ToLXrWvdPubiWaNyQJH
6Y2B09l4PudZFnzOUo8ZzUVHRGSBz2/jo8P5eP9dG7Lgh4NT/qtCjJv0ZEJE
Z0hVXzHe/5tvJixQSD/dXYrzb3uTCWkFFZdul2N8S1Im8Mw7104qsb/i9kzI
d+54cL4a8zs+ZoBwz4vnp2sxfqw6A2qVx97X1qP3WGWAdBnzt9IG7L+hMwOa
WZfP5p7E94c3PgNUPTYsPHYaHQMZoLXNYHVkM86feJUB96sPSgSexX2KRjPA
ZEmgoud57N+nwQD7FyV7bC9jfcu6YzCi0WRidhXPb9I8Bh4N7bb7CL5vmgPp
MMXd77K7FX3POx3Cgj/7b2/7b5986cD85m+Ucjv2qzh/FJK1edJkb2N+1aGj
wNW4Nm99B+Zz8ByF3BWqlcKdaN+uNHBhq50vuoiVnj/vEQX3mJOO7lxMHdXw
OBKk/xxZfngpdev5zihIn9EtS+LE+C2VKBj7tlHiBDdaJykSDL5wNt3npWYK
zYiA5uFvquN86LH0cPB7cU53kwBapycUenvznpgJ4vlP/KGwuSfYOkQI48r7
Q+BH+zbP62Loxu9BcOC68I83azB/du776vKledHz16PlmgJB8OzbRes3oPk2
BEL46VuZe6TQRzID4FV93Sq3jVivQdMX1KuSq9NlMR434gMVJa4bm+TRa6N9
gDl/7/nHipi/S9UHDmbKbp/ehLbW8YH2NO4OfhXMZ5vxhrWJ3w22bsH4nnUe
kBDd+8xaDV150h0+hF5wiAJ0lKc7aAcUfK5UR0f6uEODV6jfLQ10jIs7LHa1
/vNBE51/wgncDm1PYN+NPvnKCbptRTk37kHPaDuDrAVL/j5d9LnLDsAweS/i
sxddceAgfNO/czx7H3pj00Ew2nNc4YIhmh+s4ezO1CvPjNEcn2yAD9w1Z/ej
HX7bQoDKvvtC5ujJEVPoV5A33WGB1vQ3h8L1U04JNugUJ0P4Lfp0vN4OLc3Y
AVaCl4LvOaAd+7WALC9iHnVEj0+sBWHu8FQup/+e90tliFpsu0zxCJrprQgZ
WrCjZL8rWp3BDTuZxNcFuaMZdVtJ9a/5Zwo9/8t/IkEWTA0rX/NGV6/aRQ6P
dbS+9kXr2RuSjo8Ne5gD0O+mdMiGd2mP1gShn+8wISmvPCx3h6Ct/liQL/0G
746Eoee/2E/2PlZwT4tAi7lbkdP3l02fjkIfVbEnnB3TEQ9j0CGrrYlXW//C
yTi0YZg9eXj1MmN5InoRnyNRuFC8UjUZXTVxmGQ1RVRapqIz+w+SyRN2UhFH
/9uP0WFiWqtxtvwYemGQM7lQvmbbzQy08WsXsuafZuiNLPSqNhfCsD506XoO
moS6kNkr8TPX8qhFRIcKwFmgdtPVAnyfBb8VwJOg276XizAexFoIO54ON10s
wfPajgVwetPC8fNl1IMTYQUgkL1e5lwFfp78KCyAhIndbi1VGM9gKYAJA+eG
phqs/2ptAdxbenzd6eNY/3VrPqi43XU8eQLrC7zLh+rOj5UNp/D8Qst84NrA
/qb+DJ6/lpoPYYmSwnVNeN6ANR9G3utY17Rgf8bWfNiv6VpUdQ7rXW7Pg7bK
1GcVF7Ce5VQeyMw7uaL8EnpNbB4U2nbtL72Cn3fBc9/vrORLVvE1rHdGNw98
BJc+KrxOXe53LA9eh2zkKriB8xxanwd6z/bq593E/P5ruXBR2SMt5xbWF1qQ
B2ty0zuz7lDb8VTkAmPyNFvm3f/+P2nmwqzRAy3Gvf/ihblwpGksLv0+3u/g
llzo4+S6mfYA6+kO5YCGh9y81IfYv3trLpzuMtie/BjzV3/KgVVS3uGJvXif
Zfk5kJSccSX+Keb36eXA5Iemn7HPMP9ESw7YaT1SjnmB8wcdnvu9UD3hHzWA
5zeL5oAKC+/ZiNc477Z32VBjrzgR9gbrjZVkA0+rsVzoW8z3F8iBCCE/j+D3
eB+ZF9nwKSz7ZOAH7OdblQ2mL85+8v+I91nmlg1tqr0Sfp+x3hq1bJDNnzrs
8xX3Xb4kG4qn+Wq8xv77//M+C9j2b37r8Q3P37uaBX4tpqLu33F+vpwseMMd
aOs6hf2+umaBvldeyZEZrP9INwsud1944fQTzy+WzoJ1G/tXHv6N+YZzfw9n
pv4wc/zz3+fTbCb8/cif6/AP4wfeZ4KrtuoTu3kL6fnJvkzo3qp2y4ibOsru
UwakXPT/rcWL8c0GGbB70xn5rXzUTKFeGTC/ecRJdgV1ueaxDGiVESsVX0kt
suM3A8JPWD5ZsYpanYU/A7ZI5LAvWU3dqrctA6aru9WZhPH80ksMaBFlC5wU
wfyHLxngVbrj1IgY9lsWwQDpVaFvX67B+tfOMeBj3tmVD9fh+dItDKhdNrrv
lgSe1/FmQP7CJxK5cphfuIgBBx+7pj3bh3E1/TT44VJkbJeO9TV74uFYSNXC
SAbauSge1qWcuFKSifnPAuOBFLR4Xs3+L984HvYfvyL+IhdNdsTDl4s3n/7M
x/udkZn7e7vjXip/Ee6z4WosrOp/vF25BOudnHPzhxff95ehJa7Fwp6Zt3V+
FVgvZc6DrF8ss6qwnm1PLAQtn+RsrsG4TXYMcK6bvdlTh+dT6mOgdtP8oLHj
2M/0QQzAriXSHCfRvxbGQq/JskHp02iXB9Hg5iiYrduI9ZjZYoDFb422SzPG
JU1joDBWejbpLHpIPhoUspQa685j/vWIaLhbqeZ4+yLOd3Gunl2zJv/7y2j+
R1Hw44ZeF8s1PC+hFA3HHppEiV3H86KqUbDujZXSjhuYb9AYBdfGHf9X073H
xZi2cQBP2aleokhR2hIyi9Bb2qz8NLSljZoOiqLpOFFNh9G5aUqITbUZp5Ww
SELJhFdRvYlJohQjOjgkxUZRibTh9el63j+/n991X/fz3Pf93J/5b17zblBu
nJUEVwVBjlhG459/z99OjOIeuUW5alEStuknji27TXm9MBk6C3eUtNyh3NUn
CcXICPlcR/0PcpNh57DfYGoD1R8zSsLzjUfk5vepXiJPRIzg1K61cmY9bJMw
IbHQMrKJ6qWKYuSlX34veUwu6hBhWU55rrSFPCZDDPk52bqGNvL0xESEXKsb
/+4p+ZFQBKU7DyvV2snzwxOQ3fIkcn4HWeiWCJPuTrZ9J/nbDhFqPve0bX5F
NitNgLfqx6xdfzP7MRSPT1O/Wp9+Q89rxYtHJpv1WdZDuXNhHIwsJhS+fEd5
3Kw4lNtq+Sj1M+fjRCxc3X+cYviB8njHWLzhG922+ki58rMYpEQvSOQNkdsO
x0An1dxEPExe4xUD6X505oyQJxvHYNUpm0PXvlK/mUoxeH7JYU2Lgspo7sqO
RsxNtzGfFUet0PMgChPkXpe1fyC/y4/CqQ7+ZnNlctHWKFgOhOqtVaXxDb5R
kCvGNG4ZR3lpmhDBk5J2SNQo94z+/nvXcOcS6UTK933Ps03+6LmnQT6RIoQJ
5+Dx3slUP+ukEDXcY2vVtCgfvL4FQTc7K5SnUl7VEQk1i/lsRR3KHyzdggvn
hHtGdMlh/Eg465cOf9Sj+r96hPgg+ebXp0/u50TiAMum7s0MckSDEBbx6eZd
M8kFURFo7bl/7Pls6re4VwixzzTV1jmU9+REwOAhT/jwJzJLbwuqVuW13ptH
9dNHIuBf9ta61pjc2BsO1iLT8zcXkl8XhOHMyTjt/5qQ0yURWK1dmVxqSv3U
zoajN43VfXEx5VVBYcj6utrl/M9kllQAU+Hesvwl5A33wtHU2Tz75FIaXzwj
HLHrDf44sozy6vpQ6NTxhw4uJ5/MEqDcqtBHwiEXi0LgfWmgNn0l+U+PYCiy
fzHb+SvZVh6G3MPJR7baMs8/OQy2E2+xRHbk6+ah6E5RC4+2Z9Z/jwDpH12a
w9eQy7QFWBCUvSLYkXne3SFoePL8XIATuTMyBEKnOVO8XcgqyiGYIhOIPdaS
/TVCUGJx6ZWrO3mlSgg8Coa5juvJCiV8jOhzrtp5ku/W8nF0786Z1hvJNpqB
sFKuTwePXJsZiI54zY8WPuTED4FI7fXgmfqRv2ZuAtv3eI1xANnYazNqH74y
YQeSh/L9IbBbcNhwM1nnUADUyyPH6gWTf4rko3jRNYG2gNxUEwjX3DGPNMLI
j4/64ZP2KqvxEWR2gz+yd2eeYW0hS3/mw/KbfNKYKPI4f188FeqK/okmT37v
h61dPp2Dscz3ttQbszzyHd7HM+PNfVFd13ulW0ROmOaPTZzFMzrFzP5Ue+Nf
lxPSniWTG7T8UMCuGmhOYd6/igfHHJWN8u3kFi1f9E90rK5PJacc9cK+bfsX
3t5FXvbOB+afWv+8kUaOHe+Fx0GGihXpZO5dH8Q/3RRckkm+dMoLes5F8uIs
svqB9aiUDS4rlJA3tfPgu8Ty9Ol9ozaYcWZfxeaeusG2A5T/xvZG+HGe9aRD
5BdGnohd2yexPcz0m+WNJNVt7aIjZL6WJ1LLNRcVH2POO88NmRF54lfHmffb
uwH7Z1vUTc9l5u9wR07zbV3nPPLwdReczPAM2plPdmB54iynp6TsLDOflzuK
B8XK/QXkC3auKD2j7janiNnvRU6o3Hgid4OUPF9lPWo0zAb2XGTuwwQ33JPJ
OLcuk+9HuKIpzj1r5Ao5NNYZT4z/fmpylbw9jouX7fHGgWXkdSwHvN0/XpRT
Qa5k22PA7mhtYyVZ8Xd3DH9ZOE35BvmAqTsUi68HWsqY8/nCDap8l/9E3CI7
p7pBXadz7OnbZOurttCuj3Zpu0OearoKP6aonNCoZ+6v63YwMs9+b9NAXuRn
D+PuectF98njDRxgdrQ8QyonZwq4sHR2bOtqIkffccJKVvvc6c3M+Sjg4Ler
wjinVrLBGRs4hY6tSX1CHpHaY53hAa2yZ2SjAC68m+YE9LWTc+ZxEJhWetHo
JXlVkC1CYa+4oYtZf7kDovvbuHteM+sptkJiXuix6m5m/5TssN1Dofeft+RZ
jVzsniCxNHlHLkn+FZKqmbv5fcx9ucAR2dGXmw8PMLnxShyfa8tuHCSLXq1B
/tPH0awhZr81rHFBEiRbOszcX3IzXLEZmRwxQrZosUHFcIZv3lemf/UyyM7r
S1sVVEdtWbQad32l39SVyB80rSHXWulg8wM5q84crbXynARl8rpJdngh5r+5
oEq++WkFuv89tKRrHNn6HAd9Xb/v0p1AlvevwFC27iOuOtlM1QHfHApnp04i
X+iaDZbS8shrmsx885ZD7UpD1XstsuYAB5rBvhpG08jmXzwqdPU/8Dx1yVMD
f4Hhgx3ns/RGXdm3dVvF3J3aX2T6o7bK9ZdUsP/yv/jJQNXq//938j8DFn7a

             "]], 
            
            Line[{{0.3662589126368193, 1.4754280491240697`*^-6}, {
             0.3669230293326119, 1.4716740590614563`*^-6}, {
             0.36789106452194426`, 1.467111673036925*^-6}, {
             0.3688590997112766, 1.4594681907453833`*^-6}, {0.369827134900609,
              1.4526803155945345`*^-6}, {0.37079517008994134`, 
             1.4467916091831512`*^-6}, {0.37176320527927365`, 
             1.4377963868383858`*^-6}, {0.372731240468606, 
             1.4340403851065275`*^-6}, {0.3732367437589008, 
             1.4754280491240697`*^-6}}], 
            
            Line[{{0.377850115059887, 1.4754280491240697`*^-6}, {
             0.3785394516046001, 1.4706063016234339`*^-6}, {
             0.3795074867939325, 1.4606803944161584`*^-6}, {
             0.3796946371825849, 1.4754280491240697`*^-6}}]}, 
           "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, Pi}, {-8.433898059934108*^-7, 
            1.4754280491240697`*^-6}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1], 
             Dashing[{Small, Small}]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0, Pi}, {-8.433898059934108*^-7, 
           1.4754280491240697`*^-6}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Dashing[{Small, Small}]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         Line[CompressedData["
1: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
8D95U9Lr
          "]], 
         Line[CompressedData["
1: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

          "]], 
         Line[{{0.3662589126368193, 1.4754280491240697`*^-6}, {
          0.3669230293326119, 1.4716740590614563`*^-6}, {0.36789106452194426`,
           1.467111673036925*^-6}, {0.3688590997112766, 
          1.4594681907453833`*^-6}, {0.369827134900609, 
          1.4526803155945345`*^-6}, {0.37079517008994134`, 
          1.4467916091831512`*^-6}, {0.37176320527927365`, 
          1.4377963868383858`*^-6}, {0.372731240468606, 
          1.4340403851065275`*^-6}, {0.3732367437589008, 
          1.4754280491240697`*^-6}}], 
         Line[{{0.377850115059887, 1.4754280491240697`*^-6}, {
          0.3785394516046001, 1.4706063016234339`*^-6}, {0.3795074867939325, 
          1.4606803944161584`*^-6}, {0.3796946371825849, 
          1.4754280491240697`*^-6}}]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{0, Pi}, {-8.433898059934108*^-7, 
         1.4754280491240697`*^-6}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {-8.433898059934108*^-7, 1.4754280491240697`*^-6}}, {{
     0, 3.141592653589793}, {-8.433898059934108*^-7, 
     1.4754280491240697`*^-6}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.899191175559408*^9, 3.8991911934962*^9}, {
   3.899191245577835*^9, 3.899191273747528*^9}, {3.899194258282827*^9, 
   3.899194313613503*^9}, {3.899194360494864*^9, 3.899194381890396*^9}, {
   3.89919452527073*^9, 3.899194582747326*^9}, {3.899194616621078*^9, 
   3.899194654832519*^9}, 3.8992020477748327`*^9, 3.899204803350974*^9, 
   3.8992679499167957`*^9, 3.899353186268264*^9, {3.899366220409192*^9, 
   3.899366243783492*^9}, 3.8993663142381687`*^9, 3.899366375428575*^9, 
   3.899366962707821*^9, {3.899367057790832*^9, 3.899367065197452*^9}, 
   3.8993681039418697`*^9, 3.8993682598287373`*^9, 3.899368303370552*^9, 
   3.899368335075498*^9, 3.899369019654413*^9, 3.899386156020056*^9, 
   3.899432970072268*^9, 3.899439911533739*^9, 3.9001366145415277`*^9, 
   3.900136826323845*^9, 3.9001370418065243`*^9, 3.900137903493483*^9, 
   3.900138178686997*^9, 3.900139155084841*^9, 3.90704160160218*^9, 
   3.907043184056617*^9, 3.9074011782915287`*^9, 3.907647103360573*^9},
 CellLabel->
  "Out[302]=",ExpressionUUID->"beee6d99-2108-45a7-97bf-b36c61c90cc7"]
}, Closed]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalUpsilon]tOS", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["\[CapitalUpsilon]rOS", 
       RowBox[{"2", "\[Pi]"}]], 
      RowBox[{"Ttr", "[", 
       RowBox[{"p", ",", "e", ",", "sp", ",", "\[Chi]"}], "]"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Chi]", "->", "\[Pi]"}], "}"}]}], " ", "//", "Simplify"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalUpsilon]t", "[", 
    RowBox[{"pi_", ",", "ei_", ",", "spi_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"\[CapitalUpsilon]tOS", "/.", "Subs"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "->", "pi"}], ",", 
      RowBox[{"e", "->", "ei"}], ",", 
      RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.899194680885172*^9, 3.899194722218244*^9}, {
   3.8991947866707897`*^9, 3.89919482380068*^9}, {3.899194946651363*^9, 
   3.899194969246273*^9}, {3.899195713951632*^9, 3.899195759071331*^9}, {
   3.89919580752945*^9, 3.899195845947011*^9}, 3.907042937105706*^9, {
   3.907043013265086*^9, 3.907043016034067*^9}, {3.907043071516029*^9, 
   3.907043082582259*^9}, {3.907401044073291*^9, 3.907401074594028*^9}, {
   3.90764703966724*^9, 3.9076470446099987`*^9}, 
   3.907647111024393*^9},ExpressionUUID->"fb2babea-ad2d-48b5-83c5-\
acce8ba5dbc1"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox["\[CurlyPhi]", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "23703913-b0a5-4968-8fad-4ed4997716fd"],
 " integrals"
}], "Subsection",
 CellChangeTimes->{{3.89917965094309*^9, 3.899179674701448*^9}, {
  3.8991797486243477`*^9, 
  3.8991797727616463`*^9}},ExpressionUUID->"b1233e12-a3ec-4c16-a156-\
61ac238618b1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[CurlyPhi]integr", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], "u\[CurlyPhi]int"}], 
      SqrtBox["Rfunc"]], "/.", "fhRule"}], "/.", "DeTrRule"}], "/.", 
   "Subs"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"N\[CurlyPhi]", "[", 
     RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "rf_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"\[CurlyPhi]integr", " ", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "->", "pi"}], ",", 
         RowBox[{"e", "->", "ei"}], ",", 
         RowBox[{"sp", "->", "spi"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", 
        FractionBox["pi", 
         RowBox[{"1", "+", "ei"}]], ",", "rf"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     SubscriptBox[
      OverscriptBox["T", "~"], "r"], 
     RowBox[{"(", "\[Chi]", ")"}]}], ":"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPhi]tr", "[", 
    RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "\[Chi]_"}], "]"}], ":=", 
   "  ", 
   RowBox[{
    RowBox[{
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"\[ScriptCapitalJ]", " ", "+", " ", 
        RowBox[{"sp", " ", "\[ScriptCapitalE]"}]}], ")"}], " ", 
      FractionBox[
       RowBox[{"EllipticF", "[", 
        RowBox[{"\[Chi]", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", " ", "-", " ", 
           SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], "r2", 
         RowBox[{"(", 
          RowBox[{"r1", "-", "r3"}], ")"}]}]]]}], "/.", "Subs"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "->", "pi"}], ",", 
      RowBox[{"e", "->", "ei"}], ",", 
      RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalPhi]tr", "[", 
         RowBox[{"10", ",", "0.4", ",", "0.05", ",", 
          RowBox[{"JacobiAmplitude", "[", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"EllipticK", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]], "]"}], "\[Pi]"], 
             "qr"}], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], "]"}], "/.",
         "Subs"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "->", "10"}], ",", 
         RowBox[{"e", "->", "0.4"}], ",", 
         RowBox[{"sp", "->", "0.05"}]}], "}"}]}], ",", 
      RowBox[{"N\[CurlyPhi]", "[", 
       RowBox[{"10", ",", "0.4", ",", "0.05", ",", 
        RowBox[{"rqr", "[", 
         RowBox[{"10", ",", "0.4", ",", "0.05", ",", "qr"}], "]"}]}], "]"}]}],
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qr", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Dashed"}], "}"}]}]}], "]"}], "//", 
  "Quiet"}]}], "Input",
 CellChangeTimes->{{3.899196668364132*^9, 3.899196740076252*^9}, {
   3.899197029938088*^9, 3.899197049163031*^9}, {3.8991970868327007`*^9, 
   3.899197108790927*^9}, {3.89919718108119*^9, 3.899197211241514*^9}, {
   3.8991972635090923`*^9, 3.899197264297742*^9}, 3.900138208230731*^9},
 CellLabel->
  "In[305]:=",ExpressionUUID->"af30e24b-5473-4a9b-bedc-a03402ad55ac"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    RowBox[{
     FractionBox[
      SuperscriptBox["p", "2"], 
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       SuperscriptBox["e", "2"], "+", "p"}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"3", " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            SuperscriptBox["e", "2"]}], ")"}]}], "-", 
         RowBox[{"2", " ", "p"}]}], ")"}], " ", 
       SqrtBox["p"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["e", "2"]}], ")"}]}], "-", 
         RowBox[{"4", " ", "p"}], "+", 
         SuperscriptBox["p", "2"]}]], " ", "sp"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         SuperscriptBox["e", "2"], "+", "p"}], ")"}], "2"]]}]], "+", 
   RowBox[{"sp", " ", 
    SqrtBox[
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["e", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], 
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "-", 
          SuperscriptBox["e", "2"], "+", "p"}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["e", "2"]}], ")"}], "2"], " ", 
        SqrtBox[
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["e", "2"]}], ")"}]}], "-", 
            RowBox[{"4", " ", "p"}], "+", 
            SuperscriptBox["p", "2"]}], ")"}]}]], " ", "sp"}], 
       RowBox[{
        SuperscriptBox["p", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "-", 
           SuperscriptBox["e", "2"], "+", "p"}], ")"}], "2"]}]]}]]}]}], 
  SqrtBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["p", 
       RowBox[{"1", "-", "e"}]], "-", "r"}], ")"}], " ", "r", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["p", 
        RowBox[{"1", "+", "e"}]]}], "+", "r"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "p"}], 
        RowBox[{
         RowBox[{"-", "4"}], "+", "p"}]]}], "+", "r", "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", "sp"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["e", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], 
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "-", 
          SuperscriptBox["e", "2"], "+", "p"}], ")"}]}]], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["e", "2"]}], ")"}], "2"], " ", 
        SqrtBox[
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["e", "2"]}], ")"}]}], "-", 
            RowBox[{"4", " ", "p"}], "+", 
            SuperscriptBox["p", "2"]}], ")"}]}]], " ", "sp"}], 
       RowBox[{
        SuperscriptBox["p", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "-", 
           SuperscriptBox["e", "2"], "+", "p"}], ")"}], "2"]}]]}], 
     ")"}]}]]]], "Output",
 CellChangeTimes->{3.899197050606642*^9, 3.899197213714921*^9, 
  3.899197265180953*^9, 3.899202048357747*^9, 3.899204803921258*^9, 
  3.899267950475226*^9, 3.8993531868150454`*^9, 3.899366315255604*^9, 
  3.899369035769331*^9, 3.8993861702579117`*^9, 3.89943298474337*^9, 
  3.899439926046137*^9, 3.900136629086348*^9, 3.900136840231588*^9, 
  3.900137042763439*^9, 3.9001379044298677`*^9, 3.900138212593199*^9, 
  3.900139170929008*^9, 3.907041616049739*^9, 3.907043198711792*^9, 
  3.907647107245274*^9},
 CellLabel->
  "Out[305]=",ExpressionUUID->"86aeca61-53e8-4ad9-bd46-6c42979e076a"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0, 0, 1], AbsoluteThickness[2], Opacity[1.], 
         LineBox[CompressedData["
1:eJwVxXk01AkcAPA5xO9HZObneEKK6GBXbeeEvl+9EmqlQVuRYZJlytmxRDvb
rqNSMpMsppLaFD125ZhE5W1vatjJU6TQ6c59Tpph7O4fn/dZwo/iHmLQaLTv
//P/zMe6DZ3rYjYHlI0b9gQlbLb9/Mhp0aVd0N0SoMe13AeqvxxDWsU8oFVk
eJhbhkO3Udh0pTgK9P4o6puziIc2t6S/b4mFcFmyYeO4xVl4xRMvuyq+CHtN
NbwBixzgHjFryxbnAcfv00SvRSGIxgPKssR/gsPkS5ceiypwknnqbjlaCw0H
SJvt9vUQfdIruCxaDq1PgllZ0U0Qcf9QOsOmEdLWLku+drcVmvs8yNv8ZlhR
lTw4sP4jnHNU0ir3vYGc8MBXOwM7IcZefrn21lsQ/+L2rVtdD6gOHi55F/kR
ImTWpz2X9gP/4R7vjNAOaJR0sy9tG4KDY821tWe6gDfor7vJbxTOr5JGFaT0
wHWf+0WK/jFg1Eo3JJ3sg/oXBvKQuAlgrdzR8CG7H4AZYVm3bArc87bcHBUP
QtypzeJdD5RgOqJwE0qHQVlkCjcipyH32QM6M3wUgkf6w1QLVeBs6Tq3OGQM
chJX3ztWpAb7j4Zdp46Nw4KHwjXV/rNQfIcdVhE7AbvcXJttRjWQ+P5Ak33K
JAhck/c4+NAwxnnjjmuZU2AzEHraYyUdVXlb+QMZSnDlMGq+jNOxMTo36Kcb
X0ATlM8+r2AgZ7u15l3+NCz+RhVX+jsT67Zx7uCVr1Cl1Xi1NVALb5XmcDru
qkBZUfi+d/08NLZxEAQWqiFHz8UxlaaNL+nEr2Y1M9C6qVkyv10bK4ijBY11
s5B5vO9pZqkOOhgbCvgyDZT7VtJL4gkcSVcarWmZgxj9M3uLuSTapKY6Rglo
eFlAPXax1MWO/e1tW3pp6NBk3tXYqYvu3U1fKyLpGGW83NazWg/jYg+FmQzR
kTUzdNw3aT56VUo8TU4w0KdG2rE1UB+HZwSJTCUD1YudeE9XGGD+69PlkUeZ
uFDklOs5ZoCqMJegeDUT29pgrLxuAVrOivxjTmqhsEtj/8bDEHu2p9UTWvMw
WM4bcpca4hM7BSxKm4eM7+b0q61ZKCAKtJaQ2tgUkVA5lcJC6fWlLk9E2ngi
6+uRmxMsbHBylnFZOugp8r1rto+N0wKJT1C6Draxht1FNWyUe+f56ZsQyBGe
nUxYTiGf43z7diaBzx/RlzteoDB86PnU2ywC7UK8no+mUxidz9vKziHwF1IS
ey+DQiH526fEqwSu9l37cF0mhVda68y5BQRmfw7lOksobIn/IWNGSiDfSJHo
UUih54PY+N3tBCrDs14clFG4O1JLnvKOQO8FnSdsn1G41zrLpOYDgXfKHS16
5RT+eK6qzK6LwIA5eahAQWHSftqwepDA2ky1OrqJwkeqC/wCDYFpj4Psfv5E
oazEqrSdRmJ3SPE/0Emhgl86Z8gk0VlXFU3vprC9vvlKgg6Jo76XqpP6KJzO
NX/tbUiiX7/MO22EwjmvYtsUNoklF9nKnWMUajPhWLURicQ6nsRggkKjw3yW
nRmJ1cLpbpGSQnOrSZ6/OYmU7bY0n2kKrZuSSzIsSTxcL1plrKJwZarprMyK
xGdR71+1qClc7VS4Q72ERCtj+4TsWQr/BQgjL+8=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
         Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVjms0lAkYgOfC+EYq4xPJqBDtYpdOaVfofStkKMRqVwqNSNPGoNtobKcS
lRKThFGSkDrpWKTcmnJsppVjXRMtkUtyGbeJGZdtfzzn+fk8htwwzyAahUJx
+8b/pr9Qr++1Dt/6Ik7VntHB3Wryucp29Q13WOK1ZTzEwAcudIito28EgPRE
BT/ajweFcmhhFRwG/9pohxctEdCnHTLzVBQGD85ksKbYAnjvFPMqR3QWTKxd
YZR9GVr8Retvi67DofFu9md2Gnj+rvc+VZQJqjsarw+y8yFpYn9RiugJ+Ijb
LfrZz8G2xkV9e6QEun4I73IyfwP8KLeDRfxaKCsa6rzJb4Jjz4ISaMYNYG9U
wrnzqB2aBznMPG4z7JD2vPqyuRuuWMopT33ewcCO7Pu7/Hoh3Lz2piSnE76s
3D/tKO0HReDRgg+h3cDVaAOXdUPArdzrkRjcA+eezEtFjiMQON4skVz6BAVt
WxZtvGVw1ao0LDe2Hz76BmfVDY0DTVL6U0zUIARzUl8eOj0JLDPX+q7UITjV
eHSVdP00OGduz5aJhuF1mOSGe5kcdMfqnM6WjkLAPa7jvdAZSH9dRqUfkcGm
ZN8TilUKsDPYtrj20DhcWRry8PhDJZh3a36KPj4Bc9V0q3LfeXj8QCukJGIS
brPeNhvLFkD474Em89gpuD97ycfCi4Lhdj+73kmehv4gZTTHjIqKTAful0Q5
NO9+VPZ1gooN/PSAU/e+wtbhz+TVOhra7DRa+JA1Ax7R3icKb9FR6mjzADNm
YVRwPqPdTwVzCtNseh4pIHvzZNfAZlVcYWzB88tXQuDKJIs4CgMbqcR5vYo5
KN5WJdboYGAJEZnbIP32mVhWnVyohhYrNHncmgWYKZ6gFAgIHEuQa29sXQR3
8Sbvx55MNI6LswzjUVBiZVdlb6COPfs63m8foKDooqy7oVcdnfuaZktCqShM
SVvnUr4ET0cEheiMUNHM0D7ylxgNdHsqdtE5ScONJiU9Dn5LcXSOJ6TLaehS
zz7w1/fLMKvtXHFoJB1lm2LSXcaXoSLEPkCgpGOmU/FYsXQ5Gswn+YZHqaCo
093iHUcT+3fGvyFUVJGYqhx2LtXEatM6WB2virScwxrlRizkEbkqhkwGmhiW
lEzHsrD07jr76iQGatlQjmVPsrDe1q7Gk6WGVglrH+r5aOEMT+wVkKCG7owf
nZMqtLDWI9N7qQ6BtPoNU2e+I5FrY5eXl0xg47a+9ZbXSDwy8na6M4XAKF3L
t7IEEvlZ/g5aaQRyogoi/kwk8SzzwkfhbQKNAiIqrZNJzGiX6nvmEmh1meNp
JyaxVfBr4lwpgQd3lws5+SS6lEUI9nQQOLTv0j+BNSTuCVWpjf1AoNCo6aTJ
axJ/M0rRqegiMI+9mj1QS+LhK8+LTD8RqBtSGcyrIzFmH2VUOUygYHZEyW8i
sUpxjZu7QGCR9l7TPz6SWFOwprCDwkT/ory/oZfEOm7hoiadiQ4XR/jUPhI7
3jRnnFFj4mxrQnnMIIkz6fptHppMXOn+0iN+jMRFt8cmsVpMvLtWTb5rnEQG
HY6XazPxCXuveNkkidpHuSxTPSZOM6b6kuQk6q+Z8vfV/9Z7ZhfvNUOiUdPF
gkQDJrJvZVmtUJBoFqc7X7OGifWWUy2tShI32Oa7Kg2ZWCk8JkidJ/E/WFA5
ww==
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1]], 
            Line[CompressedData["
1:eJwVxXk01AkcAPA5xO9HZObneEKK6GBXbeeEvl+9EmqlQVuRYZJlytmxRDvb
rqNSMpMsppLaFD125ZhE5W1vatjJU6TQ6c59Tpph7O4fn/dZwo/iHmLQaLTv
//P/zMe6DZ3rYjYHlI0b9gQlbLb9/Mhp0aVd0N0SoMe13AeqvxxDWsU8oFVk
eJhbhkO3Udh0pTgK9P4o6puziIc2t6S/b4mFcFmyYeO4xVl4xRMvuyq+CHtN
NbwBixzgHjFryxbnAcfv00SvRSGIxgPKssR/gsPkS5ceiypwknnqbjlaCw0H
SJvt9vUQfdIruCxaDq1PgllZ0U0Qcf9QOsOmEdLWLku+drcVmvs8yNv8ZlhR
lTw4sP4jnHNU0ir3vYGc8MBXOwM7IcZefrn21lsQ/+L2rVtdD6gOHi55F/kR
ImTWpz2X9gP/4R7vjNAOaJR0sy9tG4KDY821tWe6gDfor7vJbxTOr5JGFaT0
wHWf+0WK/jFg1Eo3JJ3sg/oXBvKQuAlgrdzR8CG7H4AZYVm3bArc87bcHBUP
QtypzeJdD5RgOqJwE0qHQVlkCjcipyH32QM6M3wUgkf6w1QLVeBs6Tq3OGQM
chJX3ztWpAb7j4Zdp46Nw4KHwjXV/rNQfIcdVhE7AbvcXJttRjWQ+P5Ak33K
JAhck/c4+NAwxnnjjmuZU2AzEHraYyUdVXlb+QMZSnDlMGq+jNOxMTo36Kcb
X0ATlM8+r2AgZ7u15l3+NCz+RhVX+jsT67Zx7uCVr1Cl1Xi1NVALb5XmcDru
qkBZUfi+d/08NLZxEAQWqiFHz8UxlaaNL+nEr2Y1M9C6qVkyv10bK4ijBY11
s5B5vO9pZqkOOhgbCvgyDZT7VtJL4gkcSVcarWmZgxj9M3uLuSTapKY6Rglo
eFlAPXax1MWO/e1tW3pp6NBk3tXYqYvu3U1fKyLpGGW83NazWg/jYg+FmQzR
kTUzdNw3aT56VUo8TU4w0KdG2rE1UB+HZwSJTCUD1YudeE9XGGD+69PlkUeZ
uFDklOs5ZoCqMJegeDUT29pgrLxuAVrOivxjTmqhsEtj/8bDEHu2p9UTWvMw
WM4bcpca4hM7BSxKm4eM7+b0q61ZKCAKtJaQ2tgUkVA5lcJC6fWlLk9E2ngi
6+uRmxMsbHBylnFZOugp8r1rto+N0wKJT1C6Draxht1FNWyUe+f56ZsQyBGe
nUxYTiGf43z7diaBzx/RlzteoDB86PnU2ywC7UK8no+mUxidz9vKziHwF1IS
ey+DQiH526fEqwSu9l37cF0mhVda68y5BQRmfw7lOksobIn/IWNGSiDfSJHo
UUih54PY+N3tBCrDs14clFG4O1JLnvKOQO8FnSdsn1G41zrLpOYDgXfKHS16
5RT+eK6qzK6LwIA5eahAQWHSftqwepDA2ky1OrqJwkeqC/wCDYFpj4Psfv5E
oazEqrSdRmJ3SPE/0Emhgl86Z8gk0VlXFU3vprC9vvlKgg6Jo76XqpP6KJzO
NX/tbUiiX7/MO22EwjmvYtsUNoklF9nKnWMUajPhWLURicQ6nsRggkKjw3yW
nRmJ1cLpbpGSQnOrSZ6/OYmU7bY0n2kKrZuSSzIsSTxcL1plrKJwZarprMyK
xGdR71+1qClc7VS4Q72ERCtj+4TsWQr/BQgjL+8=
             "]]}, "Charting`Private`Tag#1"], 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Dashing[{Small, Small}]], 
            Line[CompressedData["
1:eJwVjms0lAkYgOfC+EYq4xPJqBDtYpdOaVfofStkKMRqVwqNSNPGoNtobKcS
lRKThFGSkDrpWKTcmnJsppVjXRMtkUtyGbeJGZdtfzzn+fk8htwwzyAahUJx
+8b/pr9Qr++1Dt/6Ik7VntHB3Wryucp29Q13WOK1ZTzEwAcudIito28EgPRE
BT/ajweFcmhhFRwG/9pohxctEdCnHTLzVBQGD85ksKbYAnjvFPMqR3QWTKxd
YZR9GVr8Retvi67DofFu9md2Gnj+rvc+VZQJqjsarw+y8yFpYn9RiugJ+Ijb
LfrZz8G2xkV9e6QEun4I73IyfwP8KLeDRfxaKCsa6rzJb4Jjz4ISaMYNYG9U
wrnzqB2aBznMPG4z7JD2vPqyuRuuWMopT33ewcCO7Pu7/Hoh3Lz2piSnE76s
3D/tKO0HReDRgg+h3cDVaAOXdUPArdzrkRjcA+eezEtFjiMQON4skVz6BAVt
WxZtvGVw1ao0LDe2Hz76BmfVDY0DTVL6U0zUIARzUl8eOj0JLDPX+q7UITjV
eHSVdP00OGduz5aJhuF1mOSGe5kcdMfqnM6WjkLAPa7jvdAZSH9dRqUfkcGm
ZN8TilUKsDPYtrj20DhcWRry8PhDJZh3a36KPj4Bc9V0q3LfeXj8QCukJGIS
brPeNhvLFkD474Em89gpuD97ycfCi4Lhdj+73kmehv4gZTTHjIqKTAful0Q5
NO9+VPZ1gooN/PSAU/e+wtbhz+TVOhra7DRa+JA1Ax7R3icKb9FR6mjzADNm
YVRwPqPdTwVzCtNseh4pIHvzZNfAZlVcYWzB88tXQuDKJIs4CgMbqcR5vYo5
KN5WJdboYGAJEZnbIP32mVhWnVyohhYrNHncmgWYKZ6gFAgIHEuQa29sXQR3
8Sbvx55MNI6LswzjUVBiZVdlb6COPfs63m8foKDooqy7oVcdnfuaZktCqShM
SVvnUr4ET0cEheiMUNHM0D7ylxgNdHsqdtE5ScONJiU9Dn5LcXSOJ6TLaehS
zz7w1/fLMKvtXHFoJB1lm2LSXcaXoSLEPkCgpGOmU/FYsXQ5Gswn+YZHqaCo
093iHUcT+3fGvyFUVJGYqhx2LtXEatM6WB2virScwxrlRizkEbkqhkwGmhiW
lEzHsrD07jr76iQGatlQjmVPsrDe1q7Gk6WGVglrH+r5aOEMT+wVkKCG7owf
nZMqtLDWI9N7qQ6BtPoNU2e+I5FrY5eXl0xg47a+9ZbXSDwy8na6M4XAKF3L
t7IEEvlZ/g5aaQRyogoi/kwk8SzzwkfhbQKNAiIqrZNJzGiX6nvmEmh1meNp
JyaxVfBr4lwpgQd3lws5+SS6lEUI9nQQOLTv0j+BNSTuCVWpjf1AoNCo6aTJ
axJ/M0rRqegiMI+9mj1QS+LhK8+LTD8RqBtSGcyrIzFmH2VUOUygYHZEyW8i
sUpxjZu7QGCR9l7TPz6SWFOwprCDwkT/ory/oZfEOm7hoiadiQ4XR/jUPhI7
3jRnnFFj4mxrQnnMIIkz6fptHppMXOn+0iN+jMRFt8cmsVpMvLtWTb5rnEQG
HY6XazPxCXuveNkkidpHuSxTPSZOM6b6kuQk6q+Z8vfV/9Z7ZhfvNUOiUdPF
gkQDJrJvZVmtUJBoFqc7X7OGifWWUy2tShI32Oa7Kg2ZWCk8JkidJ/E/WFA5
ww==
             "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, Pi}, {0., 4.997651981834934}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Dashing[{Small, Small}]], 
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0, Pi}, {0., 4.997651981834934}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2], 
            Dashing[{Small, Small}]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJwVxXk01AkcAPA5xO9HZObneEKK6GBXbeeEvl+9EmqlQVuRYZJlytmxRDvb
rqNSMpMsppLaFD125ZhE5W1vatjJU6TQ6c59Tpph7O4fn/dZwo/iHmLQaLTv
//P/zMe6DZ3rYjYHlI0b9gQlbLb9/Mhp0aVd0N0SoMe13AeqvxxDWsU8oFVk
eJhbhkO3Udh0pTgK9P4o6puziIc2t6S/b4mFcFmyYeO4xVl4xRMvuyq+CHtN
NbwBixzgHjFryxbnAcfv00SvRSGIxgPKssR/gsPkS5ceiypwknnqbjlaCw0H
SJvt9vUQfdIruCxaDq1PgllZ0U0Qcf9QOsOmEdLWLku+drcVmvs8yNv8ZlhR
lTw4sP4jnHNU0ir3vYGc8MBXOwM7IcZefrn21lsQ/+L2rVtdD6gOHi55F/kR
ImTWpz2X9gP/4R7vjNAOaJR0sy9tG4KDY821tWe6gDfor7vJbxTOr5JGFaT0
wHWf+0WK/jFg1Eo3JJ3sg/oXBvKQuAlgrdzR8CG7H4AZYVm3bArc87bcHBUP
QtypzeJdD5RgOqJwE0qHQVlkCjcipyH32QM6M3wUgkf6w1QLVeBs6Tq3OGQM
chJX3ztWpAb7j4Zdp46Nw4KHwjXV/rNQfIcdVhE7AbvcXJttRjWQ+P5Ak33K
JAhck/c4+NAwxnnjjmuZU2AzEHraYyUdVXlb+QMZSnDlMGq+jNOxMTo36Kcb
X0ATlM8+r2AgZ7u15l3+NCz+RhVX+jsT67Zx7uCVr1Cl1Xi1NVALb5XmcDru
qkBZUfi+d/08NLZxEAQWqiFHz8UxlaaNL+nEr2Y1M9C6qVkyv10bK4ijBY11
s5B5vO9pZqkOOhgbCvgyDZT7VtJL4gkcSVcarWmZgxj9M3uLuSTapKY6Rglo
eFlAPXax1MWO/e1tW3pp6NBk3tXYqYvu3U1fKyLpGGW83NazWg/jYg+FmQzR
kTUzdNw3aT56VUo8TU4w0KdG2rE1UB+HZwSJTCUD1YudeE9XGGD+69PlkUeZ
uFDklOs5ZoCqMJegeDUT29pgrLxuAVrOivxjTmqhsEtj/8bDEHu2p9UTWvMw
WM4bcpca4hM7BSxKm4eM7+b0q61ZKCAKtJaQ2tgUkVA5lcJC6fWlLk9E2ngi
6+uRmxMsbHBylnFZOugp8r1rto+N0wKJT1C6Draxht1FNWyUe+f56ZsQyBGe
nUxYTiGf43z7diaBzx/RlzteoDB86PnU2ywC7UK8no+mUxidz9vKziHwF1IS
ey+DQiH526fEqwSu9l37cF0mhVda68y5BQRmfw7lOksobIn/IWNGSiDfSJHo
UUih54PY+N3tBCrDs14clFG4O1JLnvKOQO8FnSdsn1G41zrLpOYDgXfKHS16
5RT+eK6qzK6LwIA5eahAQWHSftqwepDA2ky1OrqJwkeqC/wCDYFpj4Psfv5E
oazEqrSdRmJ3SPE/0Emhgl86Z8gk0VlXFU3vprC9vvlKgg6Jo76XqpP6KJzO
NX/tbUiiX7/MO22EwjmvYtsUNoklF9nKnWMUajPhWLURicQ6nsRggkKjw3yW
nRmJ1cLpbpGSQnOrSZ6/OYmU7bY0n2kKrZuSSzIsSTxcL1plrKJwZarprMyK
xGdR71+1qClc7VS4Q72ERCtj+4TsWQr/BQgjL+8=
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Dashing[{Small, Small}]], 
         Line[CompressedData["
1:eJwVjms0lAkYgOfC+EYq4xPJqBDtYpdOaVfofStkKMRqVwqNSNPGoNtobKcS
lRKThFGSkDrpWKTcmnJsppVjXRMtkUtyGbeJGZdtfzzn+fk8htwwzyAahUJx
+8b/pr9Qr++1Dt/6Ik7VntHB3Wryucp29Q13WOK1ZTzEwAcudIito28EgPRE
BT/ajweFcmhhFRwG/9pohxctEdCnHTLzVBQGD85ksKbYAnjvFPMqR3QWTKxd
YZR9GVr8Retvi67DofFu9md2Gnj+rvc+VZQJqjsarw+y8yFpYn9RiugJ+Ijb
LfrZz8G2xkV9e6QEun4I73IyfwP8KLeDRfxaKCsa6rzJb4Jjz4ISaMYNYG9U
wrnzqB2aBznMPG4z7JD2vPqyuRuuWMopT33ewcCO7Pu7/Hoh3Lz2piSnE76s
3D/tKO0HReDRgg+h3cDVaAOXdUPArdzrkRjcA+eezEtFjiMQON4skVz6BAVt
WxZtvGVw1ao0LDe2Hz76BmfVDY0DTVL6U0zUIARzUl8eOj0JLDPX+q7UITjV
eHSVdP00OGduz5aJhuF1mOSGe5kcdMfqnM6WjkLAPa7jvdAZSH9dRqUfkcGm
ZN8TilUKsDPYtrj20DhcWRry8PhDJZh3a36KPj4Bc9V0q3LfeXj8QCukJGIS
brPeNhvLFkD474Em89gpuD97ycfCi4Lhdj+73kmehv4gZTTHjIqKTAful0Q5
NO9+VPZ1gooN/PSAU/e+wtbhz+TVOhra7DRa+JA1Ax7R3icKb9FR6mjzADNm
YVRwPqPdTwVzCtNseh4pIHvzZNfAZlVcYWzB88tXQuDKJIs4CgMbqcR5vYo5
KN5WJdboYGAJEZnbIP32mVhWnVyohhYrNHncmgWYKZ6gFAgIHEuQa29sXQR3
8Sbvx55MNI6LswzjUVBiZVdlb6COPfs63m8foKDooqy7oVcdnfuaZktCqShM
SVvnUr4ET0cEheiMUNHM0D7ylxgNdHsqdtE5ScONJiU9Dn5LcXSOJ6TLaehS
zz7w1/fLMKvtXHFoJB1lm2LSXcaXoSLEPkCgpGOmU/FYsXQ5Gswn+YZHqaCo
093iHUcT+3fGvyFUVJGYqhx2LtXEatM6WB2virScwxrlRizkEbkqhkwGmhiW
lEzHsrD07jr76iQGatlQjmVPsrDe1q7Gk6WGVglrH+r5aOEMT+wVkKCG7owf
nZMqtLDWI9N7qQ6BtPoNU2e+I5FrY5eXl0xg47a+9ZbXSDwy8na6M4XAKF3L
t7IEEvlZ/g5aaQRyogoi/kwk8SzzwkfhbQKNAiIqrZNJzGiX6nvmEmh1meNp
JyaxVfBr4lwpgQd3lws5+SS6lEUI9nQQOLTv0j+BNSTuCVWpjf1AoNCo6aTJ
axJ/M0rRqegiMI+9mj1QS+LhK8+LTD8RqBtSGcyrIzFmH2VUOUygYHZEyW8i
sUpxjZu7QGCR9l7TPz6SWFOwprCDwkT/ory/oZfEOm7hoiadiQ4XR/jUPhI7
3jRnnFFj4mxrQnnMIIkz6fptHppMXOn+0iN+jMRFt8cmsVpMvLtWTb5rnEQG
HY6XazPxCXuveNkkidpHuSxTPSZOM6b6kuQk6q+Z8vfV/9Z7ZhfvNUOiUdPF
gkQDJrJvZVmtUJBoFqc7X7OGifWWUy2tShI32Oa7Kg2ZWCk8JkidJ/E/WFA5
ww==
          "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{0, Pi}, {0., 4.997651981834934}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Dashing[{Small, Small}]], 
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0., 4.997651981834934}}, {{0, 3.141592653589793}, {0., 
     4.997651981834934}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.899197050606642*^9, 3.899197213714921*^9, 
  3.899197265180953*^9, 3.899202048357747*^9, 3.899204803921258*^9, 
  3.899267950475226*^9, 3.8993531868150454`*^9, 3.899366315255604*^9, 
  3.899369035769331*^9, 3.8993861702579117`*^9, 3.89943298474337*^9, 
  3.899439926046137*^9, 3.900136629086348*^9, 3.900136840231588*^9, 
  3.900137042763439*^9, 3.9001379044298677`*^9, 3.900138212593199*^9, 
  3.900139170929008*^9, 3.907041616049739*^9, 3.907043198711792*^9, 
  3.907647107576119*^9},
 CellLabel->
  "Out[308]=",ExpressionUUID->"391d7a08-8032-43ea-89e5-71e88def0f45"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[CapitalUpsilon]\[CurlyPhi]OS", "=", 
  RowBox[{"(", 
   RowBox[{"\[ScriptCapitalJ]", " ", "+", " ", 
    RowBox[{"sp", " ", "\[ScriptCapitalE]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalUpsilon]\[CurlyPhi]", "[", 
     RowBox[{"pi_", ",", "ei_", ",", "spi_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"\[CapitalUpsilon]\[CurlyPhi]OS", "/.", "Subs"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "->", "pi"}], ",", 
       RowBox[{"e", "->", "ei"}], ",", 
       RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Consistency", " ", 
    RowBox[{"check", ":"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{"\[CapitalUpsilon]r", "[", 
      RowBox[{"pi", ",", "ei", ",", "spi"}], "]"}], 
     RowBox[{"2", "\[Pi]"}]], 
    RowBox[{"\[CapitalPhi]tr", "[", 
     RowBox[{"pi", ",", "ei", ",", "spi", ",", "\[Pi]"}], "]"}]}], " ", "-", 
   " ", 
   RowBox[{"\[CapitalUpsilon]\[CurlyPhi]", "[", 
    RowBox[{"pi", ",", "ei", ",", "spi"}], "]"}]}], "//", 
  "Simplify"}]}], "Input",
 CellChangeTimes->{{3.89919712833324*^9, 3.8991971760063887`*^9}, {
  3.899197291227721*^9, 3.899197298571714*^9}, {3.899198335523662*^9, 
  3.899198358341875*^9}, {3.907759775758615*^9, 3.907759856934638*^9}, {
  3.9077599142715807`*^9, 3.907759924281437*^9}, {3.9077599684360247`*^9, 
  3.907759980912611*^9}},ExpressionUUID->"c9f90d26-1d78-476f-96fb-\
6a694034a203"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sp", " ", "\[ScriptCapitalE]"}], "+", 
  "\[ScriptCapitalJ]"}]], "Output",
 CellChangeTimes->{
  3.8991983594845343`*^9, 3.89920204876294*^9, 3.8992048042768593`*^9, 
   3.8992679508866568`*^9, 3.899353187188313*^9, 3.899366315675071*^9, 
   3.899369036195568*^9, 3.899386170646751*^9, 3.8994329851367483`*^9, 
   3.89943992646741*^9, 3.900136629492773*^9, 3.900136840657865*^9, 
   3.900137043178026*^9, 3.90013790484326*^9, 3.9001391714170017`*^9, 
   3.907041616477145*^9, 3.907043199119075*^9, 3.907647107636726*^9, {
   3.9077598348275967`*^9, 3.907759857342333*^9}, 3.907759925433476*^9},
 CellLabel->
  "Out[490]=",ExpressionUUID->"2a4c2c4c-acd7-4fea-a49d-de3af01a577c"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.8991983594845343`*^9, 3.89920204876294*^9, 3.8992048042768593`*^9, 
   3.8992679508866568`*^9, 3.899353187188313*^9, 3.899366315675071*^9, 
   3.899369036195568*^9, 3.899386170646751*^9, 3.8994329851367483`*^9, 
   3.89943992646741*^9, 3.900136629492773*^9, 3.900136840657865*^9, 
   3.900137043178026*^9, 3.90013790484326*^9, 3.9001391714170017`*^9, 
   3.907041616477145*^9, 3.907043199119075*^9, 3.907647107636726*^9, {
   3.9077598348275967`*^9, 3.907759857342333*^9}, 3.907759925495699*^9},
 CellLabel->
  "Out[492]=",ExpressionUUID->"15117314-f53a-41d0-9034-90b569f5c7cc"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox["\[Psi]", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "eebedba6-1782-4c8a-9d61-44ad7cd7fed1"],
 " integrals"
}], "Subsection",
 CellChangeTimes->{{3.89917965094309*^9, 3.899179674701448*^9}, {
  3.8991797486243477`*^9, 
  3.8991797783874407`*^9}},ExpressionUUID->"3afc80a2-487a-4f16-a406-\
dab8f35ad524"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]integr", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], "\[Psi]dot"}], 
        SqrtBox["Rfunc"]], "/.", "fhRule"}], "/.", "DeTrRule"}], "/.", 
     "Subs"}], "/.", 
    RowBox[{"{", 
     RowBox[{"sp", "->", "0"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"N\[Psi]", "[", 
    RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "rf_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"\[Psi]integr", " ", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "->", "pi"}], ",", 
        RowBox[{"e", "->", "ei"}], ",", 
        RowBox[{"sp", "->", "spi"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       FractionBox["pi", 
        RowBox[{"1", "+", "ei"}]], ",", "rf"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPsi]tr", "[", 
    RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "\[Chi]_"}], "]"}], ":=", 
   "  ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]"}], 
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", " ", "-", " ", 
             SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"r1", " ", "-", " ", "r3"}], ")"}], "r2"}]], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ScriptCapitalJ]", "2"], " ", "+", " ", 
           SuperscriptBox["r3", "2"]}], ")"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["r3", "2"], " ", 
          RowBox[{"EllipticF", "[", 
           RowBox[{"\[Chi]", ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], " ", "+",
          " ", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["r2", "2"], " ", "-", " ", 
              SuperscriptBox["r3", "2"]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], " ", "+", " ", 
            SuperscriptBox["r2", "2"]}]], 
          RowBox[{"Re", "[", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"r3", " ", "-", " ", 
                RowBox[{"I", " ", "\[ScriptCapitalJ]"}]}], 
               RowBox[{"r2", " ", "-", " ", 
                RowBox[{"I", " ", "\[ScriptCapitalJ]"}]}]], 
              FractionBox[
               RowBox[{"r1", "-", "r2"}], 
               RowBox[{"r1", "-", "r3"}]]}], ",", "\[Chi]", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "]"}]}], 
         " ", "-", " ", 
         RowBox[{
          FractionBox[
           RowBox[{"\[ScriptCapitalJ]", 
            RowBox[{"(", 
             RowBox[{"r2", "-", "r3"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[ScriptCapitalJ]", "2"], " ", "-", " ", 
              RowBox[{"r2", " ", "r3"}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], " ", "+", " ", 
            SuperscriptBox["r2", "2"]}]], 
          RowBox[{"Im", "[", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"r3", " ", "-", " ", 
                RowBox[{"I", " ", "\[ScriptCapitalJ]"}]}], 
               RowBox[{"r2", " ", "-", " ", 
                RowBox[{"I", " ", "\[ScriptCapitalJ]"}]}]], 
              FractionBox[
               RowBox[{"r1", "-", "r2"}], 
               RowBox[{"r1", "-", "r3"}]]}], ",", "\[Chi]", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "]"}]}]}],
         ")"}]}], " ", ")"}], "/.", "Subs"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "->", "pi"}], ",", 
      RowBox[{"e", "->", "ei"}], ",", 
      RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalPsi]tr", "[", 
         RowBox[{"10", ",", "0.4", ",", "0.05", ",", 
          RowBox[{"JacobiAmplitude", "[", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"EllipticK", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]], "]"}], "\[Pi]"], 
             "qr"}], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], "]"}], "/.",
         "Subs"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "->", "10"}], ",", 
         RowBox[{"e", "->", "0.4"}], ",", 
         RowBox[{"sp", "->", "0.05"}]}], "}"}]}], ",", 
      RowBox[{"N\[Psi]", "[", 
       RowBox[{"10", ",", "0.4", ",", "0.05", ",", 
        RowBox[{"rqr", "[", 
         RowBox[{"10", ",", "0.4", ",", "0.05", ",", "qr"}], "]"}]}], "]"}]}],
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qr", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Dashed"}], "}"}]}]}], "]"}], "//", 
  "Quiet"}]}], "Input",
 CellChangeTimes->{{3.897624139208727*^9, 3.8976243206129208`*^9}, {
   3.8976243540896187`*^9, 3.897624370181075*^9}, {3.897624636252551*^9, 
   3.897624684944442*^9}, {3.8976247460427513`*^9, 3.897624751195285*^9}, {
   3.897632711533084*^9, 3.897632725211171*^9}, {3.89866808551103*^9, 
   3.898668094661172*^9}, {3.8986681401522818`*^9, 3.898668176782159*^9}, 
   3.898668366192877*^9, 3.898669070105049*^9, {3.898669202456049*^9, 
   3.898669232381185*^9}, 3.8991784773442793`*^9, 3.899179828564934*^9, {
   3.899197433129816*^9, 3.89919774540906*^9}, {3.899197987393269*^9, 
   3.899198175342194*^9}, 3.8991982317337303`*^9, 3.899198282261685*^9},
 CellLabel->
  "In[311]:=",ExpressionUUID->"3dd05f46-001d-4205-8bfa-986ea5061dc4"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0, 0, 1], AbsoluteThickness[2], Opacity[1.], 
         LineBox[CompressedData["
1:eJwVjGs0lHkcgMeMy/uG+tPQao77uqxL2tNuEfr9XCs2YU/bRi6NGA0Nhoqh
tEIXJSY5krKmdTtFtS22dJlq5yyxUYRIrNCNoqQZDNt+eM7z6XlMuXGBkUwG
g7HpC/+bdWfRwxffJ6y7uD/ILsY/aZ3F69vORqc2A2X/UStCEggzVxx2PhWH
gW2cUrRWwoURdrS8XhwHCmt2lKVECL3emffKxekQojNiayjJgCdhYqtz4pOw
rmuwjSMRQ2CsQW+RuBR+EC61tJZIIP/D9muF4suwJassnCv5HZxlPovcE6VA
2HuMl8Xeh3iR345r8U1wy/aCpLC/FXb/GZnLNG+HnrJvatx0OqDz1Ua6ktsJ
Zakx3lHLe+CYwzSjflsPaNQaDM21PYME26bT0vJnIEnNXTM4PQgzETG1/YJB
mJSdwuupL4B76yf/vKghqAoRoV33CERMdkqlR4ZBulZHNMJ7BcdXNsRVZI+C
oqj5kqDtDTClDWsyRa/glsWjiWD7cdCx8X04UPQGSgKTzNvvvocNpe4XJsRj
sLFEV3BCfxKWvW/1Tm94B9tO5byc4n2A4r9vqLB2TcATQ1Gobt1HcDF0WzDZ
OQl37Y4ZHxyfAttBMrw/6QN0FPMSQ92noaZKN7pO+BGqZS5WqRmfIe15SIdt
9hSEeJ1OzRmQQ4KLo+/5gk8QYv9GdtRxBmZKPblv86bB3rjdNDltFtrji8P3
ST7DjojV4cr+OXBabzbfXyaHMt8AEzebeWj2cqrCEgU4yFcWE+EClF894zR0
cQb2dew+pBLLQD1zO35o9SyYtKS0cdgq+FiFyjC4OQeNvgKrlBYVrKMSK9qb
lfA00bev6iAT7fQInyubhy5a+rrGhoXvc6fZq7oWYMWnAm+LYRaaHz7sEMdn
oIKXutxTrIpDQX297i8ZaKBZw+51VcMNIx2KOoEKMjz8Xi7I1TBZGBmtP66C
oYszdJOr1NGv/qyP/l4mRiifLxXzNPDdHD+NNc1E++FVji3LKSzr/uUPQSIL
FdBXuaKFwplo1/CUWRaGjN40WZ1Do6EyPzhBpIpFRdoKChbh6PqcB5SqGgbv
Mcs+wNTE+5atYJSjhpW/xC4Zu6eJfKpC1ZRWx+p8E63uvVrY8OvXrvfz1bEy
0+z15rXa+NDZRRaoo4HP+4eTOZPaKOef/TE8VwO9Hj0SHP1tMTb5l27R1qcw
8NJwRRRvCXKdXCorCyjsbMw/V7OY4K7xfz49K6TQNfrIhAchGF8W5ql7hsKE
egPPXh2C6fShf9POUVgUyRxX1yNY8rSZE1hB4ZZNlV7hHIJdKVvz5hoozHYz
IEutCfrcEKYE9FHoEyqQJ7sRDBCoNmX3U6hx4PO2JR4EfzYr1L85QOGlK62N
5Z4EeceuX7Mc/tLvDzj4eD3BzCDGu9kxCrOU6Vp2fgRvz5zgVsxTaNTv4zAQ
RFBWa3y1j0FjzEVBwZ7tBFu5VxcIi8bzGxoUmqEE+x50lqRq0DhmVPOX4w6C
8mJOtz+hUZg1GizmEVzwq7HI1qVxq97YXetdBNVZkNTIpvH4Y6b1HT5BdgxX
x9KAxu9Ug6be7ibIMZ4KC+bQ6JF3OigjjqBZR1ZtnuGXf3KP9KsEgjaHlyll
xjQqN5pYXRYS/Na52nfWlEa3k/wTXkkE/wNIwSIl
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
         Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVjGs0lHkcgMfM4H1Vu//pMFaKsGmjg9p1Suj3E5XYXCbVko1GF7fGrU3k
ckhyiB2jVCKXMmp3ERZRWWVtSMg9l2okq0Io4262/fCc59PzaPH9eMeYDAbD
7gv/m/WXUtMb44Dtgu6+H4acXbeve1dlqpFiD15RzcM3JDw413vdODzFHWSP
rhgw2zygSAodnIITkLqFpzvt6AtvlT1nykR+4OL4zmm3JBB6dsU8zhVFwr1x
5deWkmjocBOtzxD9Cgb3odhSIgKer1rPVVEmmN0PkeNJciB50rUkVVQIq8Tv
1RIkxWBaa6O0I6gaalTMBgbza8A/1O5IiX8dBBXQs/vgGZy8dyyJqdMC9rGj
Dn87tkH78B46j98O6R0mbT0+3RBvKGWUOXfDybthxaab+iFAv+5ydW4flDVt
ZSkZSWDOw6egX/AalA6fl7d4+Ab4Dw84CI8PgOEnYVL42iHwmGivro4bhNDZ
lCM3K4bholG5nzh2CFyDm8PZGz4As7p8S0zoMFBFkfIZSaPA0bNtenX1PQS2
7ykrUBkH68wdN8dFI+CvmGNpZD8Bqh8bd0WWj8EBlaQnNbcmIe1JpRzLaxyy
vDLSpVOfwGyNhWzt0QkYiDvib7R5CvRfk8HwU5Ng3frUWC9BCvm3V3qWBn4C
zougLLXmaQh7+XObfuxn2HYz+g9bo1kIMNtqe+PSFLSKOwv3J87BXKYV/4NQ
CnrhY4TqmIcW/zT34JxpOD3SYJy1bRFMdmsv9WfPgFNEYFZh/BLU7zS5jemz
ECdfv2DcKYPcomsmA7/PAfc7G1XVLAaq6Gz0PnxnHuyKhMocGzlslaOi1R4s
wIFbLOEvLCaWUkHilvpFMCj+YJBTycSNKsSbX7sEP3po7I86zsKPSVLl7798
jXJ9N89psVHnwgVDP28GRripdU0/Z+OAS2/Pjn8ZmOdkXMKPlEfrt22zpQI5
9Ljb2RBjpoBnAo95ckflsLLYrrBzVAHtyq7bcE8z0eDzYsVEgSKOLXiHsaRM
jN+wTkAfpTC7K+pPQRALa8a80i24NM55mruHzLPwbHGw/M5uGtcsJh8KCGUj
13xV2ESiEg7tTmig2PLoXnWj/sS+ZVij2wgaCfK4vrnRqlFlOXpTYrYWrYAR
FaPLLj5djuVZ35rXJCugxnPsYiSvwCZTs1oeRxFLDTnW4j1f4Yz39X3uSYp4
8tBq0eDSV1jnkLl/BZfClDMc54qar5FvYpaXd4lC8+6RjkfmBL1Gn031pVJo
6xJr4QoE/bPdrFZeo3DV8/f5UiQYSZ+ThGVQ6OSJcfpWBNNf1KvzxBReEXAt
L9sQ7Aw5KFwop7CqL6LV8yBBm8rAEMdeCkNj7a1IAEFHAbsutp/Cx84+Vb8F
EvxJO5X74BWFTSvatu48RfBEfEWJ7iCFsrfRBqHBBGNcGGPzIxTq751dPRhO
sGoukS9eojBKey/7XjzB2gLNol4GjdNX2dG8iwQb+UUywqIxoaNLNpJIsLeh
Pf2sIo26LZPzWskEZ9LUuxwIjUVpnlMJVwjK7PLXxa6kURNmgnSvEVRgwan7
yjQuu505WZ1GUNmHz9FVo1FGfzM+lUFQXfOz2yF1GrPOvxQIMwlqt50vEK6h
UYf6Z1Qvm6DeBdXFWs0v/dNs39ocgptM79jOa9EYOtv8zu0Wwf8A3l84QA==

          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1]], 
            Line[CompressedData["
1:eJwVjGs0lHkcgMeMy/uG+tPQao77uqxL2tNuEfr9XCs2YU/bRi6NGA0Nhoqh
tEIXJSY5krKmdTtFtS22dJlq5yyxUYRIrNCNoqQZDNt+eM7z6XlMuXGBkUwG
g7HpC/+bdWfRwxffJ6y7uD/ILsY/aZ3F69vORqc2A2X/UStCEggzVxx2PhWH
gW2cUrRWwoURdrS8XhwHCmt2lKVECL3emffKxekQojNiayjJgCdhYqtz4pOw
rmuwjSMRQ2CsQW+RuBR+EC61tJZIIP/D9muF4suwJassnCv5HZxlPovcE6VA
2HuMl8Xeh3iR345r8U1wy/aCpLC/FXb/GZnLNG+HnrJvatx0OqDz1Ua6ktsJ
Zakx3lHLe+CYwzSjflsPaNQaDM21PYME26bT0vJnIEnNXTM4PQgzETG1/YJB
mJSdwuupL4B76yf/vKghqAoRoV33CERMdkqlR4ZBulZHNMJ7BcdXNsRVZI+C
oqj5kqDtDTClDWsyRa/glsWjiWD7cdCx8X04UPQGSgKTzNvvvocNpe4XJsRj
sLFEV3BCfxKWvW/1Tm94B9tO5byc4n2A4r9vqLB2TcATQ1Gobt1HcDF0WzDZ
OQl37Y4ZHxyfAttBMrw/6QN0FPMSQ92noaZKN7pO+BGqZS5WqRmfIe15SIdt
9hSEeJ1OzRmQQ4KLo+/5gk8QYv9GdtRxBmZKPblv86bB3rjdNDltFtrji8P3
ST7DjojV4cr+OXBabzbfXyaHMt8AEzebeWj2cqrCEgU4yFcWE+EClF894zR0
cQb2dew+pBLLQD1zO35o9SyYtKS0cdgq+FiFyjC4OQeNvgKrlBYVrKMSK9qb
lfA00bev6iAT7fQInyubhy5a+rrGhoXvc6fZq7oWYMWnAm+LYRaaHz7sEMdn
oIKXutxTrIpDQX297i8ZaKBZw+51VcMNIx2KOoEKMjz8Xi7I1TBZGBmtP66C
oYszdJOr1NGv/qyP/l4mRiifLxXzNPDdHD+NNc1E++FVji3LKSzr/uUPQSIL
FdBXuaKFwplo1/CUWRaGjN40WZ1Do6EyPzhBpIpFRdoKChbh6PqcB5SqGgbv
Mcs+wNTE+5atYJSjhpW/xC4Zu6eJfKpC1ZRWx+p8E63uvVrY8OvXrvfz1bEy
0+z15rXa+NDZRRaoo4HP+4eTOZPaKOef/TE8VwO9Hj0SHP1tMTb5l27R1qcw
8NJwRRRvCXKdXCorCyjsbMw/V7OY4K7xfz49K6TQNfrIhAchGF8W5ql7hsKE
egPPXh2C6fShf9POUVgUyRxX1yNY8rSZE1hB4ZZNlV7hHIJdKVvz5hoozHYz
IEutCfrcEKYE9FHoEyqQJ7sRDBCoNmX3U6hx4PO2JR4EfzYr1L85QOGlK62N
5Z4EeceuX7Mc/tLvDzj4eD3BzCDGu9kxCrOU6Vp2fgRvz5zgVsxTaNTv4zAQ
RFBWa3y1j0FjzEVBwZ7tBFu5VxcIi8bzGxoUmqEE+x50lqRq0DhmVPOX4w6C
8mJOtz+hUZg1GizmEVzwq7HI1qVxq97YXetdBNVZkNTIpvH4Y6b1HT5BdgxX
x9KAxu9Ug6be7ibIMZ4KC+bQ6JF3OigjjqBZR1ZtnuGXf3KP9KsEgjaHlyll
xjQqN5pYXRYS/Na52nfWlEa3k/wTXkkE/wNIwSIl
             "]]}, "Charting`Private`Tag#1"], 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Dashing[{Small, Small}]], 
            Line[CompressedData["
1:eJwVjGs0lHkcgMfM4H1Vu//pMFaKsGmjg9p1Suj3E5XYXCbVko1GF7fGrU3k
ckhyiB2jVCKXMmp3ERZRWWVtSMg9l2okq0Io4262/fCc59PzaPH9eMeYDAbD
7gv/m/WXUtMb44Dtgu6+H4acXbeve1dlqpFiD15RzcM3JDw413vdODzFHWSP
rhgw2zygSAodnIITkLqFpzvt6AtvlT1nykR+4OL4zmm3JBB6dsU8zhVFwr1x
5deWkmjocBOtzxD9Cgb3odhSIgKer1rPVVEmmN0PkeNJciB50rUkVVQIq8Tv
1RIkxWBaa6O0I6gaalTMBgbza8A/1O5IiX8dBBXQs/vgGZy8dyyJqdMC9rGj
Dn87tkH78B46j98O6R0mbT0+3RBvKGWUOXfDybthxaab+iFAv+5ydW4flDVt
ZSkZSWDOw6egX/AalA6fl7d4+Ab4Dw84CI8PgOEnYVL42iHwmGivro4bhNDZ
lCM3K4bholG5nzh2CFyDm8PZGz4As7p8S0zoMFBFkfIZSaPA0bNtenX1PQS2
7ykrUBkH68wdN8dFI+CvmGNpZD8Bqh8bd0WWj8EBlaQnNbcmIe1JpRzLaxyy
vDLSpVOfwGyNhWzt0QkYiDvib7R5CvRfk8HwU5Ng3frUWC9BCvm3V3qWBn4C
zougLLXmaQh7+XObfuxn2HYz+g9bo1kIMNtqe+PSFLSKOwv3J87BXKYV/4NQ
CnrhY4TqmIcW/zT34JxpOD3SYJy1bRFMdmsv9WfPgFNEYFZh/BLU7zS5jemz
ECdfv2DcKYPcomsmA7/PAfc7G1XVLAaq6Gz0PnxnHuyKhMocGzlslaOi1R4s
wIFbLOEvLCaWUkHilvpFMCj+YJBTycSNKsSbX7sEP3po7I86zsKPSVLl7798
jXJ9N89psVHnwgVDP28GRripdU0/Z+OAS2/Pjn8ZmOdkXMKPlEfrt22zpQI5
9Ljb2RBjpoBnAo95ckflsLLYrrBzVAHtyq7bcE8z0eDzYsVEgSKOLXiHsaRM
jN+wTkAfpTC7K+pPQRALa8a80i24NM55mruHzLPwbHGw/M5uGtcsJh8KCGUj
13xV2ESiEg7tTmig2PLoXnWj/sS+ZVij2wgaCfK4vrnRqlFlOXpTYrYWrYAR
FaPLLj5djuVZ35rXJCugxnPsYiSvwCZTs1oeRxFLDTnW4j1f4Yz39X3uSYp4
8tBq0eDSV1jnkLl/BZfClDMc54qar5FvYpaXd4lC8+6RjkfmBL1Gn031pVJo
6xJr4QoE/bPdrFZeo3DV8/f5UiQYSZ+ThGVQ6OSJcfpWBNNf1KvzxBReEXAt
L9sQ7Aw5KFwop7CqL6LV8yBBm8rAEMdeCkNj7a1IAEFHAbsutp/Cx84+Vb8F
EvxJO5X74BWFTSvatu48RfBEfEWJ7iCFsrfRBqHBBGNcGGPzIxTq751dPRhO
sGoukS9eojBKey/7XjzB2gLNol4GjdNX2dG8iwQb+UUywqIxoaNLNpJIsLeh
Pf2sIo26LZPzWskEZ9LUuxwIjUVpnlMJVwjK7PLXxa6kURNmgnSvEVRgwan7
yjQuu505WZ1GUNmHz9FVo1FGfzM+lUFQXfOz2yF1GrPOvxQIMwlqt50vEK6h
UYf6Z1Qvm6DeBdXFWs0v/dNs39ocgptM79jOa9EYOtv8zu0Wwf8A3l84QA==

             "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, Pi}, {0., 4.160522130316503}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Dashing[{Small, Small}]], 
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0, Pi}, {0., 4.160522130316503}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2], 
            Dashing[{Small, Small}]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJwVjGs0lHkcgMeMy/uG+tPQao77uqxL2tNuEfr9XCs2YU/bRi6NGA0Nhoqh
tEIXJSY5krKmdTtFtS22dJlq5yyxUYRIrNCNoqQZDNt+eM7z6XlMuXGBkUwG
g7HpC/+bdWfRwxffJ6y7uD/ILsY/aZ3F69vORqc2A2X/UStCEggzVxx2PhWH
gW2cUrRWwoURdrS8XhwHCmt2lKVECL3emffKxekQojNiayjJgCdhYqtz4pOw
rmuwjSMRQ2CsQW+RuBR+EC61tJZIIP/D9muF4suwJassnCv5HZxlPovcE6VA
2HuMl8Xeh3iR345r8U1wy/aCpLC/FXb/GZnLNG+HnrJvatx0OqDz1Ua6ktsJ
Zakx3lHLe+CYwzSjflsPaNQaDM21PYME26bT0vJnIEnNXTM4PQgzETG1/YJB
mJSdwuupL4B76yf/vKghqAoRoV33CERMdkqlR4ZBulZHNMJ7BcdXNsRVZI+C
oqj5kqDtDTClDWsyRa/glsWjiWD7cdCx8X04UPQGSgKTzNvvvocNpe4XJsRj
sLFEV3BCfxKWvW/1Tm94B9tO5byc4n2A4r9vqLB2TcATQ1Gobt1HcDF0WzDZ
OQl37Y4ZHxyfAttBMrw/6QN0FPMSQ92noaZKN7pO+BGqZS5WqRmfIe15SIdt
9hSEeJ1OzRmQQ4KLo+/5gk8QYv9GdtRxBmZKPblv86bB3rjdNDltFtrji8P3
ST7DjojV4cr+OXBabzbfXyaHMt8AEzebeWj2cqrCEgU4yFcWE+EClF894zR0
cQb2dew+pBLLQD1zO35o9SyYtKS0cdgq+FiFyjC4OQeNvgKrlBYVrKMSK9qb
lfA00bev6iAT7fQInyubhy5a+rrGhoXvc6fZq7oWYMWnAm+LYRaaHz7sEMdn
oIKXutxTrIpDQX297i8ZaKBZw+51VcMNIx2KOoEKMjz8Xi7I1TBZGBmtP66C
oYszdJOr1NGv/qyP/l4mRiifLxXzNPDdHD+NNc1E++FVji3LKSzr/uUPQSIL
FdBXuaKFwplo1/CUWRaGjN40WZ1Do6EyPzhBpIpFRdoKChbh6PqcB5SqGgbv
Mcs+wNTE+5atYJSjhpW/xC4Zu6eJfKpC1ZRWx+p8E63uvVrY8OvXrvfz1bEy
0+z15rXa+NDZRRaoo4HP+4eTOZPaKOef/TE8VwO9Hj0SHP1tMTb5l27R1qcw
8NJwRRRvCXKdXCorCyjsbMw/V7OY4K7xfz49K6TQNfrIhAchGF8W5ql7hsKE
egPPXh2C6fShf9POUVgUyRxX1yNY8rSZE1hB4ZZNlV7hHIJdKVvz5hoozHYz
IEutCfrcEKYE9FHoEyqQJ7sRDBCoNmX3U6hx4PO2JR4EfzYr1L85QOGlK62N
5Z4EeceuX7Mc/tLvDzj4eD3BzCDGu9kxCrOU6Vp2fgRvz5zgVsxTaNTv4zAQ
RFBWa3y1j0FjzEVBwZ7tBFu5VxcIi8bzGxoUmqEE+x50lqRq0DhmVPOX4w6C
8mJOtz+hUZg1GizmEVzwq7HI1qVxq97YXetdBNVZkNTIpvH4Y6b1HT5BdgxX
x9KAxu9Ug6be7ibIMZ4KC+bQ6JF3OigjjqBZR1ZtnuGXf3KP9KsEgjaHlyll
xjQqN5pYXRYS/Na52nfWlEa3k/wTXkkE/wNIwSIl
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Dashing[{Small, Small}]], 
         Line[CompressedData["
1:eJwVjGs0lHkcgMfM4H1Vu//pMFaKsGmjg9p1Suj3E5XYXCbVko1GF7fGrU3k
ckhyiB2jVCKXMmp3ERZRWWVtSMg9l2okq0Io4262/fCc59PzaPH9eMeYDAbD
7gv/m/WXUtMb44Dtgu6+H4acXbeve1dlqpFiD15RzcM3JDw413vdODzFHWSP
rhgw2zygSAodnIITkLqFpzvt6AtvlT1nykR+4OL4zmm3JBB6dsU8zhVFwr1x
5deWkmjocBOtzxD9Cgb3odhSIgKer1rPVVEmmN0PkeNJciB50rUkVVQIq8Tv
1RIkxWBaa6O0I6gaalTMBgbza8A/1O5IiX8dBBXQs/vgGZy8dyyJqdMC9rGj
Dn87tkH78B46j98O6R0mbT0+3RBvKGWUOXfDybthxaab+iFAv+5ydW4flDVt
ZSkZSWDOw6egX/AalA6fl7d4+Ab4Dw84CI8PgOEnYVL42iHwmGivro4bhNDZ
lCM3K4bholG5nzh2CFyDm8PZGz4As7p8S0zoMFBFkfIZSaPA0bNtenX1PQS2
7ykrUBkH68wdN8dFI+CvmGNpZD8Bqh8bd0WWj8EBlaQnNbcmIe1JpRzLaxyy
vDLSpVOfwGyNhWzt0QkYiDvib7R5CvRfk8HwU5Ng3frUWC9BCvm3V3qWBn4C
zougLLXmaQh7+XObfuxn2HYz+g9bo1kIMNtqe+PSFLSKOwv3J87BXKYV/4NQ
CnrhY4TqmIcW/zT34JxpOD3SYJy1bRFMdmsv9WfPgFNEYFZh/BLU7zS5jemz
ECdfv2DcKYPcomsmA7/PAfc7G1XVLAaq6Gz0PnxnHuyKhMocGzlslaOi1R4s
wIFbLOEvLCaWUkHilvpFMCj+YJBTycSNKsSbX7sEP3po7I86zsKPSVLl7798
jXJ9N89psVHnwgVDP28GRripdU0/Z+OAS2/Pjn8ZmOdkXMKPlEfrt22zpQI5
9Ljb2RBjpoBnAo95ckflsLLYrrBzVAHtyq7bcE8z0eDzYsVEgSKOLXiHsaRM
jN+wTkAfpTC7K+pPQRALa8a80i24NM55mruHzLPwbHGw/M5uGtcsJh8KCGUj
13xV2ESiEg7tTmig2PLoXnWj/sS+ZVij2wgaCfK4vrnRqlFlOXpTYrYWrYAR
FaPLLj5djuVZ35rXJCugxnPsYiSvwCZTs1oeRxFLDTnW4j1f4Yz39X3uSYp4
8tBq0eDSV1jnkLl/BZfClDMc54qar5FvYpaXd4lC8+6RjkfmBL1Gn031pVJo
6xJr4QoE/bPdrFZeo3DV8/f5UiQYSZ+ThGVQ6OSJcfpWBNNf1KvzxBReEXAt
L9sQ7Aw5KFwop7CqL6LV8yBBm8rAEMdeCkNj7a1IAEFHAbsutp/Cx84+Vb8F
EvxJO5X74BWFTSvatu48RfBEfEWJ7iCFsrfRBqHBBGNcGGPzIxTq751dPRhO
sGoukS9eojBKey/7XjzB2gLNol4GjdNX2dG8iwQb+UUywqIxoaNLNpJIsLeh
Pf2sIo26LZPzWskEZ9LUuxwIjUVpnlMJVwjK7PLXxa6kURNmgnSvEVRgwan7
yjQuu505WZ1GUNmHz9FVo1FGfzM+lUFQXfOz2yF1GrPOvxQIMwlqt50vEK6h
UYf6Z1Qvm6DeBdXFWs0v/dNs39ocgptM79jOa9EYOtv8zu0Wwf8A3l84QA==

          "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{0, Pi}, {0., 4.160522130316503}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Dashing[{Small, Small}]], 
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0., 4.160522130316503}}, {{0, 3.141592653589793}, {0., 
     4.160522130316503}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.899198232820978*^9, 3.899198283274415*^9, 
  3.899202049298093*^9, 3.899204804772942*^9, 3.899267951414818*^9, 
  3.899353187710856*^9, 3.8993663162543592`*^9, 3.899369036772415*^9, 
  3.899386171180743*^9, 3.8994329857030354`*^9, 3.89943992704438*^9, 
  3.90013663005085*^9, 3.900136841219119*^9, 3.9001370437343388`*^9, 
  3.900137905380756*^9, 3.9001391720585423`*^9, 3.907041617025612*^9, 
  3.9070431996439047`*^9, 3.9076471081893787`*^9},
 CellLabel->
  "Out[314]=",ExpressionUUID->"fc995112-e0c2-4ac7-aeb4-f3e7bc6c7463"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[CapitalUpsilon]\[Psi]OS", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["\[CapitalUpsilon]rOS", 
      RowBox[{"2", "\[Pi]"}]], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]"}], 
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", " ", "-", " ", 
             SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"r1", " ", "-", " ", "r3"}], ")"}], "r2"}]], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ScriptCapitalJ]", "2"], " ", "+", " ", 
           SuperscriptBox["r3", "2"]}], ")"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["r3", "2"], " ", 
          RowBox[{"EllipticF", "[", 
           RowBox[{"\[Chi]", ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], " ", "+",
          " ", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["r2", "2"], " ", "-", " ", 
              SuperscriptBox["r3", "2"]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], " ", "+", " ", 
            SuperscriptBox["r2", "2"]}]], 
          RowBox[{"Re", "[", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"r3", " ", "-", " ", 
                RowBox[{"I", " ", "\[ScriptCapitalJ]"}]}], 
               RowBox[{"r2", " ", "-", " ", 
                RowBox[{"I", " ", "\[ScriptCapitalJ]"}]}]], 
              FractionBox[
               RowBox[{"r1", "-", "r2"}], 
               RowBox[{"r1", "-", "r3"}]]}], ",", "\[Chi]", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "]"}]}], 
         " ", "-", " ", 
         RowBox[{
          FractionBox[
           RowBox[{"\[ScriptCapitalJ]", 
            RowBox[{"(", 
             RowBox[{"r2", "-", "r3"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[ScriptCapitalJ]", "2"], " ", "-", " ", 
              RowBox[{"r2", " ", "r3"}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], " ", "+", " ", 
            SuperscriptBox["r2", "2"]}]], 
          RowBox[{"Im", "[", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"r3", " ", "-", " ", 
                RowBox[{"I", " ", "\[ScriptCapitalJ]"}]}], 
               RowBox[{"r2", " ", "-", " ", 
                RowBox[{"I", " ", "\[ScriptCapitalJ]"}]}]], 
              FractionBox[
               RowBox[{"r1", "-", "r2"}], 
               RowBox[{"r1", "-", "r3"}]]}], ",", "\[Chi]", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "]"}]}]}],
         ")"}]}], " ", ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Chi]", "->", "\[Pi]"}], ",", 
      RowBox[{"sp", "->", "0"}]}], "}"}]}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalUpsilon]\[Psi]", "[", 
    RowBox[{"pi_", ",", "ei_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[CapitalUpsilon]\[Psi]OS", "/.", "Subs"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "->", "pi"}], ",", 
      RowBox[{"e", "->", "ei"}], ",", 
      RowBox[{"sp", "->", "0"}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.899198208725298*^9, 3.899198217600307*^9}, {
   3.899198252866598*^9, 3.8991982717406473`*^9}, 3.899198303268524*^9, {
   3.899198391339381*^9, 3.899198442209429*^9}, {3.899198525455133*^9, 
   3.8991985359910717`*^9}, {3.899203538606346*^9, 3.899203558190895*^9}, 
   3.899203592245994*^9, 3.899204705543684*^9},
 CellLabel->
  "In[315]:=",ExpressionUUID->"3982f01e-b675-4c5c-9a21-8f49be94466f"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["r3", "2"], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r2", "-", "r3"}], ")"}], " ", "\[ScriptCapitalJ]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r2", " ", "r3"}], "-", 
            SuperscriptBox["\[ScriptCapitalJ]", "2"]}], ")"}], " ", 
          RowBox[{"Im", "[", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"r3", "-", 
                 RowBox[{"\[ImaginaryI]", " ", "\[ScriptCapitalJ]"}]}], 
                ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"r2", "-", 
                 RowBox[{"\[ImaginaryI]", " ", "\[ScriptCapitalJ]"}]}], 
                ")"}]}]], ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], " ", "r3"}], 
              RowBox[{"r2", " ", 
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}]}]]}], "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r2", "+", "r3"}], ")"}], " ", "\[ScriptCapitalJ]", " ", 
          RowBox[{"Re", "[", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"r3", "-", 
                 RowBox[{"\[ImaginaryI]", " ", "\[ScriptCapitalJ]"}]}], 
                ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"r2", "-", 
                 RowBox[{"\[ImaginaryI]", " ", "\[ScriptCapitalJ]"}]}], 
                ")"}]}]], ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], " ", "r3"}], 
              RowBox[{"r2", " ", 
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}]}]]}], "]"}], "]"}]}]}], 
        ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r2", "2"], "+", 
         SuperscriptBox["\[ScriptCapitalJ]", "2"]}], ")"}], " ", 
       RowBox[{"EllipticK", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r1", "-", "r2"}], ")"}], " ", "r3"}], 
         RowBox[{"r2", " ", 
          RowBox[{"(", 
           RowBox[{"r1", "-", "r3"}], ")"}]}]], "]"}]}]]}], ")"}]}], 
  RowBox[{
   SuperscriptBox["r3", "2"], "+", 
   SuperscriptBox["\[ScriptCapitalJ]", "2"]}]]], "Output",
 CellChangeTimes->{
  3.899197437151677*^9, {3.89919747618398*^9, 3.899197490981579*^9}, {
   3.899198177327763*^9, 3.89919821819551*^9}, {3.899198255026741*^9, 
   3.899198272234742*^9}, {3.899198427314496*^9, 3.899198442968174*^9}, 
   3.899198542404192*^9, 3.899202049724895*^9, {3.8992035417378063`*^9, 
   3.899203551964045*^9}, 3.899203597031961*^9, {3.899204707887553*^9, 
   3.899204736151492*^9}, 3.899204805164123*^9, 3.8992679518293858`*^9, 
   3.899353188109541*^9, 3.899366316705406*^9, 3.89936903684396*^9, 
   3.899386171586513*^9, 3.899432986117814*^9, 3.899439927446848*^9, 
   3.90013663046418*^9, 3.9001368413057003`*^9, 3.90013704382143*^9, 
   3.9001379054549828`*^9, 3.900139172178322*^9, 3.9070416174476547`*^9, 
   3.907043199723557*^9, 3.90764710860962*^9},
 CellLabel->
  "Out[315]=",ExpressionUUID->"05505d0c-5a88-4c3c-9489-cce302141266"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalUpsilon]\[Psi]0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalUpsilon]\[Psi]", "[", 
         RowBox[{"p", ",", "e"}], "]"}], "//", 
        RowBox[{
         RowBox[{"FullSimplify", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"p", ">", "0"}], ",", 
             RowBox[{"0", "<", "e", "<", "1"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], 
          "]"}], "&"}]}], "//", "FunctionExpand"}], "//", 
      RowBox[{
       RowBox[{"FullSimplify", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", ">", "0"}], ",", 
           RowBox[{"0", "<", "e", "<", "1"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], 
        "]"}], "&"}]}], "//", "PowerExpand"}], "//", "ExpandAll"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.899198208725298*^9, 3.899198217600307*^9}, {
   3.899198252866598*^9, 3.8991982717406473`*^9}, 3.899198303268524*^9, {
   3.899198391339381*^9, 3.899198442209429*^9}, {3.899198525455133*^9, 
   3.8991985359910717`*^9}, {3.899203538606346*^9, 3.899203558190895*^9}, {
   3.899203592245994*^9, 3.899203599253108*^9}, {3.899204695072155*^9, 
   3.8992047285701933`*^9}, {3.8992050519566402`*^9, 
   3.8992050613323803`*^9}, {3.899434329540595*^9, 3.8994343406566763`*^9}},
 CellLabel->
  "In[317]:=",ExpressionUUID->"91b372d3-2661-4498-aff2-72533fb99c45"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"6", "+", 
       RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
     RowBox[{"Im", "[", 
      RowBox[{"EllipticPi", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", "e", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p", "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "3"}], "-", 
               SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "e", "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "3"}], "-", 
               SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}]], ",", 
        FractionBox[
         RowBox[{"4", " ", "e"}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "]"}]}], "+", 
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       SuperscriptBox["e", "2"], "+", "p"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"EllipticK", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "-", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
        RowBox[{"Re", "[", 
         RowBox[{"EllipticPi", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "e", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "4"}], "+", "p", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "3"}], "-", 
                  SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "e", "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "3"}], "-", 
                  SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}]], ",", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "]"}]}]}], 
      ")"}]}]}], 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          SuperscriptBox["e", "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         SuperscriptBox["e", "2"], "+", "p"}], ")"}]}], "p"]], " ", 
    RowBox[{"EllipticK", "[", 
     FractionBox[
      RowBox[{"4", " ", "e"}], 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.899197437151677*^9, {3.89919747618398*^9, 3.899197490981579*^9}, {
   3.899198177327763*^9, 3.89919821819551*^9}, {3.899198255026741*^9, 
   3.899198272234742*^9}, {3.899198427314496*^9, 3.899198442968174*^9}, 
   3.899198542404192*^9, 3.899202049724895*^9, {3.8992035417378063`*^9, 
   3.899203558614684*^9}, {3.899204691822384*^9, 3.899204742111785*^9}, 
   3.899204807144436*^9, 3.899205062861826*^9, 3.899267954200609*^9, 
   3.8993531904221687`*^9, 3.899366319237764*^9, 3.8993690393908987`*^9, 
   3.899386173907138*^9, 3.899432988414619*^9, 3.899439928648569*^9, 
   3.900136632172056*^9, 3.900136842051214*^9, 3.900137044669479*^9, 
   3.900137907128131*^9, 3.9001391739702682`*^9, 3.907041619143119*^9, 
   3.907043200755946*^9, 3.907647110329286*^9},
 CellLabel->
  "Out[317]=",ExpressionUUID->"b8683720-d8c5-4a06-ad0c-15e6f23b7c55"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Expansion of Mino frequencies in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "||"], TraditionalForm]],ExpressionUUID->
  "dd7620c3-8f98-401d-9544-dc62f496c1dd"]
}], "Subsection",
 CellChangeTimes->{{3.899197397435936*^9, 3.899197411560503*^9}, {
  3.899199331436866*^9, 
  3.899199343290531*^9}},ExpressionUUID->"09c0f43e-a20c-41b0-ac48-\
cc510cfad86b"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"First", " ", "the", " ", "Mino", " ", "frequencies"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.897624139208727*^9, 3.8976243206129208`*^9}, {
   3.8976243540896187`*^9, 3.897624370181075*^9}, {3.897624636252551*^9, 
   3.897624684944442*^9}, {3.8976247460427513`*^9, 3.897624751195285*^9}, {
   3.897632711533084*^9, 3.897632725211171*^9}, {3.89866808551103*^9, 
   3.898668094661172*^9}, {3.8986681401522818`*^9, 3.898668176782159*^9}, 
   3.898668366192877*^9, 3.898669070105049*^9, {3.898669202456049*^9, 
   3.898669232381185*^9}, 3.8991784773442793`*^9},
 CellLabel->
  "In[318]:=",ExpressionUUID->"1d89dffa-e4c2-47fb-a173-aac4663f6d65"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[CapitalUpsilon]r0", " ", "=", "  ", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalUpsilon]r", "[", 
     RowBox[{"p", ",", "e", ",", "0"}], "]"}], "//", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", ">", "0"}], ",", 
         RowBox[{"0", "<", "e", "<", "1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
     "&"}]}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]\[CapitalUpsilon]r", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[CapitalUpsilon]r", "[", 
          RowBox[{"p", ",", "e", ",", "sp"}], "]"}], ",", "sp"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"sp", "->", "0"}], "}"}]}], ")"}], "//", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}],
       "&"}]}], "//", "PowerExpand"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}]}], "Input",
 CellChangeTimes->{{3.897624139208727*^9, 3.8976243206129208`*^9}, {
   3.8976243540896187`*^9, 3.897624370181075*^9}, {3.897624636252551*^9, 
   3.897624684944442*^9}, {3.8976247460427513`*^9, 3.897624751195285*^9}, {
   3.897632711533084*^9, 3.897632725211171*^9}, {3.89866808551103*^9, 
   3.898668094661172*^9}, {3.8986681401522818`*^9, 3.898668176782159*^9}, 
   3.898668366192877*^9, {3.898669070105049*^9, 3.898669080507587*^9}, {
   3.899198589982615*^9, 3.899198615922467*^9}, {3.89919881612962*^9, 
   3.899198825491001*^9}, {3.8991988648158417`*^9, 3.899198885125551*^9}, {
   3.8991990361837683`*^9, 3.899199068609902*^9}, {3.899434035556403*^9, 
   3.899434110389922*^9}, {3.899440205255361*^9, 3.899440206254012*^9}, {
   3.8994403397509747`*^9, 3.8994403442936687`*^9}, {3.8994407573472023`*^9, 
   3.899440773292938*^9}, {3.899440805606682*^9, 3.89944080630068*^9}, {
   3.899440888271371*^9, 3.8994409043809958`*^9}, {3.899440987767943*^9, 
   3.8994409918376627`*^9}, {3.8994410356471786`*^9, 3.899441036452594*^9}, {
   3.899441216344816*^9, 3.899441219850698*^9}, {3.8994435508103724`*^9, 
   3.899443572332511*^9}},
 CellLabel->
  "In[319]:=",ExpressionUUID->"d08af839-55d6-489e-baca-273a167855bb"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    RowBox[{"-", 
     FractionBox[
      RowBox[{"p", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}], 
      RowBox[{"3", "+", 
       SuperscriptBox["e", "2"], "-", "p"}]]}]], " ", "\[Pi]"}], 
  RowBox[{"2", " ", 
   RowBox[{"EllipticK", "[", 
    FractionBox[
     RowBox[{"4", " ", "e"}], 
     RowBox[{
      RowBox[{"-", "6"}], "+", 
      RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}]]], "Output",
 CellChangeTimes->{
  3.898668377296352*^9, 3.898684127276824*^9, 3.8987649701846247`*^9, 
   3.898783644934881*^9, 3.898932493382465*^9, 3.899180289938608*^9, 
   3.899198618669202*^9, 3.899198760463407*^9, 3.89919882660465*^9, 
   3.8991988862422953`*^9, {3.899199075730926*^9, 3.8991990795009108`*^9}, 
   3.899202050435444*^9, 3.899204807869934*^9, 3.8992679549162416`*^9, 
   3.899353191119603*^9, 3.899366319964965*^9, 3.899369040147224*^9, 
   3.899386174613649*^9, 3.899432989111191*^9, 3.8994399287861032`*^9, 
   3.899440210960143*^9, 3.8994403447534943`*^9, {3.8994407657008133`*^9, 
   3.899440775441208*^9}, 3.8994408069924583`*^9, 3.8994409050636806`*^9, 
   3.899440992396481*^9, 3.899441037131962*^9, 3.899441223408514*^9, {
   3.8994435609508877`*^9, 3.899443573318534*^9}, 3.9001366322438*^9, 
   3.9001368421113853`*^9, 3.9001370447472687`*^9, 3.900137907215754*^9, 
   3.900139174097522*^9, 3.9070416192532997`*^9, 3.9070432008396072`*^9, 
   3.9076471104199467`*^9},
 CellLabel->
  "Out[319]=",ExpressionUUID->"7ab69d5a-1fc4-4fd6-813b-1ce4539c9dbd"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["e", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       SuperscriptBox["e", "2"], "+", "p"}], ")"}]}]], " ", "\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3", "+", 
        SuperscriptBox["e", "2"], "-", "p"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
      RowBox[{"EllipticE", "[", 
       FractionBox[
        RowBox[{"4", " ", "e"}], 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"6", "+", 
        RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", 
         SuperscriptBox["e", "2"]}], "-", "p"}], ")"}], " ", 
      RowBox[{"EllipticK", "[", 
       FractionBox[
        RowBox[{"4", " ", "e"}], 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}]}], ")"}]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{"6", "+", 
     RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"3", "+", 
      SuperscriptBox["e", "2"], "-", "p"}], ")"}], "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"EllipticK", "[", 
     FractionBox[
      RowBox[{"4", " ", "e"}], 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], "2"]}]]], "Output",
 CellChangeTimes->{
  3.898668377296352*^9, 3.898684127276824*^9, 3.8987649701846247`*^9, 
   3.898783644934881*^9, 3.898932493382465*^9, 3.899180289938608*^9, 
   3.899198618669202*^9, 3.899198760463407*^9, 3.89919882660465*^9, 
   3.8991988862422953`*^9, {3.899199075730926*^9, 3.8991990795009108`*^9}, 
   3.899202050435444*^9, 3.899204807869934*^9, 3.8992679549162416`*^9, 
   3.899353191119603*^9, 3.899366319964965*^9, 3.899369040147224*^9, 
   3.899386174613649*^9, 3.899432989111191*^9, 3.8994399287861032`*^9, 
   3.899440210960143*^9, 3.8994403447534943`*^9, {3.8994407657008133`*^9, 
   3.899440775441208*^9}, 3.8994408069924583`*^9, 3.8994409050636806`*^9, 
   3.899440992396481*^9, 3.899441037131962*^9, 3.899441223408514*^9, {
   3.8994435609508877`*^9, 3.899443573318534*^9}, 3.9001366322438*^9, 
   3.9001368421113853`*^9, 3.9001370447472687`*^9, 3.900137907215754*^9, 
   3.900139174097522*^9, 3.9070416192532997`*^9, 3.9070432008396072`*^9, 
   3.907647110811357*^9},
 CellLabel->
  "Out[320]=",ExpressionUUID->"a8374f95-502f-4542-a548-37da0d5c8460"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[CapitalUpsilon]t0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalUpsilon]t", "[", 
        RowBox[{"p", ",", "e", ",", "0"}], "]"}], "//", 
       RowBox[{
        RowBox[{"FullSimplify", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p", ">", "0"}], ",", 
            RowBox[{"0", "<", "e", "<", "1"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], 
         "]"}], "&"}]}], "//", "FunctionExpand"}], "//", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}],
       "&"}]}], "//", "PowerExpand"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]\[CapitalUpsilon]t", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[CapitalUpsilon]t", "[", 
          RowBox[{"p", ",", "e", ",", "sp"}], "]"}], ",", "sp"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"sp", "->", "0"}], "}"}]}], ")"}], "//", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}],
       "&"}]}], "//", "PowerExpand"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}]}], "Input",
 CellChangeTimes->{{3.897624139208727*^9, 3.8976243206129208`*^9}, {
   3.8976243540896187`*^9, 3.897624370181075*^9}, {3.897624636252551*^9, 
   3.897624684944442*^9}, {3.8976247460427513`*^9, 3.897624751195285*^9}, {
   3.897632711533084*^9, 3.897632725211171*^9}, {3.89866808551103*^9, 
   3.898668094661172*^9}, {3.8986681401522818`*^9, 3.898668176782159*^9}, 
   3.898668366192877*^9, {3.898669070105049*^9, 3.898669080507587*^9}, {
   3.899198589982615*^9, 3.899198615922467*^9}, {3.89919881612962*^9, 
   3.899198825491001*^9}, {3.8991988648158417`*^9, 3.899198885125551*^9}, {
   3.8991990361837683`*^9, 3.8991990701385603`*^9}, {3.899434130910666*^9, 
   3.899434145963203*^9}, {3.8994342185238*^9, 3.899434224602088*^9}, {
   3.899440394086903*^9, 3.899440402586462*^9}, {3.899443589804761*^9, 
   3.899443592565796*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"a3fab2c2-5b8d-4bfd-a7cf-2b3915f4b78e"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", " ", 
    RowBox[{"EllipticK", "[", 
     FractionBox[
      RowBox[{"4", " ", "e"}], 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}]], 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["e", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", "p"}], 
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      SuperscriptBox["e", "2"], "+", "p"}]]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
        RowBox[{"EllipticE", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}]}]]}], "+", 
     FractionBox[
      RowBox[{"p", " ", 
       RowBox[{"(", 
        RowBox[{"36", "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["e", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "14"}], "+", "p"}], ")"}], " ", "p"}]}], ")"}], " ", 
       
       RowBox[{"EllipticK", "[", 
        FractionBox[
         RowBox[{"4", " ", "e"}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["e", "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"6", "+", 
        RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "8"}], "+", 
            RowBox[{
             SuperscriptBox["e", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"8", "-", 
               RowBox[{"3", " ", "p"}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p"}]}], ")"}], 
          " ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "e"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "+", 
        FractionBox[
         RowBox[{"EllipticPi", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"16", " ", "e"}], 
            RowBox[{"12", "+", 
             RowBox[{"8", " ", "e"}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["e", "2"]}], "-", 
             RowBox[{"8", " ", "p"}], "+", 
             SuperscriptBox["p", "2"]}]], ",", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], 
         RowBox[{
          RowBox[{"-", "2"}], "-", 
          RowBox[{"2", " ", "e"}], "+", "p"}]]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.8991991742724857`*^9, 3.899202135279169*^9, 3.899204895329852*^9, 
   3.8992680360343*^9, 3.899353271144218*^9, 3.899366367094233*^9, 
   3.8993691300347567`*^9, 3.899386254969943*^9, 3.899433070696069*^9, {
   3.899440377857174*^9, 3.899440404683566*^9}, 3.8994412344116993`*^9, 
   3.899443596624221*^9, 3.90013663560441*^9, 3.900136842931527*^9, 
   3.900137045718392*^9, 3.900137910628599*^9, 3.9001391778329687`*^9, 
   3.907041622583363*^9, 3.907043132155713*^9, 3.90704320145403*^9, 
   3.907647113835085*^9},
 CellLabel->
  "Out[321]=",ExpressionUUID->"9e0ec85b-ca12-43b1-9d3d-4da3fedfe7a2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "+", "e"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        SuperscriptBox["e", "2"], "-", "p"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"], " ", "p", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"EllipticE", "[", 
        FractionBox[
         RowBox[{"4", " ", "e"}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], "2"]}], 
     RowBox[{"6", "+", 
      RowBox[{"2", " ", "e"}], "-", "p"}]], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
     RowBox[{"EllipticE", "[", 
      FractionBox[
       RowBox[{"4", " ", "e"}], 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "e"}], ")"}], " ", "p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"20", "+", 
            RowBox[{
             SuperscriptBox["e", "4"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "12"}], "+", "p"}], ")"}]}], "+", 
            RowBox[{"p", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "31"}], "-", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "7"}], "+", "p"}], ")"}], " ", "p"}]}], 
              ")"}]}], "+", 
            RowBox[{"2", " ", 
             SuperscriptBox["e", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "4"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p"}]}], 
              ")"}]}]}], ")"}], " ", 
          RowBox[{"EllipticK", "[", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], ")"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          SuperscriptBox["e", "2"], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"8", "+", "p", "-", 
             SuperscriptBox["p", "2"], "+", 
             RowBox[{
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "8"}], "+", 
                RowBox[{"3", " ", "p"}]}], ")"}]}]}], ")"}], " ", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"2", " ", "e", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", "e"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"], " ", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"16", " ", "e"}], 
              RowBox[{"12", "+", 
               RowBox[{"8", " ", "e"}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["e", "2"]}], "-", 
               RowBox[{"8", " ", "p"}], "+", 
               SuperscriptBox["p", "2"]}]], ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}]}], ")"}]}]}], 
      ")"}]}], "+", 
    RowBox[{
     RowBox[{"EllipticK", "[", 
      FractionBox[
       RowBox[{"4", " ", "e"}], 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", "p", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"4", " ", 
           SuperscriptBox["e", "6"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8"}], "+", "p"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "p"}], ")"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"28", "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "12"}], "+", "p"}], ")"}], " ", "p"}]}], ")"}], 
           " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "24"}], "+", 
             RowBox[{"p", " ", 
              RowBox[{"(", 
               RowBox[{"33", "+", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "7"}], "+", "p"}], ")"}], " ", "p"}]}], 
               ")"}]}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["e", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"416", "+", 
             RowBox[{"p", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "268"}], "+", 
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{"76", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "15"}], "+", "p"}], ")"}], " ", "p"}]}], 
                  ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "p"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"96", "+", 
             RowBox[{"p", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "124"}], "+", 
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{"56", "+", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "14"}], "+", "p"}], ")"}], " ", "p"}]}], 
                  ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"EllipticK", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{"64", "+", 
             RowBox[{"p", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "136"}], "+", 
                RowBox[{"65", " ", "p"}], "-", 
                RowBox[{"6", " ", 
                 SuperscriptBox["p", "3"]}], "+", 
                SuperscriptBox["p", "4"]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["e", "6"], " ", 
              RowBox[{"(", 
               RowBox[{"64", "+", 
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "40"}], "+", 
                   RowBox[{"3", " ", "p"}]}], ")"}]}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["e", "4"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "64"}], "+", 
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{"8", "+", 
                   RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "5"}], "+", 
                    RowBox[{"4", " ", "p"}]}], ")"}]}]}], ")"}]}]}], ")"}]}], 
             "+", 
             RowBox[{
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "64"}], "+", 
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{"168", "+", 
                   RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "127"}], "+", 
                    RowBox[{"44", " ", "p"}], "-", 
                    RowBox[{"6", " ", 
                    SuperscriptBox["p", "2"]}]}], ")"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}], " ", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"2", " ", "e", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", "e"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             SuperscriptBox["e", "2"], "-", "p"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"16", " ", "e"}], 
              RowBox[{"12", "+", 
               RowBox[{"8", " ", "e"}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["e", "2"]}], "-", 
               RowBox[{"8", " ", "p"}], "+", 
               SuperscriptBox["p", "2"]}]], ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}]}], ")"}]}]}], 
      ")"}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"4", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       SuperscriptBox["e", "2"], "+", "p"}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    SuperscriptBox[
     RowBox[{"EllipticK", "[", 
      FractionBox[
       RowBox[{"4", " ", "e"}], 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.8991991742724857`*^9, 3.899202135279169*^9, 3.899204895329852*^9, 
   3.8992680360343*^9, 3.899353271144218*^9, 3.899366367094233*^9, 
   3.8993691300347567`*^9, 3.899386254969943*^9, 3.899433070696069*^9, {
   3.899440377857174*^9, 3.899440404683566*^9}, 3.8994412344116993`*^9, 
   3.899443596624221*^9, 3.90013663560441*^9, 3.900136842931527*^9, 
   3.900137045718392*^9, 3.900137910628599*^9, 3.9001391778329687`*^9, 
   3.907041622583363*^9, 3.907043132155713*^9, 3.90704320145403*^9, 
   3.907647827241143*^9},
 CellLabel->
  "Out[322]=",ExpressionUUID->"c13b04d3-8b10-4808-ac63-c27661822ebe"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[CapitalUpsilon]\[CurlyPhi]0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalUpsilon]\[CurlyPhi]", "[", 
        RowBox[{"p", ",", "e", ",", "0"}], "]"}], "//", 
       RowBox[{
        RowBox[{"FullSimplify", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p", ">", "0"}], ",", 
            RowBox[{"0", "<", "e", "<", "1"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], 
         "]"}], "&"}]}], "//", "FunctionExpand"}], "//", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}],
       "&"}]}], "//", "PowerExpand"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]\[CapitalUpsilon]\[CurlyPhi]", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[CapitalUpsilon]\[CurlyPhi]", "[", 
          RowBox[{"p", ",", "e", ",", "sp"}], "]"}], ",", "sp"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"sp", "->", "0"}], "}"}]}], ")"}], "//", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}],
       "&"}]}], "//", "PowerExpand"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}]}], "Input",
 CellChangeTimes->{{3.897624139208727*^9, 3.8976243206129208`*^9}, {
   3.8976243540896187`*^9, 3.897624370181075*^9}, {3.897624636252551*^9, 
   3.897624684944442*^9}, {3.8976247460427513`*^9, 3.897624751195285*^9}, {
   3.897632711533084*^9, 3.897632725211171*^9}, {3.89866808551103*^9, 
   3.898668094661172*^9}, {3.8986681401522818`*^9, 3.898668176782159*^9}, 
   3.898668366192877*^9, {3.898669070105049*^9, 3.898669080507587*^9}, {
   3.899198589982615*^9, 3.899198615922467*^9}, {3.89919881612962*^9, 
   3.899198825491001*^9}, {3.8991988648158417`*^9, 3.899198885125551*^9}, {
   3.8991990361837683`*^9, 3.8991990701385603`*^9}, {3.8994341564276114`*^9, 
   3.899434209006289*^9}, {3.899440463718198*^9, 3.899440471072489*^9}, {
   3.899443601067389*^9, 3.899443605428957*^9}, 3.907042049693224*^9},
 CellLabel->
  "In[493]:=",ExpressionUUID->"f90c1bdc-e2f1-4816-b3e1-ca944e1bc2d5"],

Cell[BoxData[
 FractionBox["p", 
  SqrtBox[
   RowBox[{
    RowBox[{"-", "3"}], "-", 
    SuperscriptBox["e", "2"], "+", "p"}]]]], "Output",
 CellChangeTimes->{3.898668377296352*^9, 3.898684127276824*^9, 
  3.8987649701846247`*^9, 3.898783644934881*^9, 3.898932493382465*^9, 
  3.899180289938608*^9, 3.899198618669202*^9, 3.899198760463407*^9, 
  3.89919882660465*^9, 3.8991988862422953`*^9, 3.8991990439665613`*^9, 
  3.899199082524543*^9, 3.899202135693894*^9, 3.89920489565431*^9, 
  3.8992680363867283`*^9, 3.899353271457457*^9, 3.899369130429131*^9, 
  3.899386255286551*^9, 3.89943307127102*^9, 3.899443647730377*^9, 
  3.900136863418223*^9, 3.900137067100933*^9, 3.900137937599201*^9, 
  3.900139204132943*^9, 3.907041646737391*^9, 3.907043215513914*^9, 
  3.907647827717658*^9, 3.907760036993264*^9},
 CellLabel->
  "Out[493]=",ExpressionUUID->"fa0579ad-a229-4a42-b73c-a0b41aca64ce"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"3", "+", 
     SuperscriptBox["e", "2"]}], ")"}], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "4"}], "+", 
     FractionBox[
      RowBox[{"4", "-", 
       RowBox[{"4", " ", 
        SuperscriptBox["e", "2"]}]}], "p"], "+", "p"}]]}], 
  RowBox[{"2", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      SuperscriptBox["e", "2"], "+", "p"}], ")"}], 
    RowBox[{"3", "/", "2"}]]}]]], "Output",
 CellChangeTimes->{3.898668377296352*^9, 3.898684127276824*^9, 
  3.8987649701846247`*^9, 3.898783644934881*^9, 3.898932493382465*^9, 
  3.899180289938608*^9, 3.899198618669202*^9, 3.899198760463407*^9, 
  3.89919882660465*^9, 3.8991988862422953`*^9, 3.8991990439665613`*^9, 
  3.899199082524543*^9, 3.899202135693894*^9, 3.89920489565431*^9, 
  3.8992680363867283`*^9, 3.899353271457457*^9, 3.899369130429131*^9, 
  3.899386255286551*^9, 3.89943307127102*^9, 3.899443647730377*^9, 
  3.900136863418223*^9, 3.900137067100933*^9, 3.900137937599201*^9, 
  3.900139204132943*^9, 3.907041646737391*^9, 3.907043215513914*^9, 
  3.907647827717658*^9, 3.907760037125588*^9},
 CellLabel->
  "Out[494]=",ExpressionUUID->"65a04b8b-6cbc-4302-a944-2d1236ab4a48"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Expansion of orbital evolution in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "||"], TraditionalForm]],ExpressionUUID->
  "fea059e4-ddfb-42c2-84cf-a3a510094382"]
}], "Subsection",
 CellChangeTimes->{{3.8992679727847567`*^9, 
  3.899268023250846*^9}},ExpressionUUID->"59fed317-787c-465b-8c66-\
a121e1c39007"],

Cell[CellGroupData[{

Cell[TextData[{
 "Expansion of ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "5ec72595-0a3a-4de6-a954-f6da17ecf12c"]
}], "Subsubsection",
 CellChangeTimes->{{3.899268136332432*^9, 3.899268138424508*^9}, {
  3.899269721660411*^9, 3.899269732092808*^9}, {3.89928090213975*^9, 
  3.899280903457981*^9}},ExpressionUUID->"6d2f0cd9-af40-4b89-90bd-\
8434bd8ecca1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"r0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"rqr", "[", 
     RowBox[{"p", ",", "e", ",", "0", ",", "qr"}], "]"}], "//", 
    "FunctionExpand"}], "//", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]r", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"rqr", "[", 
          RowBox[{"p", ",", "e", ",", "sp", ",", "qr"}], "]"}], ",", "sp"}], 
        "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"sp", "->", "0"}], "}"}]}], ")"}], "//", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
          RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
          RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
      "&"}]}], "//", "PowerExpand"}], "//", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
        RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
        RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
    "&"}]}]}]}], "Input",
 CellChangeTimes->{{3.899268136332432*^9, 3.899268138424508*^9}, {
   3.899269721660411*^9, 3.899269797574901*^9}, {3.899269857375218*^9, 
   3.8992699331604843`*^9}, 3.89927014626867*^9, 3.899270240696227*^9, {
   3.8992718483750362`*^9, 3.899271896867297*^9}, {3.899434422432383*^9, 
   3.899434447314266*^9}, {3.8994436223713303`*^9, 3.899443641226231*^9}, {
   3.899443726693408*^9, 3.899443749999462*^9}, {3.8994441004586773`*^9, 
   3.899444103650485*^9}},
 CellLabel->
  "In[325]:=",ExpressionUUID->"9e79571a-cc83-48e6-89fb-3e35696f8d9f"],

Cell[BoxData[
 FractionBox[
  RowBox[{"p", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "6"}], "+", 
     RowBox[{"2", " ", "e"}], "+", "p", "-", 
     RowBox[{"4", " ", "e", " ", 
      SuperscriptBox[
       RowBox[{"JacobiSN", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"qr", " ", 
           RowBox[{"EllipticK", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "2"]}]}], ")"}]}], 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "e"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "6"}], "+", 
      RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}], "-", 
   RowBox[{"2", " ", "e", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"JacobiSN", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"qr", " ", 
         RowBox[{"EllipticK", "[", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
       FractionBox[
        RowBox[{"4", " ", "e"}], 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "2"]}]}]]], "Output",
 CellChangeTimes->{{3.899271860844266*^9, 3.8992718971912947`*^9}, 
   3.899353271504437*^9, 3.8993691304904633`*^9, 3.899386255343081*^9, 
   3.8994330714661713`*^9, 3.8994437903582897`*^9, 3.899444104094619*^9, 
   3.900136863630541*^9, 3.900137067502944*^9, 3.900137938028208*^9, 
   3.900139204607752*^9, 3.90704164717346*^9, 3.9070432158925467`*^9, 
   3.907647828248884*^9},
 CellLabel->
  "Out[325]=",ExpressionUUID->"0a260ab0-fcc2-4353-8179-938e9f670ae3"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", " ", "e", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["e", "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
        "p"}]], " ", 
      RowBox[{"JacobiSN", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"qr", " ", 
          RowBox[{"EllipticK", "[", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
        FractionBox[
         RowBox[{"4", " ", "e"}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"JacobiCN", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"qr", " ", 
             RowBox[{"EllipticK", "[", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
           
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", 
         RowBox[{"JacobiDN", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"qr", " ", 
             RowBox[{"EllipticK", "[", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
           
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", "qr", " ", 
            RowBox[{"EllipticE", "[", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", "\[Pi]", " ", 
            RowBox[{"JacobiEpsilon", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"qr", " ", 
                RowBox[{"EllipticK", "[", 
                 FractionBox[
                  RowBox[{"4", " ", "e"}], 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], 
              ",", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
           RowBox[{"4", " ", "e", " ", "\[Pi]", " ", 
            RowBox[{"JacobiCD", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"qr", " ", 
                RowBox[{"EllipticK", "[", 
                 FractionBox[
                  RowBox[{"4", " ", "e"}], 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], 
              ",", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", 
            RowBox[{"JacobiSN", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"qr", " ", 
                RowBox[{"EllipticK", "[", 
                 FractionBox[
                  RowBox[{"4", " ", "e"}], 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], 
              ",", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}]}], ")"}]}], 
        "+", 
        RowBox[{"4", " ", "e", " ", "\[Pi]", " ", 
         RowBox[{"JacobiSN", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"qr", " ", 
             RowBox[{"EllipticK", "[", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
           
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"JacobiSN", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"qr", " ", 
                RowBox[{"EllipticK", "[", 
                 FractionBox[
                  RowBox[{"4", " ", "e"}], 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], 
              ",", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "2"]}], 
          ")"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "e"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}], "-", 
         RowBox[{"2", " ", "e", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"JacobiSN", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"qr", " ", 
               RowBox[{"EllipticK", "[", 
                FractionBox[
                 RowBox[{"4", " ", "e"}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], 
             ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "2"]}]}], ")"}],
        "2"]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.899271860844266*^9, 3.8992718971912947`*^9}, 
   3.899353271504437*^9, 3.8993691304904633`*^9, 3.899386255343081*^9, 
   3.8994330714661713`*^9, 3.8994437903582897`*^9, 3.899444104094619*^9, 
   3.900136863630541*^9, 3.900137067502944*^9, 3.900137938028208*^9, 
   3.900139204607752*^9, 3.90704164717346*^9, 3.9070432158925467`*^9, 
   3.907647828603422*^9},
 CellLabel->
  "Out[326]=",ExpressionUUID->"2859538a-b96f-462f-8024-d7ed0823fd07"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Expression", " ", "in", " ", 
    RowBox[{"paper", ":"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"rqr0", " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"JacobiCN", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"qr", " ", 
           RowBox[{"EllipticK", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", "->", " ", 
       RowBox[{"Cos", "[", "\[Chi]0", "]"}]}], ",", 
      RowBox[{
       RowBox[{"JacobiSN", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"qr", " ", 
           RowBox[{"EllipticK", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", " ", 
       RowBox[{"Sin", "[", "\[Chi]0", "]"}]}], ",", 
      RowBox[{
       RowBox[{"JacobiDN", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"qr", " ", 
           RowBox[{"EllipticK", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["k", "0"], "2"], 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Chi]0", "]"}], "2"]}]}]]}], " ", ",", 
      RowBox[{
       RowBox[{"JacobiEpsilon", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"qr", " ", 
           RowBox[{"EllipticK", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", " ", 
       RowBox[{"\[CapitalEpsilon]", "[", 
        RowBox[{"\[Chi]0", ",", "k"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"EllipticE", "[", 
        FractionBox[
         RowBox[{"4", " ", "e"}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], "->", 
       RowBox[{"\[CapitalEpsilon]", "[", "k", "]"}]}]}], "}"}]}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Delta]rqr", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"JacobiCN", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"qr", " ", 
            RowBox[{"EllipticK", "[", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", "->", " ", 
        RowBox[{"Cos", "[", "\[Chi]0", "]"}]}], ",", 
       RowBox[{
        RowBox[{"JacobiSN", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"qr", " ", 
            RowBox[{"EllipticK", "[", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", " ", 
        RowBox[{"Sin", "[", "\[Chi]0", "]"}]}], ",", 
       RowBox[{
        RowBox[{"JacobiDN", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"qr", " ", 
            RowBox[{"EllipticK", "[", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["k", "0"], "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Chi]0", "]"}], "2"]}]}]]}], " ", ",", 
       RowBox[{
        RowBox[{"JacobiEpsilon", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"qr", " ", 
            RowBox[{"EllipticK", "[", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", 
        RowBox[{"\[CapitalEpsilon]", "[", 
         RowBox[{"\[Chi]0", ",", "k"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"EllipticE", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], "->", 
        RowBox[{"\[CapitalEpsilon]", "[", "k", "]"}]}]}], "}"}]}], " ", "//", 
    "Simplify", 
    RowBox[{"(*", 
     RowBox[{"/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"JacobiCN", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"qr", " ", 
             RowBox[{"EllipticK", "[", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
           
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", "->", " ", 
         RowBox[{"cn", "[", 
          RowBox[{
           SubscriptBox["\[Lambda]", "r"], ",", 
           SubscriptBox["k", "0"]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"JacobiSN", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"qr", " ", 
             RowBox[{"EllipticK", "[", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
           
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", " ", 
         RowBox[{"sn", "[", 
          RowBox[{
           SubscriptBox["\[Lambda]", "r"], ",", 
           SubscriptBox["k", "0"]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"JacobiDN", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"qr", " ", 
             RowBox[{"EllipticK", "[", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
           
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", " ", 
         RowBox[{"dn", "[", 
          RowBox[{
           SubscriptBox["\[Lambda]", "r"], ",", 
           SubscriptBox["k", "0"]}], "]"}]}], " ", ",", 
        RowBox[{
         RowBox[{"JacobiEpsilon", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"qr", " ", 
             RowBox[{"EllipticK", "[", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
           
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", " ", 
         RowBox[{"\[CurlyEpsilon]", "[", 
          RowBox[{
           SubscriptBox["\[Lambda]", "r"], ",", 
           SubscriptBox["k", "0"]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"EllipticE", "[", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], "->", 
         RowBox[{"\[CapitalEpsilon]", "[", "k", "]"}]}]}], "}"}]}], " ", 
     "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.899268136332432*^9, 3.899268138424508*^9}, {
   3.899269721660411*^9, 3.899269797574901*^9}, {3.899269857375218*^9, 
   3.899269946959866*^9}, {3.8992700337769213`*^9, 3.899270039930195*^9}, {
   3.899270127701619*^9, 3.899270159601452*^9}, 3.899270244829719*^9, {
   3.899270285152102*^9, 3.8992703016065397`*^9}, {3.899270351090786*^9, 
   3.8992703608387403`*^9}, {3.899270426241242*^9, 3.8992704273889227`*^9}, {
   3.899270468436282*^9, 3.899270470816204*^9}, {3.899270656463332*^9, 
   3.899270733856134*^9}, {3.8992707717770967`*^9, 3.899270823035584*^9}, {
   3.899270898303154*^9, 3.899270969475088*^9}, {3.899271024618572*^9, 
   3.899271081132071*^9}, {3.8992711171210833`*^9, 3.899271225582735*^9}, {
   3.899271906585499*^9, 3.8992719222596703`*^9}, {3.8992721074814777`*^9, 
   3.899272219440323*^9}, {3.899272345860293*^9, 3.899272351873911*^9}, {
   3.8992726958553057`*^9, 3.899272717916882*^9}, {3.899272989782043*^9, 
   3.89927301366494*^9}, {3.899273205130351*^9, 3.899273213690199*^9}, {
   3.899273734929414*^9, 3.899273754570863*^9}, {3.899274220711665*^9, 
   3.8992742643512383`*^9}, {3.899274762184877*^9, 3.8992747664084253`*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"bd170ad8-5e30-43da-969f-d42b5d4d729d"],

Cell[BoxData["rqr0"], "Output",
 CellChangeTimes->{
  3.8992710585853157`*^9, 3.899271228802672*^9, {3.899271916540246*^9, 
   3.899271949877232*^9}, {3.899272118360976*^9, 3.8992721301576147`*^9}, {
   3.899272175199708*^9, 3.899272231037032*^9}, {3.899272346502228*^9, 
   3.8992723522216253`*^9}, 3.8992732140298243`*^9, 3.899273757832443*^9, 
   3.899274269006666*^9, 3.899274769463007*^9, 3.899353271895083*^9, 
   3.899369130812014*^9, 3.899386255748786*^9, 3.899433072087779*^9, 
   3.899444111372684*^9, 3.900136863955647*^9, 3.900137067656026*^9, 
   3.9001379381808653`*^9, 3.900139204760648*^9, 3.907041647481852*^9, 
   3.907043216042791*^9, 3.9076478288614197`*^9},
 CellLabel->
  "Out[327]=",ExpressionUUID->"33e72bb8-211a-40e9-aaa9-1b6f671b2e52"],

Cell[BoxData["\[Delta]rqr"], "Output",
 CellChangeTimes->{
  3.8992710585853157`*^9, 3.899271228802672*^9, {3.899271916540246*^9, 
   3.899271949877232*^9}, {3.899272118360976*^9, 3.8992721301576147`*^9}, {
   3.899272175199708*^9, 3.899272231037032*^9}, {3.899272346502228*^9, 
   3.8992723522216253`*^9}, 3.8992732140298243`*^9, 3.899273757832443*^9, 
   3.899274269006666*^9, 3.899274769463007*^9, 3.899353271895083*^9, 
   3.899369130812014*^9, 3.899386255748786*^9, 3.899433072087779*^9, 
   3.899444111372684*^9, 3.900136863955647*^9, 3.900137067656026*^9, 
   3.9001379381808653`*^9, 3.900139204760648*^9, 3.907041647481852*^9, 
   3.907043216042791*^9, 3.9076478289421463`*^9},
 CellLabel->
  "Out[328]=",ExpressionUUID->"1111d59b-247b-4d8c-8712-4c3a21aa3d59"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Non", "-", 
    RowBox[{"expanded", " ", "expressions"}]}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8992679727847567`*^9, 3.8992680242172613`*^9}, {
  3.8992680755750933`*^9, 3.899268107362215*^9}},
 CellLabel->
  "In[329]:=",ExpressionUUID->"26ecacdb-0fbd-484c-b028-37441d252041"]
}, Closed]],

Cell[CellGroupData[{

Cell["Expansion of t", "Subsubsection",
 CellChangeTimes->{{3.899274178984274*^9, 3.899274194307083*^9}, 
   3.899278967362389*^9},ExpressionUUID->"6a283803-2a17-45dc-90d3-\
737ceca56f83"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Chi]0qr", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"JacobiAmplitude", "[", 
      RowBox[{
       RowBox[{
        FractionBox["qr", "\[Pi]"], 
        RowBox[{"EllipticK", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]], "]"}]}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "/.", "Subs"}], 
    "/.", 
    RowBox[{"sp", "->", "0"}]}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
        RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
        RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]\[Chi]", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Coefficient", "[", " ", 
       RowBox[{
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"JacobiAmplitude", "[", 
            RowBox[{
             RowBox[{
              FractionBox["qr", "\[Pi]"], 
              RowBox[{"EllipticK", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]], "]"}]}], ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "/.", 
           "Subs"}], ",", 
          RowBox[{"{", 
           RowBox[{"sp", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", "sp"}], 
       "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"JacobiCN", "[", 
          RowBox[{"_", ",", "_"}], "]"}], " ", "->", " ", 
         RowBox[{"Cos", "[", "\[Chi]0", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"JacobiSN", "[", 
          RowBox[{"_", ",", "_"}], "]"}], "->", " ", 
         RowBox[{"Sin", "[", "\[Chi]0", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"JacobiDN", "[", 
          RowBox[{"_", ",", "_"}], "]"}], "->", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["k0", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Chi]0", "]"}], "2"]}]}]]}], " ", ",", 
        RowBox[{
         RowBox[{"JacobiEpsilon", "[", 
          RowBox[{"_", ",", "_"}], "]"}], "->", 
         RowBox[{"EllipticE", "[", 
          RowBox[{"\[Chi]0", ",", "k0"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"EllipticE", "[", "_", "]"}], "->", 
         RowBox[{"EllipticE", "[", "k0", "]"}]}]}], "}"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"k0", "->", 
       FractionBox[
        RowBox[{"4", " ", "e"}], 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}]]}], "}"}]}], " ", "//", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", ">", "0"}], ",", 
         RowBox[{"0", "<", "e", "<", "1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
         RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
         RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
     "&"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Consistency", " ", "check"}], ",", " ", 
    RowBox[{
     RowBox[{
     "\[Delta]\[Chi]", " ", "does", " ", "not", " ", "change", " ", "value", 
      " ", "at", " ", "\[Chi]"}], "=", 
     RowBox[{"\[Pi]", ":"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]\[Chi]", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Chi]0", "->", "\[Pi]"}], ",", 
       RowBox[{"qr", "->", 
        RowBox[{"2", "\[Pi]"}]}]}], "}"}]}], "//", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", ">", "0"}], ",", 
         RowBox[{"0", "<", "e", "<", "1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
         RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
         RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
     "&"}]}], "//", "PowerExpand"}], "//", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"#", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", ">", "0"}], ",", 
       RowBox[{"0", "<", "e", "<", "1"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
       RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
       RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
   "&"}]}]}], "Input",
 CellChangeTimes->{{3.899274178984274*^9, 3.899274210344358*^9}, {
   3.899274284701354*^9, 3.899274300777927*^9}, {3.899274571712615*^9, 
   3.899274624427346*^9}, {3.899274672303115*^9, 3.899274710255665*^9}, {
   3.8992747892258463`*^9, 3.899274822037112*^9}, {3.899274863594657*^9, 
   3.899274880162703*^9}, {3.899274916876217*^9, 3.899274930338702*^9}, {
   3.8992749670895977`*^9, 3.899274976487914*^9}, {3.8992750335068197`*^9, 
   3.899275117060338*^9}, {3.8993656719193907`*^9, 3.8993656742135057`*^9}, {
   3.8993657428233347`*^9, 3.899365759955123*^9}, {3.899377024688048*^9, 
   3.899377084103606*^9}, {3.899386362837863*^9, 3.899386397788867*^9}, 
   3.899434768819655*^9, 3.899443765078315*^9, {3.899449032013289*^9, 
   3.899449056402939*^9}},
 CellLabel->
  "In[330]:=",ExpressionUUID->"3eb853d1-ce94-4b8a-bb2a-1d9e9aaabf49"],

Cell[BoxData[
 RowBox[{"JacobiAmplitude", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"qr", " ", 
     RowBox[{"EllipticK", "[", 
      FractionBox[
       RowBox[{"4", " ", "e"}], 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
   FractionBox[
    RowBox[{"4", " ", "e"}], 
    RowBox[{
     RowBox[{"-", "6"}], "+", 
     RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]], "Output",
 CellChangeTimes->{
  3.8992749788750467`*^9, {3.899275034525622*^9, 3.899275050851321*^9}, 
   3.8992750891973143`*^9, 3.899275119967067*^9, 3.8993532743138933`*^9, 
   3.899365786519226*^9, 3.899369133559369*^9, {3.89937704684129*^9, 
   3.899377087511318*^9}, 3.899386258271264*^9, 3.899433074730723*^9, 
   3.899444133053692*^9, 3.899444187046567*^9, 3.899449057436626*^9, 
   3.9001368640455008`*^9, 3.900137067741007*^9, 3.9001379382550163`*^9, 
   3.90013920491088*^9, 3.9070416475637302`*^9, 3.907043216111486*^9, 
   3.907647829151483*^9},
 CellLabel->
  "Out[330]=",ExpressionUUID->"bafcabe4-4dbc-4b56-80ad-f1295e5f6db0"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"2", " ", "p", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "6"}], "-", 
      RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "6"}], "+", 
      RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", "\[Pi]"}]], 
  RowBox[{
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["e", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", "p"}]], 
   " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "qr"}], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["e", "2"]}], "+", 
        RowBox[{"4", " ", "e", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["e", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
      RowBox[{"EllipticE", "[", 
       FractionBox[
        RowBox[{"4", " ", "e"}], 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
     RowBox[{"\[Pi]", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["e", "2"]}], "+", 
        RowBox[{"4", " ", "e", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["e", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
      RowBox[{"EllipticE", "[", 
       RowBox[{"\[Chi]0", ",", 
        FractionBox[
         RowBox[{"4", " ", "e"}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "-", 
     RowBox[{"2", " ", "e", " ", "\[Pi]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.8992749788750467`*^9, {3.899275034525622*^9, 3.899275050851321*^9}, 
   3.8992750891973143`*^9, 3.899275119967067*^9, 3.8993532743138933`*^9, 
   3.899365786519226*^9, 3.899369133559369*^9, {3.89937704684129*^9, 
   3.899377087511318*^9}, 3.899386258271264*^9, 3.899433074730723*^9, 
   3.899444133053692*^9, 3.899444187046567*^9, 3.899449057436626*^9, 
   3.9001368640455008`*^9, 3.900137067741007*^9, 3.9001379382550163`*^9, 
   3.90013920491088*^9, 3.9070416475637302`*^9, 3.907043216111486*^9, 
   3.907647834881131*^9},
 CellLabel->
  "Out[331]=",ExpressionUUID->"9c1efa7c-5fec-4713-8fcb-8bd7090e044f"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.8992749788750467`*^9, {3.899275034525622*^9, 3.899275050851321*^9}, 
   3.8992750891973143`*^9, 3.899275119967067*^9, 3.8993532743138933`*^9, 
   3.899365786519226*^9, 3.899369133559369*^9, {3.89937704684129*^9, 
   3.899377087511318*^9}, 3.899386258271264*^9, 3.899433074730723*^9, 
   3.899444133053692*^9, 3.899444187046567*^9, 3.899449057436626*^9, 
   3.9001368640455008`*^9, 3.900137067741007*^9, 3.9001379382550163`*^9, 
   3.90013920491088*^9, 3.9070416475637302`*^9, 3.907043216111486*^9, 
   3.9076478351305857`*^9},
 CellLabel->
  "Out[332]=",ExpressionUUID->"5638296b-dc53-4f11-8f55-a252cfad7bc3"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"qt", "+", 
        RowBox[{"Ttr", "[", 
         RowBox[{"p", ",", "e", ",", "sp", ",", 
          RowBox[{"\[Chi]0", "+", 
           RowBox[{"sp", " ", "\[Delta]\[Chi]"}]}]}], "]"}], " ", "-", " ", 
        RowBox[{
         RowBox[{"Ttr", "[", 
          RowBox[{"p", ",", "e", ",", "sp", ",", "\[Pi]"}], "]"}], 
         FractionBox["qr", 
          RowBox[{"2", "\[Pi]"}]]}]}], ")"}], "/.", 
      RowBox[{"{", 
       RowBox[{"sp", "->", "0"}], "}"}]}], "//", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
          RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
          RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
      "&"}]}], "//", "PowerExpand"}], "//", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
        RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
        RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.899274178984274*^9, 3.899274210344358*^9}, {
   3.899274284701354*^9, 3.899274300777927*^9}, {3.899274571712615*^9, 
   3.899274624427346*^9}, {3.899274672303115*^9, 3.899274710255665*^9}, {
   3.8992747892258463`*^9, 3.899274822037112*^9}, {3.899274863594657*^9, 
   3.899274880162703*^9}, {3.899274916876217*^9, 3.899274930338702*^9}, {
   3.8992749670895977`*^9, 3.899274976487914*^9}, {3.89927517478126*^9, 
   3.8992753218157377`*^9}, {3.899275590868038*^9, 3.899275618571969*^9}, {
   3.899275649480719*^9, 3.8992756560373983`*^9}, 3.899434700868531*^9, 
   3.899443774775524*^9, {3.899444158782606*^9, 3.899444163253364*^9}},
 CellLabel->
  "In[333]:=",ExpressionUUID->"b8271b5d-86c7-4736-8422-b41f136ae3f6"],

Cell[BoxData[
 RowBox[{"qt", "-", 
  RowBox[{
   FractionBox["1", "\[Pi]"], 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["e", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", "qr", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
         RowBox[{"EllipticE", "[", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}]}]]}], "+", 
      FractionBox[
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"36", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
          RowBox[{"14", " ", "p"}], "+", 
          SuperscriptBox["p", "2"]}], ")"}], " ", 
        RowBox[{"EllipticK", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"8", "+", "p", "-", 
          SuperscriptBox["p", "2"], "+", 
          RowBox[{
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8"}], "+", 
             RowBox[{"3", " ", "p"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"16", " ", "e"}], 
           RowBox[{"12", "+", 
            RowBox[{"8", " ", "e"}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["e", "2"]}], "-", 
            RowBox[{"8", " ", "p"}], "+", 
            SuperscriptBox["p", "2"]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", "e"}], "-", "p"}]]}], ")"}]}]}], "+", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SuperscriptBox["e", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], 
     RowBox[{
      RowBox[{"-", "6"}], "+", 
      RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
        RowBox[{"EllipticE", "[", 
         RowBox[{"\[Chi]0", ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}]}]]}], "+", 
     FractionBox[
      RowBox[{"p", " ", 
       RowBox[{"(", 
        RowBox[{"36", "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["e", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
         RowBox[{"14", " ", "p"}], "+", 
         SuperscriptBox["p", "2"]}], ")"}], " ", 
       RowBox[{"EllipticF", "[", 
        RowBox[{"\[Chi]0", ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["e", "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", 
         RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"8", "+", "p", "-", 
         SuperscriptBox["p", "2"], "+", 
         RowBox[{
          SuperscriptBox["e", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "8"}], "+", 
            RowBox[{"3", " ", "p"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"EllipticPi", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "e", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "e"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", "\[Chi]0", 
         ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", 
         RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
       RowBox[{"EllipticPi", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"16", " ", "e"}], 
          RowBox[{"12", "+", 
           RowBox[{"8", " ", "e"}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["e", "2"]}], "-", 
           RowBox[{"8", " ", "p"}], "+", 
           SuperscriptBox["p", "2"]}]], ",", "\[Chi]0", ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", "e"}], "-", "p"}]], "+", 
     FractionBox[
      RowBox[{"e", " ", "p", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", "p", "+", 
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Chi]0"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["e", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["e", "2"]}], "+", "p", "+", 
         RowBox[{"e", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.899275664817563*^9, {3.899281268163931*^9, 3.899281287289523*^9}, 
   3.8993532816368856`*^9, 3.899365802643055*^9, 3.8993691418438663`*^9, 
   3.899386265565439*^9, 3.899433082519106*^9, {3.8994441544857616`*^9, 
   3.899444190717729*^9}, 3.9001368767186832`*^9, 3.900137079849683*^9, 
   3.900137950469142*^9, 3.9001392182699327`*^9, 3.907041660773308*^9, 
   3.907043227996808*^9, 3.907647847403822*^9},
 CellLabel->
  "Out[333]=",ExpressionUUID->"d3e50d1f-5516-436e-be8b-a7bc17c25d6f"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]t", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"qt", "+", 
        RowBox[{"Ttr", "[", 
         RowBox[{"p", ",", "e", ",", "sp", ",", 
          RowBox[{"\[Chi]0", "+", 
           RowBox[{"sp", " ", "\[Delta]\[Chi]"}]}]}], "]"}], " ", "-", " ", 
        RowBox[{
         RowBox[{"Ttr", "[", 
          RowBox[{"p", ",", "e", ",", "sp", ",", "\[Pi]"}], "]"}], 
         FractionBox["qr", 
          RowBox[{"2", "\[Pi]"}]]}]}], ",", "sp"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"sp", "->", "0"}], "}"}]}], ")"}], "//", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
        RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
        RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.899274178984274*^9, 3.899274210344358*^9}, {
   3.899274284701354*^9, 3.899274300777927*^9}, {3.899274571712615*^9, 
   3.899274624427346*^9}, {3.899274672303115*^9, 3.899274710255665*^9}, {
   3.8992747892258463`*^9, 3.899274822037112*^9}, {3.899274863594657*^9, 
   3.899274880162703*^9}, {3.899274916876217*^9, 3.899274930338702*^9}, {
   3.8992749670895977`*^9, 3.899274976487914*^9}, {3.89927517478126*^9, 
   3.8992753218157377`*^9}, {3.899275590868038*^9, 3.899275618571969*^9}, {
   3.899275649480719*^9, 3.8992756560373983`*^9}, 3.899275902310341*^9, 
   3.8992801520907173`*^9, {3.899284272734099*^9, 3.899284274626625*^9}, {
   3.899289399620935*^9, 3.899289402025523*^9}, {3.899354513736864*^9, 
   3.899354517936694*^9}, {3.8993764982586527`*^9, 3.899376518022221*^9}, 
   3.899376683230275*^9, {3.8993861654709263`*^9, 3.899386213591216*^9}, {
   3.899386334882468*^9, 3.8993863461223783`*^9}, {3.899387831486333*^9, 
   3.899387836275669*^9}, {3.8994328714646273`*^9, 3.89943287998838*^9}, 
   3.899434476654894*^9, {3.899434509391919*^9, 3.899434513735517*^9}, {
   3.899434669906691*^9, 3.8994346870514793`*^9}, {3.8994398334919367`*^9, 
   3.8994398473513203`*^9}, 3.89944366257434*^9, {3.8994438303628187`*^9, 
   3.899443839024707*^9}},
 CellLabel->
  "In[334]:=",ExpressionUUID->"80777af7-9869-473e-a998-d47404f86a66"],

Cell[BoxData[
 TemplateBox[{
  "Simplify", "time", 
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"300.`\\\"}]\\) seconds, and the transformation was \
aborted. Increasing the value of the TimeConstraint option may improve the \
result of simplification.\"", 2, 334, 1, 28475336306281253247, "Local 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.907648147825938*^9},
 CellLabel->
  "During evaluation of \
In[334]:=",ExpressionUUID->"65362971-eeeb-4839-adae-d859406d969e"],

Cell[BoxData[
 TemplateBox[{
  "Simplify", "time", 
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"300.`\\\"}]\\) seconds, and the transformation was \
aborted. Increasing the value of the TimeConstraint option may improve the \
result of simplification.\"", 2, 334, 2, 28475336306281253247, "Local 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.907649610899403*^9},
 CellLabel->
  "During evaluation of \
In[334]:=",ExpressionUUID->"ca8d0a24-7a37-436b-bbb4-ae4911bca8a5"],

Cell[BoxData[
 TemplateBox[{
  "Simplify", "time", 
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"300.`\\\"}]\\) seconds, and the transformation was \
aborted. Increasing the value of the TimeConstraint option may improve the \
result of simplification.\"", 2, 334, 3, 28475336306281253247, "Local 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.90765037222095*^9},
 CellLabel->
  "During evaluation of \
In[334]:=",ExpressionUUID->"a53696fe-7169-4978-822d-c3858937cb98"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Simplify\\\", \
\\\"::\\\", \\\"time\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 334, 4, 28475336306281253247, "Local 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.9076503724292793`*^9},
 CellLabel->
  "During evaluation of \
In[334]:=",ExpressionUUID->"e1caf5cc-96ea-43bb-891e-41e5205a7e0d"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "e"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SuperscriptBox["e", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", "p", " ", 
    
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", "e"}], "+", "p"}], ")"}], " ", "qr", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
         RowBox[{"EllipticE", "[", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}]}]]}], "+", 
      FractionBox[
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"36", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
          RowBox[{"14", " ", "p"}], "+", 
          SuperscriptBox["p", "2"]}], ")"}], " ", 
        RowBox[{"EllipticK", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"8", "+", "p", "-", 
          SuperscriptBox["p", "2"], "+", 
          RowBox[{
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8"}], "+", 
             RowBox[{"3", " ", "p"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"16", " ", "e"}], 
           RowBox[{"12", "+", 
            RowBox[{"8", " ", "e"}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["e", "2"]}], "-", 
            RowBox[{"8", " ", "p"}], "+", 
            SuperscriptBox["p", "2"]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", "e"}], "-", "p"}]]}], ")"}]}], 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}], 
        RowBox[{"3", "+", 
         SuperscriptBox["e", "2"], "-", "p"}]]}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       SuperscriptBox["e", "2"], "+", "p"}], ")"}], 
     RowBox[{"5", "/", "2"}]], " ", "\[Pi]"}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["e", "2"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      SuperscriptBox["e", "2"], "+", "p"}], ")"}], " ", "qr", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
         RowBox[{"EllipticE", "[", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}]}]]}], "+", 
      FractionBox[
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"36", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
          RowBox[{"14", " ", "p"}], "+", 
          SuperscriptBox["p", "2"]}], ")"}], " ", 
        RowBox[{"EllipticK", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"8", "+", "p", "-", 
          SuperscriptBox["p", "2"], "+", 
          RowBox[{
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8"}], "+", 
             RowBox[{"3", " ", "p"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"16", " ", "e"}], 
           RowBox[{"12", "+", 
            RowBox[{"8", " ", "e"}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["e", "2"]}], "-", 
            RowBox[{"8", " ", "p"}], "+", 
            SuperscriptBox["p", "2"]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", "e"}], "-", "p"}]]}], ")"}]}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"3", "+", 
       SuperscriptBox["e", "2"], "-", "p"}], ")"}], "2"], " ", 
    SqrtBox[
     RowBox[{"p", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], " ", "\[Pi]"}]], "-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", "\[Pi]"}]], 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["e", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], 
      RowBox[{
       SuperscriptBox["p", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]]], " ", "qr", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"4", " ", "p", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"EllipticE", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "+", 
      FractionBox[
       RowBox[{"p", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"EllipticE", "[", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], "-", 
          RowBox[{"EllipticK", "[", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["p", "2"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{"36", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
          RowBox[{"14", " ", "p"}], "+", 
          SuperscriptBox["p", "2"]}], ")"}], " ", 
        RowBox[{"EllipticK", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"]}]], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["p", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{"640", "-", 
          RowBox[{"656", " ", "p"}], "+", 
          RowBox[{"160", " ", 
           SuperscriptBox["p", "2"]}], "+", 
          RowBox[{"32", " ", 
           SuperscriptBox["p", "3"]}], "-", 
          RowBox[{"15", " ", 
           SuperscriptBox["p", "4"]}], "+", 
          SuperscriptBox["p", "5"], "-", 
          RowBox[{"16", " ", 
           SuperscriptBox["e", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8"}], "+", 
             RowBox[{"5", " ", "p"}]}], ")"}]}], "-", 
          RowBox[{
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"768", "-", 
             RowBox[{"480", " ", "p"}], "+", 
             RowBox[{"160", " ", 
              SuperscriptBox["p", "2"]}], "-", 
             RowBox[{"32", " ", 
              SuperscriptBox["p", "3"]}], "+", 
             SuperscriptBox["p", "4"]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"EllipticK", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["e", "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"]}]], "+", 
      FractionBox[
       RowBox[{"p", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{"36", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
          RowBox[{"14", " ", "p"}], "+", 
          SuperscriptBox["p", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
           RowBox[{"EllipticE", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"6", "+", 
             RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
           RowBox[{"EllipticK", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], "-", 
      FractionBox[
       RowBox[{"4", " ", "p", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "-", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"]}]], "-", 
      FractionBox[
       RowBox[{"8", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "8"}], "+", 
          RowBox[{
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"8", "-", 
             RowBox[{"3", " ", "p"}]}], ")"}]}], "-", "p", "+", 
          SuperscriptBox["p", "2"]}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"]}]], "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "8"}], "+", 
          RowBox[{
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"8", "-", 
             RowBox[{"3", " ", "p"}]}], ")"}]}], "-", "p", "+", 
          SuperscriptBox["p", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "e"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
           RowBox[{"EllipticK", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["e", "2"]}], "+", 
             RowBox[{"3", " ", "e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", "p"}], ")"}]}], "+", "p"}], ")"}], 
           " ", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"2", " ", "e", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", "e"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], "-", 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"16", " ", "e"}], 
           RowBox[{"12", "+", 
            RowBox[{"8", " ", "e"}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["e", "2"]}], "-", 
            RowBox[{"8", " ", "p"}], "+", 
            SuperscriptBox["p", "2"]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "-", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["p", 
         RowBox[{"5", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "-", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"16", " ", "e"}], 
           RowBox[{"12", "+", 
            RowBox[{"8", " ", "e"}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["e", "2"]}], "-", 
            RowBox[{"8", " ", "p"}], "+", 
            SuperscriptBox["p", "2"]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["e", "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "-", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], "-", 
      FractionBox[
       RowBox[{"p", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "-", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"16", " ", "e"}], 
           RowBox[{"12", "+", 
            RowBox[{"8", " ", "e"}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["e", "2"]}], "-", 
            RowBox[{"8", " ", "p"}], "+", 
            SuperscriptBox["p", "2"]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "-", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"12", "+", 
             RowBox[{"8", " ", "e"}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["e", "2"]}], "-", 
             RowBox[{"8", " ", "p"}], "+", 
             SuperscriptBox["p", "2"]}], ")"}], " ", 
           RowBox[{"EllipticK", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "12"}], "-", 
             RowBox[{"24", " ", "e"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["e", "2"]}], "+", 
             RowBox[{"8", " ", "p"}], "-", 
             SuperscriptBox["p", "2"]}], ")"}], " ", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"16", " ", "e"}], 
              RowBox[{"12", "+", 
               RowBox[{"8", " ", "e"}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["e", "2"]}], "-", 
               RowBox[{"8", " ", "p"}], "+", 
               SuperscriptBox["p", "2"]}]], ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}]}], ")"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]]}], ")"}]}]}], "-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}], 
         RowBox[{"3", "+", 
          SuperscriptBox["e", "2"], "-", "p"}]]}], ")"}], 
      RowBox[{"3", "/", "2"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "-", 
        SuperscriptBox["e", "2"], "+", "p"}], ")"}], 
      RowBox[{"5", "/", "2"}]]}]], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "e"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SuperscriptBox["e", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", "p", " ", 
    
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", "e"}], "+", "p"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
         RowBox[{"EllipticE", "[", 
          RowBox[{"\[Chi]0", ",", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}]}]]}], "+", 
      FractionBox[
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"36", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
          RowBox[{"14", " ", "p"}], "+", 
          SuperscriptBox["p", "2"]}], ")"}], " ", 
        RowBox[{"EllipticF", "[", 
         RowBox[{"\[Chi]0", ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"8", "+", "p", "-", 
          SuperscriptBox["p", "2"], "+", 
          RowBox[{
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8"}], "+", 
             RowBox[{"3", " ", "p"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", "\[Chi]0", 
          ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"16", " ", "e"}], 
           RowBox[{"12", "+", 
            RowBox[{"8", " ", "e"}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["e", "2"]}], "-", 
            RowBox[{"8", " ", "p"}], "+", 
            SuperscriptBox["p", "2"]}]], ",", "\[Chi]0", ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", "e"}], "-", "p"}]], "+", 
      FractionBox[
       RowBox[{"e", " ", "p", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", "p", "+", 
            RowBox[{"2", " ", "e", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Chi]0"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["e", "2"]}], "+", "p", "+", 
          RowBox[{"e", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]]}], ")"}]}]}], 
  "+", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", "+", 
        SuperscriptBox["e", "2"], "-", "p"}], ")"}], "2"], " ", 
     SqrtBox[
      RowBox[{"p", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]]}]], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["e", "2"]}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      SuperscriptBox["e", "2"], "+", "p"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
         RowBox[{"EllipticE", "[", 
          RowBox[{"\[Chi]0", ",", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}]}]]}], "+", 
      FractionBox[
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"36", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
          RowBox[{"14", " ", "p"}], "+", 
          SuperscriptBox["p", "2"]}], ")"}], " ", 
        RowBox[{"EllipticF", "[", 
         RowBox[{"\[Chi]0", ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"8", "+", "p", "-", 
          SuperscriptBox["p", "2"], "+", 
          RowBox[{
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8"}], "+", 
             RowBox[{"3", " ", "p"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", "\[Chi]0", 
          ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"16", " ", "e"}], 
           RowBox[{"12", "+", 
            RowBox[{"8", " ", "e"}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["e", "2"]}], "-", 
            RowBox[{"8", " ", "p"}], "+", 
            SuperscriptBox["p", "2"]}]], ",", "\[Chi]0", ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", "e"}], "-", "p"}]], "+", 
      FractionBox[
       RowBox[{"e", " ", "p", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", "p", "+", 
            RowBox[{"2", " ", "e", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Chi]0"}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["e", "2"]}], "+", "p", "+", 
          RowBox[{"e", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]]}], ")"}]}]}], 
  "+", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SuperscriptBox["e", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], 
     RowBox[{
      SuperscriptBox["p", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]]], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "p", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         "p"}]], " ", 
       RowBox[{"EllipticE", "[", 
        RowBox[{"\[Chi]0", ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "e"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         "p"}]], " ", 
       RowBox[{"(", 
        RowBox[{"36", "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["e", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
         RowBox[{"14", " ", "p"}], "+", 
         SuperscriptBox["p", "2"]}], ")"}], " ", 
       RowBox[{"EllipticF", "[", 
        RowBox[{"\[Chi]0", ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["e", "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", 
        RowBox[{"3", "/", "2"}]], " ", 
       RowBox[{"(", 
        RowBox[{"640", "-", 
         RowBox[{"656", " ", "p"}], "+", 
         RowBox[{"160", " ", 
          SuperscriptBox["p", "2"]}], "+", 
         RowBox[{"32", " ", 
          SuperscriptBox["p", "3"]}], "-", 
         RowBox[{"15", " ", 
          SuperscriptBox["p", "4"]}], "+", 
         SuperscriptBox["p", "5"], "-", 
         RowBox[{"16", " ", 
          SuperscriptBox["e", "4"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "8"}], "+", 
            RowBox[{"5", " ", "p"}]}], ")"}]}], "-", 
         RowBox[{
          SuperscriptBox["e", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"768", "-", 
            RowBox[{"480", " ", "p"}], "+", 
            RowBox[{"160", " ", 
             SuperscriptBox["p", "2"]}], "-", 
            RowBox[{"32", " ", 
             SuperscriptBox["p", "3"]}], "+", 
            SuperscriptBox["p", "4"]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"EllipticF", "[", 
        RowBox[{"\[Chi]0", ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["e", "2"]}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          SuperscriptBox["e", "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"]}]], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"p", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{"36", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
          RowBox[{"14", " ", "p"}], "+", 
          SuperscriptBox["p", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"qr", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             RowBox[{"4", " ", "e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
           RowBox[{"EllipticE", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "6"}], " ", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "6"}], "+", "p", "+", 
                 RowBox[{"2", " ", "e", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]]]}], "+", 
             RowBox[{"2", " ", "e", " ", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "6"}], "+", "p", "+", 
                 RowBox[{"2", " ", "e", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]]]}], "+", 
             RowBox[{"p", " ", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "6"}], "+", "p", "+", 
                 RowBox[{"2", " ", "e", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]]]}], "-", 
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", 
                SuperscriptBox["e", "2"]}], "+", 
               RowBox[{"4", " ", "e", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["e", "2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]]}], ")"}], " ", 
           RowBox[{"EllipticE", "[", 
            RowBox[{"\[Chi]0", ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"6", "+", 
             RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", "\[Pi]", " ", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "6"}], "+", "p", "+", 
              RowBox[{"2", " ", "e", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
           RowBox[{"EllipticF", "[", 
            RowBox[{"\[Chi]0", ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}]}], ")"}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"], " ", "\[Pi]", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", "p", "+", 
            RowBox[{"2", " ", "e", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]]}], ")"}]}], 
     "-", 
     FractionBox[
      RowBox[{"2", " ", "p", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         "p"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "-", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
       RowBox[{"EllipticPi", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "e", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "e"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", "\[Chi]0", 
         ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "e"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"]}]], "-", 
     FractionBox[
      RowBox[{"4", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         "p"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "8"}], "+", 
         RowBox[{
          SuperscriptBox["e", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"8", "-", 
            RowBox[{"3", " ", "p"}]}], ")"}]}], "-", "p", "+", 
         SuperscriptBox["p", "2"]}], ")"}], " ", 
       RowBox[{"EllipticPi", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "e", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "e"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", "\[Chi]0", 
         ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["e", "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"]}]], "-", 
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "e"}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         "p"}]], " ", 
       RowBox[{"EllipticPi", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"16", " ", "e"}], 
          RowBox[{"12", "+", 
           RowBox[{"8", " ", "e"}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["e", "2"]}], "-", 
           RowBox[{"8", " ", "p"}], "+", 
           SuperscriptBox["p", "2"]}]], ",", "\[Chi]0", ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", 
        RowBox[{"5", "/", "2"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "-", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
       RowBox[{"EllipticPi", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"16", " ", "e"}], 
          RowBox[{"12", "+", 
           RowBox[{"8", " ", "e"}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["e", "2"]}], "-", 
           RowBox[{"8", " ", "p"}], "+", 
           SuperscriptBox["p", "2"]}]], ",", "\[Chi]0", ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{"4", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          SuperscriptBox["e", "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], "-", 
     FractionBox[
      RowBox[{"p", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         "p"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "-", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
       RowBox[{"EllipticPi", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"16", " ", "e"}], 
          RowBox[{"12", "+", 
           RowBox[{"8", " ", "e"}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["e", "2"]}], "-", 
           RowBox[{"8", " ", "p"}], "+", 
           SuperscriptBox["p", "2"]}]], ",", "\[Chi]0", ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{"e", " ", 
       SuperscriptBox["p", 
        RowBox[{"3", "/", "2"}]], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Chi]0"}], "]"}], " ", 
       SqrtBox[
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", "p", "+", 
            RowBox[{"2", " ", "e", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"qr", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            RowBox[{"4", " ", "e", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["e", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
          RowBox[{"EllipticE", "[", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "-", 
         RowBox[{"\[Pi]", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            RowBox[{"4", " ", "e", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["e", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
          RowBox[{"EllipticE", "[", 
           RowBox[{"\[Chi]0", ",", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
         RowBox[{"2", " ", "e", " ", "\[Pi]", " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["e", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", 
         RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["e", "2"]}], "+", "p", "+", 
         RowBox[{"e", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]], "-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", "\[Pi]"}]], 
      RowBox[{"p", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         "p"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"qr", " ", 
          SqrtBox[
           FractionBox[
            RowBox[{
             RowBox[{"-", "6"}], "+", "p", "+", 
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            RowBox[{"4", " ", "e", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["e", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
          RowBox[{"EllipticE", "[", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
         RowBox[{"\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "-", 
               RowBox[{"2", " ", "e"}], "+", "p", "-", 
               RowBox[{
                SqrtBox[
                 FractionBox[
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p", "+", 
                   RowBox[{"2", " ", "e", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["e", "2"]}], "+", 
                  RowBox[{"4", " ", "e", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
                  RowBox[{"8", " ", 
                   SuperscriptBox["e", "2"], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]]}]}], ")"}], " ", 
             RowBox[{"EllipticE", "[", 
              RowBox[{"\[Chi]0", ",", 
               FractionBox[
                RowBox[{"4", " ", "e"}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"6", "+", 
               RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
             RowBox[{"EllipticF", "[", 
              RowBox[{"\[Chi]0", ",", 
               FractionBox[
                RowBox[{"4", " ", "e"}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
            RowBox[{"2", " ", "e", " ", 
             SqrtBox[
              FractionBox[
               RowBox[{
                RowBox[{"-", "6"}], "+", "p", "+", 
                RowBox[{"2", " ", "e", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     "-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "+", "e"}]], "-", 
         FractionBox["2", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         "p"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p", "+", 
                   RowBox[{"2", " ", "e", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]]}], " ", 
              RowBox[{"EllipticE", "[", 
               RowBox[{"\[Chi]0", ",", 
                FractionBox[
                 RowBox[{"4", " ", "e"}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"6", "+", 
                RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "6"}], "+", "p", "+", 
                 RowBox[{"2", " ", "e", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
              RowBox[{"EllipticPi", "[", 
               RowBox[{
                FractionBox[
                 RowBox[{"16", " ", "e"}], 
                 RowBox[{"12", "+", 
                  RowBox[{"8", " ", "e"}], "-", 
                  RowBox[{"4", " ", 
                   SuperscriptBox["e", "2"]}], "-", 
                  RowBox[{"8", " ", "p"}], "+", 
                  SuperscriptBox["p", "2"]}]], ",", "\[Chi]0", ",", 
                FractionBox[
                 RowBox[{"4", " ", "e"}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "-", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], "2"], " ", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "6"}], "+", "p", "+", 
              RowBox[{"2", " ", "e", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]]]}]], "+", 
         FractionBox[
          RowBox[{"4", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"qr", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox["e", "2"]}], "+", 
                RowBox[{"4", " ", "e", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["e", "2"], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
              RowBox[{"EllipticE", "[", 
               FractionBox[
                RowBox[{"4", " ", "e"}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "-", 
             RowBox[{"\[Pi]", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox["e", "2"]}], "+", 
                RowBox[{"4", " ", "e", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["e", "2"], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
              RowBox[{"EllipticE", "[", 
               RowBox[{"\[Chi]0", ",", 
                FractionBox[
                 RowBox[{"4", " ", "e"}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
             RowBox[{"2", " ", "e", " ", "\[Pi]", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"6", "+", 
             RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", "\[Pi]", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "6"}], "+", "p", "+", 
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
           RowBox[{"(", 
            RowBox[{"12", "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["e", "2"]}], "-", 
             RowBox[{"8", " ", "p"}], "+", 
             SuperscriptBox["p", "2"], "+", 
             RowBox[{"8", " ", "e", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]], "-", 
         RowBox[{
          FractionBox["1", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "-", 
               RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{"12", "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["e", "2"]}], "-", 
              RowBox[{"8", " ", "p"}], "+", 
              SuperscriptBox["p", "2"], "+", 
              RowBox[{"8", " ", "e", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]], 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", 
               RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "12"}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["e", "2"]}], "+", 
               RowBox[{"8", " ", "p"}], "-", 
               SuperscriptBox["p", "2"], "-", 
               RowBox[{"8", " ", "e", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}], " ", 
             RowBox[{"EllipticE", "[", 
              RowBox[{"\[Chi]0", ",", 
               FractionBox[
                RowBox[{"4", " ", "e"}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", 
               RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"6", "+", 
               RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "12"}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["e", "2"]}], "+", 
               RowBox[{"8", " ", "p"}], "-", 
               SuperscriptBox["p", "2"], "-", 
               RowBox[{"8", " ", "e", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}], " ", 
             RowBox[{"EllipticF", "[", 
              RowBox[{"\[Chi]0", ",", 
               FractionBox[
                RowBox[{"4", " ", "e"}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"64", " ", "e"}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "-", 
                   RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]}], ")"}], " ", 
             
             RowBox[{"(", 
              RowBox[{"12", "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["e", "2"]}], "-", 
               RowBox[{"8", " ", "p"}], "+", 
               SuperscriptBox["p", "2"], "+", 
               RowBox[{"8", " ", "e", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}], " ", 
             RowBox[{"EllipticPi", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"16", " ", "e"}], 
                RowBox[{"12", "+", 
                 RowBox[{"8", " ", "e"}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["e", "2"]}], "-", 
                 RowBox[{"8", " ", "p"}], "+", 
                 SuperscriptBox["p", "2"]}]], ",", "\[Chi]0", ",", 
               FractionBox[
                RowBox[{"4", " ", "e"}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
            RowBox[{"32", " ", "e", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", 
               RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", "p", "+", 
                 RowBox[{"2", " ", "e", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
     "-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "-", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "+", "e"}]], "-", 
         FractionBox["2", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}]]}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         "p"}]], " ", 
       RowBox[{"(", 
        RowBox[{"4", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"1", "-", "e"}]], "+", 
            FractionBox["1", 
             RowBox[{"1", "+", "e"}]], "+", 
            FractionBox["2", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}]]}], ")"}], " ", "p"}]}], ")"}], 
       " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "+", "e"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p", "+", 
                   RowBox[{"2", " ", "e", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]]}], " ", 
              RowBox[{"EllipticE", "[", 
               RowBox[{"\[Chi]0", ",", 
                FractionBox[
                 RowBox[{"4", " ", "e"}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"6", "+", 
                RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "6"}], "+", "p", "+", 
                 RowBox[{"2", " ", "e", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
              RowBox[{"EllipticPi", "[", 
               RowBox[{
                FractionBox[
                 RowBox[{"2", " ", "e", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "+", "e"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
                "\[Chi]0", ",", 
                FractionBox[
                 RowBox[{"4", " ", "e"}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], 
          SqrtBox[
           FractionBox[
            RowBox[{
             RowBox[{"-", "6"}], "+", "p", "+", 
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]]], "-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "e"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"6", "+", 
             RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], 
            RowBox[{"3", "/", "2"}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"qr", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox["e", "2"]}], "+", 
                RowBox[{"4", " ", "e", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["e", "2"], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
              RowBox[{"EllipticE", "[", 
               FractionBox[
                RowBox[{"4", " ", "e"}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "-", 
             RowBox[{"\[Pi]", " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox["e", "2"]}], "+", 
                RowBox[{"4", " ", "e", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["e", "2"], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
              RowBox[{"EllipticE", "[", 
               RowBox[{"\[Chi]0", ",", 
                FractionBox[
                 RowBox[{"4", " ", "e"}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
             RowBox[{"2", " ", "e", " ", "\[Pi]", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], 
          RowBox[{"\[Pi]", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "6"}], "+", "p", "+", 
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["e", "2"]}], "+", "p", "+", 
             RowBox[{"e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]], "+", 
         RowBox[{
          FractionBox["1", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["e", "2"]}], "+", "p", "+", 
              RowBox[{"e", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]], 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"1", "-", "e"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", "e"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["e", "2"]}], "+", "p", "+", 
                  RowBox[{"e", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}], " ", 
                RowBox[{"EllipticE", "[", 
                 RowBox[{"\[Chi]0", ",", 
                  FractionBox[
                   RowBox[{"4", " ", "e"}], 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], ")"}]}], 
             "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "e"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"6", "+", 
                RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["e", "2"]}], "+", "p", "+", 
                RowBox[{"e", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}], " ", 
              RowBox[{"EllipticF", "[", 
               RowBox[{"\[Chi]0", ",", 
                FractionBox[
                 RowBox[{"4", " ", "e"}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["e", "3"]}], "+", 
                RowBox[{
                 SuperscriptBox["e", "2"], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "+", "p", "-", 
                RowBox[{"e", " ", 
                 RowBox[{"(", 
                  RowBox[{"26", "-", 
                   RowBox[{"10", " ", "p"}], "+", 
                   SuperscriptBox["p", "2"]}], ")"}]}]}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["e", "2"]}], "+", "p", "+", 
                RowBox[{"e", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}], " ", 
              RowBox[{"EllipticPi", "[", 
               RowBox[{
                FractionBox[
                 RowBox[{"2", " ", "e", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "+", "e"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
                "\[Chi]0", ",", 
                FractionBox[
                 RowBox[{"4", " ", "e"}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
             RowBox[{"e", " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "e"}], ")"}], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"], " ", 
              SqrtBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", "p", "+", 
                  RowBox[{"2", " ", "e", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]}]}], 
        ")"}]}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"e", " ", "p", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Chi]0"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "e"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", "qr", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             RowBox[{"4", " ", "e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
           RowBox[{"EllipticE", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Chi]0"}], "]"}]}], "+", 
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "72"}], "+", 
             RowBox[{"24", " ", "e"}], "+", 
             RowBox[{"20", " ", 
              SuperscriptBox["e", "2"]}], "+", 
             RowBox[{"24", " ", "p"}], "-", 
             RowBox[{"10", " ", "e", " ", "p"}], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox["e", "2"], " ", "p"}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["p", "2"]}], "+", 
             RowBox[{"e", " ", 
              SuperscriptBox["p", "2"]}], "-", 
             RowBox[{"e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "48"}], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["e", "2"]}], "-", 
                RowBox[{"2", " ", "e", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "4"}], "+", "p"}], ")"}]}], "+", 
                RowBox[{"14", " ", "p"}], "-", 
                SuperscriptBox["p", "2"]}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Chi]0"}], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["e", "2"], " ", "p", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Chi]0"}], "]"}]}], "+", 
             RowBox[{"e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox["e", "2"]}], "+", 
                RowBox[{"4", " ", "e", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["e", "2"], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
              RowBox[{"EllipticE", "[", 
               RowBox[{"\[Chi]0", ",", 
                FractionBox[
                 RowBox[{"4", " ", "e"}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", "\[Pi]", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", "p", "+", 
            RowBox[{"2", " ", "e", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["e", "2"]}], "+", "p", "+", 
          RowBox[{"e", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"e", " ", 
        SuperscriptBox["p", 
         RowBox[{"3", "/", "2"}]], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", "p", "+", 
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Chi]0"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "e"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"], " ", "qr", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             RowBox[{"4", " ", "e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
           RowBox[{"EllipticE", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Chi]0"}], "]"}]}], "+", 
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "72"}], "+", 
             RowBox[{"64", " ", 
              SuperscriptBox["e", "2"]}], "-", 
             RowBox[{"8", " ", 
              SuperscriptBox["e", "4"]}], "+", 
             RowBox[{"24", " ", "p"}], "-", 
             RowBox[{"16", " ", 
              SuperscriptBox["e", "2"], " ", "p"}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["p", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["e", "2"], " ", 
              SuperscriptBox["p", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["e", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Chi]0"}], "]"}]}], "+", 
             RowBox[{"e", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"], " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox["e", "2"]}], "+", 
                RowBox[{"4", " ", "e", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["e", "2"], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
              RowBox[{"EllipticE", "[", 
               RowBox[{"\[Chi]0", ",", 
                FractionBox[
                 RowBox[{"4", " ", "e"}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", "\[Pi]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["e", "2"]}], "+", "p", "+", 
           RowBox[{"e", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}], "2"]}], 
       ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.899448048812243*^9, 3.900136952867772*^9, 
  3.900137328190136*^9, 3.900138048358152*^9, 3.900143039018594*^9, 
  3.907041752675098*^9, 3.907043258517665*^9, 3.907651930989563*^9},
 CellLabel->
  "Out[334]=",ExpressionUUID->"b82c793d-2ff6-46d5-927f-071f0d3a4c13"]
}, Closed]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "expression", " ", "will", " ", "take", " ", "a", " ", "long",
     " ", "time", " ", "to", " ", "evaluate", " ", "since", " ", "\[Delta]t", 
    " ", "is", " ", "complicated", " ", "and", " ", "long"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"\[Delta]t", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Delta]t", "//", "PowerExpand"}], "//", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
          RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
          RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
      "&"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.899274178984274*^9, 3.899274210344358*^9}, {
   3.899274284701354*^9, 3.899274300777927*^9}, {3.899274571712615*^9, 
   3.899274624427346*^9}, {3.899274672303115*^9, 3.899274710255665*^9}, {
   3.8992747892258463`*^9, 3.899274822037112*^9}, {3.899274863594657*^9, 
   3.899274880162703*^9}, {3.899274916876217*^9, 3.899274930338702*^9}, {
   3.8992749670895977`*^9, 3.899274976487914*^9}, {3.89927517478126*^9, 
   3.8992753218157377`*^9}, {3.899275590868038*^9, 3.899275618571969*^9}, {
   3.899275649480719*^9, 3.8992756560373983`*^9}, 3.899275902310341*^9, 
   3.8992801520907173`*^9, {3.899284272734099*^9, 3.899284274626625*^9}, {
   3.899289399620935*^9, 3.899289402025523*^9}, {3.899354513736864*^9, 
   3.899354517936694*^9}, {3.8993764982586527`*^9, 3.899376518022221*^9}, 
   3.899376683230275*^9, {3.8993861654709263`*^9, 3.899386213591216*^9}, {
   3.899386334882468*^9, 3.8993863461223783`*^9}, {3.899387831486333*^9, 
   3.899387836275669*^9}, {3.8994328714646273`*^9, 3.89943287998838*^9}, 
   3.899434476654894*^9, {3.899434509391919*^9, 3.899434513735517*^9}, {
   3.899434669906691*^9, 3.8994346870514793`*^9}, {3.8994398334919367`*^9, 
   3.899439863806715*^9}, {3.8994399191053*^9, 3.899439946218668*^9}, 
   3.8994399971127243`*^9, 3.8994436722829657`*^9, 3.899443781184352*^9, {
   3.89944423587964*^9, 3.899444238938963*^9}, {3.8995352864963217`*^9, 
   3.899535308484816*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"76933426-38ab-417f-9cd2-42836b97e854"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"avg", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{
        RowBox[{"Series", "[", " ", 
         RowBox[{
          RowBox[{"Ttr", "[", 
           RowBox[{"p", ",", "e", ",", "sp", ",", "\[Pi]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"sp", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", "sp"}], 
       "]"}], "//", "FunctionExpand"}], " ", "//", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}],
       "&"}]}], "//", "PowerExpand"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.899274178984274*^9, 3.899274210344358*^9}, {
   3.899274284701354*^9, 3.899274300777927*^9}, {3.899274571712615*^9, 
   3.899274624427346*^9}, {3.899274672303115*^9, 3.899274710255665*^9}, {
   3.8992747892258463`*^9, 3.899274822037112*^9}, {3.899274863594657*^9, 
   3.899274880162703*^9}, {3.899274916876217*^9, 3.899274930338702*^9}, {
   3.8992749670895977`*^9, 3.899274976487914*^9}, {3.89927517478126*^9, 
   3.8992753218157377`*^9}, {3.899275590868038*^9, 3.899275618571969*^9}, {
   3.899275649480719*^9, 3.8992756560373983`*^9}, 3.899275902310341*^9, 
   3.8992801520907173`*^9, {3.899284272734099*^9, 3.899284274626625*^9}, {
   3.899289399620935*^9, 3.899289402025523*^9}, {3.899354513736864*^9, 
   3.899354517936694*^9}, {3.8993764982586527`*^9, 3.899376571223753*^9}, {
   3.899376661737412*^9, 3.899376720797057*^9}, {3.899376865255763*^9, 
   3.899376873412784*^9}, {3.899377149938737*^9, 3.899377189811414*^9}, 
   3.899377272517448*^9, {3.8994346146488457`*^9, 3.899434656517358*^9}},
 CellLabel->
  "In[336]:=",ExpressionUUID->"dcaa8063-301b-496c-84eb-66b1d8a0a484"],

Cell[BoxData[
 FractionBox[
  RowBox[{"p", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "28"}], "-", 
         RowBox[{"4", " ", 
          SuperscriptBox["e", "2"]}], "+", 
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{"4", "+", "p"}], ")"}]}]}], ")"}], " ", 
       RowBox[{"EllipticE", "[", 
        FractionBox[
         RowBox[{"4", " ", "e"}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
      RowBox[{"6", "+", 
       RowBox[{"2", " ", "e"}], "-", "p"}]], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"128", "+", 
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "180"}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["e", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "5"}], "+", "p"}], ")"}]}], "+", 
           RowBox[{"p", " ", 
            RowBox[{"(", 
             RowBox[{"80", "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "15"}], "+", "p"}], ")"}], " ", "p"}]}], 
             ")"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"EllipticK", "[", 
       FractionBox[
        RowBox[{"4", " ", "e"}], 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"6", "+", 
         RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"16", "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "7"}], "+", "p"}], ")"}], " ", "p"}], "+", 
            RowBox[{
             SuperscriptBox["e", "2"], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "16"}], "+", 
               RowBox[{"3", " ", "p"}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "e"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "e"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"16", " ", "e"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "-", 
                RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}]}], ")"}]}], 
      RowBox[{"1", "+", "e"}]]}], ")"}]}], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"], " ", 
   SqrtBox[
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]]}]]], "Output",
 CellChangeTimes->{
  3.899376655727021*^9, 3.899376711830956*^9, 3.8993767487790623`*^9, 
   3.899376903274508*^9, {3.8993782027728453`*^9, 3.8993782218772173`*^9}, 
   3.899448080510148*^9, 3.900143069764722*^9, 3.907651967976468*^9},
 CellLabel->
  "Out[336]=",ExpressionUUID->"9c49eabb-315f-47a4-85ed-79bb2503409f"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Expansion of \[CurlyPhi]", "Subsubsection",
 CellChangeTimes->{{3.899278975671378*^9, 
  3.899278985388134*^9}},ExpressionUUID->"7a67ed8a-7902-4b13-9742-\
cd1b77e6d977"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CurlyPhi]0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"q\[CurlyPhi]", "+", 
      RowBox[{"\[CapitalPhi]tr", "[", 
       RowBox[{"p", ",", "e", ",", "sp", ",", 
        RowBox[{"\[Chi]0", "+", 
         RowBox[{"sp", " ", "\[Delta]\[Chi]"}]}]}], "]"}], " ", "-", " ", 
      RowBox[{
       RowBox[{"\[CapitalPhi]tr", "[", 
        RowBox[{"p", ",", "e", ",", "sp", ",", "\[Pi]"}], "]"}], 
       FractionBox["qr", 
        RowBox[{"2", "\[Pi]"}]]}]}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{"sp", "->", "0"}], "}"}]}], "//", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.899275853890662*^9, 3.899275878564245*^9}, 
   3.899275916637971*^9},
 CellLabel->
  "In[337]:=",ExpressionUUID->"6a4a6fbc-ebff-4a39-a594-1e33fab8fd08"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SqrtBox[
     RowBox[{"p", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], " ", "\[Pi]", " ", 
    "q\[CurlyPhi]"}], "+", 
   RowBox[{"2", " ", "p", " ", "\[Pi]", " ", 
    RowBox[{"EllipticF", "[", 
     RowBox[{"\[Chi]0", ",", 
      FractionBox[
       RowBox[{"4", " ", "e"}], 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "-", 
   RowBox[{"2", " ", "p", " ", "qr", " ", 
    RowBox[{"EllipticK", "[", 
     FractionBox[
      RowBox[{"4", " ", "e"}], 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}]}], 
  RowBox[{
   SqrtBox[
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], " ", 
   "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.8992786014574127`*^9, 3.8992838511246443`*^9, 
  3.8992875091331463`*^9, 3.899353281710112*^9, 3.899374237783011*^9, 
  3.899386265649325*^9, 3.8994480805931873`*^9, 3.900143069879216*^9, 
  3.9076519680966043`*^9},
 CellLabel->
  "Out[337]=",ExpressionUUID->"32b358f9-5fc9-4634-9a1c-cf9bef92c6db"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]\[CurlyPhi]", " ", "=", 
  RowBox[{
   RowBox[{"(", " ", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"q\[CurlyPhi]", "+", 
        RowBox[{"\[CapitalPhi]tr", "[", 
         RowBox[{"p", ",", "e", ",", "sp", ",", 
          RowBox[{"\[Chi]0", "+", 
           RowBox[{"sp", " ", "\[Delta]\[Chi]"}]}]}], "]"}], " ", "-", " ", 
        RowBox[{
         RowBox[{"\[CapitalPhi]tr", "[", 
          RowBox[{"p", ",", "e", ",", "sp", ",", "\[Pi]"}], "]"}], 
         FractionBox["qr", 
          RowBox[{"2", "\[Pi]"}]]}]}], ",", "sp"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"sp", "->", "0"}], "}"}]}], ")"}], "//", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
        RowBox[{"\[Chi]0", " ", "\[Element]", "Reals"}], ",", 
        RowBox[{"qr", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.899275853890662*^9, 3.899275878564245*^9}, {
   3.899275916637971*^9, 3.899275937661915*^9}, {3.8992843318446074`*^9, 
   3.8992843345596027`*^9}, {3.899386905706167*^9, 3.89938701364953*^9}, {
   3.899387064459003*^9, 3.899387077730443*^9}, {3.899387201078966*^9, 
   3.8993872059661207`*^9}, {3.899387642518684*^9, 3.899387654722311*^9}, {
   3.899434586544013*^9, 3.899434591336834*^9}, {3.8994436781961527`*^9, 
   3.899443689405795*^9}, {3.8994446507571774`*^9, 3.8994446552546263`*^9}, 
   3.900139712016234*^9},
 CellLabel->
  "In[338]:=",ExpressionUUID->"ba244e93-e662-461a-8a12-f2652f7716b2"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"3", "+", 
       SuperscriptBox["e", "2"], "-", "p"}], ")"}], "3"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}], 
        RowBox[{"3", "+", 
         SuperscriptBox["e", "2"], "-", "p"}]]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]], 
  RowBox[{
   SqrtBox[
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          SuperscriptBox["e", "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SuperscriptBox["e", "2"], "-", "p"}], ")"}]}], "p"]}]], " ", "p", 
   " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3", "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
        RowBox[{"EllipticF", "[", 
         RowBox[{"\[Chi]0", ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], ")"}]}], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], "2"], " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "e"}], "+", "p"}], ")"}], " ", 
       RowBox[{"EllipticF", "[", 
        RowBox[{"\[Chi]0", ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{
       RowBox[{"-", "4"}], "+", "p"}]], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", "\[Pi]", " ", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"-", "6"}], "+", "p", "+", 
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]]}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SuperscriptBox["e", "2"], "-", "p"}], ")"}], " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"qr", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            RowBox[{"4", " ", "e", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["e", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
          RowBox[{"EllipticE", "[", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
         RowBox[{"\[Pi]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "6"}], " ", 
             SqrtBox[
              FractionBox[
               RowBox[{
                RowBox[{"-", "6"}], "+", "p", "+", 
                RowBox[{"2", " ", "e", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]]]}], "+", 
            RowBox[{"2", " ", "e", " ", 
             SqrtBox[
              FractionBox[
               RowBox[{
                RowBox[{"-", "6"}], "+", "p", "+", 
                RowBox[{"2", " ", "e", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]]]}], "+", 
            RowBox[{"p", " ", 
             SqrtBox[
              FractionBox[
               RowBox[{
                RowBox[{"-", "6"}], "+", "p", "+", 
                RowBox[{"2", " ", "e", " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]]]}], "-", 
            SqrtBox[
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", 
               SuperscriptBox["e", "2"]}], "+", 
              RowBox[{"4", " ", "e", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
              RowBox[{"8", " ", 
               SuperscriptBox["e", "2"], " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]]}], ")"}], " ", 
          RowBox[{"EllipticE", "[", 
           RowBox[{"\[Chi]0", ",", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"6", "+", 
            RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", "\[Pi]", " ", 
          SqrtBox[
           FractionBox[
            RowBox[{
             RowBox[{"-", "6"}], "+", "p", "+", 
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
          RowBox[{"EllipticF", "[", 
           RowBox[{"\[Chi]0", ",", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}]}], ")"}]}]}], 
     "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SuperscriptBox["e", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", "qr", " ", 
       RowBox[{"EllipticK", "[", 
        FractionBox[
         RowBox[{"4", " ", "e"}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], "-", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], "2"], " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"4", " ", "e"}], "+", "p"}], ")"}], " ", "qr", " ", 
       RowBox[{"EllipticK", "[", 
        FractionBox[
         RowBox[{"4", " ", "e"}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", "\[Pi]"}]], "+", 
     FractionBox[
      RowBox[{"p", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         SuperscriptBox["e", "2"], "+", "p"}], ")"}], " ", "qr", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"EllipticE", "[", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"6", "+", 
            RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
          RowBox[{"EllipticK", "[", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}]}], ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"6", "+", 
         RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", "\[Pi]"}]]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.899278604828828*^9, 3.8992838561099443`*^9, 
  3.8992875090400143`*^9, 3.899353288145679*^9, 3.899374243548379*^9, 
  3.8993862718594427`*^9, 3.899387003067526*^9, 3.899387035867552*^9, 
  3.899387108190748*^9, 3.8993872651202583`*^9, 3.8993877165369873`*^9, 
  3.8994484183111143`*^9, 3.9001433958463793`*^9, 3.9076519737563257`*^9},
 CellLabel->
  "Out[338]=",ExpressionUUID->"96359533-18d8-4177-a3ec-681eba7472cc"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Non-expansion of \[Psi], spin vector, \[Delta]\[CurlyTheta]", \
"Subsubsection",
 CellChangeTimes->{{3.8992888849199657`*^9, 3.899288900813917*^9}, {
  3.899435428963496*^9, 
  3.8994354408478127`*^9}},ExpressionUUID->"fe4432e8-a283-4dfe-b87d-\
9a0f59da01e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Only", " ", "the", " ", "leading"}], "-", 
    RowBox[{"order", " ", "has", " ", "been", " ", "solved", " ", "for"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"\[Psi]0", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"q\[Psi]", " ", "+", " ", 
          RowBox[{"\[CapitalPsi]tr", "[", 
           RowBox[{"p", ",", "e", ",", "0", ",", "\[Chi]0"}], "]"}], " ", "-",
           " ", 
          RowBox[{
           RowBox[{"\[CapitalPsi]tr", "[", 
            RowBox[{"p", ",", "e", ",", "0", ",", "\[Pi]"}], "]"}], 
           FractionBox["qr", 
            RowBox[{"2", "\[Pi]"}]]}]}], ")"}], "/.", 
        RowBox[{"{", 
         RowBox[{"sp", "->", "0"}], "}"}]}], "//", "FunctionExpand"}], "//", 
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", ">", "0"}], ",", 
           RowBox[{"0", "<", "e", "<", "1"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], 
        "]"}], "&"}]}], "//", "PowerExpand"}], "//", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", ">", "0"}], ",", 
         RowBox[{"0", "<", "e", "<", "1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
     "&"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8992888849199657`*^9, 3.899288990141185*^9}, {
   3.899289079107188*^9, 3.899289093219624*^9}, {3.899289249515822*^9, 
   3.899289267374215*^9}, {3.8992893530794992`*^9, 3.899289357407675*^9}, {
   3.899289821832959*^9, 3.8992898283248653`*^9}, {3.899365831182411*^9, 
   3.899365842580142*^9}, {3.899434817754155*^9, 3.899434832200491*^9}, 
   3.899434993275691*^9, 3.899435033219718*^9},
 CellLabel->
  "In[339]:=",ExpressionUUID->"430d522e-6614-49b1-8ebd-2a997a9fc3c6"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["e", "2"]}], "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", "\[Pi]"}]], 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      SuperscriptBox["e", "2"], "+", "p"}], 
     RowBox[{
      RowBox[{"-", "6"}], "+", 
      RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], "2"], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}], 
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         SuperscriptBox["e", "2"], "+", "p"}]]], " ", "\[Pi]", " ", 
      "q\[Psi]"}], "+", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["e", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}]], " ", "qr", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
         RowBox[{"EllipticK", "[", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"6", "+", 
            RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"Im", "[", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"2", " ", "e", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "p", "+", 
                 RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", "3"}], "-", 
                    SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "e", "+", 
                 RowBox[{"\[ImaginaryI]", " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", "3"}], "-", 
                    SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}]], ",", 
             
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "]"}]}], 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "3"}], "-", 
           SuperscriptBox["e", "2"], "+", "p"}]]], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "e"}], ")"}], "2"]}], "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         RowBox[{"Re", "[", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", "p", "+", 
                RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "3"}], "-", 
                   SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "e", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "3"}], "-", 
                   SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}]], ",", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "]"}]}]}], 
       ")"}]}], "-", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["e", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}]], " ", "\[Pi]", " ", 
      
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
         RowBox[{"EllipticF", "[", 
          RowBox[{"\[Chi]0", ",", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"6", "+", 
            RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"Im", "[", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"2", " ", "e", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "p", "+", 
                 RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", "3"}], "-", 
                    SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "e", "+", 
                 RowBox[{"\[ImaginaryI]", " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", "3"}], "-", 
                    SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}]], ",", 
             "\[Chi]0", ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "]"}]}], 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "3"}], "-", 
           SuperscriptBox["e", "2"], "+", "p"}]]], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "e"}], ")"}], "2"]}], "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         RowBox[{"Re", "[", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", "p", "+", 
                RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "3"}], "-", 
                   SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "e", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "3"}], "-", 
                   SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}]], ",", 
            "\[Chi]0", ",", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "]"}]}]}], 
       ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.899448081364316*^9, 3.899448520668591*^9, 
  3.900143070619813*^9, 3.907651974585966*^9},
 CellLabel->
  "Out[339]=",ExpressionUUID->"73d8d523-e021-4c21-9807-7c8011a5d1a3"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "allows", " ", "to", " ", "express", " ", "the", " ", "spin", 
    " ", "vector", " ", "parametrized", " ", "by", " ", "the", " ", "q", " ", 
    "angles"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"SvecSol", "/.", "fhRule"}], "/.", "DeTrRule"}], "/.", 
     RowBox[{"(", 
      RowBox[{"Subs", "/.", 
       RowBox[{"{", 
        RowBox[{"sp", "->", "0"}], "}"}]}], ")"}]}], "//", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", ">", "0"}], ",", 
         RowBox[{"0", "<", "e", "<", "1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
     "&"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sv0", " ", "=", " ", 
     RowBox[{
      RowBox[{"%", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "->", "r0"}], ",", 
         RowBox[{"\[Psi]", "->", "\[Psi]0"}]}], "}"}]}], " ", "//", 
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", ">", "0"}], ",", 
           RowBox[{"0", "<", "e", "<", "1"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], 
        "]"}], "&"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8992888849199657`*^9, 3.899288990141185*^9}, {
   3.899289079107188*^9, 3.899289093219624*^9}, {3.899289249515822*^9, 
   3.899289267374215*^9}, {3.8992893530794992`*^9, 3.899289357407675*^9}, {
   3.899289821832959*^9, 3.8992898283248653`*^9}, {3.899365831182411*^9, 
   3.899365842580142*^9}, {3.899434817754155*^9, 3.899434832200491*^9}, 
   3.899434993275691*^9, {3.899435033219718*^9, 3.899435120446004*^9}, {
   3.8994351511575603`*^9, 3.899435229284954*^9}, {3.899435294054521*^9, 
   3.899435317859683*^9}},
 CellLabel->
  "In[340]:=",ExpressionUUID->"1ee0b63c-55a0-4ef7-acad-43015ae19d85"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox[
     RowBox[{
      SuperscriptBox["s", "2"], "-", 
      SuperscriptBox["sp", "2"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"r", " ", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "-", 
             SuperscriptBox["e", "2"], "+", "p"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p", "2"], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"3", "+", 
                SuperscriptBox["e", "2"]}], ")"}], " ", 
              SuperscriptBox["r", "2"]}], "+", 
             RowBox[{"p", " ", 
              SuperscriptBox["r", "2"]}]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
           "p"}]]]}]], "+", 
      FractionBox[
       RowBox[{"r", " ", 
        SqrtBox[
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"p", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "r"}], ")"}]}], "-", 
              RowBox[{"4", " ", "r"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["p", "2"], "-", 
              RowBox[{"2", " ", "p", " ", "r"}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["e", "2"]}], ")"}], " ", 
               SuperscriptBox["r", "2"]}]}], ")"}]}], 
           RowBox[{"p", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "-", 
              SuperscriptBox["e", "2"], "+", "p"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
            SuperscriptBox["r", "2"]}]]}]], " ", 
        RowBox[{"Sin", "[", "\[Psi]", "]"}]}], 
       SqrtBox[
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["p", "2"], 
             RowBox[{
              RowBox[{"-", "3"}], "-", 
              SuperscriptBox["e", "2"], "+", "p"}]], "+", 
            SuperscriptBox["r", "2"]}], ")"}]}], "r"]]]}], ")"}]}], ",", 
   FractionBox[
    RowBox[{
     SqrtBox[
      RowBox[{
       FractionBox[
        SuperscriptBox["p", "2"], 
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         SuperscriptBox["e", "2"], "+", "p"}]], "+", 
       SuperscriptBox["r", "2"]}]], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["s", "2"], "-", 
       SuperscriptBox["sp", "2"]}]], " ", 
     RowBox[{"Cos", "[", "\[Psi]", "]"}]}], 
    SuperscriptBox["r", "2"]], ",", 
   FractionBox[
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox["s", "2"], "-", 
       SuperscriptBox["sp", "2"]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SqrtBox[
         FractionBox[
          RowBox[{"p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"p", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "r"}], ")"}]}], "-", 
             RowBox[{"4", " ", "r"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p", "2"], "-", 
             RowBox[{"2", " ", "p", " ", "r"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["e", "2"]}], ")"}], " ", 
              SuperscriptBox["r", "2"]}]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3", "+", 
             SuperscriptBox["e", "2"], "-", "p"}], ")"}], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p", "2"], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"3", "+", 
                SuperscriptBox["e", "2"]}], ")"}], " ", 
              SuperscriptBox["r", "2"]}], "+", 
             RowBox[{"p", " ", 
              SuperscriptBox["r", "2"]}]}], ")"}]}]]], " ", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"Sin", "[", "\[Psi]", "]"}]}], 
        SqrtBox[
         FractionBox[
          RowBox[{"p", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p", "2"], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"3", "+", 
                SuperscriptBox["e", "2"]}], ")"}], " ", 
              SuperscriptBox["r", "2"]}], "+", 
             RowBox[{"p", " ", 
              SuperscriptBox["r", "2"]}]}], ")"}]}], 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}]]]]}], ")"}]}], 
    "r"], ",", 
   RowBox[{"-", 
    FractionBox["sp", "r"]}]}], "}"}]], "Output",
 CellChangeTimes->{3.8994480836971693`*^9, 3.899448523023609*^9, 
  3.90014307289246*^9, 3.907651976925353*^9},
 CellLabel->
  "Out[340]=",ExpressionUUID->"d9cead42-6c7e-40f2-afea-c7b2b8885aa8"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(*", 
       RowBox[{
       "Also", " ", "we", " ", "get", " ", "\[Delta]\[Theta]", " ", "at", " ",
         "leading", " ", "order"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"s", "-", "sp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"s", "+", "sp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
           SuperscriptBox[
            RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]], " ", 
       RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], 
     RowBox[{"\[ScriptCapitalJ]", " ", 
      RowBox[{"rt", "[", "\[Tau]", "]"}]}]], "/.", "DeTrRule"}], "/.", 
   RowBox[{"(", 
    RowBox[{"Subs", "/.", 
     RowBox[{"{", 
      RowBox[{"sp", "->", "0"}], "}"}]}], ")"}]}], "//", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"#", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", ">", "0"}], ",", 
       RowBox[{"0", "<", "e", "<", "1"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
   "&"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]\[CurlyTheta]", " ", "=", " ", 
   RowBox[{
    RowBox[{"%", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "->", "r0"}], ",", 
       RowBox[{"\[Psi]", "->", "\[Psi]0"}]}], "}"}]}], " ", "//", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", ">", "0"}], ",", 
         RowBox[{"0", "<", "e", "<", "1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
     "&"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8992888849199657`*^9, 3.899288990141185*^9}, {
   3.899289079107188*^9, 3.899289093219624*^9}, {3.899289249515822*^9, 
   3.899289267374215*^9}, {3.8992893530794992`*^9, 3.899289357407675*^9}, {
   3.899289821832959*^9, 3.8992898283248653`*^9}, {3.899365831182411*^9, 
   3.899365842580142*^9}, {3.899434817754155*^9, 3.899434832200491*^9}, 
   3.899434993275691*^9, {3.899435033219718*^9, 3.899435120446004*^9}, {
   3.8994351511575603`*^9, 3.899435229284954*^9}, {3.899435363918149*^9, 
   3.899435416705388*^9}, {3.8994354903896646`*^9, 3.899435492932228*^9}, 
   3.899448542541812*^9},
 CellLabel->
  "In[342]:=",ExpressionUUID->"7bcec286-7d55-4d1d-a964-e70ffe0131f5"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["p", "2"], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3", "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        SuperscriptBox["r", "2"]}], "+", 
       RowBox[{"p", " ", 
        SuperscriptBox["r", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"s", "-", "sp"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"s", "+", "sp"}], ")"}]}]], " ", 
   RowBox[{"Sin", "[", "\[Psi]", "]"}]}], 
  RowBox[{"p", " ", "r"}]]], "Output",
 CellChangeTimes->{
  3.899288969389471*^9, {3.899289252023264*^9, 3.899289271917204*^9}, 
   3.899353288608382*^9, 3.899374244021853*^9, 3.899386272300329*^9, 
   3.89944841108286*^9, 3.899448802771639*^9, 3.90014338950963*^9, 
   3.907652303162965*^9},
 CellLabel->
  "Out[342]=",ExpressionUUID->"9261bfad-6531-4356-a56f-3e511d6ce414"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Save outputs", "Section",
 CellChangeTimes->{{3.899433413815439*^9, 
  3.899433423877832*^9}},ExpressionUUID->"fc671ac7-867e-4161-a6c4-\
7f8a920cbac5"],

Cell[CellGroupData[{

Cell[BoxData[{
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"OutputPath", "=", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\<SchwarzschildSpinAnalytic.m\>\""}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Back", " ", "up", " ", "in", " ", "case", " ", "you", " ", "are", " ", 
     "overwriting", " ", "a", " ", "previous", " ", 
     RowBox[{"run", ":"}]}], "*)"}]}],
  FontSize->12], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "OutputPath", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"BackupPath", " ", "=", " ", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
         "\"\<SchwarzschildSpinAnalytic_Backup.m\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"DeleteFile", "[", "BackupPath", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"CopyFile", "[", 
        RowBox[{"OutputPath", ",", "BackupPath"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"DeleteFile", "[", "OutputPath", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Output file existed, backup of old file copied into \>\"", "<>", 
         "BackupPath"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "Print", "[", "\"\<No old file existed, proceeding.\>\"", "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    StyleBox[
     RowBox[{"(", "*"}]], 
    RowBox[{"TODO", ":", " ", 
     RowBox[{"Intro", " ", "text", " ", "does", " ", "not", " ", "work"}]}], 
    StyleBox[
     RowBox[{"*", ")"}]]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"(*", 
     RowBox[{"Add", " ", "introduction", " ", 
      RowBox[{"to", " ", ".", "m"}], " ", "file"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
     "Intro", " ", "=", " ", 
      "\"\<Ancillary file to Analytical solutions for the motion of spinning \
particles near spherically symmetric black holes and exotic compact objects, \
arXiv:2308.00021.\nCreated by Vojtech Witzany and Gabriel Andres Piovano.\n\>\
\""}], ";", "\n", 
     RowBox[{
     "Description", " ", "=", " ", 
      "\"\<This file contains formulas for the \n\t- Mino frequencies (\
\[CapitalUpsilon]^(t,r,\[CurlyTheta],\[Psi])),\n\t- spin-frequency \
corrections s\[DoubleVerticalBar]\[Delta]\[CapitalUpsilon] at fixed \
coordinate semi-latus rectum p and eccentricity e,\n\t- the explicit \
solutions for the motion x=t,r,\[CurlyTheta],\[CurlyPhi],\[Psi] are given as \
x=x0 + s\[DoubleVerticalBar] \[Delta]x in terms of the angle variables \
q^(t,r,\[CurlyPhi],\[Psi]) (defined with the help of an auxilliary function \
\[Chi]0(q^r)),\n\t- explicit solution for the spin vector s.\>\""}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"WriteLine", "[", 
       RowBox[{"OutputPath", ",", "Intro"}], "]"}], "\[IndentingNewLine]", 
      RowBox[{"WriteLine", "[", 
       RowBox[{"OutputPath", ",", "Description"}], "]"}]}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Export", " ", "all", " ", 
     RowBox[{"vars", ":"}]}], "*)"}]}],
  FontSize->12], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"Save", "[", 
    RowBox[{"OutputPath", ",", 
     RowBox[{"{", 
      RowBox[{
      "\[CapitalUpsilon]t0", ",", "\[CapitalUpsilon]r0", ",", 
       "\[CapitalUpsilon]\[CurlyPhi]0", ",", "\[CapitalUpsilon]\[Psi]0", ",", 
       "\[Delta]\[CapitalUpsilon]t", ",", "\[Delta]\[CapitalUpsilon]r", ",", 
       "\[Delta]\[CapitalUpsilon]\[CurlyPhi]", ",", "t0", ",", "r0", ",", 
       "\[CurlyPhi]0", ",", "\[Psi]0", ",", "\[Chi]0qr", ",", "Sv0", ",", 
       "\[Delta]t", ",", "\[Delta]r", ",", "\[Delta]\[CurlyPhi]", ",", 
       "\[Delta]\[CurlyTheta]"}], "}"}]}], "]"}], ";"}],
  FontSize->12]}], "Input",
 CellChangeTimes->{{3.899433413815439*^9, 3.8994334299848824`*^9}, {
   3.8994335862777*^9, 3.899433594466855*^9}, {3.899433626192594*^9, 
   3.899433673014151*^9}, {3.8994337620243*^9, 3.899433870004656*^9}, {
   3.899433904717161*^9, 3.899433990645525*^9}, {3.899434264267116*^9, 
   3.899434286992187*^9}, {3.899434353275921*^9, 3.899434403099597*^9}, 
   3.899434805404847*^9, {3.899434915088112*^9, 3.899434946496665*^9}, {
   3.899435461723168*^9, 3.899435475228251*^9}, {3.899435515026349*^9, 
   3.899435516354335*^9}, {3.89943566359306*^9, 3.8994357124408283`*^9}, {
   3.8994486465132933`*^9, 3.8994487147335777`*^9}, {3.899449002424405*^9, 
   3.899449011805605*^9}, {3.899449138030278*^9, 3.899449292606143*^9}, {
   3.899449834183333*^9, 3.8994499219529543`*^9}, {3.899544081898797*^9, 
   3.899544106861766*^9}, {3.899544228025816*^9, 3.8995442297192993`*^9}, {
   3.899544260798561*^9, 3.8995443037440987`*^9}, {3.899544400492373*^9, 
   3.8995444275106087`*^9}, {3.899544474614073*^9, 3.899544496229742*^9}, {
   3.899544552341852*^9, 3.899544562947733*^9}, {3.899544651510461*^9, 
   3.899544654083248*^9}, {3.899544828046031*^9, 3.899544836409039*^9}, {
   3.899544933660337*^9, 3.899544955978087*^9}, {3.899788002855137*^9, 
   3.899788020561391*^9}, 3.899790043415855*^9, {3.899791118321558*^9, 
   3.899791162478763*^9}, 3.907041544092896*^9, {3.907734321154181*^9, 
   3.907734323260545*^9}, 3.907734363290298*^9, {3.907734424203973*^9, 
   3.907734462743162*^9}, {3.907734548238824*^9, 3.9077345589297132`*^9}, {
   3.9077564949314737`*^9, 3.907756497020389*^9}, {3.9077567611779737`*^9, 
   3.907756767225913*^9}, {3.9077568415187073`*^9, 3.9077568965105143`*^9}, {
   3.907756940705223*^9, 3.907756945043906*^9}, {3.907757504123723*^9, 
   3.907757638095827*^9}, {3.907757677692506*^9, 3.9077577233418083`*^9}, 
   3.907757764633988*^9, {3.9077578807602663`*^9, 3.9077579461354017`*^9}, {
   3.9077580201813393`*^9, 3.9077580264497843`*^9}, {3.907758058455187*^9, 
   3.907758132856505*^9}, {3.9077581780193996`*^9, 3.907758215425104*^9}, {
   3.90775834296656*^9, 3.907758366826866*^9}},
 CellLabel->
  "In[495]:=",ExpressionUUID->"013276b9-499b-4ad3-ad83-19405bd3ba7e"],

Cell[BoxData["\<\"Output file existed, backup of old file copied into \
/Users/vojtechwitzany/Documents/GitHub/Exact-Solution-Spinning-particle-\
Schwarzschild/SchwarzschildSpinAnalytic_Backup.m\"\>"], "Print",
 CellChangeTimes->{
  3.90773432649306*^9, {3.9077343668817787`*^9, 3.907734386021584*^9}, 
   3.907734467900831*^9, 3.907734562087028*^9, 3.9077567676654778`*^9, 
   3.907756905865996*^9, 3.9077569514602003`*^9, 3.90775748751947*^9, 
   3.907757576454728*^9, {3.90775761454923*^9, 3.907757643717164*^9}, 
   3.9077577302123613`*^9, 3.907757772525346*^9, {3.907757913391451*^9, 
   3.907757923486333*^9}, 3.907758029272337*^9, 3.907758068703964*^9, {
   3.907758113073515*^9, 3.907758133292746*^9}, 3.907758217872068*^9, {
   3.907758371274328*^9, 3.907758381524392*^9}, 3.907760057312446*^9},
 CellLabel->
  "During evaluation of \
In[495]:=",ExpressionUUID->"e71c71ee-3403-4f54-a230-2f841df86c09"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example plots", "Section",
 CellChangeTimes->{{3.899449947060467*^9, 
  3.8994499494462843`*^9}},ExpressionUUID->"2534492e-ad85-40a1-8028-\
3572ae7e291e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Here", " ", "you", " ", "can", " ", "find", " ", "some", " ", "example", 
    " ", "plots", " ", "as", " ", "well", " ", "as", " ", "a", " ", 
    "practical", " ", "example", " ", "of", " ", "the", " ", "application", 
    " ", "of", " ", "the", " ", "formulas", " ", "in", " ", "this", " ", 
    "notebook"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotCyc", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pp", " ", "=", " ", "7"}], ";", " ", 
    RowBox[{"ep", " ", "=", "0.3"}], ";", " ", 
    RowBox[{"spp", " ", "=", " ", "0"}], ";", " ", 
    RowBox[{"smp", " ", "=", " ", "0.3"}], ";"}], " "}]}]], "Input",
 CellChangeTimes->{{3.899450898886588*^9, 3.89945095614196*^9}, {
   3.899451114989605*^9, 3.899451117399693*^9}, {3.8994511490999823`*^9, 
   3.899451166196763*^9}, {3.899451257235427*^9, 3.89945128810594*^9}, {
   3.8994513392422132`*^9, 3.899451357872766*^9}, {3.899451398126931*^9, 
   3.899451428798518*^9}, {3.899451492316065*^9, 3.89945149346975*^9}, {
   3.899451589628129*^9, 3.899451602447603*^9}, {3.899451635195657*^9, 
   3.89945164741083*^9}, 3.8994517911248283`*^9, {3.899451938181057*^9, 
   3.8994519601127567`*^9}, {3.899452102208276*^9, 3.89945214798314*^9}, {
   3.8994523320452023`*^9, 3.899452336970687*^9}, 3.899452410177084*^9, {
   3.899452621968149*^9, 3.899452945365446*^9}},
 CellLabel->
  "In[498]:=",ExpressionUUID->"96196bcf-8d24-4b38-b165-a786f4099e94"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"BirdsEye", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"r", " ", 
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], ",", 
             RowBox[{"r", " ", 
              RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}]}], "}"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"t", "->", 
              RowBox[{"t0", "+", 
               RowBox[{"sp", " ", "\[Delta]t"}]}]}], ",", 
             RowBox[{"r", "->", 
              RowBox[{"r0", "+", 
               RowBox[{"sp", " ", "\[Delta]r"}]}]}], ",", 
             RowBox[{"\[CurlyPhi]", " ", "->", " ", 
              RowBox[{"\[CurlyPhi]0", " ", "+", " ", 
               RowBox[{"sp", " ", "\[Delta]\[CurlyPhi]"}]}]}], ",", 
             RowBox[{"\[CurlyTheta]", "->", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "2"}], "+", 
               "\[Delta]\[CurlyTheta]"}]}]}], "}"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Chi]0", "->", "\[Chi]0qr"}], "}"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"qr", "->", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalUpsilon]r0", "+", 
               RowBox[{"sp", " ", "\[Delta]\[CapitalUpsilon]r"}]}], ")"}], 
             " ", "\[Lambda]"}]}], ",", 
           RowBox[{"q\[CurlyPhi]", " ", "->", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalUpsilon]\[CurlyPhi]0", "+", 
               RowBox[{"sp", " ", "\[Delta]\[CapitalUpsilon]\[CurlyPhi]"}]}], 
              ")"}], " ", "\[Lambda]"}]}], ",", 
           RowBox[{"q\[Psi]", "->", 
            RowBox[{"\[CapitalUpsilon]\[Psi]0", " ", "\[Lambda]"}]}]}], 
          "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", "->", "pp"}], ",", 
          RowBox[{"e", "->", "ep"}], ",", 
          RowBox[{"s", "->", "smp"}], ",", 
          RowBox[{"sp", "->", "spp"}]}], "}"}]}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "0", ",", 
        RowBox[{
         RowBox[{"PlotCyc", " ", 
          FractionBox[
           RowBox[{"2", "\[Pi]"}], 
           RowBox[{"(", 
            RowBox[{"\[CapitalUpsilon]\[CurlyPhi]0", "+", 
             RowBox[{"sp", " ", "\[Delta]\[CapitalUpsilon]\[CurlyPhi]"}]}], 
            ")"}]]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "->", "pp"}], ",", 
           RowBox[{"e", "->", "ep"}], ",", 
           RowBox[{"s", "->", "smp"}], ",", 
           RowBox[{"sp", "->", "spp"}]}], "}"}]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", "Purple"}], ",", 
      RowBox[{"Axes", "->", "False"}], ",", 
      RowBox[{"Frame", "->", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*StyleBox[\"r\",FontSlant->\"Italic\"]\)\[ThinSpace]sin\
\[ThinSpace]\[CurlyPhi][\!\(\*StyleBox[\"M\",FontSlant->\"Italic\"]\)]\>\"", 
         ",", "\"\<\!\(\*StyleBox[\"r\",FontSlant->\"Italic\"]\)\[ThinSpace]\
cos\[ThinSpace]\[CurlyPhi][\!\(\*StyleBox[\"M\",FontSlant->\"Italic\"]\)]\>\"\
", ",", "\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
      RowBox[{"FrameTicks", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "0", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "0", ",", "10"}], "}"}], ",", "None", 
         ",", "None"}], "}"}]}], ",", 
      RowBox[{"LabelStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FontSize", "->", "20"}], ",", 
         RowBox[{"FontFamily", "->", "\"\<Times\>\""}], ",", "Black"}], 
        "}"}]}], ",", 
      RowBox[{"Method", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<ShrinkWrap\>\"", "->", "True"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}]}], "}"}], "]"}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<SpSchwBirdsEye.pdf\>\""}], ",", "BirdsEye"}], "]"}], "//", 
  "Quiet"}]}], "Input",
 CellChangeTimes->{{3.899450898886588*^9, 3.89945095614196*^9}, {
   3.899451114989605*^9, 3.899451117399693*^9}, {3.8994511490999823`*^9, 
   3.899451166196763*^9}, {3.899451257235427*^9, 3.89945128810594*^9}, {
   3.8994513392422132`*^9, 3.899451357872766*^9}, {3.899451398126931*^9, 
   3.899451428798518*^9}, {3.899451492316065*^9, 3.89945149346975*^9}, {
   3.899451589628129*^9, 3.899451602447603*^9}, {3.899451635195657*^9, 
   3.89945164741083*^9}, 3.8994517911248283`*^9, {3.899451938181057*^9, 
   3.8994519601127567`*^9}, {3.899452102208276*^9, 3.89945214798314*^9}, {
   3.8994523320452023`*^9, 3.899452336970687*^9}, 3.899452410177084*^9, {
   3.899452621968149*^9, 3.899452945365446*^9}, {3.8994533576163673`*^9, 
   3.899453408875462*^9}, {3.899453443414155*^9, 3.899453444042992*^9}, {
   3.8994535462253532`*^9, 3.899453547184207*^9}, {3.8994545681602297`*^9, 
   3.899454586585773*^9}, {3.899455869195612*^9, 3.899455923470439*^9}, {
   3.8994559886798286`*^9, 3.899456016444933*^9}, {3.899456126537117*^9, 
   3.899456170908524*^9}, {3.89945623842774*^9, 3.899456250597925*^9}, {
   3.89945629630548*^9, 3.899456311320573*^9}, {3.8994566446951437`*^9, 
   3.899456703844702*^9}, {3.899459104648568*^9, 3.899459105213772*^9}, {
   3.899531487743353*^9, 3.8995315385842237`*^9}, {3.899531641613394*^9, 
   3.899531649900412*^9}, {3.900145714985847*^9, 3.900145745652033*^9}, 
   3.900145961841158*^9},
 CellLabel->
  "In[500]:=",ExpressionUUID->"5e3dfbf0-5d77-4c7a-9cce-ec132fed21a9"],

Cell[BoxData[
 GraphicsBox[{
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.5, 0, 0.5], AbsoluteThickness[2], Opacity[1.], FaceForm[
          Opacity[0.3]], LineBox[CompressedData["
1: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
AvNq+sl0t+sKD+wEuObj1caJ+iGSojuxmGcqwH9SnaehdpS8szzp+R1tYT17
Q2YZlk+QxJhxjJSiAK91qp28kf+PbOvKuHCmVxMHopQKTuwQwSqfV1U9/2mi
3LG+PQ+Xi2NeZ1SBwg1NHDTZcLYwUgL3fPdPz3XWxO/xKS+/i0uhXWhb1/3V
msiR0Yv8gTJYK2nL+dHBx/cfbKx82HJYZiCjsDaHj8lWxxTcXOVxGe/LorEQ
Pi6+vGvhNTGhzjU80m6hy8dz05nrjq1TxlbTosTxYQ3sabtzzM+UgvM+vlgy
N0gDN8HSIxNnqXiRWvhn4WseejjjaTGKCvrZhrctMOJhWe/qkfmxKvjwPtOD
+KyOj2N234vPo2G8h6nr4Hc1jH77L6bOko73d7vdyNiihp/mNoxLVNBR39wm
qLlMFfesuTz8t4aBHb8f30gu5OJh46KHN/Ywsakw5J6XCRclxiWD+iuYuDHE
P2I0lYPL06IbKz6xkK0iM7D7IRvbNnruXLeCjVJpWWZH5diocUxlhY1Qf188
63XJ5wwLRYrFitRPc9B1/uODipuYqH1AcPN7FQd3WTfdf5nCwKp22k/JlVwM
fsN4F8dh4LKYEseqXi4qfrg42FdPw1UtHyOPm6miZ+negmOmNIz61QAn76ni
0GrG7zvRKjjvJ6U8cbEa/tg2t3elPRVXe0d7/zmjhi6tuz0aMilYQ4jNHM1U
Q/6ZeYb+LAp2rdzf/0xfHadUFtcYRiiidZNDluVJdXTqNSo9sVEBw6f8Za3j
1HHDEHfbukk5bM9Z/Oj5L3UcTfSSaUmSxTrdydj9Ejy8F8fZeMZOBvN8t6G7
Lg+zdF+aCqSlcc8BxeG6rTxsON1eo/ROEievlr9NOsPDLcy4zwccJJA38Pnb
z7s8fH6Z7WShII6m87wOJibzcG1jXLR3qSguTRwP3lnAQ1FeXFh4qAiWnylO
af7NQ7vSDPUtcdNk4tHAm9adPOzav8szc94U6ZD2Tv3JGA9pNl7tT16Nk0eP
JCX8ENPAdTcDU4z1RsmUlaey+2U1sCw83fd7xhC5KiF+0T9FDdyf8OPMPdMB
MgnNWBNKGnjuwXLTu/d6SanEO/91KWigpUJGl+XLDnKJ2vhwlbQGhl80Sir5
/Jeslip0+TzDw3ldn8f9mutJDVeddWlDPKwdc9P9qVhJTrzu7XjTwsNed/vv
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
irtMAuNTVPMLD6tij2rKKXdVcTxy4dUnyQBVIY4j5a3ExXCzXe6BMKH+i5tS
3V/YIYJ/vy1OOZauigotNt+GY2bII7v0Rh6WquLKLQmt427/SMdlP56rN6ii
pYb24e/EJDl1Yce1oT5VrB3ddOyV4jh5PY70EkyrotK7bvz4Z4TkLdWNTpRR
w/FGRiORNERGDu7YEURRw5jTXVPbzw2Qr172zSlhqGFd1rM2gw19pLcJs+w4
Ww3LplU36Oh1kckOGZs9hDZhJpVkXNlKnq2Q+1gvjD/jZuYj6d1EbjxVeS1N
mK9I7OHyfJtasmL/j+MrhOstnOP9eG3/T3Kud2lhypQqpknsToxaVkByJFue
6fWo4oNT37yfOEaTIw0FO3OqVfGxg6K5elUmMV6Wd2z7F1Uc+2h1j7vwGzEY
XPVB7I0qqizbf8FkRxXhJ5NvUXhXFd0Wb6F0GzYQH//KnEk+p4rV7SYPxXL/
Ei2M0S85dqro+eGjzCnoIIrfpClMrlBF721rdn1P6yHc1Sw3HKWq4jmN5tGd
t/uJQ26PkNPOxYb/dptv+zxING5y7pHL4eLbz4Re4tAwMdBvEWAeykWd9UEU
TaFuufJsZ9NHHS5mZr4LfbN/itB+R9NSGeXg0896tw+enybcOuXzS3I4KPpn
+awscxHYMZl1+OU6DobwogLHbcXg1UfbgCYpDtp8CHWa2SIOO/YVrkz6xMbQ
qBqjXzYSMD1/6QtlQzYapl9RilwjBZZzW0U/9rLQZiw6zklfGm7cb+DqxLJw
WbngfMxcGfi95FGStRQLt58vrCD+yUK6YOo/8TcMVJ1o+ZLvpQhhV9zvPdzO
wOb25Z/0rJXAcU/ITpMJOp5wueDrp6ks1A0/nzavoqNN6Pzdn3ZToO7fq8Pj
VTTcE0uaK+ZQwOvxroSNp2l4ZYOx1xweFbQM5feWJargv6PL3j6voEKz74C4
pokKLg05Yiu7RAVuKOv4VP+ionFg+nFuoArcvrvE9+s/CjJNb0wbLaKBw/J6
cXYIBf9E1IqYetMg13fvNnENCnKfnXvcUEwD1W7H+DJPJXzjsP3ibwc66Adl
W0wGK2LrcedN857RgWvrOftLjAJKj+aW/OugA9Pw7LXUL3JYpP7n42xXBtyw
fX1IoVIWX/+mfD75jAEzD7zUT/yVQVXJkgeLGxhQyZUu/jQhhZEvVkaLbGZC
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
AQX0P8RRNdc=
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[0.5, 0, 0.5]], 
             Line[CompressedData["
1:eJw0V3lYzd/zv+37cpf3Xbptt6RdFFmi94RSFC1SUiFahKSFpNCCFiKJiqKy
RmihlHofKbR80h7RQhvt+7787veP333ez3OfeeacOXPmzLxmXhyXU9auvCQS
SUyURPrf////kr9Hcj8MTAPCp5pvFODtn0WWGiMw8BTbHZ0aU4FrrYzWr76M
AbtyScf/Xz1e90762sdLGJD+PdL5GtmC851MOP3mHAb5yzTv5rgOXOciOeKe
NwZn+JLMdvzuxHXO704Jc8WA7rro1aPVi2cdGX9zzB4D2Hyw3v1MH36t+WDf
bjMMbG+xEy8UDeJft8enrd2AQTYJFx++NII3qbMOyqpgULJ7w/h9zhie5F5f
JySNgWH5rcE0NI7vfPq3dWaGBuKnncR/Ok3ij5tvXh9tp0FuU3+EwuwUvlT6
jz1RSgNqV57TevU53KryzH3FSBos7AuXQkXzeO/M7d97PGjwYEPud2LPIn4G
SjLijGmQd0Sg7es6EqieC7R2naPCQrp84PU5ErwX4/yZraUCIpQ+lRbxgNr0
Obs3T6lwYGm2fxvOB563r2rdsqCCOPP3KY9FPriD77xVJkeFDJWR/vz3/PDz
m/o/jQEK6C42VyRoCcKL7puGyWEU8E0qeRk4Kwx3H8zrPEkmQ+EdVfcVT0Xg
QuqbtMGDZBhyEnrrZy0KTI+g4hhFMjyyr+WtSBWDb1Z+rybuS4PYCi/BN8bi
ED1OMiyzlwaNvJSnSz3ioHvUZUCQKg1b3cS2JHEkQbbtos2ggBTc3BPHV1Eg
CRpDpSuOnJYEA7M6STUrKVh9lp4w9EMC1ut8Sr23SRpk+5TeBaWJw6cT8Zbx
5mTYp35yHYkqCtTvEy/Ur5Nhyuxc8gsPEVizHPRLsYoMFEtyQXuhMDwritZS
NKZAxrCrpOIBIVDd+K5d9iIFnsQ7ftv1VBCOClnddM2jQKlH8l58VABEGyXe
lClRwVNiOy9xgR9Oey79qbOlgpfAeesTJXxgwPlzj3GVCh75ZTnK/Hyw8cLK
lrVdVOj+2bk0EcIDfZwfh/mlaTCVnBCyppj7bqsG/WY30qBJ1T4icHQZf3bk
ieD2CBr06S8vUeoW8A/jDNPI1zSQ/+zPKGDP45EfsXMxDTTwOBnLoLnM4sUH
omHPNA1ktIjEPY+n8f9OjF/6wsBgMDEo9l73JP7ufZn9+DoM/n1KMVFVnsAF
FdqVvllhsLvvpqWS8xjeGtp5xu44N6+To2M/3BnB03IS1SNDMdB1jzxinjSI
X9c0sjh8l5vXemvWKfD14QtZv9e0PsfAYcSh09qjBx+vv+069x4DLzuOmlnF
H9xwVXnuuy8YaO/ebPzVug1PDLuoIV2PQdEHpSRx8Wa8JylEWuAXBnJ+pCqz
0G+46u9bw3F/MHC7szr5VTfCV1cl3SjsweDLpwemT+Vv4Wj+63TgXwzIp11C
PT/lE7n0HK/aXgwG1p3VOixSSUQeORFY3IUBZ+/Hum/fG4gN7LsdRu0YMLGL
sd5av4jJM6eeHGjGwO+A83lX4jchcq5GWvw/DB4GtMRGu3cTj3x0H9kgDH7A
zscmkv+Iw6bpK/SyMJiUMvitmzNA7ArIj3/xAIP6vU0mUxojxJuuwE3F0RgU
RoSLC8+PEu/czeNP+GNQMShGTi4fJyzWfnHPd8QgfX4Shd2ZJJ6J3M1ON8Lg
0qXujKjD04Qhbv529QoMnK9fCb+kMUsoRPawNv2hwfqgLcV+bxeIDPFzeh+K
aJB8Quwc+ewSMW30xbf/Dg1qbjqODsiQkD9J69LBrTQIyeePoDfyoKQlqdEX
NBp0xrTTXr7mReus79TmcvNNRpu34WwEH7IXiiiVuEAFQb8TEzZrBRCmn+Lk
voMKvdtfV6wTEkRPcsp9bkpyceNS/ceRZkGk7G302O0OBRaOn2be9RFG9XWD
sgp2FHjqzB9iu1kEtfsfKi3CKMBWXMmJ4xNFPTmrvny+Rgb7Kk7i2igx5FX9
Ejc0JsP5G99tT5qJoy1CC4rv5qVh9V1l5jcBCbR2M5H5yUUaTOp0bQv8JZFn
ToCKB7fux6d3NcqoSyHnqX2bbMOlYPHd+2PWP6RQgb/oe+u13Pov8RNZuCuN
vlU0UQauSECmzokvCv3SqCT00hJvkzgEH3gWELGZjBRsf5sPHxOD24EmnXwt
ZKQRV+pc7CkMwc2l2RlLFFT9YY4a80YI4Hl30GVDKvp4gsn7bVwQctPvbEwL
oqKZS0fVe3wE4P2upjUR41Sksu1mResrfpAgVSkYa9GQWHTP6ci/fGDSv85N
8wgNSW0O5Gy15YXjK+cknCppSCChy8Enggc2OKx2TF6gofrU6dn770lQPhTT
OqKJIertMfperSW8UMGCXhSOoQg+drxLGLfOrUr4tV5hyD1aT2y2aQ7v/3oi
PqkRQw8+e0vZ+k3jVpaKf47K09HC6cOS7sWTuAQnTjsfp6Mxq4yORIEJfLmn
YdOcMx29euIRSds5hsc8cQTVIDqyDlCzW4oewe3k41MN7tLRvRqvj4t3BvHk
K3rDem/oqEuiiy+I3IeTiahe8S90lPadkfXlag8+191y5tNPOvr7+nHImrk/
uKNtct7eITqqPZ5rhtW14d08/40VLXH1Wrv9zJ4348sbNB8uiDOQPFkuPj2w
BrctuOQmyWIg70K2cOz1Ejxa4yd7VImB/gs7fX3I5yH+7dfnsjQNBjqE0pg/
8nKJwpHwRM5qBurzcK9n/fxKRH3asnBcj4EUonNeFb+uJy5l64RdWstA1l+6
nnaOtxBN2i3jTlz97Vp4/1z2N6HJVtnOx90voduTmk10EVNXwpNOce0LpVvO
57n8Jf4+Yu5O457fe/GquKvAAKGhUNGTxOTKvnMLR58OE7O5LnL7uf4fcX1+
cs2jUQJTT/v5a5GOBsyU6/j9xonbIXs2rxykI9vIdyt4t00SWxJNote10FH+
gsivJelpwkUg1FisjI68L4h617TOEPctOaxnmXS0P9nWyfz5HJF1/Xi3+G06
UlxOVzP1XSDY26sLNgXQ0cG1ei6JBkuE2/vvLboOdPSces3OrJOEfvDFT11l
cN+r8o6cbykPujb7xvPvGIZ00nvpvo94UbDBShmZKgz9/CyTmXqIH02Hp66b
O4uhccuTAU82CyDfm/cfZu7EkFfR9mZthiDCKu9t38zG0NFNCVdPfxFCVXnr
d06/paH/+P1f8ycLo4YCF22NSzTkoN8v89VbBF29bmNubEpDort7rsdQxJDP
iR8W2+qoyMT40aG/myVRweiwct1/FJR5fGP6xKIkWvo0v1o+koLivjNeZ3yQ
Qr0X1hVEbKUg+Cre5ZoojVr/Humpek1GDp2ml0UmpVF6oV7pmyNkdMzor5Hz
HjISEdgd9wUjo53vGzRmlsnolIMB/shPGrXP6spr7aOgU270FH+ONMrbdObD
UAYFmT/c0MlJlEIm/XtjlvZQUSJD6VCQgSTKrMvVO3qVho4/tl9ttV8MNQ//
DFerpaEv/QdXLCSIokkJX3sDFobM+KlvHjeKIPrX7ZGrHnHr8E3bcR0TYaTv
lKpH6sWQZpBQkXagEHoWMDDPq0ZHL86v6HF7IYjK7wr/uviIjoSBuvxVQABt
fl0IA+10ZC+3fj1Fhx8Fiu129uLm/YOkqcYmWz6kb2hVn3iFgQzDjz/H7vMg
nwatKP0CBtrxvU87u5CETjJ+vv/Wz0CedeMn5LKXiQ0bv9S0mzKRzN212iky
C8Qp8yaDXX5MlBnx1+SV6RwRRz2mdj+Zifw/Om785jNDHBYV2/BfKRN9JLvZ
rUycIhLD/PV+/GOiHfM9h38UThCjktJiheIsFMXxvSz5c4zwa/NqPqnNQofm
++wGpkaIomOxQXoeLPQuQqkkaGcfYdOYZbMllIU67nIC+Lx7iC+uhnKCSSx0
uHsrlXnzD7GRXvkx8jULXf86tYKxr5VQH+zcW1rCQjt5Wq0PhjYSW8eCsOx6
Fvq3bnHAYVcloSt0yGvPHxbqCk3JSOHNI36kJkwlDLGQ6JzdQdtDqTjP0dbT
0TMsROI9WxeCl+LXY6ZrlEkyqA5vWlvLqsP5LdR0DwrIoGLjvGs3WS34QlP0
703CMty8VfFQl/qN5x0N3J/LlcVSPrq+pXbj2yd6tpYLyiCauigHk/mHx/8q
9D/LK4Pi1zsujnAGcTWtdbMf5lmo8fkTn4D4EVypZgN/whgLBZmuU3NOGsNj
Q14uCvaykIFJ6IrgBxP44TPlQcI/WCipnu/9s0dTeGPdSbN7X1nIeaO3YO7z
GVzkx3HH4rcshGTeLZ9+NYcn1je1ez9kIZM3cyfeZi/g/fkWOtkRLMSeTx6y
fLeE08K2fQ/xYqEDp5UuRTuSIHOTcVK7FQup3J1YPOHEA7zu903FV7PQvrRj
Wu6+vCDbwki0F2Oh2/pH3t2M4IOu7li+sk4mwg/t3FZ1nx9uxr41sX7PRBvu
GpxYeC0AF3xsPXiuMZHECs9ivhJBaHhQ/Lb+ABNNaEcUldYJgdXSAe+/YwzU
4uX2ZnFYBKqdtnas4uZj2b2h2E0LoqB4syPk4QUGan3aQyoUFIeDq49flF6m
o2FTqrc0XRKyEtpXYIV0xLvyhl+GjBQIrb18w8qPjh7YS4lGSkrDdp9875A2
DL2P+bnXU4IMf35tuBB8A0Prtg9enosiA8mecbFkC4a6nWFcX4gCDgNv8g1u
0dBprQNugfMUYDhsbgncQEOvVvZdPOpLBdbyP8T8RUVn4maW0T8q/LeU8yeS
TUUWB65JJNTS4FZojoNnHgVNC0Wvn9qKgZpGIrnUkoLqW4v4YrIx0Ji5/Y8U
REbXd0Rm6F6jg4vxnSjScSl0l+7SXK3KhE89x/eTgySRjEX2ioBIJixesvFO
ipBAk5wjykN/mUC4LlsduS2G1P5uEhZPZUGw0+mAyjhRtFXksG7SLAvsfEyS
F2JE0IOK9oSPe2RgvOZUs/Q5IdSQcscyY0IGtkq5f1P0EEQaY3MqNtvYIMu5
G2ljI4BKitnbjt5gQ9zDR+oh8nzIf9nO4qaCLGwPFHPJXOJB4kOXdG4fkQXt
8LZl558kZLQ92aTukSwA5Tv5DLZIHDV01a2Vl4Mbu5TX6BfOETrUopQgOzn4
LWz0rNlhhth8L9pn/XU58OC/8uHWxCShT5eNnCbk4KF4WeHDiHFC33N+NntY
Ds4Khs4aMEYJkZVxModk5eGyLn8CbjRIJP0uuzhpLA/osjeFvPMv4dBxbfnY
CXnw5mELuZt1EtFNd7Jzb8jDSZKUTNDFX0ROVu9k1Wt5aONUmqsfqCMI/NyJ
jCp5KJgY7XppgQje2F8k4x55IHmGhBGdD/FnfT97bi/Ic3nQmJPvz694FEcu
+ZaUAjR7b+LvrGzCBbRLh/QVFOCbvpn1WFIHPvoJmwzUVAC9N2W9to3d+NFq
Fst+rQLM3mU7lBf04Tm9PA+vbFSAsgADA95Hw7j2L0urXAMFEHO6FmRiOoZb
LUD8r00KEDVw2H2OmMCzZm2xeX0FaF290P17wzQeZB1aJLZaAfrA3+tj9izu
nL2rSHSlAni+0PjnqL2AZ8gORUwwFQC8u3PPPlvC974JbikTVgDn57G2fbEk
kG4QzDk/KQ8pgkaUe9944Nedlweo7fKQ7PFkaZUEH1RJlblFlclDzW76f1d2
cnlj+Pibtmfy8Ls/eCr0qgBoyoKLZKQ8+FS1feArFQR2l9Yww00e/ON+af9b
FoKuzi+sOVwedGcdVagGInCPv2Ash86Nn+kmy8P+oqASZt2yvU8Oui8J6+S8
EgOflzEhLwvkQHXXIPMvl1933JXr77sqB0pjUYbtcpLgknDwBMlaDv47s/Ty
rI0UBNEPvxpkysGDMwFqX7dJw2RYzaucX7Jgkm71ytmfDFaiQTHfHGQh/5/k
tS/iFPjWkMhUx2Shuu/eT+10Cugfysx3qWJD5RMKel1FBfQ41TlkDRvOja4h
nh+kwRZeyvcT7TKQ5Lha2HmUBrjtCkvjKBloaPVZny1NB80N9rTqJhZYnowI
XZ1Ch3O6Z99eDWDBq2OUbhUNBugYB5GMGCyQV1w5r7uFCR3958zLdzHhwhRu
oV7KhOK1LgmPfjMgNUZrxsaMBZUpwioJfgxo3N6vy79bBiwGVhd2xdLBOfhv
m8d/MuCbJIFZyNLBb9NtRbSTDSHrZywH0jGIPs5OFsBlQUJlcetYBg2EU1r8
tMXlwUInx1YlkQLrxH9puZ+Thz/dDna7JCnwUnHTGqxLHq51/Pw5fYkMoio/
fsVmKcB/sb5h1IPSUDJudpIjqgindjDM9OOl4M/to8fpmxSBI7P3aq67JHDO
fHd+H68Iw0Wp+h7LYlAmVrZ//0euvvxpWkOpKHjsff/7XL8i2MVVL8pdEQF3
rWqSkgEH7uSUhBUtCEKsqGja/UMcOB01EWiZLQDCg9q9weEccA6cntx4lB/4
kxqFHb9woNa583NsEQ94rYWCmr8cyOzHR8xMSaDeL+hnKqwEcfKxj5+lLOKk
8OfbP6gowU5bNaLg8RwuFW4ZoGKkBMqc+3Urnkzj0rMfkoIdlODJFhfDbQ8n
8K/P9c4Vn1aCrvu+Un63R3GJOZcVf64ogd8rgwFtwUH8ePnWsT+JSnB+KdRP
5kcPnnlj8GJhhhIsbJpz8k3rwANmT+e4vVeC8vPUu7yfG3DRrfeL2suUwOPq
JiHcC+HRl9+xlWqUQKtJ4NndhCxCzwRPVP+uBK7pT6o0pWsJrQPxVmOtStBo
vElzV1kr8exiQlbAbyXwlmtkDxh1E1j+lnPv/3D9/SNhSn7cT+z6SC/K4upT
Km8dShYYJUaJyl7nNiVw5tlO+7xxgpg8cqWwmGvfQmQ5Jc5rmjDOt7D5xj2/
68RW3jvpc8TbeqsVNz4rQUkdxc/x+yJR+3Tl8gLX/3hM9/2mKyRkqDoozXyh
BMcFLxzPU+BFCvyeXe3c+5fe65r0zOdDTqYiR/Zy48NqbyTYlgLITaq60d9b
CQ7cbFi80SOIPF5o92y3V4K2+9s+XD8vjFwiGlNKtijBT6ujfS2SoiiVc+DE
iKISSJ4Ndd3yUAxluDfK1fAoQZrFLv7zOhLoYsIl+1cfOHDpSGX8HmVpNGMX
5p19hwOBlUYNwr3S6G3f8yhfLw4s9VY8MnhORsGd46s2MzgQ8C60O0mNiiQ6
2B7mfxWBb5hQjOmmIuHoVTyaeYpgqGd/M+IhDSnWaM157FaEqoZdaUrSdHSn
R1alga4Ih9BYWlQpHW2TqYzcWaAAt8OqH0adYaDDghf3a3yRh+bAcqeeOiZq
f7Tp9uUd3D6Qsr1OPJiFTrr3ivz9JAfiSajg0AoZ9Nh1gSyYJQsFSiPHNDzZ
6PfO0yu6ObJQhk0vnhSWRR9uGJ+gcPumRfjWl4Hpsuhq+OrNT5xl4ML6WdGb
3+RQ8BkNYt1HFrwM5Dh4HpJHod5Trq6KLODr7RLLGpRHNsdOspYaGPByr0S7
1qIC8tQrWBnPxZctbEGp+7giksAMLdWC6XBsmz3vqwuKSLVNGh6zMDh0wti/
ZkoR/SAkLn48QoP4rKex1TocVJl18KPhCyr8gxw8142D3jVkvfisS4EzJ0nO
WDUHdXwTn4o+Q4aI/iiDR4scpBau9Uw3XxpmzpJ1pDWV0MQA1GQMSwGriPTB
ep8SGnrz1U3+uCQkn0n/6HpRCY0nP8ie+iMO9+8eD9r2RAlZb+7o87QTA/0o
pas9FUrowwKeLbheGJJynjZ6SCij0pkOowdpgrA5Umw1rqmMjNkuT9+KCUBA
+DqRchNlpHY62jXMhw8+JU3+5j2kjJwPilptbeaBm37+Kf/OKCPFD0fCtTaR
IH9j1pXAaGXkX/bu6Yz+Ir7Gt9EkJ1kZHVB4Efp9ahYPmg4Zjs1URhfenug4
mTuFl/0dnaQVKiNc96ruKu9xXLBReK3BZ2UUViWzGKMxgusyjP/yfVNG982v
BIt9/YeHpd1969WojPbFb8iS2tSJn/TmpJ//oYyeTef9ULf/gV+vbWJr/lRG
zd5a+dSgr/i1UeGh4BZlVKXAk9woEU287G7c6d+sjCpGza+111USDi8vllHq
lFGw/rNizfEWIiM6w9q+Qhltdxco65/tJHDTsB2mSBkNa3y/1ujXR6i8/8++
O0cZCbEUTub7jRCS238l6j5WRg3uW+O8XowTz757n9e7rYxOB96YlGubIkgi
ERX9l5TRkEqkq734HPGlW/L1wePKKLWuqPXNukUifld4RpyNMtrR9qWiVYuE
9O2u3Lm2URklLBqKCn3gQccKzdP3yCmjkkd+aQqmfEi0QHrfnyUl1Dmr+mm8
hh+JXD1ydWebEjqGXzhouU8Q5XX4Ho4pVEKNIbH6fN+FUFLmNufcO0qIxTpR
/OSbKNIJ5GiVmCihp1l03fXG4mjbJbdT+WyufvtOf6d3EujBl99vM4c4yCTL
Ks7BWBrdr88xehvDQfeu945/npJGKgru6t8PcFDk4uX4x4+5vNyncC9blYOE
9k/cdZunoLfem7xW5iui4hSNasU0Ktq8U6WPxK2HHTwqkwvGNFTe9hQpblVE
NhuOtNSEY+j4X+O611EKaPRw699HCnT0tuxas6CIApq5rHrNJo+OzkU47NoY
Lo+ucaQeLv9ioIa9Gtjl03KIHfEGa/NkouRY6+DyTlm0Oi5Ea/8kE+mc6/fC
bWQRzXHd0OAyC8UmOTBZGmxkph0YMHhRBuVN6i8+j5VBa6fqjtguyKCzVhYf
Pk+x0OoE3o7VfWwU8+iuI6mAiUR64gol98qieJtUTQNlJqIFVVGeFcgifo9L
ZulRDBTb6yAxEiyHSvxrjpjupaPfm5tNYlvkUO3FqyIv32HI71+8ar2ePCoL
ubEzioGhrAN0ReVf8shgn3U4fyMV/Q4ICFbVVEAymGfolzVUhHtLi78/o4C0
2PWKNtcp6PzPdOmGYgVE9xroLeglo+8HjVMLeBTRiPdBJ4oRGYUHunWbKymi
kAIvnpOJ0mjfv7upCkaKyO7Ao4QPv6XQ6ozwqtBziojfKWb50SYJ5FKyto8c
p4iiOuT0ZrrE0COHgl9tGYooffLQKWqMKNovWhj6DymirgMDwnL6Iij9Us3w
mkZFtND/Y6VBqxB6wvf7eH6vIsp4vKM4LkwQUaN8fIJnFJG538R1c3UBNF44
kxUixEEXG+ZY0dV8iKQiL/aZxkEPrj5/6ufLi0o6hW/uUuQgbafAjauYPEhS
7l4YVYODxt1209+fWyb2Br+2V9DloB1bC9imnxaIRHHrLO8NHGR+j11uJTFH
eN+bdBLZwkHNxUVIzn6a2C/2xLEf56DD7V5zY+kThM679d+ZRhy0p7DpA2N0
lDDQ81O9Ddw83k9elX5xiNAv3F510JCDbCJTcysU/xHubi0+FzZx0G7aWbVV
nzuJkZCGkbG13PVyB5Wfdfwi1PRdtyNtDtKs+JIbitcRMm/94v6t4KD7vBGK
FU+LiQj1Txo+Mhy08W+/msbME/xWokiwkyQHqZb0y1bkVuBSoyyl1yQOeiY3
WLD6SzMucHSp0XOUOzJKu/aup/zGo/czA253cONfu7n4zoYeXEEcF11drYhW
rbF02LyvH08Ua3ttVKCIll/YSexfN4KXVFAz/3ukiMxW6j75WDCGKx2ucf1+
XRG1Bz1OkDeYxOsaTusFHVBERfstBBo15/C+wmNP5UERHZu9/hHdW8DHa/bE
WSsroo8/hA+XCSzjTd/XRAlUKqAd/+qvP+rkgTOPXaIpkQqolfPVeY0UH1QM
NB85vl0BsczXaLiu54dM9dZUzRx5tPhKS9IlWBDWF+xefOYmjz4Ufs1cSBKC
BIvTzBSGPGJdP2j3O1cYLLaAuZyPHKrecvfbmlZReA8c/XxRWRRs1myQuSgJ
a2nZptR0Nmrv2fR+q7A0tGuOb+3ewEZrBPwTOTek4cIO8XxtJxmkuUy8FIsn
Q796hE9pPwvtO63ezEOjQOuXqBuUABYy7mK9hZsUWPPrQQ09ion0dxu88blE
hcInl9SHpJhosyy1wWaCCl1Wu3cScQxU22Wfv9+VBkf5+CxvxdPR+cSixRxD
DFw7xg40h3HxifZu44//6LAlfMbAfp6KHl7x9KVx+/zt2lyHA6epaJiT/sQw
jAEqE+2O2vspyLhPWclciwmp79d+k68ko/72D+4rg5gQOR2R1GxARhvjnR62
fmWCkB/rSBdLGsWbB7U02LPgPXGh5a2kFEqLFcyTvM8CZ8fW/wp7JZDrHzcD
1i8WrHf0Ji8WiyPyH8d1Y0wZ0BMKE7h/WwzlB8lX3rWWAf+U01MFHqLoIyct
UDhSBopNUlhBBiLI6VkXc9sHGfgg57vjZKsgSlaBFVQWG1747tX5/VIAcWJe
9T7dygalXK2lC+f5Eenb1HaBY2xQ3Pxkp4cZH2Lzl+RrXmPDjuxtYcV0XlRI
JVNkX7JhrOJ1f1onCQXd9zjd/JUNUg26a08eWiYM3s/uOPiHDd961v9bO7tA
TOZ/2fd2hg1qtu5ObbFzxJ7eisyfYrKg9Pv89QyNGUIoRPpFA1sWjl8WFWr5
NEk8GGyeTVOThS/3sjpfOo0TO+0yY810ZUFh2LnUZWaE6M4LeVu5QRa2ZNon
+qsNEm6n0ZjWZlmwOPp4c6/LX2LzFRfF01y5vd71+Z2HnYTL5WWn+xtlwWes
jmfpUysxvPkXJUdPFtIoA9fW7mkgjhhPD7zXkIWum54HLn8pI4T8qR1v5WWB
afdQIEg9gfA3RyteSsmCGnZBN9iCwAWOH1qftsiGzDR94Q1ytXgWc1Vz8l82
6HZdiBF1aMGDxrcIPK5hw2Pd4cqA0t/4UtVFvuK3bNi4emnb5b09+MdPRTbD
d9nw3Wl1ccGvPnwxPfEdfpYNZU9cMjMch/Gd9yI03tmwoeH45+nxf6O4jOl/
ffu12cAK2e3Jx5nAjVZ7e+nys+GS251bu22m8LVP9d13fJcB91MRtNRLM7iA
dgJ6+FwGOmKtr8RULuAWZAMno+0ywLN0M3e+dAl/YGFHsiTLQH7XR5ccRxJs
uSnU+b/8Olvc8sjcjBc8qezCBU8W7Eqpa4g04IMsad/CFTosCLpQ3jWjwQ+5
E4TUylFu/rLsMWUeQahOWX+0wYsJfpUX8IJeQaiPfhQfq8GEn1VXnA0qhcD/
wvx50y4GTFjUbcyLEIERmwqjMisGXJr3/lTxUxymPzS+HsLo8D2kI7nrqQR8
XKkWf6IEA+3ZxW4Pb0nQdnsvqXkSg2cKDllnp6SAV7Pc9kYRDba8btg5vl8a
lCXMVpty5+hjXhdtS99Jw7VSzzx3IRpsP7YnKdGTDKaUhnGeXVSQtbW8EPuR
DHl2F87c7KNA4QepPVF0Cnws6jfMjKDAD5Y426OAAqJBwisLEBkUs4eK4R8V
bPaGyxtxpMH4WJjMCx0ahJ29Qyk5IQUmgfOcIV8aqLgWry+9LQnMPU1Fg5M0
6PUef320TRwoS3FxaXoYRFpYdWqTxEEhZ2WC4ikMqi7FKkspisGNmznNnu3c
e31XD/d2EIGjnxy7V9PosPB38xpZf2GYsXL8kmNCh0NvzXnWxwjB7s/m37sf
0eHH7vo68gcBELzsd/JmDR0qywqaF2v4gS/PM31olg7+JSv4srr44P6KhX/F
xgxYFX1hY5kwL0xTFya0PRjQ0dcWYc3igSr1y/E7IxjQedssfFmNBPak/s/U
JwxwGiWel55awl3u/XoX8ZEBw7dEdyhdW8BDF63KnrUwIOaY+6rtT+fw6zfO
hPuOMsDq46Mn+z7O4IoHbub/FWBCvhtz4HLLFK5B77ITZjLhG+8e7aWxCZyz
HB9Vp8qEaz5FV/tFx3GZiKsZO9YxwWKHH3+g0ih+qW7NNg9ggrHYC/UXvkM4
aSaIvM6MCYb9ifJ70/pwQ+XbfK/3MKFDgW5vUtuDu595t6HZhglb4y/z/SB1
4l2In+e1LRM0Xj0X+ezShtfymbeu58omhkvt/p+b8PDJUtZVayY0Zaj5Wj6t
xrvjpxpSLZhQuXpr941bBL6u0YEUZcIE1bzglpjQC3j0oYvvjbYwQb89LpHy
qpAoG/1sVrmGm+e30qDuThVBr1Fdqb6CCU9onRf5HzcSoaG9Q040rj8LptP5
07+Ihbc2p07wMkHX1aLBj/OH8NwfkGw3xIATuy/bL5Z0ExtG6xKVvjPAfYwn
Se3QP+K6Ct/rGoIB4YXsnOczA8SHawFWro8ZYCSqslLGZIRrT06hi/teeqjC
0lBijJA+Q2q39GQAO335073aceKSsrEcvyoDzmgnfDhpNU00vVk/Yc3LgPHj
3pkJ4rPEgbzPJx/+pIO+HM+nY6VzRJXr5ZdmEXS4m7pv3kt9icgf3Mf/+gAd
bjKIfY5NywTBXqO8UpsO1r5JK7MIEppLfnPeuQKDtXd3ONx14UWTT276adzB
gBQvXvx9NR9qiuPNljuEQX2wx9c/C3zogfp5gdghGiTsY52TihFAabODEzZT
VHAJHXeSjBNGGzfdmePJpQLBuXyryUIErVrKrhP2psJumx8ZfQKiqPX0MZ3N
nRT4/VYu+8NJMXS+Je7emSQK7LY8td9ZThzJ0XWeqVhSIJljbketEEe0F2vz
l96RYS6A9DxERhINXrtyfb0HGZzS4+sUiyXRV90/j3mZZOBRkyY9cJZCF2/4
n/LylYbuLYUxfLuk0Q5da6fxtZLQ422UleJFRp9uqppuDZWAar3otu05ZMRq
XyWg/584LEyJCGtPkVGzyY/IPY5iEJGne/j1GQr62kwOu/tQFJq8ti/guRQk
tKrr1dc/IrDKQ/j48jAFnV219YXWYWGQrXlkM3uYinaRWn+GJgtBHX3/ec0E
Kgq4absg/F0QQuUl6s9XUdGf8+YbBncIwHGXmLUeOjS0cmt27qlgLv46C21Y
dKKhxnVN7Z5ZfCAWvvdgWhQN+Zw01MEwXgjbv6FNuo2GOHHuMWp6POA24Zgv
LIwh3527cr/uIcEz7X0aL3QwdHlF+V520xK+XK7LmdyLoZ+XElUVRBfx2jyd
z51nMXSu6Y/tfwbz+D6jkQt+CRjaTb95Yd/xWXy+8s3gIy6faZxfcu1PmMZb
5f1GfeowJHPk4OiH0kk8bKXmk1/9GJrbKKW0MDSO161pPtrBS0cPQ8elWxhj
eNnDJ5+CGHQUV1v97yo+gquSxO+8UaejLfaa/52sGsA7rn0bCNxIR+yQ0PjV
zH/4eRk2/acJHd17bFRU4NKNH9h/KbnGio7Usvc2er38jV8OmN11wIGOiGqN
Suf+n3iTYpfq+UN0hPs2fy4KbsAVvkz5rT7KtS9dlHqBU4HL2azOPe9KR2k8
NqYPbr/Dg2RK0p24+r3LpPs7t98nFHQmDJu5+1veaUlcti0hwkn8xf+49u+5
lmXEXK8haiwX4+9Y05Gx/YPYnv5m4sGF6wHtO+jomMiyk7BxOzG4otbm8yY6
2lxz5AzLvJOooMpaW2jSkYVZxrj1WA/B96jwxxkWHa1Y6O+rud1HuBzLuWYs
QEfh9XXMtXpDhNsOP9MPQxjSMm9pjekZIX4NXFdpa8TQ1HarakbWGHGm0OHs
qwIMWdLMaZqGUwSfu0WfRzCGXkUpv7MnzRCX+H82OBzA0FtKJPMwMUvEeMt+
Fl2PISvef0X08/PEwSvZa4KlMeSs9jLCXG+RWH/h/qd3vTS081Y00di7RKy/
XHTwwwcaUo8ZFN5mTkIyy46cuBs0VKC6279pigddOSh4u3wVDZnuPnap5ysv
8vSpil7LnYujndUycxL4kC7bdd3VMip63ibyYM0aAWSoreqzYENFIUMVnPez
Aqha7vGIJpOK7n91NX5BCCLyuNWUYwsFdZxi91zcJoysZc8mtNtTkKwCdZ8B
jwg6kUR5g2MUNMTvYkn9III66l5vK/5GRhmrSaxqNTGkWOXasQ4no/8eJu+6
1iKGSFObWg0npJH7xrwGuUhxpBc4ZnDlqTQ62VNu6f9LAq1kyA2PCkuj2ll+
a1aIJJLbUqm1x0sKzcxdLTdXkkK/YniuBn2RROfHj0iRtaVRjFi5jpu3BCqL
+5A8uJuMOLVbR8NSRFHg80eSq2LI6OW/qHcvh0VQ+aKhwgfuvK/ksKR01VAE
6e9dRXlpREGf8uv3xDUKofUxKrV8gRRku3nmXY+cEMrQH/p3+w0FYY2/pXSO
CqL+QzseWnLjopHRXNfZx49qm3oP+ZhR0ePcyG2+mvworHpDSWEAFUUc3vpm
iycfGm35d/5tLRV99B3Sr/zDg3T+5Zs5c98hkPztSrYsD9rUmZ+uoExDKzRP
GMjZktBNQ5fSthM0lHDm5q7rYYuETtuyY1MMDdEMh2VtB+YJiVyDlS2vaMj9
LyU433qOWLUkG9BbRUNjDbuVW9/NEM+6LzXP/6Uh31KRqb/MaeJl/J4pGh+G
vmC+QrznJgm+wMyc1WwMrRFae2t38ziRlawma7EGQx9d5aYm9MaI9JV/jnkY
Y1y/a3PZN0YIu385/CF2GIryavlVVztIrCdbh8a7Y8ip2+qDSFgf0fzD48kj
fwyFuS9kquv2Eh2271wyQzC0bBt96VJ7JyFlpNj8KhpDLuIvVjhGdxBxLWVW
z+IwdHDzWXPsRAvRUiaxJzGRu75TYlcuUU8IjLw+F5KMoWSTeqMjKyqIpIDC
jEMPMJT9eKD1yc33hMX9hH/6XNniC//Yx9M+eESq4Al+7voLDaL85F+FeGcZ
dqeci4MVAQz3TuNKnKUtN3flFvf+RMSOcfMG/EbtS/stURiqUrrMPjnRgm87
e/7h4EUMrbjHW364qgM/kmY5lOCLoaG6yNeZsl3491t918CVW5dbuyqqPHvx
xyYdE91cHO436Go5/a4Pz758sSpqK4bq3Zx+7VkexEdnnvSuXoWhO0cHha6n
jeA0y/s7WhgY2ntLlVSybQwvONcmE7lMQ/0X20sVO8fxc5x170jlNMS3+ejO
UvY0zjt2q7A6g4aCf2d+K8qdwelu+1+95PYNh0tLb3bumsNn+68VPdpOQxfc
rp2I8l7Eq77Nny2Tp6EdmaN140tL+P5bRgf4pqlos5lYyypjEgzv+JTdnUpF
B9mafrWVPNA+fUT2lh8VYW9+B967xgulFaMJx42pyOe3W1DKLj64Xi0Rkveb
gqz2PesUKeWH7vA1q/QyKcjp4ZHhPcECcM4x2XuI20dJD/u3R60VhH1xx8fW
C1CQi4AhlnhfCKra5i1QKRnFYquMhB2FIUU3l9cmlIzUrfoMPzJF4Ijabq/c
aWkU8ODaMBEpCgfjNDi3XkujZVcvUtsWMeD7nKic4CqNlBdU0qeGxMBgW6hH
YIIUunJLpqJyhwSI6JrH/ZiVRK4HHPWPDEvAyeSIM5V2kuhZtIXwizhJ4Ku9
GZYpIoHW4fI+AnVSkFZn1eKxQxQ9Tz1mK0ghw3OhHvv9N0SQ46qjjCd2ZIi4
8jb6dIMw8ibRTzreI4P1pa8xx/YJofm5htfDshSQH16284kTRP9WpFwvdqBA
W7PKp4n/BNDroyJ/rt6hwMbIq6cKDfjR5Pnj8iNCVFBTkK7SOMWH/qv+8jR0
CxUe3M9dOPaQF8XXN/dPceemF+Ilr94skJB3cr6VVy0VpEQZqt2qJPQeI7W4
LVFh1/Gr76+kLRHHKTz9muo0yAuk787eMk88s8qZFg6ggQfvQMSFK7NEvsTp
1cz7NMjoXmlvXzVNJGb/O/GHy7c+X6tgnZKaImhHvf4caaVBkrdXwNieCYKu
6sSXOEeDbBNHN0rMGPHw8sWLFzAMfk48YS6XjxDS4y7byaswWPrhz18nNEQ8
78kI3r0dg+b3Nck8AX1E2GPHeD17DHqCv30Y6uohHHNXrC0+hkHe8+wL87s7
icK+eKOBAAxS/yw/o51sJ9SVXLoKL2NgWNA+Or/+O3Ht/LVQzZsYJO55VuWz
XEPIrI//uDEBg/f2HWsuRnwiImUeXOlOxmDrug/uphsfEcMuMVPaqRiUKzwO
VP2VjfvhnDOUNAw01mcLruj/gmfU82TceoiB2J4fis/06vHdqPbMq/sYbK5K
Gw33bsEZujo8bty5t8M+9cGbxg780NmczPfXMch0dZgvON2F0+X6FTNCMRjJ
cJRfEvuL+8XvwDf4YzC/jvKR/qgfN/cU1XZ1xeDifkpV6sZhvGhJfbeuDQY1
7Qpr5N1G8Q2dOiaphhiYiXlPftQex9kfpWdyVDEYVG+SiB6fwOf+LF4+IYlB
uM2JENO8KTzWebXVf2M0CPKLjCgPmMG1/mbOfm+gwS/rwtjW9XN4qa2Q861c
Grx0d4hdzFzEm+fjxNgnaeCdWLP9heMyvnZGozHThAZTl1xwlXASbJLcpU+W
pwHmmhDVqMELgre+Oez/TIW43uvLkfO84L5BI8DkLhUm8Jhy5wo+sLXT6aC5
UWFdkk0VxUUAHuUNpHssUiDlovO6LxqCcC3TmTxTRoF23bX2JqOCMKg32x90
jQJHv057Wp0VBqsNh+2CqRRIuD+2PldfBAS77NP4G8jwme9X0I1xEXC78fq/
hFtkMDmn8/Ggqxg8uCV1kkeUDHqzfNHaMuIgqtG8prNEGrLd/V1VqsQBu7fu
7MA5aag5O1e9Q1USHh7TDFxRJgWjgW42FjWScHx4G+e8mhTYh39q0j0jBV9E
/1AcIyThN9YRoukoDbU3LtMWtkjAiHVf2MYMaSjYT0/7GScO2t/jf9+ekoaj
B7V8rvSIwfqysG+UKDIIlCWHh4aKQvkJ/+rd9yhQtLl4RPCuELwVV+j910KB
vPWx2asbBSHgTigznkmFi7YZCnnSgiBGZ9wixVDBSCVmi9olfjBXOFSQU0YF
rxUbCzbl8sGL/vYPjvNU+P1a5cxsNy8EZx/UDzhEg/bdL0Srt/KA15K1YvsN
GjBDzmdIeJGgXj6qcgW3Tm1eS6klrVrG/5snT2z7SwOaUpjvtuBF/J28RvR6
MgZGbfpXt36dxyWufc6bW4+Btu4C65PUHO56Q7w5whGDyVenjEdtZvAni/98
J1IwONBakSpcP4Ef5m0rLv/AzbtI4+pdkuO4m5dowv7v3DquZoaOmIziLHtV
n4ejGBcnb4mZzQ3hf9+mzCQJ02FJ07tJ06UfZ9Z2SZnI0cFJ4i6lp6wXVzxe
2ZiiQ4exILXhBpUuXPrmt9Q0nA71RCN1X2gHXiLtIrDHgitvVFl9I+8HTkvV
qEq1p4Pn3PkJKdc6/Gm88ULCYTp43RU68J39GT9kGNSk60GHq8/zx8h3M3G3
lrNNJ0/Qgea+aeCMQybBt2I429SLDlRRbdNvjM/E9Olqp5KTdPjSVCWv5lVH
/D7pwN/iyd3Pe2diT+0PYr+zhdQNVzp8CBnYsiepgzDbeKY+wJkOpLzzLjNi
XcQ+jSL6Hls6PPvgpCYd3Es0md7vI++kw+VNWfqmg31Ewdu86x830+Hl44jV
1o5DhF5N+3FnLp/21XjcOtw1QpxqlZL/x6aD7PTVrbVJY8QulWOeLtx4GdiE
qjzh4qr9FY3tlWNcXOrrOLWDb4oIDX1UueInBp/eNjBj3k4TaV/Vd3t/xOB2
W4qajdssobF5wfj1YwyGGYWFp7B5wuyivkPnVQykVgoLFpUsEL682c6SHhh4
OQ3Z0ry4fD/5n42uCQbX/n2MfipGQl4zTSMnF2hgHPIw3TOLBxmnep+N4uLI
9jMSCp6hvEjnhMHL5xk0uH1Tvl3Smg+V3q/5OG9Jg/yosvSFAX4kM721Yy2H
Bu7dURzFfAGEiK+qwcNUMOA/+CM5RBCJaU5eNbtChcnzmTLOUsJorG+VfuNu
KvTUd/IG1Qtz5wCZDRcxKswdSurOiBdB38PPrMGTKYDuVlaMU8VQ5XhO69Ad
MmyK1kjeNiWBLpmVd/VbkmFD1+XZ2WeSyOydhJO2CLcPm695uW6/FErYov4s
zk8agqIzNy7aS6PbrhvbP6lKw6OBKLs1mdLILndtSkq2FDi7rDATInH5fEtx
uOIpSZhQL+4KSCUj2pVbmY++SoD9yR/D/CNkJFtqFUVWkIDPEjq3qFsoCLfq
LmopEYOolStik+q4/D+ltf11rzBYNBTeC+ujojTX4uAFdWFo3HGkxE6Lhl6c
ehWSfkwIbihLB/pz5/CiqRZ/w98C8PhNip8vl38JXh9otWIJgEvAzLSJEpc/
P/NPXNrNDxFqB2J2cvlc3QHBaNccXshZIzRR/gVDJ9UcpI3+8EBycYvspnkM
lTs5XJ6R5AGTDZXin7ToSFfmns+l0iX82CedKJEoOlrWThntIS/iJa0bkj68
pSPxRh2L2APzuKCI31nfdjraStvXa9Q1jXsVG5r+0GIg1vEtp/wXJ/GcZIMh
TxsGcs5fVTNOmcBPhpmF3TzLQHf79jQOrBjDXRcdH21PZKDrRxaKb+qN4BNC
u1RD8xlIMswjWPHCAL7H0YG9vZGBjI/y92y48Re/gteUXx5moAXOm8//JXXh
f6oC3m0VYiL/nWXTW1M7cKe3Gg/PyDJRWrCNypzxDzzKyyREToeJdmq8qCuB
WvxW1eqbejgTTfOqTNu5l+B03nL8rTkTdQbGrNKZicVFeFvwB3ZMJPPw2s8n
/YWEKFwNHjrIRCouF6Nur6smoDJX+aErE/3mLHZY4M2E/kfPe1keTKRqOvQ8
zb2dKMHWXlM8xkTfFS27Ass7iZ+ZAb/63JgI/tHQxo5eIqGyLkvShYmC9go/
TJ/uJzTKD56OcmCi5Kabg0+ERghfJXHkaMlEPf+Z5btRx4jMypbQ8G1MJLvS
K+Kn/ARxskG1nbSWiS6yT8V9U58iftr1bKrlMJHwvUsj4mtniBX5PzZPijNR
+HXtZKctc4SRakXViUkGEkkfDok2XiD2BedSN/xkoOqzFWcOmS8RSwcmz9sV
M5BR3YRyvRoJlaaeyqpMYSDLakWnOA0eJKH9KjU+iIG2hrC+2mryooejpKB3
dgy05Vw24afOj95rRk3yCjLQgQoduXsrBdAhq6XNuj/oiL3cam2nJIjm7rAJ
4jkdrUnQ3KmCCSPLq+ZJy1vpSKQxVodHXARl3RJ8mSdGR778rhuFeETRzoWM
Yz9qMbTd2KdiZbcYynrMt9pjH4bO+hlSxRrEUfAWKZ5WGoZu8+0Sfo0kkHl2
mGRlDQ190f/7vOqWFKJ3vTVSMaKh+S8uJJHN0mjS/Nzme5NUdLL29io7bt1O
ejjKpTylouDntREl0WSUv6AmdJifima+lSl/niGjmF8XBrReU5DOSDpn61EK
Gqve651sx5X9fJRO61PRfAKr+gq3vq3OmduIJVNR69+94RLbuPXermc8wEND
t7UlYvf+kUbVx71nrT7TkOa7Q+ytMtJozaE3/xWrYOjGr29NI65SyDlGPnJr
GIakdEROyMVJonH7fVsObaAjj2tHROY7xNEaw4OSeZEMJH5x9EqJORfPmqH7
RD0D7RBVEVX3EkZJym+vaLKZyHn82TXHa0Ko+278htRHTBQm5KjpRQggOT3N
9B09TOSz6+eAVwM/ktu9IaZRhYUyLJ9NhfTwoTsCyvSIFBbqaP7+TZWXF3lu
uKGS3MxC/3Zd7moX40G3/WXvB0rKoJq1eMUEhYRM+0aNTvvLoAeYoqyg3gIh
RxunBT2WQX+cIz1MdeeIyCCJBN16GRT86KJvp9YMEVvW8vaqKhvp8uSHldMm
CAuDxi2s3Wwk/d+NNg/eMeJK5bTVZh82Uuac3kL9PkzsMOxu7Itjo/dJYe9e
pfcT2p91WuRz2KiaSDq94N5LFGVhyXXf2GhwwrnaVqWTCFHbEk3qY6N364WC
NPJbCYshL0jnkUVw+EmQFquR2LDSMuItXRa1rL9s3fjrK5EgwT6oqy6L/jzk
RJHKMon6Z/vGaBtlUbv1V8Efcrn4f/uvp9qbyKLvm5df6qZV4pg97/KMpSya
OnJuT0R6Ex7L61Yzai+LKLtu+5MutOOneSKlcGdZxNvQmdqm04W/0pHs/3VI
Fk2O2WxcSP+L7zJif/nClXfpyvFOygziq+SEDRecZNHeUhJNt2IEv9smzjnL
tYeR6/nGhMbxBp+hgHXc8+aDPWWumkzi41+eX1lrLItWqHqhosvTePIFudLT
62VRq/IVkkvZLP6DnN3Vt1IWBb9/HoULLOBb3ElNyVRZlCISnMcxXsLf5J9B
EYtsFLGpvezYVhJIf54XyuhiI3zmd6uUCw+cMLppTipnI9e14XYeIbxw12XI
MyqDjUjvu4zsH/JBz03V4B2RbBRa6BBZWswPWZLwU9+VjTg2trOxvwTgevxX
tr0hG1kf2Gb4eFYQUs6/bdH5K4Oigg4e01kjApRQo9KefBn07K2IwqldomBk
8sa95ooM4jN8aX7lqBiov9K5gMvIIFue6veVtyRgzc2X7l/aWUhKw4JT8lQS
pNTGZ66ksZBmGstWsVAKDrX9/ZOrwEKvxfwGrYakYaW8VrVqCxM9bzt8ztSf
DGa2dld/xjLR1wMPczbNk+HiJoMQ8iwDzYyMtf/go8Ir36Uy9lM6oppeEzgn
iEHsxeeLm7bTUVTisVaNGAx2XH8wadyGoWOWom9VaHQ43BXM2SSCIa3kG2de
yzAAc/tUvSaJhnie7pdi32OAz+AfHV01GjLb3SYSyWJC+RMJJy8DKuq16rNZ
Kc2Cxl7jmkJEQSbXsSndCBbot202WbeNgubLs9IXFlkQ72g9Vo+TkUPpytnQ
PzJgOCIkKFkgjQpSdrbJWbGh5Gdbc/IaaaRzTmW3bhEbGFFf0Y81kiiFeur3
5euycGZvgmMEWQLdLv969tGoLGSs0qvdOiCG8l2Sw+at5cDaezxwe5wIUh1Y
7qZKyIPnl++7Sg4Ko0r+Mb13rvLwUaVc872qENp1eXe/daE8DH1dTY7I4Eep
Hcw53EkBkpxjxZJd+VAUo1rB97kCCNrcWHgky4syfBst3cYU4HChsDX6RkKf
jhyuFpBVBD6BLRcUl5aIOOt3mRpbFKH2to7/SdsF4q9pI+OeoyL8V2849/Lx
LKGdJ3bZMlAR5PqyhhV1J4hvBlm0028UYQxlZ/V6jRIk06dT374qgjY7fX30
rkGiS/mm04F2RXh2cU+35KtewpIqkSgxoQi06oKyKYE/hKmekNpvQQ4cnwoe
/PT0O9F7nVlQw+BAlubvjeWHK4gLWpOrm1dyoCun/GtkZBLh2VCfOqzHgaWs
ty/S2z/hDxlN+zCcA8mYhbPQ3Ub8gtOpmm2mHHBPvl7T/LgDd7tS8fnMHg5s
KffM0r/Sg3t/1tbM2MsBn9c9e4ePD+CB1o7qLXYc+PzabIOq5iie6Tepxref
A7HfD+J7lCbwuvs11Rx7DtzIq/xLZU/j6TO2S7q2HFDIjLBhYnN4j3J9i54l
B66kNaUsSS3irb6VXzlmHDj86dJcjgAJBty2nZrj+icyb7orMIwHyHmC7wvX
ckAydXyMw8MHYzF/G4+ocuByZPLGwAv8cNZp0WCUe//Ks1f5recFYF3xf89c
uPFZfSvk19mzQhA7EqKUN6YIak+iJ97/HwVXHk/V+4Tt+3Kvu19c19WikjaF
ojOUVMrWqo1IKW1EixZRlopQKm2SLbQpRdYzkkT4lhLKTvZ93+J3f3/OZ+bM
+86Z95nzPOdzPmdABpibJMe7q/nwsyhxcctROUiZq1kglc8HwYpunaK/8vD8
yc1Tos/58Ppb8tplexUhIGF6Se1NPkSJyD7oKVOCDX9YVx+f5MNi5ZSbB7Qo
MOR4eCVY86Hq0Lsi82oK3Dlt61mwkA8s+VvHr21UgQeX+eq0fA3IryzXdJ1S
AaOykAmGpwbE6G992v6CBnfP215naWoAWr8+tVuWAZclB8cXHOMBZ4e2Au+9
UC9uN5veKDzPKxyPSajZM+FCZ+zM5UR12EI1Nzz8kgXHmllUm19q0HDL1CTQ
hg0l88yMpg6qgdbflPW+g2xoVQt+WD+oCil6j8wTFnMh5qEj9ZKYKlCT69Tj
vnJh97ZZ5puvciEi3T2Dd0AVwHVhr48YF/SldOfpCHE38aA/zXKIDRsnnX1u
qatDT5DGmKgLG45qBL/nPlcH6RPKbdaVLCCCJVMMsnnQqx9QO/2KCaf1z5jE
mGjAovqh7osMJsjyXxJVHzWA8wGyKs8ywFUn5XjSXj7cHVQ2dFlBh+uGVEXD
+3y4fKjlVW4oDZ6NmElK/uBDfA1xHNpUIPrksy5dE03Y9dfr7r+bVFBqYTl6
eWqC3mxRM+daChB250xrn2kCu3Ti49oFFFC5JCVWIiWAOQdG5APOK0K8mraL
+TIB2Er+cedLK8CLeA+L9L0C+DQ9Mcv+phxEiE7zVf0F4Ppw44g7VRbEYu8l
OL8QwJ8HYjFBodJwS+pnT9g3ATSm/SyokZeCC0uHLO8PCMBU/3tVxBUJUKL6
7uMv1oJon8Qo7mFR6BA9tS/cQgtO3srbGf5qhrh5Jket+IAWcAfP+hzxmyIW
5Q1HfDyvBeMlN6mzdowTu8VjFpwK1QLJo+ejdWeNEBpsDKiK1oKWE6NTY10D
RM9qTlb/Wy3w8yqXaXHqJaojH+h9QC0wLP6yRrW1jdBhBWbOK9aCE6/N93oe
aCQMkiK91pRrwZ4Xf8+mpFcQjBbelFi1FoTHzzfNXptPrEkjFxys14IHp8M/
cX7HkKvZ13a4Ngqvf3/IImflf6S/+t3FVKGtofJjJf9jNVn1N/vr9jotaFJ/
NVIx2EzaimlFr/qtBUadmw1V/TvJjKGEMLJMC0w0mgpOy/eTZsesahq/aEGz
xPalb2yHyMp/7gvjs7TAceTBtXURo+QX8cEQuVda0H9w5gb+mSCH7hidpT7W
ApmhUX6i2jTZa72SzLom3L/tNwOzlyL4uU07RslDCx7mPbl8ZqMYPnO3LpDd
owVh9+sbk/+KY5xL9LI3JlrAodL4aZck8WHGLar0XC2IOrKwWW1CCp+xFa/t
kdMCW4Vz+/VPyWBD7IWJd50C4Ouv165sl8X5z55T6F8FcPN6B//7Xnks2iLA
iwkC2HdUNnyoVAEVCI91I1cEcLy/ZynDWAkrdK6vmLNcAK+mnnuVBFAwdv45
n1Y5ATgdrGz9YUjFfZjj9LVWEy68j00U6aDiVduuRKqPJpzY8q/+zFoaHmes
pF0WztmA2XNORfTQ8Ja+rdo8NU3oVr704MZdOpZW8+rNhM+JX+1Hr96vY+CC
F9JPCs7wweOELDf4MhNHt+0WjxI+d0wiffslNIR65UhjVEugBrC2ia3R38rG
8/YhGlNyGuAueS65pIONJiyq8fQ1Hmwuurgp6hIH87tEVit4q0OXyZ/k1Mdc
9B92VFo1rAYBI2IdVdqqmFceav3IRQ1ypQiDsWRVLPQqmCLMVeGtZACvI00N
87LMfwpa2FD+4uVv7hMe3rflXx43Z0O+SfyqGxQNNKgwWhX5TDgXFC3xxiUN
9LdamRPrwASZzr+fZLT56M27c3FxBgMo8yPm5trx0WrXmmW1VAY8Z0Wrv7zG
x/19992GM2kQ93TuaqVmPjIC02yvK9HA8nfS1vNKmvhjZMGPe/YqcCVMokJe
XxOb/jZ1L3tNhVX0jiNZezXxZ4Jeqsc/CoTFXp265quJU9tGtpzcSAF3wj3H
LU4TmT7rZ87pKMMpjbR5bp81Mf1tirHZNgUYlr5HvBIToGPPMpdvLXKQlNKy
sk1dgJZ2h+ckn5YFMzh1eam+ACMTPqpTJWUg/41jyw1LAb72HmrVuCUF8Skf
AgadBDhwrlBelicJOhJ/81zOCDD0uOLIWII4VEiYre4MFGDWmzsDqsvEoCs/
osYrQoDH/Q7NjswSAYlB16+seAE63Z6S3nFjmnD9537q4xsBzqg6P657NEnU
dVb7ns8UYEuCP33hqzGCo/egdU2eAC0WSA7eIYeJMKn7/6kVCvAGbNI9+X2A
GPMcfSZdIsBV0yOrBV96iZ/NC9Sk/hPgvQOrex/0thNnZs9icIW2ov1xlwFO
MzGZtvuDmTC+yWrhB4k7f4idUSZ9s4T5Sie8tmuIlBIsx09Q/FGANoMXFee/
jyFCpC5aERkCvH3wih8h/4ncZTCq7PtagPHmUm/mnfpFvuOyP0ZEC7EUl0DR
c2kgb0mf7wu4LcBPSz4x2oJbyYmhT8e3+gpwqj53c09iNzl/Ze8O8RMCJAML
AvNq+sl0t+sKD+wEuObj1caJ+iGSojuxmGcqwH9SnaehdpS8szzp+R1tYT17
Q2YZlk+QxJhxjJSiAK91qp28kf+PbOvKuHCmVxMHopQKTuwQwSqfV1U9/2mi
3LG+PQ+Xi2NeZ1SBwg1NHDTZcLYwUgL3fPdPz3XWxO/xKS+/i0uhXWhb1/3V
msiR0Yv8gTJYK2nL+dHBx/cfbKx82HJYZiCjsDaHj8lWxxTcXOVxGe/LorEQ
Pi6+vGvhNTGhzjU80m6hy8dz05nrjq1TxlbTosTxYQ3sabtzzM+UgvM+vlgy
N0gDN8HSIxNnqXiRWvhn4WseejjjaTGKCvrZhrctMOJhWe/qkfmxKvjwPtOD
+KyOj2N234vPo2G8h6nr4Hc1jH77L6bOko73d7vdyNiihp/mNoxLVNBR39wm
qLlMFfesuTz8t4aBHb8f30gu5OJh46KHN/Ywsakw5J6XCRclxiWD+iuYuDHE
P2I0lYPL06IbKz6xkK0iM7D7IRvbNnruXLeCjVJpWWZH5diocUxlhY1Qf188
63XJ5wwLRYrFitRPc9B1/uODipuYqH1AcPN7FQd3WTfdf5nCwKp22k/JlVwM
fsN4F8dh4LKYEseqXi4qfrg42FdPw1UtHyOPm6miZ+negmOmNIz61QAn76ni
0GrG7zvRKjjvJ6U8cbEa/tg2t3elPRVXe0d7/zmjhi6tuz0aMilYQ4jNHM1U
Q/6ZeYb+LAp2rdzf/0xfHadUFtcYRiiidZNDluVJdXTqNSo9sVEBw6f8Za3j
1HHDEHfbukk5bM9Z/Oj5L3UcTfSSaUmSxTrdydj9Ejy8F8fZeMZOBvN8t6G7
Lg+zdF+aCqSlcc8BxeG6rTxsON1eo/ROEievlr9NOsPDLcy4zwccJJA38Pnb
z7s8fH6Z7WShII6m87wOJibzcG1jXLR3qSguTRwP3lnAQ1FeXFh4qAiWnylO
af7NQ7vSDPUtcdNk4tHAm9adPOzav8szc94U6ZD2Tv3JGA9pNl7tT16Nk0eP
JCX8ENPAdTcDU4z1RsmUlaey+2U1sCw83fd7xhC5KiF+0T9FDdyf8OPMPdMB
MgnNWBNKGnjuwXLTu/d6SanEO/91KWigpUJGl+XLDnKJ2vhwlbQGhl80Sir5
/Jeslip0+TzDw3ldn8f9mutJDVeddWlDPKwdc9P9qVhJTrzu7XjTwsNed/vv
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
irtMAuNTVPMLD6tij2rKKXdVcTxy4dUnyQBVIY4j5a3ExXCzXe6BMKH+i5tS
3V/YIYJ/vy1OOZauigotNt+GY2bII7v0Rh6WquLKLQmt427/SMdlP56rN6ii
pYb24e/EJDl1Yce1oT5VrB3ddOyV4jh5PY70EkyrotK7bvz4Z4TkLdWNTpRR
w/FGRiORNERGDu7YEURRw5jTXVPbzw2Qr172zSlhqGFd1rM2gw19pLcJs+w4
Ww3LplU36Oh1kckOGZs9hDZhJpVkXNlKnq2Q+1gvjD/jZuYj6d1EbjxVeS1N
mK9I7OHyfJtasmL/j+MrhOstnOP9eG3/T3Kud2lhypQqpknsToxaVkByJFue
6fWo4oNT37yfOEaTIw0FO3OqVfGxg6K5elUmMV6Wd2z7F1Uc+2h1j7vwGzEY
XPVB7I0qqizbf8FkRxXhJ5NvUXhXFd0Wb6F0GzYQH//KnEk+p4rV7SYPxXL/
Ei2M0S85dqro+eGjzCnoIIrfpClMrlBF721rdn1P6yHc1Sw3HKWq4jmN5tGd
t/uJQ26PkNPOxYb/dptv+zxING5y7pHL4eLbz4Re4tAwMdBvEWAeykWd9UEU
TaFuufJsZ9NHHS5mZr4LfbN/itB+R9NSGeXg0896tw+enybcOuXzS3I4KPpn
+awscxHYMZl1+OU6DobwogLHbcXg1UfbgCYpDtp8CHWa2SIOO/YVrkz6xMbQ
qBqjXzYSMD1/6QtlQzYapl9RilwjBZZzW0U/9rLQZiw6zklfGm7cb+DqxLJw
WbngfMxcGfi95FGStRQLt58vrCD+yUK6YOo/8TcMVJ1o+ZLvpQhhV9zvPdzO
wOb25Z/0rJXAcU/ITpMJOp5wueDrp6ks1A0/nzavoqNN6Pzdn3ZToO7fq8Pj
VTTcE0uaK+ZQwOvxroSNp2l4ZYOx1xweFbQM5feWJargv6PL3j6voEKz74C4
pokKLg05Yiu7RAVuKOv4VP+ionFg+nFuoArcvrvE9+s/CjJNb0wbLaKBw/J6
cXYIBf9E1IqYetMg13fvNnENCnKfnXvcUEwD1W7H+DJPJXzjsP3ibwc66Adl
W0wGK2LrcedN857RgWvrOftLjAJKj+aW/OugA9Pw7LXUL3JYpP7n42xXBtyw
fX1IoVIWX/+mfD75jAEzD7zUT/yVQVXJkgeLGxhQyZUu/jQhhZEvVkaLbGZC
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
AQX0P8RRNdc=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{-8.719991609065657, 
            9.942225203976815}, {-9.92806326863572, 9.950997561336003}}, 
           "Frame" -> {{True, False}, {True, False}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 432}, "Axes" -> {False, False}, "AspectRatio" -> 
           Automatic, "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[0.5, 0, 0.5]]}, 
           "HighlightLabelingFunctions" -> <|
            "CoordinatesToolOptions" -> Identity, 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ParametricPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-8.719991609065657, 
           9.942225203976815}, {-9.92806326863572, 9.950997561336003}}, 
          "Frame" -> {{True, False}, {True, False}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {360, 432}, "Axes" -> {False, False}, "AspectRatio" -> 
          Automatic, "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.5, 0, 0.5]]}, 
          "HighlightLabelingFunctions" -> <|
           "CoordinatesToolOptions" -> Identity, 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ParametricPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.5, 0, 0.5]], 
          Line[CompressedData["
1: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
AvNq+sl0t+sKD+wEuObj1caJ+iGSojuxmGcqwH9SnaehdpS8szzp+R1tYT17
Q2YZlk+QxJhxjJSiAK91qp28kf+PbOvKuHCmVxMHopQKTuwQwSqfV1U9/2mi
3LG+PQ+Xi2NeZ1SBwg1NHDTZcLYwUgL3fPdPz3XWxO/xKS+/i0uhXWhb1/3V
msiR0Yv8gTJYK2nL+dHBx/cfbKx82HJYZiCjsDaHj8lWxxTcXOVxGe/LorEQ
Pi6+vGvhNTGhzjU80m6hy8dz05nrjq1TxlbTosTxYQ3sabtzzM+UgvM+vlgy
N0gDN8HSIxNnqXiRWvhn4WseejjjaTGKCvrZhrctMOJhWe/qkfmxKvjwPtOD
+KyOj2N234vPo2G8h6nr4Hc1jH77L6bOko73d7vdyNiihp/mNoxLVNBR39wm
qLlMFfesuTz8t4aBHb8f30gu5OJh46KHN/Ywsakw5J6XCRclxiWD+iuYuDHE
P2I0lYPL06IbKz6xkK0iM7D7IRvbNnruXLeCjVJpWWZH5diocUxlhY1Qf188
63XJ5wwLRYrFitRPc9B1/uODipuYqH1AcPN7FQd3WTfdf5nCwKp22k/JlVwM
fsN4F8dh4LKYEseqXi4qfrg42FdPw1UtHyOPm6miZ+negmOmNIz61QAn76ni
0GrG7zvRKjjvJ6U8cbEa/tg2t3elPRVXe0d7/zmjhi6tuz0aMilYQ4jNHM1U
Q/6ZeYb+LAp2rdzf/0xfHadUFtcYRiiidZNDluVJdXTqNSo9sVEBw6f8Za3j
1HHDEHfbukk5bM9Z/Oj5L3UcTfSSaUmSxTrdydj9Ejy8F8fZeMZOBvN8t6G7
Lg+zdF+aCqSlcc8BxeG6rTxsON1eo/ROEievlr9NOsPDLcy4zwccJJA38Pnb
z7s8fH6Z7WShII6m87wOJibzcG1jXLR3qSguTRwP3lnAQ1FeXFh4qAiWnylO
af7NQ7vSDPUtcdNk4tHAm9adPOzav8szc94U6ZD2Tv3JGA9pNl7tT16Nk0eP
JCX8ENPAdTcDU4z1RsmUlaey+2U1sCw83fd7xhC5KiF+0T9FDdyf8OPMPdMB
MgnNWBNKGnjuwXLTu/d6SanEO/91KWigpUJGl+XLDnKJ2vhwlbQGhl80Sir5
/Jeslip0+TzDw3ldn8f9mutJDVeddWlDPKwdc9P9qVhJTrzu7XjTwsNed/vv
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
irtMAuNTVPMLD6tij2rKKXdVcTxy4dUnyQBVIY4j5a3ExXCzXe6BMKH+i5tS
3V/YIYJ/vy1OOZauigotNt+GY2bII7v0Rh6WquLKLQmt427/SMdlP56rN6ii
pYb24e/EJDl1Yce1oT5VrB3ddOyV4jh5PY70EkyrotK7bvz4Z4TkLdWNTpRR
w/FGRiORNERGDu7YEURRw5jTXVPbzw2Qr172zSlhqGFd1rM2gw19pLcJs+w4
Ww3LplU36Oh1kckOGZs9hDZhJpVkXNlKnq2Q+1gvjD/jZuYj6d1EbjxVeS1N
mK9I7OHyfJtasmL/j+MrhOstnOP9eG3/T3Kud2lhypQqpknsToxaVkByJFue
6fWo4oNT37yfOEaTIw0FO3OqVfGxg6K5elUmMV6Wd2z7F1Uc+2h1j7vwGzEY
XPVB7I0qqizbf8FkRxXhJ5NvUXhXFd0Wb6F0GzYQH//KnEk+p4rV7SYPxXL/
Ei2M0S85dqro+eGjzCnoIIrfpClMrlBF721rdn1P6yHc1Sw3HKWq4jmN5tGd
t/uJQ26PkNPOxYb/dptv+zxING5y7pHL4eLbz4Re4tAwMdBvEWAeykWd9UEU
TaFuufJsZ9NHHS5mZr4LfbN/itB+R9NSGeXg0896tw+enybcOuXzS3I4KPpn
+awscxHYMZl1+OU6DobwogLHbcXg1UfbgCYpDtp8CHWa2SIOO/YVrkz6xMbQ
qBqjXzYSMD1/6QtlQzYapl9RilwjBZZzW0U/9rLQZiw6zklfGm7cb+DqxLJw
WbngfMxcGfi95FGStRQLt58vrCD+yUK6YOo/8TcMVJ1o+ZLvpQhhV9zvPdzO
wOb25Z/0rJXAcU/ITpMJOp5wueDrp6ks1A0/nzavoqNN6Pzdn3ZToO7fq8Pj
VTTcE0uaK+ZQwOvxroSNp2l4ZYOx1xweFbQM5feWJargv6PL3j6voEKz74C4
pokKLg05Yiu7RAVuKOv4VP+ionFg+nFuoArcvrvE9+s/CjJNb0wbLaKBw/J6
cXYIBf9E1IqYetMg13fvNnENCnKfnXvcUEwD1W7H+DJPJXzjsP3ibwc66Adl
W0wGK2LrcedN857RgWvrOftLjAJKj+aW/OugA9Pw7LXUL3JYpP7n42xXBtyw
fX1IoVIWX/+mfD75jAEzD7zUT/yVQVXJkgeLGxhQyZUu/jQhhZEvVkaLbGZC
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
AQX0P8RRNdc=
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{-8.719991609065657, 
         9.942225203976815}, {-9.92806326863572, 9.950997561336003}}, 
        "Frame" -> {{True, False}, {True, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 432}, "Axes" -> {False, False}, "AspectRatio" -> 
        Automatic, "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.5, 0, 0.5]]}, 
        "HighlightLabelingFunctions" -> <|
         "CoordinatesToolOptions" -> Identity, 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ParametricPlot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
   {GrayLevel[0], DiskBox[{0, 0}, 2]}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"\\!\\(\\*StyleBox[\\\"r\\\",FontSlant->\\\"Italic\\\"]\\)\[ThinSpace]\
cos\[ThinSpace]\[CurlyPhi][\\!\\(\\*StyleBox[\\\"M\\\",FontSlant->\\\"Italic\\\
\"]\\)]\"", HoldForm], TraditionalForm], 
     FormBox[
      TagBox["\"\"", HoldForm], TraditionalForm]}, {
     FormBox[
      TagBox[
      "\"\\!\\(\\*StyleBox[\\\"r\\\",FontSlant->\\\"Italic\\\"]\\)\[ThinSpace]\
sin\[ThinSpace]\[CurlyPhi][\\!\\(\\*StyleBox[\\\"M\\\",FontSlant->\\\"Italic\\\
\"]\\)]\"", HoldForm], TraditionalForm], 
     FormBox[
      TagBox["\"\"", HoldForm], TraditionalForm]}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontSize -> 20, FontFamily -> "Times", 
    GrayLevel[0]},
  Method->{
   "ShrinkWrap" -> True, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-8.719991609065657, 9.942225203976815}, {-9.92806326863572, 
   9.950997561336003}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.89945298291638*^9, 3.8994534220271606`*^9, 3.899453471838519*^9, 
   3.899453583843626*^9, 3.899455960399063*^9, {3.899456286607139*^9, 
   3.899456315851968*^9}, 3.8994563546320667`*^9, 3.899456814853009*^9, 
   3.899459164530191*^9, 3.899531578505414*^9, 3.8995316904168787`*^9, 
   3.900143703564005*^9, 3.9001458808125134`*^9, 3.9076523443499393`*^9, 
   3.9077601426917543`*^9},
 CellLabel->
  "Out[500]=",ExpressionUUID->"8d832f8e-b8cc-40e1-ba87-98dfb7941008"],

Cell[BoxData["\<\"/Users/vojtechwitzany/Documents/GitHub/Exact-Solution-\
Spinning-particle-Schwarzschild/SpSchwBirdsEye.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.89945298291638*^9, 3.8994534220271606`*^9, 3.899453471838519*^9, 
   3.899453583843626*^9, 3.899455960399063*^9, {3.899456286607139*^9, 
   3.899456315851968*^9}, 3.8994563546320667`*^9, 3.899456814853009*^9, 
   3.899459164530191*^9, 3.899531578505414*^9, 3.8995316904168787`*^9, 
   3.900143703564005*^9, 3.9001458808125134`*^9, 3.9076523443499393`*^9, 
   3.907760143087994*^9},
 CellLabel->
  "Out[501]=",ExpressionUUID->"d70ddd22-10d8-4da2-9452-88503c7016b6"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Meridional", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"r", " ", 
              RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}]}], ",", 
             RowBox[{"r", " ", 
              RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}]}]}], "}"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"t", "->", 
              RowBox[{"t0", "+", 
               RowBox[{"sp", " ", "\[Delta]t"}]}]}], ",", 
             RowBox[{"r", "->", 
              RowBox[{"r0", "+", 
               RowBox[{"sp", " ", "\[Delta]r"}]}]}], ",", 
             RowBox[{"\[CurlyPhi]", " ", "->", " ", 
              RowBox[{"\[CurlyPhi]0", " ", "+", " ", 
               RowBox[{"sp", " ", "\[Delta]\[CurlyPhi]"}]}]}], ",", 
             RowBox[{"\[CurlyTheta]", "->", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "2"}], "+", 
               "\[Delta]\[CurlyTheta]"}]}]}], "}"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Chi]0", "->", "\[Chi]0qr"}], "}"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"qr", "->", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalUpsilon]r0", "+", 
               RowBox[{"sp", " ", "\[Delta]\[CapitalUpsilon]r"}]}], ")"}], 
             " ", "\[Lambda]"}]}], ",", 
           RowBox[{"q\[CurlyPhi]", " ", "->", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalUpsilon]\[CurlyPhi]0", "+", 
               RowBox[{"sp", " ", "\[Delta]\[CapitalUpsilon]\[CurlyPhi]"}]}], 
              ")"}], " ", "\[Lambda]"}]}], ",", 
           RowBox[{"q\[Psi]", "->", 
            RowBox[{"\[CapitalUpsilon]\[Psi]0", " ", "\[Lambda]"}]}]}], 
          "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", "->", "pp"}], ",", 
          RowBox[{"e", "->", "ep"}], ",", 
          RowBox[{"s", "->", "smp"}], ",", 
          RowBox[{"sp", "->", "spp"}]}], "}"}]}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "0", ",", 
        RowBox[{
         RowBox[{"PlotCyc", " ", 
          FractionBox[
           RowBox[{"2", "\[Pi]"}], 
           RowBox[{"(", 
            RowBox[{"\[CapitalUpsilon]\[CurlyPhi]0", "+", 
             RowBox[{"sp", " ", "\[Delta]\[CapitalUpsilon]\[CurlyPhi]"}]}], 
            ")"}]]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "->", "pp"}], ",", 
           RowBox[{"e", "->", "ep"}], ",", 
           RowBox[{"s", "->", "smp"}], ",", 
           RowBox[{"sp", "->", "spp"}]}], "}"}]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", "Purple"}], ",", 
      RowBox[{"Ticks", "->", "None"}], ",", 
      RowBox[{"Axes", "->", "False"}], ",", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*StyleBox[\"r\",FontSlant->\"Italic\"]\)\[ThinSpace]sin\
\[ThinSpace]\[CurlyTheta][\!\(\*StyleBox[\"M\",FontSlant->\"Italic\"]\)]\>\"",
          ",", "\"\<\!\(\*StyleBox[\"r\",FontSlant->\"Italic\"]\)\[ThinSpace]\
cos\[ThinSpace]\[CurlyTheta][\!\(\*StyleBox[\"M\",FontSlant->\"Italic\"]\)]\>\
\"", ",", "\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
      RowBox[{"FrameTicks", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.5"}], ",", "0", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "10"}], "}"}], ",", "None", ",", "None"}], 
        "}"}]}], ",", 
      RowBox[{"LabelStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FontSize", "->", "16"}], ",", 
         RowBox[{"FontFamily", "->", "\"\<Times\>\""}], ",", "Black"}], 
        "}"}]}], ",", 
      RowBox[{"Method", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<ShrinkWrap\>\"", "->", "True"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}]}], "}"}], "]"}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<SpSchwMeridional.pdf\>\""}], ",", "Meridional"}], "]"}], "//", 
  "Quiet"}]}], "Input",
 CellChangeTimes->{{3.899450898886588*^9, 3.89945095614196*^9}, {
   3.899451114989605*^9, 3.899451117399693*^9}, {3.8994511490999823`*^9, 
   3.899451166196763*^9}, {3.899451257235427*^9, 3.89945128810594*^9}, {
   3.8994513392422132`*^9, 3.899451357872766*^9}, {3.899451398126931*^9, 
   3.899451428798518*^9}, {3.899451492316065*^9, 3.89945149346975*^9}, {
   3.899451589628129*^9, 3.899451602447603*^9}, {3.899451635195657*^9, 
   3.89945164741083*^9}, 3.8994517911248283`*^9, {3.899451938181057*^9, 
   3.8994519601127567`*^9}, {3.899452102208276*^9, 3.89945214798314*^9}, {
   3.8994523320452023`*^9, 3.899452336970687*^9}, 3.899452410177084*^9, {
   3.899452621968149*^9, 3.89945294924721*^9}, {3.899453557533823*^9, 
   3.8994535578971567`*^9}, {3.8994537518970327`*^9, 3.899453805941009*^9}, {
   3.8994542278580103`*^9, 3.899454228935339*^9}, {3.899456329147429*^9, 
   3.8994564141344748`*^9}, {3.899456461179799*^9, 3.8994564684721327`*^9}, {
   3.899456522900098*^9, 3.899456523074984*^9}, {3.89945657968962*^9, 
   3.899456579839505*^9}, {3.89945666091086*^9, 3.8994566638578663`*^9}, {
   3.899456709922123*^9, 3.899456720804551*^9}, {3.8994590936646767`*^9, 
   3.89945909457543*^9}, {3.900145803552239*^9, 3.9001458126893663`*^9}, {
   3.900145950655444*^9, 3.900145952585938*^9}},
 CellLabel->
  "In[502]:=",ExpressionUUID->"2f724e66-74ec-4c86-8362-005aaab8b52d"],

Cell[BoxData[
 GraphicsBox[{
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.5, 0, 0.5], AbsoluteThickness[2], Opacity[1.], FaceForm[
          Opacity[0.3]], LineBox[CompressedData["
1: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
R6+4X630ZeGTgq/KnnmQ378Ru5l5n4U1Lw333fOhgVpgRZzSExZuv9jK7XeX
Bkk815OeJrLwgX0pBmGhNKjUk6XvfUH+HrGlKzOSBkWuquvXZLBwkU+3fXE8
DU4ZPbs9mMPCunMteb3PyPnd7ty7iQ8sfCVddnjdGxrY7MgrU/7IwkIqd8TN
cmignxaLIzAL7+o0c8wtIPd37///BCD9mHP5jGwZDVylNZbGK1jY1setLaWG
BvG/1YIZn1j4mHCnikYjDW4O20f9I/nO1oW1fW00OLjHyWwfyR7PH6XE9tEg
XWphdS65nnXy2PzFQRr8lfs1ZljKwkb+a7YbjtMgVtlCT7iYhX8/e3Bh/xwN
wowSz/7JZ+FohVe5Rks0KFe89EAgl4VbOTrbnHlJ/wMDm/Zlkutdrp5LERIB
04zER0/TWPjalzOyIzQRkF9Rspkg/aPWt4IqfRkR+HhhmUNdFAv3LiouK9gk
AtQfjQWRoSx8Py2OvWebCJQvnIry92dhQ+XI0I5dIlB/JdzviQcLN8nuXHdv
rwis0jvNU3+ZhRd9fyxXMBGBSMP2tbHHWdi4USWRYikCtuanP28/wMKWG+46
itqLQMlW6YAxsl5+rzOfsnIXAanpfYmVZH0tczMemUgQgS+P+XmnqpnY6syY
yX3Sv5lvS+B+kMPEFgOeodrZIqDV3SOvF8/E31Y3fuj9JAKP24XDKZeZuPjA
9nzln6R/u5povGkFE7cGbPa4PicCZ5pcPhYOMvAHm6qQNi5R8BXd6HqpjoEV
KoN7u6miUNI5c3vLAwa+IubxdkZXFMY+X6vdzsfAQ/983ab/E4Vdhmzz0No+
fIgvcGrVKVHo08o1+e1D9ofeJ3s9nESBR33aI4bTiyvHdu1ziBeFSKkhzS2v
erB/UQKR8E8Uno8Hyn391onz3GO5xfnFIMSh4PZJh04cq2+jlksTgyv7BBXG
Fjqw6p2LMZrbxeDXPono09Id+Dgnb/6eoxgIz8/vuG7Qhp9Ivmk+yhQD+bPO
99oNWvCqhoXUs0xxKLjVt/u66Ce8YrWWsv6kOLxXMVc0aC/HvHWNjw4tl4DT
Pj7CrhFl+KdZZl3iRglYXr03b3ZVCc5qXa9+z1ECxNQVdvI9eocTl/1zNfwn
Aad65rWDA+4gW/u2rZ2qUvCpg1epZK4aCbR5CUXvkwJL/v2dScdrUadtDc3h
pBTs+4/+oeRtHdp9r3Ty0C0pWJ12SP3chc/IU3UuY6pGCmKHXK/fu9SEVPYt
uZfaScOJK0ni75pbkevs+7aXHtJwYZ1mzHOvNqTx1KE1+YE0eCk/p/Ntakdc
i1Ihn95Lw+bpg0GzNztQpWodzWa5DPCaVWYTIt3I1uqK29sTMuCzqYwWRM7L
3wrqXmywkoEKk4KOIgYDSS8uB28HGRC3uqugt4WJ/AR3Ftt6y8BvnY4n+6uZ
aNV7t9W2r2TA+c3Sd7VfLGRIj84efScDQjV2u+00+1GVj3GBR4kMTIa94Cv0
7kft26ob4ltkYFbb3z9LYAAtVY0mLy7IQOCvAAcRETbC9T48cXyy4NRNeZB6
io3yrvqf0FwvCy9b4mxlotlomgsZu26ShYdFLb8+rf+Btho8yxk0loWdNo4T
6xZ+oDthAefuWMrC3zjNVaY7BtGLkSsCohdk4cln218mDoMo8SFvFHjJgqlD
aeO55kHU9vVCzbk0WQBFm96N4UMo3z36qNg7WfixpyIotmIIyShxhmpKZKGK
O2m/1tQQEv5VnLamVRZ2qBVqdv43jI6nGrs9Z8oC8f3w2brrw0jjtHay6k9Z
uDv+5EZl4jB6+esiKK6gg8hV55rioWG02G25N0KIDjbHdy9P5+cgMVmp0kkx
OgjN8WjeVeIgzZqi+X3ydNCmbjY8eJCD3tHcVe5uo4PvyTmTIVsO6v7wLbxI
mw43v4aEWXlxUJBa6jmGPh0eOnRfeh3BQdc+y7ZNG9NB1y8qFL/ioPDyvxK/
LenApyBaF/ORgyy7rtkPX6BD6VELpe2fOSjO+RKz2oUOTVdHJgK6OEi5IaQg
/DYdxqO/xt8f5CBRrv9EDt2jwxovL5buBAeliYhv5Dymw5e3+MPT3xwU8uH6
SrdEOvTuSDj6fIGDLOT4e4Ze0iHr/W76wWUjKC7v8+f97+iQFPBx4C7J4y8V
ft8tpsOR1PWRZxc5iMdwjWd2NR0ax9uu189zUG68smtpEx3SowWoNZMc1ELn
XpbbRQcume6DxsMc9EZjvVYIm9xP96lt53s4aDKIR+fAOB02aEijFV85SGCw
mc78TYeC0r+qCiUcdPPI0Ioz3AQYK3tTv7zmoGk583+FAgS0HAs8Nkfmyy9J
mD63gYCes7lRybfI/OqNhq6VIoDQ6J2qt+agU6GL5qsUCFiz1b7abT8H6V/J
TenZSsDuQ3frE+U4qICLz+uBJgHv/oWu0+fmIE6H+albhwhIMSq5TssbRmsv
tTwqOEZA/RGGt+79YTS4Z0/jl9MEqH+oTR07O4y+HT+yvciagKNLw9Uy24bR
K8Ub3V4XCUj96iPXuTSE7I8S45SrBNCT9U5LNgyh6Iuch77uBEiGL9j+jBxC
vMlGcq2BBJx1V/2uSx9CNilDl4seEOBRJSn+ZWAQzf5bmr0aQcDTcKPZ2eeD
6Gmq7tTvWAIG+KsOldkMoh2fv8QYJROwK6f9tJoUeR6cXDe6pRGgmCvUYNT2
A9VGML9dyCBARYb5Qjr0B+IUemZ+yCcg8It7+K9pNroVfdxxbQkBJuWDD5ee
s9H37OyrOysISEieauo2ZiPJxAaqfA0BNGmW5sPFAcSrNpfb10DAEG1+Jf3l
AFot2PzGpomA1qYr32ONBtA45ZZV5ncCtsgeSlw+04/kG8t0yjsIYF3nyraL
7kfEFYPchB4CTtN35NXt6kf/A8JI5kk=
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[0.5, 0, 0.5]], 
             Line[CompressedData["
1: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
R6+4X630ZeGTgq/KnnmQ378Ru5l5n4U1Lw333fOhgVpgRZzSExZuv9jK7XeX
Bkk815OeJrLwgX0pBmGhNKjUk6XvfUH+HrGlKzOSBkWuquvXZLBwkU+3fXE8
DU4ZPbs9mMPCunMteb3PyPnd7ty7iQ8sfCVddnjdGxrY7MgrU/7IwkIqd8TN
cmignxaLIzAL7+o0c8wtIPd37///BCD9mHP5jGwZDVylNZbGK1jY1setLaWG
BvG/1YIZn1j4mHCnikYjDW4O20f9I/nO1oW1fW00OLjHyWwfyR7PH6XE9tEg
XWphdS65nnXy2PzFQRr8lfs1ZljKwkb+a7YbjtMgVtlCT7iYhX8/e3Bh/xwN
wowSz/7JZ+FohVe5Rks0KFe89EAgl4VbOTrbnHlJ/wMDm/Zlkutdrp5LERIB
04zER0/TWPjalzOyIzQRkF9Rspkg/aPWt4IqfRkR+HhhmUNdFAv3LiouK9gk
AtQfjQWRoSx8Py2OvWebCJQvnIry92dhQ+XI0I5dIlB/JdzviQcLN8nuXHdv
rwis0jvNU3+ZhRd9fyxXMBGBSMP2tbHHWdi4USWRYikCtuanP28/wMKWG+46
itqLQMlW6YAxsl5+rzOfsnIXAanpfYmVZH0tczMemUgQgS+P+XmnqpnY6syY
yX3Sv5lvS+B+kMPEFgOeodrZIqDV3SOvF8/E31Y3fuj9JAKP24XDKZeZuPjA
9nzln6R/u5povGkFE7cGbPa4PicCZ5pcPhYOMvAHm6qQNi5R8BXd6HqpjoEV
KoN7u6miUNI5c3vLAwa+IubxdkZXFMY+X6vdzsfAQ/983ab/E4Vdhmzz0No+
fIgvcGrVKVHo08o1+e1D9ofeJ3s9nESBR33aI4bTiyvHdu1ziBeFSKkhzS2v
erB/UQKR8E8Uno8Hyn391onz3GO5xfnFIMSh4PZJh04cq2+jlksTgyv7BBXG
Fjqw6p2LMZrbxeDXPono09Id+Dgnb/6eoxgIz8/vuG7Qhp9Ivmk+yhQD+bPO
99oNWvCqhoXUs0xxKLjVt/u66Ce8YrWWsv6kOLxXMVc0aC/HvHWNjw4tl4DT
Pj7CrhFl+KdZZl3iRglYXr03b3ZVCc5qXa9+z1ECxNQVdvI9eocTl/1zNfwn
Aad65rWDA+4gW/u2rZ2qUvCpg1epZK4aCbR5CUXvkwJL/v2dScdrUadtDc3h
pBTs+4/+oeRtHdp9r3Ty0C0pWJ12SP3chc/IU3UuY6pGCmKHXK/fu9SEVPYt
uZfaScOJK0ni75pbkevs+7aXHtJwYZ1mzHOvNqTx1KE1+YE0eCk/p/Ntakdc
i1Ihn95Lw+bpg0GzNztQpWodzWa5DPCaVWYTIt3I1uqK29sTMuCzqYwWRM7L
3wrqXmywkoEKk4KOIgYDSS8uB28HGRC3uqugt4WJ/AR3Ftt6y8BvnY4n+6uZ
aNV7t9W2r2TA+c3Sd7VfLGRIj84efScDQjV2u+00+1GVj3GBR4kMTIa94Cv0
7kft26ob4ltkYFbb3z9LYAAtVY0mLy7IQOCvAAcRETbC9T48cXyy4NRNeZB6
io3yrvqf0FwvCy9b4mxlotlomgsZu26ShYdFLb8+rf+Btho8yxk0loWdNo4T
6xZ+oDthAefuWMrC3zjNVaY7BtGLkSsCohdk4cln218mDoMo8SFvFHjJgqlD
aeO55kHU9vVCzbk0WQBFm96N4UMo3z36qNg7WfixpyIotmIIyShxhmpKZKGK
O2m/1tQQEv5VnLamVRZ2qBVqdv43jI6nGrs9Z8oC8f3w2brrw0jjtHay6k9Z
uDv+5EZl4jB6+esiKK6gg8hV55rioWG02G25N0KIDjbHdy9P5+cgMVmp0kkx
OgjN8WjeVeIgzZqi+X3ydNCmbjY8eJCD3tHcVe5uo4PvyTmTIVsO6v7wLbxI
mw43v4aEWXlxUJBa6jmGPh0eOnRfeh3BQdc+y7ZNG9NB1y8qFL/ioPDyvxK/
LenApyBaF/ORgyy7rtkPX6BD6VELpe2fOSjO+RKz2oUOTVdHJgK6OEi5IaQg
/DYdxqO/xt8f5CBRrv9EDt2jwxovL5buBAeliYhv5Dymw5e3+MPT3xwU8uH6
SrdEOvTuSDj6fIGDLOT4e4Ze0iHr/W76wWUjKC7v8+f97+iQFPBx4C7J4y8V
ft8tpsOR1PWRZxc5iMdwjWd2NR0ax9uu189zUG68smtpEx3SowWoNZMc1ELn
XpbbRQcume6DxsMc9EZjvVYIm9xP96lt53s4aDKIR+fAOB02aEijFV85SGCw
mc78TYeC0r+qCiUcdPPI0Ioz3AQYK3tTv7zmoGk583+FAgS0HAs8Nkfmyy9J
mD63gYCes7lRybfI/OqNhq6VIoDQ6J2qt+agU6GL5qsUCFiz1b7abT8H6V/J
TenZSsDuQ3frE+U4qICLz+uBJgHv/oWu0+fmIE6H+albhwhIMSq5TssbRmsv
tTwqOEZA/RGGt+79YTS4Z0/jl9MEqH+oTR07O4y+HT+yvciagKNLw9Uy24bR
K8Ub3V4XCUj96iPXuTSE7I8S45SrBNCT9U5LNgyh6Iuch77uBEiGL9j+jBxC
vMlGcq2BBJx1V/2uSx9CNilDl4seEOBRJSn+ZWAQzf5bmr0aQcDTcKPZ2eeD
6Gmq7tTvWAIG+KsOldkMoh2fv8QYJROwK6f9tJoUeR6cXDe6pRGgmCvUYNT2
A9VGML9dyCBARYb5Qjr0B+IUemZ+yCcg8It7+K9pNroVfdxxbQkBJuWDD5ee
s9H37OyrOysISEieauo2ZiPJxAaqfA0BNGmW5sPFAcSrNpfb10DAEG1+Jf3l
AFot2PzGpomA1qYr32ONBtA45ZZV5ncCtsgeSlw+04/kG8t0yjsIYF3nyraL
7kfEFYPchB4CTtN35NXt6kf/A8JI5kk=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{5.356985781319494, 
            9.994650036427327}, {-0.7581131577506749, 0.8921862577409094}}, 
           "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {5.356985781319494, 0}, "ImageSize" -> {360, 432}, 
           "Axes" -> {False, False}, "AspectRatio" -> Automatic, 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[0.5, 0, 0.5]]}, 
           "HighlightLabelingFunctions" -> <|
            "CoordinatesToolOptions" -> Identity, 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ParametricPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{5.356985781319494, 
           9.994650036427327}, {-0.7581131577506749, 0.8921862577409094}}, 
          "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {5.356985781319494, 0}, "ImageSize" -> {360, 432}, 
          "Axes" -> {False, False}, "AspectRatio" -> Automatic, 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.5, 0, 0.5]]}, 
          "HighlightLabelingFunctions" -> <|
           "CoordinatesToolOptions" -> Identity, 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ParametricPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.5, 0, 0.5]], 
          Line[CompressedData["
1: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
R6+4X630ZeGTgq/KnnmQ378Ru5l5n4U1Lw333fOhgVpgRZzSExZuv9jK7XeX
Bkk815OeJrLwgX0pBmGhNKjUk6XvfUH+HrGlKzOSBkWuquvXZLBwkU+3fXE8
DU4ZPbs9mMPCunMteb3PyPnd7ty7iQ8sfCVddnjdGxrY7MgrU/7IwkIqd8TN
cmignxaLIzAL7+o0c8wtIPd37///BCD9mHP5jGwZDVylNZbGK1jY1setLaWG
BvG/1YIZn1j4mHCnikYjDW4O20f9I/nO1oW1fW00OLjHyWwfyR7PH6XE9tEg
XWphdS65nnXy2PzFQRr8lfs1ZljKwkb+a7YbjtMgVtlCT7iYhX8/e3Bh/xwN
wowSz/7JZ+FohVe5Rks0KFe89EAgl4VbOTrbnHlJ/wMDm/Zlkutdrp5LERIB
04zER0/TWPjalzOyIzQRkF9Rspkg/aPWt4IqfRkR+HhhmUNdFAv3LiouK9gk
AtQfjQWRoSx8Py2OvWebCJQvnIry92dhQ+XI0I5dIlB/JdzviQcLN8nuXHdv
rwis0jvNU3+ZhRd9fyxXMBGBSMP2tbHHWdi4USWRYikCtuanP28/wMKWG+46
itqLQMlW6YAxsl5+rzOfsnIXAanpfYmVZH0tczMemUgQgS+P+XmnqpnY6syY
yX3Sv5lvS+B+kMPEFgOeodrZIqDV3SOvF8/E31Y3fuj9JAKP24XDKZeZuPjA
9nzln6R/u5povGkFE7cGbPa4PicCZ5pcPhYOMvAHm6qQNi5R8BXd6HqpjoEV
KoN7u6miUNI5c3vLAwa+IubxdkZXFMY+X6vdzsfAQ/983ab/E4Vdhmzz0No+
fIgvcGrVKVHo08o1+e1D9ofeJ3s9nESBR33aI4bTiyvHdu1ziBeFSKkhzS2v
erB/UQKR8E8Uno8Hyn391onz3GO5xfnFIMSh4PZJh04cq2+jlksTgyv7BBXG
Fjqw6p2LMZrbxeDXPono09Id+Dgnb/6eoxgIz8/vuG7Qhp9Ivmk+yhQD+bPO
99oNWvCqhoXUs0xxKLjVt/u66Ce8YrWWsv6kOLxXMVc0aC/HvHWNjw4tl4DT
Pj7CrhFl+KdZZl3iRglYXr03b3ZVCc5qXa9+z1ECxNQVdvI9eocTl/1zNfwn
Aad65rWDA+4gW/u2rZ2qUvCpg1epZK4aCbR5CUXvkwJL/v2dScdrUadtDc3h
pBTs+4/+oeRtHdp9r3Ty0C0pWJ12SP3chc/IU3UuY6pGCmKHXK/fu9SEVPYt
uZfaScOJK0ni75pbkevs+7aXHtJwYZ1mzHOvNqTx1KE1+YE0eCk/p/Ntakdc
i1Ihn95Lw+bpg0GzNztQpWodzWa5DPCaVWYTIt3I1uqK29sTMuCzqYwWRM7L
3wrqXmywkoEKk4KOIgYDSS8uB28HGRC3uqugt4WJ/AR3Ftt6y8BvnY4n+6uZ
aNV7t9W2r2TA+c3Sd7VfLGRIj84efScDQjV2u+00+1GVj3GBR4kMTIa94Cv0
7kft26ob4ltkYFbb3z9LYAAtVY0mLy7IQOCvAAcRETbC9T48cXyy4NRNeZB6
io3yrvqf0FwvCy9b4mxlotlomgsZu26ShYdFLb8+rf+Btho8yxk0loWdNo4T
6xZ+oDthAefuWMrC3zjNVaY7BtGLkSsCohdk4cln218mDoMo8SFvFHjJgqlD
aeO55kHU9vVCzbk0WQBFm96N4UMo3z36qNg7WfixpyIotmIIyShxhmpKZKGK
O2m/1tQQEv5VnLamVRZ2qBVqdv43jI6nGrs9Z8oC8f3w2brrw0jjtHay6k9Z
uDv+5EZl4jB6+esiKK6gg8hV55rioWG02G25N0KIDjbHdy9P5+cgMVmp0kkx
OgjN8WjeVeIgzZqi+X3ydNCmbjY8eJCD3tHcVe5uo4PvyTmTIVsO6v7wLbxI
mw43v4aEWXlxUJBa6jmGPh0eOnRfeh3BQdc+y7ZNG9NB1y8qFL/ioPDyvxK/
LenApyBaF/ORgyy7rtkPX6BD6VELpe2fOSjO+RKz2oUOTVdHJgK6OEi5IaQg
/DYdxqO/xt8f5CBRrv9EDt2jwxovL5buBAeliYhv5Dymw5e3+MPT3xwU8uH6
SrdEOvTuSDj6fIGDLOT4e4Ze0iHr/W76wWUjKC7v8+f97+iQFPBx4C7J4y8V
ft8tpsOR1PWRZxc5iMdwjWd2NR0ax9uu189zUG68smtpEx3SowWoNZMc1ELn
XpbbRQcume6DxsMc9EZjvVYIm9xP96lt53s4aDKIR+fAOB02aEijFV85SGCw
mc78TYeC0r+qCiUcdPPI0Ioz3AQYK3tTv7zmoGk583+FAgS0HAs8Nkfmyy9J
mD63gYCes7lRybfI/OqNhq6VIoDQ6J2qt+agU6GL5qsUCFiz1b7abT8H6V/J
TenZSsDuQ3frE+U4qICLz+uBJgHv/oWu0+fmIE6H+albhwhIMSq5TssbRmsv
tTwqOEZA/RGGt+79YTS4Z0/jl9MEqH+oTR07O4y+HT+yvciagKNLw9Uy24bR
K8Ub3V4XCUj96iPXuTSE7I8S45SrBNCT9U5LNgyh6Iuch77uBEiGL9j+jBxC
vMlGcq2BBJx1V/2uSx9CNilDl4seEOBRJSn+ZWAQzf5bmr0aQcDTcKPZ2eeD
6Gmq7tTvWAIG+KsOldkMoh2fv8QYJROwK6f9tJoUeR6cXDe6pRGgmCvUYNT2
A9VGML9dyCBARYb5Qjr0B+IUemZ+yCcg8It7+K9pNroVfdxxbQkBJuWDD5ee
s9H37OyrOysISEieauo2ZiPJxAaqfA0BNGmW5sPFAcSrNpfb10DAEG1+Jf3l
AFot2PzGpomA1qYr32ONBtA45ZZV5ncCtsgeSlw+04/kG8t0yjsIYF3nyraL
7kfEFYPchB4CTtN35NXt6kf/A8JI5kk=
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{5.356985781319494, 
         9.994650036427327}, {-0.7581131577506749, 0.8921862577409094}}, 
        "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {5.356985781319494, 0}, "ImageSize" -> {360, 432}, 
        "Axes" -> {False, False}, "AspectRatio" -> Automatic, "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.5, 0, 0.5]]}, 
        "HighlightLabelingFunctions" -> <|
         "CoordinatesToolOptions" -> Identity, 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ParametricPlot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
   {GrayLevel[0], DiskBox[{0, 0}, 2]}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{5.356985781319494, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"\\!\\(\\*StyleBox[\\\"r\\\",FontSlant->\\\"Italic\\\"]\\)\[ThinSpace]\
cos\[ThinSpace]\[CurlyTheta][\\!\\(\\*StyleBox[\\\"M\\\",FontSlant->\\\"\
Italic\\\"]\\)]\"", HoldForm], TraditionalForm], 
     FormBox[
      TagBox["\"\"", HoldForm], TraditionalForm]}, {
     FormBox[
      TagBox[
      "\"\\!\\(\\*StyleBox[\\\"r\\\",FontSlant->\\\"Italic\\\"]\\)\[ThinSpace]\
sin\[ThinSpace]\[CurlyTheta][\\!\\(\\*StyleBox[\\\"M\\\",FontSlant->\\\"\
Italic\\\"]\\)]\"", HoldForm], TraditionalForm], 
     FormBox[
      TagBox["\"\"", HoldForm], TraditionalForm]}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontSize -> 16, FontFamily -> "Times", 
    GrayLevel[0]},
  Method->{
   "ShrinkWrap" -> True, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{5.356985781319494, 9.994650036427327}, {-0.7581131577506749, 
   0.8921862577409094}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{None, None}]], "Output",
 CellChangeTimes->{3.899453010905994*^9, 3.8994536125323277`*^9, 
  3.8994564421215*^9, 3.899456551648447*^9, 3.899456609742175*^9, 
  3.899456842605054*^9, 3.899459123501745*^9, 3.900143736245489*^9, 
  3.900145906488902*^9, 3.9076523666645327`*^9, 3.907760166121285*^9},
 CellLabel->
  "Out[502]=",ExpressionUUID->"012094b2-bd6f-4425-8bbb-b9594a71bf20"],

Cell[BoxData["\<\"/Users/vojtechwitzany/Documents/GitHub/Exact-Solution-\
Spinning-particle-Schwarzschild/SpSchwMeridional.pdf\"\>"], "Output",
 CellChangeTimes->{3.899453010905994*^9, 3.8994536125323277`*^9, 
  3.8994564421215*^9, 3.899456551648447*^9, 3.899456609742175*^9, 
  3.899456842605054*^9, 3.899459123501745*^9, 3.900143736245489*^9, 
  3.900145906488902*^9, 3.9076523666645327`*^9, 3.907760166596051*^9},
 CellLabel->
  "Out[503]=",ExpressionUUID->"95086634-74b2-439e-aba7-537eedaf46d6"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"GenericView", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"r", " ", 
              RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}]}], ",", 
             RowBox[{"r", " ", 
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], 
              RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}]}], ",", 
             RowBox[{"r", " ", 
              RowBox[{"Cos", "[", "\[CurlyPhi]0", "]"}], 
              RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}]}]}], "}"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"t", "->", 
              RowBox[{"t0", "+", 
               RowBox[{"sp", " ", "\[Delta]t"}]}]}], ",", 
             RowBox[{"r", "->", 
              RowBox[{"r0", "+", 
               RowBox[{"sp", " ", "\[Delta]r"}]}]}], ",", 
             RowBox[{"\[CurlyPhi]", " ", "->", " ", 
              RowBox[{"\[CurlyPhi]0", " ", "+", " ", 
               RowBox[{"sp", " ", "\[Delta]\[CurlyPhi]"}]}]}], ",", 
             RowBox[{"\[CurlyTheta]", "->", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "2"}], "+", 
               "\[Delta]\[CurlyTheta]"}]}]}], "}"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Chi]0", "->", "\[Chi]0qr"}], "}"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"qr", "->", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalUpsilon]r0", "+", 
               RowBox[{"sp", " ", "\[Delta]\[CapitalUpsilon]r"}]}], ")"}], 
             " ", "\[Lambda]"}]}], ",", 
           RowBox[{"q\[CurlyPhi]", " ", "->", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"\[CapitalUpsilon]\[CurlyPhi]0", "+", 
               RowBox[{"sp", " ", "\[Delta]\[CapitalUpsilon]\[CurlyPhi]"}]}], 
              ")"}], " ", "\[Lambda]"}]}], ",", 
           RowBox[{"q\[Psi]", "->", 
            RowBox[{"\[CapitalUpsilon]\[Psi]0", " ", "\[Lambda]"}]}]}], 
          "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", "->", "pp"}], ",", 
          RowBox[{"e", "->", "ep"}], ",", 
          RowBox[{"s", "->", "smp"}], ",", 
          RowBox[{"sp", "->", "spp"}]}], "}"}]}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "0", ",", 
        RowBox[{
         RowBox[{"PlotCyc", " ", 
          FractionBox[
           RowBox[{"2", "\[Pi]"}], 
           RowBox[{"(", 
            RowBox[{"\[CapitalUpsilon]\[CurlyPhi]0", "+", 
             RowBox[{"sp", " ", "\[Delta]\[CapitalUpsilon]\[CurlyPhi]"}]}], 
            ")"}]]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "->", "pp"}], ",", 
           RowBox[{"e", "->", "ep"}], ",", 
           RowBox[{"s", "->", "smp"}], ",", 
           RowBox[{"sp", "->", "spp"}]}], "}"}]}]}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", "Automatic", ",", 
         "Automatic"}], "}"}]}], ",", 
      RowBox[{"Boxed", "->", "False"}], ",", 
      RowBox[{"Axes", "->", "False"}], ",", 
      RowBox[{"Lighting", "->", "\"\<ThreePoint\>\""}], ",", 
      RowBox[{"MaxRecursion", "->", "8"}], ",", 
      RowBox[{"PlotPoints", "->", "1000"}], ",", 
      RowBox[{"PlotStyle", "->", "Purple"}], ",", 
      RowBox[{"Method", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<ShrinkWrap\>\"", "->", "True"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MaterialShading", "[", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<BaseColor\>\"", "->", 
           RowBox[{"GrayLevel", "[", "0.4", "]"}]}], ",", 
          RowBox[{"\"\<MetallicCoefficient\>\"", "->", "1"}], ",", 
          RowBox[{"\"\<RoughnessCoefficient\>\"", "->", "0.65"}]}], "|>"}], 
        "]"}], ",", 
       RowBox[{"Sphere", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "2"}], "]"}]}], 
      "}"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
     "\"\<SpSchwGeneric.pdf\>\""}], ",", "GenericView"}], "]"}], "//", 
  "Quiet"}]}], "Input",
 CellChangeTimes->{{3.899450898886588*^9, 3.89945095614196*^9}, {
   3.899451114989605*^9, 3.899451117399693*^9}, {3.8994511490999823`*^9, 
   3.899451166196763*^9}, {3.899451257235427*^9, 3.89945128810594*^9}, {
   3.8994513392422132`*^9, 3.899451357872766*^9}, {3.899451398126931*^9, 
   3.899451428798518*^9}, {3.899451492316065*^9, 3.89945149346975*^9}, {
   3.899451589628129*^9, 3.899451602447603*^9}, {3.899451635195657*^9, 
   3.89945164741083*^9}, 3.8994517911248283`*^9, {3.899451938181057*^9, 
   3.8994519601127567`*^9}, {3.899452102208276*^9, 3.89945214798314*^9}, {
   3.8994523320452023`*^9, 3.899452336970687*^9}, 3.899452410177084*^9, {
   3.899452621968149*^9, 3.89945294924721*^9}, {3.899453131037383*^9, 
   3.8994531472685223`*^9}, 3.8994534166150618`*^9, {3.8994535114823647`*^9, 
   3.899453525162257*^9}, {3.899453562261496*^9, 3.8994535626203012`*^9}, {
   3.899454115993826*^9, 3.899454142450323*^9}, {3.8994541974636593`*^9, 
   3.8994542012442904`*^9}, 3.8994543302950153`*^9, {3.8994544395800657`*^9, 
   3.899454463400517*^9}, 3.899454529989558*^9, {3.899455060561042*^9, 
   3.899455074173691*^9}, {3.8994551578206043`*^9, 3.899455164255217*^9}, {
   3.899455378689652*^9, 3.899455424447988*^9}, {3.899455732079425*^9, 
   3.899455753859284*^9}, 3.899455831048726*^9, {3.899456666943633*^9, 
   3.899456668563805*^9}, {3.899456728148431*^9, 3.899456771027162*^9}, {
   3.899458000846031*^9, 3.899458001288327*^9}, {3.899458064153556*^9, 
   3.8994580795362186`*^9}, {3.899458133789674*^9, 3.8994581634392033`*^9}, {
   3.899458410179929*^9, 3.899458410376285*^9}, {3.899458542506385*^9, 
   3.8994585429469843`*^9}, 3.8995348414389553`*^9, {3.899534946969586*^9, 
   3.899534947161831*^9}, {3.899535087130801*^9, 3.899535121578945*^9}, {
   3.900145820100273*^9, 3.900145825917906*^9}, 3.900145964275072*^9, {
   3.90014651392301*^9, 3.9001465176490726`*^9}, 3.9001467521849117`*^9, {
   3.900147844509878*^9, 3.9001478492823763`*^9}},
 CellLabel->
  "In[504]:=",ExpressionUUID->"569f6e63-76b2-425b-817b-b9eb6540727d"],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.5, 0, 0.5], AbsoluteThickness[2], Line3DBox[CompressedData["

1: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
Ia1k1PZmCEwfWTit+ZUP478zzZn4ZxweC1tblx3vBma/g4DaTz6MNX1nPgf5
d+GZ8JcN3cBr9mvPS+S+O3zFVchzdc/W9GZ2g7BJdeN65OOz92QnkM8+wE89
fdgN1BPZaTWK+bBf5naJopvjkCahQbiGpRs4L5cKa5TwYacS/O6nIzfjDo9Q
UugCMe5ztpfK+DAjuVxC6t9xyKNrT90T3AGcmdPoRTE+rF+NOeLZv3GYN5cd
0ydHADfF8z/E1vNh3VHN37J2x6GidoD1dYpaQOVD+Uetkw+7PvFEuQT5Uyep
aslfNUC97E6HJ/JC7GVDDXITbYWn1HE1IHDWJzYVeYdDMuxFHsctQJMlXwPG
dX+O03bxYTjTbUXqvXEoqvDBYM+5GrCxmphXI2eL37EwRB45GSzydLASiC/O
LCr28GEhb3bsl5FvrM460ruXA6p2xVBcPx+2H1TsykAxAd9eCD5lOZYN5trf
574c4cMEdw7HsiGv+ijwo9wnG3jOhhVnI2/SbSvmRR4RLrjBz5cNfvsJpfch
9xzj6RNHnmmdXJn8+QfwerGnIj3Kh+XknEvVQK4rO+li/fg7KGKNM+1A/tHp
i+NL5N5CSWaOMl+Arge92KFxPmynqzz7H/KylwN/nGTCwf30fImPk3xYG/My
cx3lBGx5Kn8u/1MCFP6qCa/O8WFWVUfrmpFvv6CxD7FPhGevCM24If/cG+FJ
QH7pnmaPvWwStGZx24pGHud2oWQAeetQ/DPRumT4zci/cxj5G6OYljXkGg7S
Q2WLqdD/u5ab8zwfprugdfgwFYpDYJnS9QuZcPKKkOqrBT5s0v+m013kF+lj
1nmW8yH+Eif4usSH/Uy9XDGNnBjjJfCxEYOhEqMeCWt8mKinPf088vsytYb/
7WDwWsfhkgrkwVer1JaQc8g/4mqVroRvr5ZODSDncuRJ+428EDqKUr2vhIdO
8mzxrvNhUbcublBQT0Dp67OhrhZVcDBFnSoM+Z1xt2Ie5F7ZHoaO69XwifaZ
1Ee/+bAgwDxzATn3ofc+VYfroa7y+9Pn/vBhX7RjNgHyCq+Lso7X6uGzq5J+
RsiTG4x3VZBnF+Hsuf3rIesKb/ED5B9MbedVkXt/fG7kOFMP/cyWRr8iz6ep
0NNB3mrSp3gkrwF6q/nycG7yYa53ldVNke9Sp2zEaDRB480J9knkCh2XOhyR
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
od6iuIqxQch8KTsWNszsaJNABXt/BN9VZxXFofVO/UMxnNgkfC4r3EoFQp/Z
2QoOieDfLj+8R4jnxhZ1E9/pIy8+J8vwTk4EJxZWtZxM5MZeTdQw+CLPfhLc
ESkrggs5yHLfTubG6HdcetqOvN5i5p+btAguO+t4szaNGyMkR74NaaOCU0/T
PQ9JieBG3xRv+eRyY663X7RM/aSCogzj6SQhEfQuvZ/eUc6NHX0Z9yCtgwpy
wm05r7GK4Mtf138EDXNjBwtjpjt7qCBG8p21z6QwPrq6oP5Zigez+vq6U3OU
CgZVxg5Upwjj69+P5Fh/4sEyHg7W2CEPPXbrXHKyMH55WEYhIJ8H4zvzJyUI
+YPYSJu7ScI4e2Lz+9RCHow7+iGxHvnHmPezignCODPbzmtTxTxYmYo4o/kY
FXi27NdMiUXO10S8W8GDLXHPTV4ZpwK/qX3+nuHCuG+5hUvcTx7MeLapwmOC
ClivV7pv3RXGn+UbZ9b/4cGeFFq9NZumAtJD48dvLIVx47G89lVVXux5acQ2
1xJaf6mtZINZGM9Xffz9Mc6LxQ4NZx5EvrhGZureI4y3XZptC6jkxZ7Y3NXA
kBso7lAuYhLGYzYbm72reTGuqBeHbyLXVrCRvr1bGH++RH7jUMuLPSCQlGuQ
qx3O8h+hE8bBylEv7VZebDXHv9zzDxVErltX4KtCOLZxSnPHEC/mqGxaUbVM
BRvbOgNXxoVwwCiz5/o2LyY/WXrn4CoVPHKeeHKqQgiPFnq5zqbJh3HQlc5w
bVKBoUrc9m0vIbzt6TBHVCkf1i8zKSeKfL+B2g0NT+R0ZSyPvvFhXyrkzssh
vyGm92WPhxBek9C97F7Oh/nHLt89jfycVdFEym0h/Gla42vTSj5s9Zdnvx/y
BNPx4lYXIZzDxYKLsx79nvybcwC5epLl3gP2QvjIrv7BsG4+rDjQS/vVFhWs
e9vHlRkK4a0dvxvcVvmwhA8HKpv+UUELfZ1V0H4hPITusy2rMgHrBvGnOpEf
la901JVCbjxCXFUhYERz1sIB5H1fbc+x7hPCPfKLIPkYAdPzHbKeQx7vH9EY
JS6EB3Lod5dqEDAGDsOKvdtUEHGwRzpFSAhnmx047qRNwMZuTf47i9w6rSnz
M7cQ/rkj9hs0J2C4/12FEuQ34tyyvm+T8K3rQW/tPAiYbth+B6sdU2CfytTW
gy4STmpo1L39iYCtKMx7XED+q42aJd5Jwvm/vNe+n0/AZPLOuNgif6G7W77q
FwkPLXKXe1lIwAq0CvickL+9F1NN/5OEfyirLvtYTMBEqdq23shD5pSEHjWS
cJUEluEZnIA9n91T/gL5oQMhwX4VJLxS0k/eoY2AGVgVX41ATj/ZVkXESbj9
u7puz3YCFqy08CcKebKLfm9ROQm/693p+qiDgB3z3vEzFnmtV0vM4lcSrj8v
aJ3cTcCkdZ4EpCBv+6d+zKmIhL+Y3nGoe5iAXSJ1Jech//6mRO1sDtqPZmin
ziIB896zMvgReed/gawTWSR8uB6TMf9DwDglYpn+Q86XH/Ll0XsSzrsWdN1u
hYCVsF7lK0Auq2L/pjSdhOfyZb73XydgtcvPNmjuIqXSei6NhPfNBWQ+2SRg
4hoq9YXIm1tMh+ZTSXirVtfLmH8EbJSfXbIIOdv+K8+kkkn4Sakt8Y87idhI
7bGPND+rZXOgIpGEk1OrG77uImIZe8YkviBXnIlPOJ9AwkNcd1yu3U3EFJ33
Pvy/28pOL78l4aOBuX2/mIhYnWdxHc1Zfu7heRlHwhMaak8NMxOxvJLBdZo3
+SnzSr9B56tj9HqGlYjpfg/iLUYuEF4wV/WahL+f0Pi1xk7EFiQz+Wker/vw
3cVXJHx3RsQGAycRM3TQYaR56uC7w3+jSXibx2k2Lm4ixkqwH6CtXxTK//pl
FNr/mQt7hHmJ2HT1WiLNzR6Mdh6MJOGPhZvmDhKI2IctVj2aX91imK98ScKp
469wJX4ipmD0to8WB06VwJHz4STc9E2Rv5YgEes8nWZN82Enk7w/z1EcpA+K
GQgRMR+v/fhn5C1198yePyPhV6KmPlmJELFP7+P0aPGXoKceLA8l4Ta4Wfgt
CSK2uyH0Bu28DhrJnrd4QsIvuS31++0jYpTzCz75yBkLmq7NPibhe3528j3e
T8Qu0x8w/IT8RK4Co3AQCdfwv3A6XoaIvWDaT81GHjiY6ecfQMJnnNnf/VAk
Yg/Um6yykBMvM9zhukfCe8K9T/5UQnGzmPiUifxcW8PZLH8SrinI3NynQsSO
+PoLpSGfexgb1OlDwqPUMlMWjhOxwUN7Jt4i56kx2yfvQcKV3109IXAK7f+0
7YkQ5PYEJ9luR5SfzqccHc2JmNazBSYDWn5m/bDmMCHhc4UXDi54ErEetgvp
ushrvucGpxqR8DcVxnvWvInY7XA5mVPI9cmST48aknA56b3tO3yJmFIf/ZIa
8t/HGsSt9Em40eSABMc9IpaS5uaxH7l7r2BwgjYJZ7bzKpULJmJXQhaVN1Gd
sb9A5RNTI+H/TXUVX41Bvz8T9T0auWLGUR8WCRJ+x/bUWMVn9HdPsrx4jvzT
ROHvWDGUb0YZqzVf0Pd+6QOPkS+pz3FJiZJw+lq35YYSIhbpHHb5DvJTlq95
MCESLq1wLKejjIhZGDGEWyG/XNJ91p1AwmvslBgnvhMxNmdSHh9yl1z9yBYW
Ej7moxnA1EnEOHnnJh+guko24/W7+UcQD6V3M1NdIWLGeW5aPKieH8t8y6jy
XRD3Z/JaMFXmx3hvO8D9a2h+cE3wo78miDtd4Sl2/cyPfTTMDeBF7lRyZC3o
iiCuVWU/d+kLP/bbeHY/PfI3l0LNdtsLolz22WtUwo99P39RdQD1NU6hJ2+Z
Lgvi6xbTe+TL+DHhrjHjKOQspyZ9WKzR+t05lJlqfkyI0cx27S/qg23O15kN
BHFlObZTjr/4sVB91ZXCFSrYNT19ZOaoIE7P9+KG7hI/Vlh7dmoS9d/k90zJ
OrsEcdtyx4GqwwJYS3ig05kZKmC3OX9TP0UATzq/bBmXLYD92uZyHe6lAmM/
JtX/fvHjoQ9Y3RPfCGImblmfvyInqx5Wlmnnxx/FdLpavBXEWF+3TcYgl9nm
5ktv48fTdm2YsycIYoPynYQzyF2befxjm/nxxnW9/nvJgtiBoeyw/9AcJRMi
0nOvlh8PjqvoP58piHV1mzfc7aYCued+Mye+8eOXbojHc38WxFy5Tn3Z1YX2
mWntXvSOH8d/0m+7tQpiq0sxh3rQXHeROq5x0p0fV9fTHZrcTcKUeZVOv62h
Arum4UMrbPz4AQtX2Up3Elazuq/S4wMVCOjsSv0FiHjUF9+dK9pC2GU9c4tx
eypwu/la/5wTH77Gv8yhtC6Med0HKpZ7qCA3rLNePooHT2//8MdBTRTLGu7N
XUmYBIFObNEzuVz4kmLFsN+YKMZsyRPxgXsSBHy46GobzIE3VTzhKH0uhsWu
zHwzD5gArKYPJws7WfH12RHOx/zimC/vwKPCGgrg/aQuqSjEhCduJ+drJ4hj
Ded8o7o2xwHZoRUmm9Hj7NmbweV7JDCykNPMd7lx4HJLnvF14BY8sXVL9vV5
Cax77M6pG8fGwNe97N5E2yXo53NVKSFRAnsS8utbgOoYkD0T2PnSYgm29vDQ
tyHfcJ6RiFAZA4by8rx7DJbgyfVX33YlSWCUdovyz0pjYOamj9zasSWYPci+
5IK87w1J8t+RMRD3aK6+i3sJFplU3jyWLIEJ7iQUPpUeA+rAoerFj0VomjD0
pjVFAvNJHaW+ERwD2p2q6+RDi7CnX6d+Lk0CEzUU6H+4NQo4Z6P+yW3NQ7DP
23shWwJ7VOYg/gQfBcb3ZjrfH56Bj/TpreiKJLAWjaS56ydHQYAPQYEYRYaT
V377GtZKYD0qA5HOJ0ZBX9tG1etAMszsXNV1RS7rpb7PSWsUpNy2P0C4QYZ/
HwnQv0CuIGhDuAZGQbEAwZlXmwwfXbVVbUL+9uuRI5eOjwL+rMrGvX9HoK7Y
bMaZOrRO4151A8VRMLKsrbBpMwIt2duitOolMO+tO4XCEqOAHK0sUig+DF9z
f8kWaZTANIYaLofvHAWOH6/G6l/ph3Sv/MriWyQwp95hiSycDP4MZLZ4vW2H
VEL3jrgOCaxqD6N7EiQDTjkjHwPPdthL2Dj9EbnfldKPMeVkwCiADUgatEMi
ZdO3GrmxZMvag29kELSzcuTnv59wYXdS4izyH3V1tdbFZNCy/LZdxv4nXOqz
oGp1SmAZeg2muz+RAXuSTWDbgTb4u8Hu6SjyV38xIbMkMlBJDsjqcWmCstam
i/y/JbA/bcblX++RQVNFghE5sQqaNt8+rd0jgYnBvX9z75IBPrb7tKdxFXxY
V3vqHPJAj1ciyf5kwFLu0bZrZxWMxBdlryFX/PUPBPmSwbreULLktUrY/+tr
WRDyUoZz5fpeZHCr4tvRyzIV8Ow2abgSuWc9+b+uG2SQHxrM+uBWGSSxzh06
3iuBbXv+8SOfJwML46ytG8kFMHPKa0ywTwIL/ueW125DBkJB2EEv+gLIpvRB
/SByavqvtiprMhjhvxJ11yEfZpzJC1BG7r5+duKdJRkQTttIhcr+B5mEeKuM
kd95K2F+xYwMIkX4SxTccqHFUSeDIOTLLSoHBs+QQURHuotcyju4rr3hSEGe
zOxt06yHzmW34Vkpx1RYavHbZQk5Sf793TJdMuC6/KZSSC4F/jgTYLON/O30
1Mu3OmRwT8BvmsM9Ab6Xklzl65fAjiuzrFmcIIOYJw56cSlR8FTpz6PayBnh
zhxtLTIQLe4v9ZKLgHwLCy+Mab9PWT57FCOD2KPWQ/Huz6F16u/288i/Hmiz
5dQko/lc8dpcyiMoVLkh5I7cK/vrz211MpiTvkkQ87gHh7pUJO4hN9NMPzp7
nAwGpxbTrFI94IsiNe4nyOvbXzzuUyOD2oHof8zvrkBRhV2zkcjjLX1r64+R
AZX+ppXFSlp5oXB0QQLy/wEYYu5o
        "]]},
      Annotation[#, "Charting`Private`Tag$2822917#1"]& ]}, {}}, 
   {SurfaceAppearance[
    "PBRShading", "BaseColor" -> RGBColor[0.4, 0.4, 0.4, 1.], 
     "BaseColorMultiplier" -> 1., "BaseColorIsAutomatic" -> 0, 
     "SpecularColor" -> GrayLevel[1], "SpecularColorMultiplier" -> 1., 
     "SpecularColorIsAutomatic" -> 0, "CoatColor" -> GrayLevel[1], 
     "CoatColorIsAutomatic" -> 0, "CoatColorMultiplier" -> 0., "SheenColor" -> 
     GrayLevel[1], "SheenColorIsAutomatic" -> 0, "SheenColorMultiplier" -> 0.,
      "EmissionColor" -> GrayLevel[1], "EmissionColorIsAutomatic" -> 0, 
     "EmissionColorMultiplier" -> 0., "MetallicCoefficient" -> 1, 
     "RoughnessCoefficient" -> 0.65, "AmbientExposureFraction" -> 1., 
     "DiffuseRoughnessCoefficient" -> 0., "CoatRoughnessCoefficient" -> 0., 
     "SheenRoughnessCoefficient" -> 1., "SurfaceNormalsMultiplier" -> 1., 
     "SpecularAnisotropyCoefficient" -> 0., 
     "SpecularAnisotropyCoefficientRotation" -> 0., 
     "CoatAnisotropyCoefficient" -> 0., "CoatAnisotropyCoefficientRotation" -> 
     0., "TextureCoordinateScale" -> {1., 1.}, 
     "TextureCoordinateOffset" -> {0., 0.}, "BaseColorMapIndex" -> -1, 
     "SpecularColorMapIndex" -> -1, "CoatColorMapIndex" -> -1, 
     "SheenColorMapIndex" -> -1, "EmissionColorMapIndex" -> -1, 
     "MetallicCoefficientMapIndex" -> {-1, 0}, 
     "RoughnessCoefficientMapIndex" -> {-1, 0}, 
     "AmbientExposureFractionMapIndex" -> {-1, 0}, 
     "SurfaceNormalsMapIndex" -> -1, "TextureMapLayerCount" -> 0, 
     "Arguments" -> {
      "MaterialShading", <|
       "BaseColor" -> GrayLevel[0.4], "MetallicCoefficient" -> 1, 
        "RoughnessCoefficient" -> 0.65|>}, 
     EdgeForm[], 
     Texture[{{{0.}}}]], SphereBox[{0, 0, 0}, 2]}},
  Boxed->False,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  Lighting->"ThreePoint",
  Method->{
   "ShrinkWrap" -> True, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-2, 2}, {-8.688777713093144, 
    9.919135015510765}, {-9.911868957922135, 9.932843791800543}},
  PlotRangePadding->{{0, 0}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAeJdtxXPz+F963hgasNTEJ2mcPE7iC5zCheaC6Td0wRV
QfTT5ZvMQPSUDeu9QXTPfKV4EP1qA0M1iLbLUu0E0aFGsjtBNEtTyAEQfX3D
lfNgdc6XHoBosSnzpOYB6SfKTLEgetKX6BQQ/fRfSwmI5v7N1gCihXe+bQXR
75ySekH0o7XdF0G0iebOOyB6OoPJXxC9/IWn0nyQ+08uVgfR78NkDUC0SFP+
OhC9snKm/QIg7bHSwBNEi33f7wuip93aGQyiJ02dXASiZRjuV4PoS6EGzSC6
tGn+yaNAOuxPxl0QfS5X9R+ITjh/xvA931tHQffDth+AdE5iZAeI/mPmshlE
n1LbpP4RSK/7GFHuKPvWEQAEfa2o
  "],
 CellLabel->"Out[351]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzsvQe4JMlxHliqqu73xs+sn53dnVnvvYEl8OBBYBcAQZDwwC4Wa+C9d00Q
BL2nRFGiRHlHytBKtI+UI+VoJIqUxJPEk04nnc7pTnc6q2tVRFZmRWb9kRlV
3W+W330739dva6uysjIj4g+X7qFHPvrkY+975KPvevSRcy/78CMffPJdj37k
3Es/8OHuVvP7qqr+clUtTp6r2u56XVX4zzdV1dM3nr7x9I2nbzx94+kbT994
+sbTN56+8fSNp288fePpG0/feMpv/Gf6c3TvC9UX+O7n3d3/RH9quls1q+7v
/qpa0a86uaa/LV3TffqFdz/p3v2P/LfZ61/jFy7PvPYR99p/AK9dQ3/rlS/5
QVfyfwQlb+K/ja946Ot73Tv/Pn6H+3KH9s673Dv/DnznAvp7lP734uHtyv/j
tx931//Wvc2N928f4/7sR5/lTx/nwu1eTxtP8gu0b7zTXf8b8I2j7h16PfTq
NLOTq2l8V4YGoQ+8w13/a0CCI+AD58IHjms1Puyu/xVo8iFQ4w1Duf2ka+O6
3+aufxe0FtV9K6j7iFb3W9z1vwTt3gV13wXKHdbqfpO7/hfgnR1Q931T6n6D
u/7n7p2I6zvgnWfofBnX/Xp3/TuA3qLd4Z3nTKn7a9z1Pxvqzrb7eTpfxsB+
nXvnn4K6l4DeL8zXHbf7te76n+TrDu+8eApNXuOuf1uvO3rnZVPa/Wp3/VvG
ur9yKLdfrPtV7vofG+t+UG/33qjuB0XdqAGvBpUhAeLKXumuf9O9E4FlAd75
qil1v8Jd/yPwDqr7dXrdYyK83F3/Q2PdXzul3U6Kqt8w1v2GKXW/1F3/untn
r1T3mwFfEKi47pdEdUfvtKDut4J2I2XAdTvUVr+m0eSRKcxz6qX6VZ3A0TsP
D8RKte2YwC8QdaNCj+q9Hle2567/AXgHUfSxKXU/313/fY0I75pS2fNEZYjs
T06p7Cvc9d8z9vrdA3vKMvpcd/139bqjd947pe7niLoREd7vKkNgGsvos9z1
3zES4Tb6s6Rqdug+RxD360Qff++Z4nvc+Jvpiuthv/kiusdX7sNxFbdO+ZTz
eKpfMXbtGv4bXHRqAv3ODWxY9Y+qW7RmSJL+svG7Z125PfHN6pb4o9y3G0B9
C01GHii0QXzUd7a6O/4ol7h2ykedIFR/29jxywPnE2G9HzTk6ikNuU80hIXs
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
rF9YetX/A5i9UHg=\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"6f181beb-ed62-467e-be92-e1f19c7eaae0"],

Cell[BoxData["\<\"/Users/vojtechwitzany/Documents/GitHub/Exact-Solution-\
Spinning-particle-Schwarzschild/SpSchwGeneric.pdf\"\>"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGDQAeJdtxXPz+F963hgasNTEJ2mcPE7iC5zCheaC6Td0wRV
QfTT5ZvMQPSUDeu9QXTPfKV4EP1qA0M1iLbLUu0E0aFGsjtBNEtTyAEQfX3D
lfNgdc6XHoBosSnzpOYB6SfKTLEgetKX6BQQ/fRfSwmI5v7N1gCihXe+bQXR
75ySekH0o7XdF0G0iebOOyB6OoPJXxC9/IWn0nyQ+08uVgfR78NkDUC0SFP+
OhC9snKm/QIg7bHSwBNEi33f7wuip93aGQyiJ02dXASiZRjuV4PoS6EGzSC6
tGn+yaNAOuxPxl0QfS5X9R+ITjh/xvA931tHQffDth+AdE5iZAeI/mPmshlE
n1LbpP4RSCsrnC53lH3rCAD9Eay/
  "],
 CellLabel->
  "Out[352]=",ExpressionUUID->"00ee9903-bcc5-420b-bded-e587dde98afa"]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ChrisSchw", "/.", "fhRule"}], "//", "Simplify"}]], "Input",
 CellChangeTimes->{{3.901192558855556*^9, 3.901192572171488*^9}},
 CellLabel->
  "In[353]:=",ExpressionUUID->"0ea7ff13-e1df-4ca5-91aa-5e43871651bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       RowBox[{"-", 
        FractionBox["M", 
         RowBox[{
          RowBox[{"2", " ", "M", " ", "r"}], "-", 
          SuperscriptBox["r", "2"]}]]}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["M", 
         RowBox[{
          RowBox[{"2", " ", "M", " ", "r"}], "-", 
          SuperscriptBox["r", "2"]}]]}], ",", "0", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       FractionBox["1", "r"], ",", 
       RowBox[{"Cot", "[", "\[Theta]", "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       FractionBox["1", "r"], ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{"Cot", "[", "\[Theta]", "]"}], ",", "0", ",", "0"}], "}"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       FractionBox[
        RowBox[{"M", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "2"}], " ", "M"}], "+", "r"}], ")"}]}], 
        SuperscriptBox["r", "3"]], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "M"}], "-", "r"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       FractionBox["M", 
        RowBox[{
         RowBox[{"2", " ", "M", " ", "r"}], "-", 
         SuperscriptBox["r", "2"]}]], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       RowBox[{
        RowBox[{"2", " ", "M"}], "-", "r"}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Cos", "[", "\[Theta]", "]"}]}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0", ",", "0"}], "}"}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       FractionBox["1", "r"]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", 
       FractionBox["1", "r"], ",", "0"}], "}"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.901192549944676*^9, 3.901192572516173*^9}, 
   3.9076525424218407`*^9},
 CellLabel->
  "Out[353]=",ExpressionUUID->"50201daf-a67d-4836-8987-f9c61d6d885e"]
}, Closed]]
}, Closed]]
}, Open  ]]
},
Evaluator->"Local 2",
WindowSize->{2560, 1387},
WindowMargins->{{1352, Automatic}, {0, Automatic}},
Magnification->1.5,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (June 3, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8d9b9cb6-9be6-495c-b5c0-65525cbf1cca"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 304, 7, 238, "Title",ExpressionUUID->"66b2ecea-b430-453a-a3c6-cbc44d55d7b9"],
Cell[887, 31, 1268, 22, 260, "Text",ExpressionUUID->"6c3a4c55-95b0-4a5d-b4c8-c61cf681604a"],
Cell[CellGroupData[{
Cell[2180, 57, 244, 4, 101, "Section",ExpressionUUID->"e8e02dbe-f151-4993-a0b6-8c9a41ec76f7"],
Cell[CellGroupData[{
Cell[2449, 65, 263, 5, 81, "Subsection",ExpressionUUID->"9a203dc2-7d6b-4f01-82bf-5a0438d7999b"],
Cell[2715, 72, 7456, 204, 512, "Input",ExpressionUUID->"ab0f109b-116e-41bf-be2b-37a65641a354"]
}, Closed]],
Cell[CellGroupData[{
Cell[10208, 281, 178, 3, 81, "Subsection",ExpressionUUID->"5dc9029d-102f-4ab6-971b-e336275861b6"],
Cell[10389, 286, 4173, 119, 419, "Input",ExpressionUUID->"cad8aa8e-71c6-4f38-9453-4e14a851686e"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[14611, 411, 159, 3, 78, "Section",ExpressionUUID->"8d53d2e3-4d2d-4fb7-9ec8-f7636cb4010d"],
Cell[CellGroupData[{
Cell[14795, 418, 228, 4, 81, "Subsection",ExpressionUUID->"67300c36-f5ac-4153-a131-fb5cf4f192cd"],
Cell[15026, 424, 1433, 38, 140, "Input",ExpressionUUID->"4b2cc0af-bc5f-49d8-8501-ae5001762b5e"]
}, Closed]],
Cell[CellGroupData[{
Cell[16496, 467, 180, 3, 81, "Subsection",ExpressionUUID->"dbf53751-8576-4c99-9ee9-01a91d9dc1b2"],
Cell[16679, 472, 4000, 107, 310, "Input",ExpressionUUID->"da398593-11da-4196-8c62-ea72521285b3"]
}, Closed]],
Cell[CellGroupData[{
Cell[20716, 584, 152, 3, 81, "Subsection",ExpressionUUID->"46748927-ee4c-4370-8de7-b7dd1a621f6f"],
Cell[CellGroupData[{
Cell[20893, 591, 1034, 16, 295, "Input",ExpressionUUID->"3cd38f6a-2e01-465c-ab07-ecded47b75ea"],
Cell[21930, 609, 1713, 31, 52, "Output",ExpressionUUID->"a5546f54-491b-4e36-85b1-831354180ce4"],
Cell[23646, 642, 1715, 31, 52, "Output",ExpressionUUID->"51974588-060c-48ee-a8cd-adc788425577"],
Cell[25364, 675, 1713, 31, 52, "Output",ExpressionUUID->"5da8bff6-dd3f-414d-8e7c-832c7eb88a5b"],
Cell[27080, 708, 1715, 31, 52, "Output",ExpressionUUID->"45af00aa-3086-41b7-bc92-ca99ba4a1f41"],
Cell[28798, 741, 2019, 42, 71, "Output",ExpressionUUID->"02fffb31-9c98-4b12-9f77-0bb9d8a51dd9"],
Cell[30820, 785, 2605, 58, 69, "Output",ExpressionUUID->"13a53ae1-3ed9-4dab-8184-4f03952f0e9e"],
Cell[33428, 845, 2607, 58, 69, "Output",ExpressionUUID->"5b1221a3-2b30-4604-a52c-7c50912da6b1"],
Cell[36038, 905, 2262, 50, 69, "Output",ExpressionUUID->"9a1cbe4c-4a50-4003-b8e9-e3c9b38dfd49"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[38361, 962, 176, 3, 78, "Section",ExpressionUUID->"dedcc5ec-489b-4ef0-aa4b-dbb02f42656f"],
Cell[CellGroupData[{
Cell[38562, 969, 1015, 14, 81, "Subsection",ExpressionUUID->"b6fa96fc-d000-4190-80dc-03fc9501dc95"],
Cell[39580, 985, 4434, 117, 340, "Input",ExpressionUUID->"9936dec3-58f9-414c-b3fd-d7a15b20b2f1"]
}, Closed]],
Cell[CellGroupData[{
Cell[44051, 1107, 170, 3, 81, "Subsection",ExpressionUUID->"51b63890-f152-4eb3-82ca-9c209d60ae55"],
Cell[CellGroupData[{
Cell[44246, 1114, 3348, 80, 233, "Input",ExpressionUUID->"cc90965d-ac37-4cd2-827d-80b74fff7db3"],
Cell[47597, 1196, 8459, 238, 236, "Output",ExpressionUUID->"0cca0e32-3951-463a-8edc-8d6f528c465a"]
}, Closed]],
Cell[56071, 1437, 240, 5, 46, "Input",ExpressionUUID->"5e32ac32-2576-4528-93d6-917bf0ee1f15"],
Cell[CellGroupData[{
Cell[56336, 1446, 3473, 99, 185, "Input",ExpressionUUID->"7d8945b5-98b8-415e-9689-4985272aa12a"],
Cell[59812, 1547, 1027, 16, 52, "Output",ExpressionUUID->"4d7457aa-e1e3-4fbf-b00d-562f8420c4ac"],
Cell[60842, 1565, 1027, 16, 52, "Output",ExpressionUUID->"ee437161-0d5a-40f7-8e25-1b7a149af635"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[61918, 1587, 711, 10, 81, "Subsection",ExpressionUUID->"1b963e1d-919a-4ca8-8d6a-bdb5811e76c0"],
Cell[62632, 1599, 3949, 100, 166, "Input",ExpressionUUID->"03c385a9-28fe-44ec-b98b-a8337cdeb3b6"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[66630, 1705, 166, 3, 78, "Section",ExpressionUUID->"76946252-83fb-4288-866a-371bbe58976e"],
Cell[CellGroupData[{
Cell[66821, 1712, 750, 11, 81, "Subsection",ExpressionUUID->"0161c64f-fadd-4408-8797-e23557b25c18"],
Cell[CellGroupData[{
Cell[67596, 1727, 4833, 138, 225, "Input",ExpressionUUID->"6ae2a763-581a-4444-83f3-2be611138283"],
Cell[72432, 1867, 1572, 42, 81, "Output",ExpressionUUID->"b339ae22-d336-4c39-b3b1-86db4594ae64"],
Cell[74007, 1911, 3452, 88, 81, "Output",ExpressionUUID->"023929e0-0527-4cc2-bcfe-8a9f8c6997d4"],
Cell[77462, 2001, 3353, 90, 78, "Output",ExpressionUUID->"fd2a926f-37e2-47b1-b860-07f0c91ea9a4"],
Cell[80818, 2093, 2165, 59, 78, "Output",ExpressionUUID->"854b6e62-b0c2-4311-9b7e-e2107d4fee3e"]
}, Closed]],
Cell[CellGroupData[{
Cell[83020, 2157, 2432, 67, 171, "Input",ExpressionUUID->"2bf91785-eef0-4168-beea-00b0fe02527b"],
Cell[85455, 2226, 1406, 24, 52, "Output",ExpressionUUID->"635807d2-567a-45b7-9508-65c8ecf7fcb9"],
Cell[86864, 2252, 1405, 24, 52, "Output",ExpressionUUID->"01dfc833-dc36-4f21-b1d1-c1581e572456"],
Cell[88272, 2278, 1408, 24, 52, "Output",ExpressionUUID->"029438d5-95d4-4e13-8bb0-f6005aa133a1"],
Cell[89683, 2304, 1406, 24, 52, "Output",ExpressionUUID->"f6adf0a2-65b6-4d20-bf0f-94244a2f8326"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[91138, 2334, 529, 16, 84, "Subsection",ExpressionUUID->"27caf928-003a-4cc6-bfd1-fe967dbca317"],
Cell[CellGroupData[{
Cell[91692, 2354, 3183, 86, 171, "Input",ExpressionUUID->"fcb4e0ab-ac66-4209-ae8b-d18caee3d3f4"],
Cell[94878, 2442, 888, 14, 52, "Output",ExpressionUUID->"1a9eec36-d8d0-4199-aaab-60adf4297034"]
}, Closed]],
Cell[CellGroupData[{
Cell[95803, 2461, 1450, 39, 193, "Input",ExpressionUUID->"a8869a9e-aadc-4019-be8d-d658a7d89962"],
Cell[97256, 2502, 2127, 51, 88, "Output",ExpressionUUID->"99de71e9-7b29-4037-a797-56476a5406a3"],
Cell[99386, 2555, 1074, 19, 52, "Output",ExpressionUUID->"03c6d2ca-c52d-48c3-9a75-55160805b740"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[100521, 2581, 174, 3, 78, "Section",ExpressionUUID->"25265eec-160b-47d9-8387-8cfa0ab0414f"],
Cell[CellGroupData[{
Cell[100720, 2588, 174, 3, 81, "Subsection",ExpressionUUID->"03e61f85-dafa-4f68-bf60-14af5454d829"],
Cell[100897, 2593, 3073, 87, 301, "Input",ExpressionUUID->"b199a1f3-334c-4542-9498-849a96567973"],
Cell[CellGroupData[{
Cell[103995, 2684, 1007, 25, 140, "Input",ExpressionUUID->"03d94bc0-f308-44d6-90f6-f33bfa8dea34"],
Cell[105005, 2711, 1027, 20, 63, "Output",ExpressionUUID->"5c0db8c4-046b-40d1-9943-84f840e1ad88"],
Cell[106035, 2733, 898, 15, 52, "Output",ExpressionUUID->"c094634e-94ff-4c0c-8255-e21d56c333e6"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[106982, 2754, 195, 3, 81, "Subsection",ExpressionUUID->"1e70321f-a7c1-414b-bb3a-5a3ba9d69e2b"],
Cell[CellGroupData[{
Cell[107202, 2761, 1562, 41, 109, "Input",ExpressionUUID->"e68e003f-5313-4947-ba46-93bcafd0a18b"],
Cell[108767, 2804, 4274, 121, 188, "Output",ExpressionUUID->"4d69833e-3338-4a41-8df5-0cb9d2b7d3ef"],
Cell[113044, 2927, 4290, 119, 188, "Output",ExpressionUUID->"3a770dbc-abdc-4c29-8d34-8a7d783b9ca9"]
}, Closed]],
Cell[CellGroupData[{
Cell[117371, 3051, 1025, 24, 170, "Input",ExpressionUUID->"d776cc5b-660e-426f-88c2-532899eee5a2"],
Cell[118399, 3077, 1272, 29, 70, "Output",ExpressionUUID->"d91e4fed-ca8a-4782-8792-409f8645a856"],
Cell[119674, 3108, 2966, 81, 70, "Output",ExpressionUUID->"7f9a39b7-0d7e-4330-b914-564dd1730688"]
}, Closed]],
Cell[CellGroupData[{
Cell[122677, 3194, 3023, 72, 264, "Input",ExpressionUUID->"81b38675-dced-494b-ae73-0a6bf423cefc"],
Cell[125703, 3268, 928, 19, 70, "Output",ExpressionUUID->"890f0e73-300e-4062-b27b-0c2da9053e65"],
Cell[126634, 3289, 2041, 51, 70, "Output",ExpressionUUID->"7230d44a-c86d-4058-b00d-f897e0304d5d"]
}, Closed]],
Cell[CellGroupData[{
Cell[128712, 3345, 1699, 39, 76, "Input",ExpressionUUID->"dfe459ee-c713-4632-a235-fe9152f62bd6"],
Cell[130414, 3386, 2356, 50, 70, "Output",ExpressionUUID->"bb90470f-d7c1-40b0-8ebe-6c1364ef11ac"],
Cell[132773, 3438, 3717, 86, 70, "Output",ExpressionUUID->"f434fbb7-432b-4cea-90f1-302583b14e87"]
}, Closed]],
Cell[136505, 3527, 382, 9, 44, "Input",ExpressionUUID->"08de6e5f-c8df-4cf1-938c-cee6cf5ff126"],
Cell[CellGroupData[{
Cell[136912, 3540, 2174, 58, 82, "Input",ExpressionUUID->"5518958b-e634-43a9-b546-5854f3aef5e2"],
Cell[139089, 3600, 812, 12, 70, "Output",ExpressionUUID->"e982efc6-9d02-4615-9d77-7d36a436b891"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[139962, 3619, 235, 4, 78, "Section",ExpressionUUID->"51a50405-5f39-45d3-bd34-805c04e27922"],
Cell[CellGroupData[{
Cell[140222, 3627, 247, 4, 81, "Subsection",ExpressionUUID->"7685156a-9502-485e-bc19-7a12603fe77f"],
Cell[CellGroupData[{
Cell[140494, 3635, 2049, 54, 108, "Input",ExpressionUUID->"58ec0087-6d37-430e-98cf-746c3983c5d9"],
Cell[142546, 3691, 4676, 108, 70, "Output",ExpressionUUID->"65704119-524a-4209-b4f5-6f04b029db27"],
Cell[147225, 3801, 4689, 108, 70, "Output",ExpressionUUID->"f6c0bc76-f25e-4340-8105-e8f8129dd1ee"]
}, Closed]],
Cell[CellGroupData[{
Cell[151951, 3914, 4811, 127, 201, "Input",ExpressionUUID->"9dbd40e3-d0a7-40bc-af75-d7d6de4e5340"],
Cell[156765, 4043, 2144, 46, 70, "Output",ExpressionUUID->"4ac4a30f-eb1c-4e4a-8723-2bc248dc9b31"],
Cell[158912, 4091, 2151, 46, 70, "Output",ExpressionUUID->"2b0a036e-3d58-432e-86f4-d604df49c59b"],
Cell[161066, 4139, 1291, 19, 70, "Output",ExpressionUUID->"d398cb37-815e-4036-a3e9-5de074a0772d"],
Cell[162360, 4160, 1293, 19, 70, "Output",ExpressionUUID->"c9ac7dc5-52a2-4e76-89da-211290368e49"]
}, Closed]],
Cell[CellGroupData[{
Cell[163690, 4184, 990, 24, 76, "Input",ExpressionUUID->"ab3a76bc-4637-474e-9fea-e967b7bd4bda"],
Cell[164683, 4210, 2061, 46, 70, "Output",ExpressionUUID->"c427f592-e295-43cf-8541-a00ce7ea35b5"]
}, Closed]],
Cell[CellGroupData[{
Cell[166781, 4261, 2820, 73, 85, "Input",ExpressionUUID->"b20d5812-0935-4b99-9a20-af9c1f350794"],
Cell[169604, 4336, 1815, 40, 70, "Output",ExpressionUUID->"c6eec0a6-2ee4-4dc2-abbf-45d9b7e877e6"]
}, Closed]],
Cell[CellGroupData[{
Cell[171456, 4381, 2856, 75, 122, "Input",ExpressionUUID->"004c1d1f-58d3-4e21-8703-b43263cc4449"],
Cell[174315, 4458, 1138, 17, 70, "Output",ExpressionUUID->"d79dc6e2-34b3-4d49-ade4-5649d766b6c3"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[175502, 4481, 249, 4, 55, "Subsection",ExpressionUUID->"63b52513-bb28-4c60-bcb9-65b09eb24e7f"],
Cell[CellGroupData[{
Cell[175776, 4489, 3398, 95, 139, "Input",ExpressionUUID->"ffed0b28-13ba-4acd-92c9-386bcb51f69e"],
Cell[179177, 4586, 2932, 63, 70, "Output",ExpressionUUID->"5641b8a8-c0f8-4b6b-a54a-3e078f2ce8dc"],
Cell[182112, 4651, 2750, 58, 70, "Output",ExpressionUUID->"3b8f9a0e-ceed-4501-993f-074a1ee39a2a"],
Cell[184865, 4711, 1790, 34, 70, "Output",ExpressionUUID->"c44e24dd-8216-40ab-b5a1-bbf1a2a7a64d"]
}, Closed]],
Cell[CellGroupData[{
Cell[186692, 4750, 6330, 164, 338, "Input",ExpressionUUID->"58308630-958f-4fbd-88ff-8a9214db59c4"],
Cell[193025, 4916, 1837, 52, 70, "Output",ExpressionUUID->"ee33668a-3c12-448c-8a98-a145e5bf5459"],
Cell[194865, 4970, 3554, 98, 70, "Output",ExpressionUUID->"c891d7bf-1f62-478c-aa21-9b8115943b0e"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[198468, 5074, 238, 4, 55, "Subsection",ExpressionUUID->"87861389-68a6-48a5-9d18-d0063a9a2feb"],
Cell[CellGroupData[{
Cell[198731, 5082, 1611, 39, 109, "Input",ExpressionUUID->"25eafbae-e458-41b3-8f4a-383145936054"],
Cell[200345, 5123, 7205, 170, 132, "Output",ExpressionUUID->"827a2a79-6676-4259-a5d6-e14add2fdc90"]
}, Closed]],
Cell[CellGroupData[{
Cell[207587, 5298, 12559, 321, 667, "Input",ExpressionUUID->"605dcd28-01f2-433f-92da-b35e917b7d06"],
Cell[220149, 5621, 1224, 21, 72, "Output",ExpressionUUID->"d771bc95-8df6-41e0-aa84-dc3818332aec"],
Cell[221376, 5644, 1801, 39, 105, "Output",ExpressionUUID->"952a0e9b-a2b7-4528-a7d1-bb6ddab4f6ac"],
Cell[223180, 5685, 2344, 56, 111, "Output",ExpressionUUID->"50d4a2ee-b3fb-4336-9cfd-0afcee01adee"],
Cell[225527, 5743, 2455, 58, 137, "Output",ExpressionUUID->"2da52d02-c211-4f3c-b375-afa9af0ff5d6"]
}, Closed]],
Cell[CellGroupData[{
Cell[228019, 5806, 3341, 77, 146, "Input",ExpressionUUID->"72bcd2eb-92cd-4c2b-8551-61ee1faba4ce"],
Cell[231363, 5885, 1912, 34, 52, "Output",ExpressionUUID->"902ac516-a454-4e27-a25e-85dc614933c0"]
}, Closed]],
Cell[CellGroupData[{
Cell[233312, 5924, 5662, 135, 177, "Input",ExpressionUUID->"3e3ecdad-303d-434f-9796-eaf7ebbb6773"],
Cell[238977, 6061, 1520, 31, 80, "Output",ExpressionUUID->"4366568f-7a0f-4687-8d80-10f8cfdfcbed"],
Cell[240500, 6094, 1289, 23, 74, "Output",ExpressionUUID->"86b24e7a-3f18-498b-8435-b5c6783e9ed8"]
}, Closed]],
Cell[CellGroupData[{
Cell[241826, 6122, 1061, 29, 89, "Input",ExpressionUUID->"67a2876a-f9ab-4457-9bf2-0a5dd74919e5"],
Cell[242890, 6153, 4727, 129, 311, "Output",ExpressionUUID->"7343637e-6ccb-4456-933a-8d11f3f5322b"]
}, Closed]],
Cell[CellGroupData[{
Cell[247654, 6287, 2620, 73, 163, "Input",ExpressionUUID->"31870c69-715b-4431-ab63-abf28ff2f2c7"],
Cell[250277, 6362, 1476, 31, 85, "Output",ExpressionUUID->"1b7e59d8-ba22-4262-b67c-c0667e1dc254"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[251814, 6400, 279, 4, 78, "Section",ExpressionUUID->"5b819c66-de88-40f9-94ea-2b7b73fc7897"],
Cell[CellGroupData[{
Cell[252118, 6408, 541, 17, 84, "Subsection",ExpressionUUID->"83a82e81-2935-4a55-8308-156c333ca950"],
Cell[CellGroupData[{
Cell[252684, 6429, 1780, 44, 166, "Input",ExpressionUUID->"4ca21be1-83cf-445f-afab-6f56ef3b6238"],
Cell[254467, 6475, 2029, 44, 70, "Output",ExpressionUUID->"2834bf3f-c942-4941-9d00-8d38165fd5f3"],
Cell[256499, 6521, 1728, 34, 70, "Output",ExpressionUUID->"01fc3596-ab7f-4ea3-9707-a18c740e5272"],
Cell[258230, 6557, 1437, 26, 70, "Output",ExpressionUUID->"d294be4e-54a4-4207-83f1-debeb5953c69"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[259716, 6589, 1137, 23, 55, "Subsection",ExpressionUUID->"9610ae58-17c9-4f79-81ed-6f6084e56a31"],
Cell[CellGroupData[{
Cell[260878, 6616, 3905, 109, 230, "Input",ExpressionUUID->"818b5bea-f01b-418f-b71e-436704cd67d2"],
Cell[264786, 6727, 3237, 88, 70, "Output",ExpressionUUID->"693b1760-3bd4-405d-b065-7d7058766c72"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[268072, 6821, 1033, 19, 55, "Subsection",ExpressionUUID->"b6af78ae-864f-459a-b34a-b8c78d89eb52"],
Cell[CellGroupData[{
Cell[269130, 6844, 4264, 112, 156, "Input",ExpressionUUID->"233d8380-b81d-444a-b186-e75cfe2c6a5a"],
Cell[273397, 6958, 4105, 99, 70, "Output",ExpressionUUID->"5ef2aa65-d9df-47c7-a343-db9c3568995c"]
}, Closed]],
Cell[CellGroupData[{
Cell[277539, 7062, 1748, 46, 106, "Input",ExpressionUUID->"9d52883b-f36c-458b-b829-6157f9775d1d"],
Cell[279290, 7110, 7262, 196, 70, "Output",ExpressionUUID->"185a92d4-ea76-4799-a993-c4257e53aad1"]
}, Closed]],
Cell[286567, 7309, 246, 4, 44, "Input",ExpressionUUID->"275c86fc-2801-47d6-a9b2-26ba9105707b"],
Cell[CellGroupData[{
Cell[286838, 7317, 807, 25, 44, "Input",ExpressionUUID->"b03bd200-6b42-4a78-8bf9-77d1a2aa3508"],
Cell[287648, 7344, 1473, 33, 70, "Output",ExpressionUUID->"bfeabf63-db1a-4ffb-b90f-33077d6f4054"]
}, Closed]],
Cell[289136, 7380, 1545, 45, 90, "Input",ExpressionUUID->"9133c8bf-8d26-439e-bcfe-50a4ef749b96"]
}, Closed]],
Cell[CellGroupData[{
Cell[290718, 7430, 807, 11, 55, "Subsection",ExpressionUUID->"fa375f26-e35d-47ed-81c9-f8bc59dcc98e"],
Cell[CellGroupData[{
Cell[291550, 7445, 2416, 63, 76, "Input",ExpressionUUID->"44ca1895-6e4f-4787-83b2-96798a9bfb87"],
Cell[293969, 7510, 3700, 104, 70, "Output",ExpressionUUID->"73f6fb94-de85-43d6-b0c3-f8a9a10e4a52"]
}, Closed]],
Cell[CellGroupData[{
Cell[297706, 7619, 953, 23, 76, "Input",ExpressionUUID->"668f2032-1387-4835-993e-61cda46ebaab"],
Cell[298662, 7644, 1496, 31, 70, "Output",ExpressionUUID->"9c19e28c-2a44-4591-8425-a1b7fcd4fa70"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[300207, 7681, 173, 3, 55, "Subsection",ExpressionUUID->"b0b8a43e-9d0a-4c51-b514-f270c194b935"],
Cell[CellGroupData[{
Cell[300405, 7688, 2685, 72, 172, "Input",ExpressionUUID->"306f2f49-e9f1-4a57-9cb6-7e83df56d3c1"],
Cell[303093, 7762, 1465, 29, 70, "Output",ExpressionUUID->"bb766ce0-e822-43f0-b1c6-5dc1e4f3e88f"],
Cell[304561, 7793, 1209, 19, 70, "Output",ExpressionUUID->"6e7c8b94-ce6b-4dae-828c-1a8d4cc9ec53"],
Cell[305773, 7814, 1339, 24, 70, "Output",ExpressionUUID->"f81d59d4-ae49-49f2-a985-91784818c3d4"]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[307173, 7845, 227, 4, 78, "Section",ExpressionUUID->"6478f18a-954e-4ae9-bc84-2febb6b52087"],
Cell[307403, 7851, 828, 20, 78, "Input",ExpressionUUID->"893bc0f4-3ae0-49df-9c93-7eb435e75451"],
Cell[CellGroupData[{
Cell[308256, 7875, 366, 5, 81, "Subsection",ExpressionUUID->"20b41a83-3623-4303-9022-f024d8233a7d"],
Cell[CellGroupData[{
Cell[308647, 7884, 5323, 148, 475, "Input",ExpressionUUID->"5e4ab0dd-5c67-4612-852b-22574c229a14"],
Cell[313973, 8034, 26853, 497, 552, "Output",ExpressionUUID->"80335e5f-a66f-4d38-b484-3362102af748"],
Cell[340829, 8533, 92439, 1566, 494, "Output",ExpressionUUID->"001cfc44-6abf-49f2-ab19-612106a89659"]
}, Closed]],
Cell[CellGroupData[{
Cell[433305, 10104, 3168, 80, 323, "Input",ExpressionUUID->"8682a397-07af-46ba-97a1-09d31281340e"],
Cell[436476, 10186, 1426, 32, 101, "Output",ExpressionUUID->"ddf1c054-e416-4ad9-8e8d-1c9f93e35bc3"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[437951, 10224, 361, 11, 55, "Subsection",ExpressionUUID->"1bbda41a-2daa-4ee4-87c1-f7d3e65cf7ba"],
Cell[CellGroupData[{
Cell[438337, 10239, 8330, 228, 420, "Input",ExpressionUUID->"cbdc9ebb-f0fa-4001-96c2-8b22e4df9410"],
Cell[446670, 10469, 51893, 948, 566, "Output",ExpressionUUID->"3586e124-75f9-4c49-ae74-aa5fa91baffd"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[498612, 11423, 342, 10, 55, "Subsection",ExpressionUUID->"aade0b93-89fb-4843-bca9-69d421fd25dd"],
Cell[CellGroupData[{
Cell[498979, 11437, 10438, 301, 718, "Input",ExpressionUUID->"714a2b35-4b48-4a6c-8ce9-0a34c7feaf9f"],
Cell[509420, 11740, 18336, 359, 354, "Output",ExpressionUUID->"ba60a823-e38f-4917-b84c-8a450fa09b50"],
Cell[527759, 12101, 101313, 1717, 316, "Output",ExpressionUUID->"beee6d99-2108-45a7-97bf-b36c61c90cc7"]
}, Closed]],
Cell[629087, 13821, 1351, 32, 104, "Input",ExpressionUUID->"fb2babea-ad2d-48b5-83c5-acce8ba5dbc1"]
}, Closed]],
Cell[CellGroupData[{
Cell[630475, 13858, 383, 11, 55, "Subsection",ExpressionUUID->"b1233e12-a3ec-4c16-a156-61ac238618b1"],
Cell[CellGroupData[{
Cell[630883, 13873, 4092, 120, 395, "Input",ExpressionUUID->"af30e24b-5473-4a9b-bedc-a03402ad55ac"],
Cell[634978, 13995, 5210, 166, 159, "Output",ExpressionUUID->"86aeca61-53e8-4ad9-bd46-6c42979e076a"],
Cell[640191, 14163, 17687, 353, 364, "Output",ExpressionUUID->"391d7a08-8032-43ea-89e5-71e88def0f45"]
}, Closed]],
Cell[CellGroupData[{
Cell[657915, 14521, 1550, 39, 166, "Input",ExpressionUUID->"c9f90d26-1d78-476f-96fb-6a694034a203"],
Cell[659468, 14562, 712, 13, 52, "Output",ExpressionUUID->"2a4c2c4c-acd7-4fea-a49d-de3af01a577c"],
Cell[660183, 14577, 631, 10, 52, "Output",ExpressionUUID->"15117314-f53a-41d0-9034-90b569f5c7cc"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[660863, 14593, 378, 11, 55, "Subsection",ExpressionUUID->"3afc80a2-487a-4f16-a406-dab8f35ad524"],
Cell[CellGroupData[{
Cell[661266, 14608, 7081, 194, 574, "Input",ExpressionUUID->"3dd05f46-001d-4205-8bfa-986ea5061dc4"],
Cell[668350, 14804, 17633, 352, 70, "Output",ExpressionUUID->"fc995112-e0c2-4ac7-aeb4-f3e7bc6c7463"]
}, Closed]],
Cell[CellGroupData[{
Cell[686020, 15161, 4593, 122, 408, "Input",ExpressionUUID->"3982f01e-b675-4c5c-9a21-8f49be94466f"],
Cell[690616, 15285, 3942, 100, 70, "Output",ExpressionUUID->"05505d0c-5a88-4c3c-9489-cce302141266"]
}, Closed]],
Cell[CellGroupData[{
Cell[694595, 15390, 2081, 54, 139, "Input",ExpressionUUID->"91b372d3-2661-4498-aff2-72533fb99c45"],
Cell[696679, 15446, 4542, 127, 70, "Output",ExpressionUUID->"b8683720-d8c5-4a06-ad0c-15e6f23b7c55"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[701270, 15579, 377, 10, 58, "Subsection",ExpressionUUID->"09c0f43e-a20c-41b0-ac48-cc510cfad86b"],
Cell[701650, 15591, 686, 12, 46, "Input",ExpressionUUID->"1d89dffa-e4c2-47fb-a173-aac4663f6d65"],
Cell[CellGroupData[{
Cell[702361, 15607, 3308, 83, 78, "Input",ExpressionUUID->"d08af839-55d6-489e-baca-273a167855bb"],
Cell[705672, 15692, 1612, 36, 111, "Output",ExpressionUUID->"7ab69d5a-1fc4-4fd6-813b-1ce4539c9dbd"],
Cell[707287, 15730, 3096, 85, 108, "Output",ExpressionUUID->"a8374f95-502f-4542-a548-37da0d5c8460"]
}, Closed]],
Cell[CellGroupData[{
Cell[710420, 15820, 3523, 94, 78, "Input",ExpressionUUID->"a3fab2c2-5b8d-4bfd-a7cf-2b3915f4b78e"],
Cell[713946, 15916, 5263, 159, 206, "Output",ExpressionUUID->"9e0ec85b-ca12-43b1-9d3d-4da3fedfe7a2"],
Cell[719212, 16077, 13471, 385, 438, "Output",ExpressionUUID->"c13b04d3-8b10-4808-ac63-c27661822ebe"]
}, Closed]],
Cell[CellGroupData[{
Cell[732720, 16467, 3539, 93, 78, "Input",ExpressionUUID->"f90c1bdc-e2f1-4816-b3e1-ca944e1bc2d5"],
Cell[736262, 16562, 891, 17, 77, "Output",ExpressionUUID->"fa0579ad-a229-4a42-b73c-a0b41aca64ce"],
Cell[737156, 16581, 1260, 31, 106, "Output",ExpressionUUID->"65a04b8b-6cbc-4302-a944-2d1236ab4a48"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[738465, 16618, 331, 9, 84, "Subsection",ExpressionUUID->"59fed317-787c-465b-8c66-a121e1c39007"],
Cell[CellGroupData[{
Cell[738821, 16631, 381, 9, 68, "Subsubsection",ExpressionUUID->"6d2f0cd9-af40-4b89-90bd-8434bd8ecca1"],
Cell[CellGroupData[{
Cell[739227, 16644, 2480, 68, 76, "Input",ExpressionUUID->"9e79571a-cc83-48e6-89fb-3e35696f8d9f"],
Cell[741710, 16714, 2058, 59, 70, "Output",ExpressionUUID->"0a260ab0-fcc2-4353-8179-938e9f670ae3"],
Cell[743771, 16775, 7696, 215, 70, "Output",ExpressionUUID->"2859538a-b96f-462f-8024-d7ed0823fd07"]
}, Closed]],
Cell[CellGroupData[{
Cell[751504, 16995, 10873, 295, 398, "Input",ExpressionUUID->"bd170ad8-5e30-43da-969f-d42b5d4d729d"],
Cell[762380, 17292, 761, 12, 70, "Output",ExpressionUUID->"33e72bb8-211a-40e9-aaa9-1b6f671b2e52"],
Cell[763144, 17306, 768, 12, 70, "Output",ExpressionUUID->"1111d59b-247b-4d8c-8712-4c3a21aa3d59"]
}, Closed]],
Cell[763927, 17321, 362, 9, 76, "Input",ExpressionUUID->"26ecacdb-0fbd-484c-b028-37441d252041"]
}, Closed]],
Cell[CellGroupData[{
Cell[764326, 17335, 188, 3, 53, "Subsubsection",ExpressionUUID->"6a283803-2a17-45dc-90d3-737ceca56f83"],
Cell[CellGroupData[{
Cell[764539, 17342, 6436, 178, 323, "Input",ExpressionUUID->"3eb853d1-ce94-4b8a-bb2a-1d9e9aaabf49"],
Cell[770978, 17522, 1088, 26, 91, "Output",ExpressionUUID->"bafcabe4-4dbc-4b56-80ad-f1295e5f6db0"],
Cell[772069, 17550, 3059, 90, 73, "Output",ExpressionUUID->"9c1efa7c-5fec-4713-8fcb-8bd7090e044f"],
Cell[775131, 17642, 662, 11, 52, "Output",ExpressionUUID->"5638296b-dc53-4f11-8f55-a252cfad7bc3"]
}, Closed]],
Cell[CellGroupData[{
Cell[775830, 17658, 2341, 57, 99, "Input",ExpressionUUID->"b8271b5d-86c7-4736-8422-b41f136ae3f6"],
Cell[778174, 17717, 10080, 308, 390, "Output",ExpressionUUID->"d3e50d1f-5516-436e-be8b-a7bc17c25d6f"]
}, Closed]],
Cell[CellGroupData[{
Cell[788291, 18030, 2474, 52, 65, "Input",ExpressionUUID->"80777af7-9869-473e-a998-d47404f86a66"],
Cell[790768, 18084, 514, 11, 41, "Message",ExpressionUUID->"65362971-eeeb-4839-adae-d859406d969e"],
Cell[791285, 18097, 514, 11, 41, "Message",ExpressionUUID->"ca8d0a24-7a37-436b-bbb4-ae4911bca8a5"],
Cell[791802, 18110, 513, 11, 41, "Message",ExpressionUUID->"a53696fe-7169-4978-822d-c3858937cb98"],
Cell[792318, 18123, 458, 10, 41, "Message",ExpressionUUID->"e1caf5cc-96ea-43bb-891e-41e5205a7e0d"],
Cell[792779, 18135, 103806, 2997, 3455, "Output",ExpressionUUID->"b82c793d-2ff6-46d5-927f-071f0d3a4c13"]
}, Closed]],
Cell[896600, 21135, 2457, 47, 78, "Input",ExpressionUUID->"76933426-38ab-417f-9cd2-42836b97e854"],
Cell[CellGroupData[{
Cell[899082, 21186, 2345, 54, 46, "Input",ExpressionUUID->"dcaa8063-301b-496c-84eb-66b1d8a0a484"],
Cell[901430, 21242, 4606, 137, 118, "Output",ExpressionUUID->"9c49eabb-315f-47a4-85ed-79bb2503409f"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[906085, 21385, 175, 3, 53, "Subsubsection",ExpressionUUID->"7a67ed8a-7902-4b13-9742-cd1b77e6d977"],
Cell[CellGroupData[{
Cell[906285, 21392, 1127, 32, 65, "Input",ExpressionUUID->"6a4a6fbc-ebff-4a39-a594-1e33fab8fd08"],
Cell[907415, 21426, 1280, 39, 96, "Output",ExpressionUUID->"32b358f9-5fc9-4634-9a1c-cf9bef92c6db"]
}, Closed]],
Cell[CellGroupData[{
Cell[908732, 21470, 1780, 42, 65, "Input",ExpressionUUID->"ba244e93-e662-461a-8a12-f2652f7716b2"],
Cell[910515, 21514, 9545, 278, 465, "Output",ExpressionUUID->"96359533-18d8-4177-a3ec-681eba7472cc"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[920109, 21798, 265, 5, 53, "Subsubsection",ExpressionUUID->"fe4432e8-a283-4dfe-b87d-9a0f59da01e7"],
Cell[CellGroupData[{
Cell[920399, 21807, 2142, 56, 98, "Input",ExpressionUUID->"430d522e-6614-49b1-8ebd-2a997a9fc3c6"],
Cell[922544, 21865, 9557, 277, 490, "Output",ExpressionUUID->"73d8d523-e021-4c21-9807-7c8011a5d1a3"]
}, Closed]],
Cell[CellGroupData[{
Cell[932138, 22147, 2164, 57, 109, "Input",ExpressionUUID->"1ee0b63c-55a0-4ef7-acad-43015ae19d85"],
Cell[934305, 22206, 5957, 183, 205, "Output",ExpressionUUID->"d9cead42-6c7e-40f2-afea-c7b2b8885aa8"]
}, Closed]],
Cell[CellGroupData[{
Cell[940299, 22394, 2617, 71, 160, "Input",ExpressionUUID->"7bcec286-7d55-4d1d-a964-e70ffe0131f5"],
Cell[942919, 22467, 923, 27, 86, "Output",ExpressionUUID->"9261bfad-6531-4356-a56f-3e511d6ce414"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[943915, 22502, 157, 3, 78, "Section",ExpressionUUID->"fc671ac7-867e-4161-a6c4-7f8a920cbac5"],
Cell[CellGroupData[{
Cell[944097, 22509, 6129, 125, 712, "Input",ExpressionUUID->"013276b9-499b-4ad3-ad83-19405bd3ba7e"],
Cell[950229, 22636, 910, 14, 36, "Print",ExpressionUUID->"e71c71ee-3403-4f54-a230-2f841df86c09"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[951188, 22656, 160, 3, 78, "Section",ExpressionUUID->"2534492e-ad85-40a1-8028-3572ae7e291e"],
Cell[951351, 22661, 1518, 28, 109, "Input",ExpressionUUID->"96196bcf-8d24-4b38-b165-a786f4099e94"],
Cell[CellGroupData[{
Cell[952894, 22693, 6107, 142, 224, "Input",ExpressionUUID->"5e3dfbf0-5d77-4c7a-9cce-ec132fed21a9"],
Cell[959004, 22837, 168247, 2807, 576, "Output",ExpressionUUID->"8d832f8e-b8cc-40e1-ba87-98dfb7941008"],
Cell[1127254, 25646, 630, 10, 52, "Output",ExpressionUUID->"d70ddd22-10d8-4da2-9452-88503c7016b6"]
}, Closed]],
Cell[CellGroupData[{
Cell[1127921, 25661, 5914, 137, 224, "Input",ExpressionUUID->"2f724e66-74ec-4c86-8362-005aaab8b52d"],
Cell[1133838, 25800, 106948, 1801, 249, "Output",ExpressionUUID->"012094b2-bd6f-4425-8bbb-b9594a71bf20"],
Cell[1240789, 27603, 499, 7, 52, "Output",ExpressionUUID->"95086634-74b2-439e-aba7-537eedaf46d6"]
}, Closed]],
Cell[CellGroupData[{
Cell[1241325, 27615, 6533, 144, 308, "Input",ExpressionUUID->"569f6e63-76b2-425b-817b-b9eb6540727d"],
Cell[1247861, 27761, 256467, 4221, 794, 200520, 3301, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"6f181beb-ed62-467e-be92-e1f19c7eaae0"],
Cell[1504331, 31984, 661, 12, 52, "Output",ExpressionUUID->"00ee9903-bcc5-420b-bded-e587dde98afa"]
}, Closed]],
Cell[CellGroupData[{
Cell[1505029, 32001, 243, 5, 46, "Input",ExpressionUUID->"0ea7ff13-e1df-4ca5-91aa-5e43871651bd"],
Cell[1505275, 32008, 2953, 89, 125, "Output",ExpressionUUID->"50201daf-a67d-4836-8987-f9c61d6d885e"]
}, Closed]]
}, Closed]]
}, Open  ]]
}
]
*)

