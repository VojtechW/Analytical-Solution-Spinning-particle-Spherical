(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1655704,      34550]
NotebookOptionsPosition[   1628503,      34093]
NotebookOutlinePosition[   1628941,      34111]
CellTagsIndexPosition[   1628898,      34108]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["\<\
Analytical solutions for the motion of spinning particles near spherically \
symmetric compact objects\
\>", "Title",
 CellChangeTimes->{{3.8986837614604063`*^9, 3.898683794393318*^9}, {
  3.899543183820113*^9, 
  3.899543187973509*^9}},ExpressionUUID->"66b2ecea-b430-453a-a3c6-\
cbc44d55d7b9"],

Cell["\<\
In this notebook we go through the computations presented in the paper \
\[OpenCurlyDoubleQuote]Analytical solutions for the motion of spinning \
particles near spherically symmetric black holes and exotic compact objects\
\[CloseCurlyDoubleQuote] by Vojt\[EHacek]ch Witzany and Gabriel Andres \
Piovano. The reader should be able to in principle follow almost every step \
of the computation from the paper by examining this notebook. There is one \
step for which Maple was better suited (expression of quadratures in terms of \
Jacobi elliptic integrals), which can be found in an additional Maple \
notebook. This notebook was written by Vojt\[EHacek]ch Witzany and Gabriel \
Andres Piovano in July 2023.\
\>", "Text",
 CellChangeTimes->{{3.8986837614604063`*^9, 3.898683896056691*^9}, {
  3.898684643883115*^9, 3.898684704519411*^9}, {3.89868516350366*^9, 
  3.898685222247407*^9}, {3.899543196259119*^9, 
  3.899543227110588*^9}},ExpressionUUID->"6c3a4c55-95b0-4a5d-b4c8-\
c61cf681604a"],

Cell[CellGroupData[{

Cell["Setting up Static, spherically symmetric metric ", "Section",
 CellChangeTimes->{{3.896940395886209*^9, 3.896940414707168*^9}, {
  3.8971188588402653`*^9, 
  3.897118867638599*^9}},ExpressionUUID->"e8e02dbe-f151-4993-a0b6-\
8c9a41ec76f7"],

Cell[CellGroupData[{

Cell["Christoffel, Riemann for any space-time", "Subsection",
 CellChangeTimes->{
  3.896940395886209*^9, {3.898683919103199*^9, 3.898683935211522*^9}, {
   3.899178526689287*^9, 
   3.899178559616212*^9}},ExpressionUUID->"9a203dc2-7d6b-4f01-82bf-\
5a0438d7999b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"InverseMetric", "[", "g_", "]"}], ":=", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Inverse", "[", "g", "]"}], "]"}]}], "\n", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"First", " ", "index", " ", "up"}], ",", " ", 
    RowBox[{"second", " ", "two", " ", 
     RowBox[{"down", ":"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ChristoffelSymbol", "[", 
    RowBox[{"g_", ",", "xx_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "ig", ",", "res"}], "}"}], ",", 
     RowBox[{
      RowBox[{"n", "=", "4"}], ";", 
      RowBox[{"ig", "=", 
       RowBox[{"InverseMetric", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "2"}], ")"}], "*", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ig", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "s"}], "]"}], "]"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"D", "[", 
                 RowBox[{
                  RowBox[{"g", "[", 
                   RowBox[{"[", 
                    RowBox[{"j", ",", "k"}], "]"}], "]"}], ",", 
                  RowBox[{"xx", "[", 
                   RowBox[{"[", "s", "]"}], "]"}]}], "]"}]}], "+", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"g", "[", 
                  RowBox[{"[", 
                   RowBox[{"j", ",", "s"}], "]"}], "]"}], ",", 
                 RowBox[{"xx", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "+", 
               RowBox[{"D", "[", 
                RowBox[{
                 RowBox[{"g", "[", 
                  RowBox[{"[", 
                   RowBox[{"s", ",", "k"}], "]"}], "]"}], ",", 
                 RowBox[{"xx", "[", 
                  RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"s", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", "res", "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"First", " ", "index", " ", "up"}], ",", " ", 
    RowBox[{"rest", " ", 
     RowBox[{"down", ":"}]}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"RiemannTensor", "[", 
    RowBox[{"g_", ",", "xx_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"n", ",", "Chr", ",", "res"}], "}"}], ",", 
     RowBox[{
      RowBox[{"n", "=", "4"}], ";", 
      RowBox[{"Chr", "=", 
       RowBox[{"ChristoffelSymbol", "[", 
        RowBox[{"g", ",", "xx"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"res", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"Chr", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "k", ",", "m"}], "]"}], "]"}], ",", 
            RowBox[{"xx", "[", 
             RowBox[{"[", "l", "]"}], "]"}]}], "]"}], "-", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"Chr", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "k", ",", "l"}], "]"}], "]"}], ",", 
            RowBox[{"xx", "[", 
             RowBox[{"[", "m", "]"}], "]"}]}], "]"}], "+", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Chr", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "s", ",", "l"}], "]"}], "]"}], "*", 
             RowBox[{"Chr", "[", 
              RowBox[{"[", 
               RowBox[{"s", ",", "k", ",", "m"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"s", ",", "1", ",", "n"}], "}"}]}], "]"}], "-", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Chr", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "s", ",", "m"}], "]"}], "]"}], "*", 
             RowBox[{"Chr", "[", 
              RowBox[{"[", 
               RowBox[{"s", ",", "k", ",", "l"}], "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"s", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"l", ",", "1", ",", "n"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"m", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Simplify", "[", "res", "]"}]}]}], "]"}]}], "\n", 
  RowBox[{"(*", 
   RowBox[{"Two", " ", "lower", " ", 
    RowBox[{"indices", ":"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RicciTensor", "[", 
   RowBox[{"g_", ",", "xx_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Rie", ",", "res", ",", "n"}], "}"}], ",", 
    RowBox[{
     RowBox[{"n", "=", "4"}], ";", 
     RowBox[{"Rie", "=", 
      RowBox[{"RiemannTensor", "[", 
       RowBox[{"g", ",", "xx"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"res", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"Rie", "[", 
           RowBox[{"[", 
            RowBox[{"s", ",", "i", ",", "s", ",", "j"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"s", ",", "1", ",", "n"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Simplify", "[", "res", "]"}]}]}], "]"}]}], "\n", 
 RowBox[{
  RowBox[{"RicciScalar", "[", 
   RowBox[{"g_", ",", "xx_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Ricc", ",", "ig", ",", "res", ",", "n"}], "}"}], ",", 
    RowBox[{
     RowBox[{"n", "=", "4"}], ";", 
     RowBox[{"Ricc", "=", 
      RowBox[{"RicciTensor", "[", 
       RowBox[{"g", ",", "xx"}], "]"}]}], ";", 
     RowBox[{"ig", "=", 
      RowBox[{"InverseMetric", "[", "g", "]"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"res", "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ig", "[", 
          RowBox[{"[", 
           RowBox[{"s", ",", "i"}], "]"}], "]"}], " ", 
         RowBox[{"Ricc", "[", 
          RowBox[{"[", 
           RowBox[{"s", ",", "i"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"s", ",", "1", ",", "n"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Simplify", "[", "res", "]"}]}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.896940395886209*^9, {3.898683919103199*^9, 3.898683935211522*^9}, 
   3.899178526689287*^9, {3.89917859201966*^9, 3.899178593417687*^9}},
 CellLabel->
  "In[175]:=",ExpressionUUID->"ab0f109b-116e-41bf-be2b-37a65641a354"]
}, Closed]],

Cell[CellGroupData[{

Cell["Specializing to static, spherically symmetric metric", "Subsection",
 CellChangeTimes->{
  3.8991785821674223`*^9},ExpressionUUID->"5dc9029d-102f-4ab6-971b-\
e336275861b6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gtt", " ", "=", " ", 
   RowBox[{"-", 
    RowBox[{"f", "[", "r", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"grr", "=", " ", 
   RowBox[{"h", "[", "r", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fhRule", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "-", 
          RowBox[{"2", 
           RowBox[{"M", "/", "#"}]}]}], "&"}], ")"}]}], ",", 
      RowBox[{"h", " ", "->", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"2", 
             RowBox[{"M", "/", "#"}]}]}], ")"}]}], "&"}], " ", ")"}]}]}], 
     "}"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "In", " ", "case", " ", "you", " ", "want", " ", "to", " ", "substitute", 
    " ", "Schwarzschild"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g\[Theta]\[Theta]", "=", " ", 
   SuperscriptBox["r", "2"]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g\[Phi]\[Phi]", "=", " ", 
   RowBox[{
    SuperscriptBox["r", "2"], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xx", "=", 
   RowBox[{"{", 
    RowBox[{"t", ",", "\[Phi]", ",", "r", ",", "\[Theta]"}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gtt", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "g\[Phi]\[Phi]", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "grr", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", "g\[Theta]\[Theta]"}], "}"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ig", " ", "=", " ", 
   RowBox[{"InverseMetric", "[", "g", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"sqrtg", " ", "=", " ", 
   RowBox[{"Simplify", "[", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{"-", 
       RowBox[{"Det", "[", "g", "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", ">", "0"}], ",", 
       RowBox[{"0", "<", "\[Theta]", "<", "\[Pi]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ChrisSchw", "=", 
   RowBox[{"ChristoffelSymbol", "[", 
    RowBox[{"g", ",", "xx"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RiemSchw", " ", "=", " ", 
    RowBox[{"RiemannTensor", "[", 
     RowBox[{"g", ",", "xx"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"All", " ", "lower", " ", "indices"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Riemd", " ", "=", " ", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"RiemSchw", "[", 
         RowBox[{"[", 
          RowBox[{"s", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}], 
        RowBox[{"g", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "s"}], "]"}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"s", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.896930294078179*^9, 3.89693050329508*^9}, {
   3.896930553805229*^9, 3.896930593665873*^9}, {3.896931310023983*^9, 
   3.8969313131171494`*^9}, 3.896931612104539*^9, {3.896932001220887*^9, 
   3.896932008585019*^9}, {3.8969323478844976`*^9, 3.896932368322858*^9}, {
   3.8969324027159853`*^9, 3.896932463199173*^9}, {3.896933095861124*^9, 
   3.896933137831069*^9}, {3.896933323966498*^9, 3.896933334353155*^9}, {
   3.89868394186692*^9, 3.8986839643029957`*^9}, {3.899178574491535*^9, 
   3.8991785855813437`*^9}},
 CellLabel->
  "In[180]:=",ExpressionUUID->"cad8aa8e-71c6-4f38-9453-4e14a851686e"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Killing vectors", "Section",
 CellChangeTimes->{{3.896940429377676*^9, 
  3.89694044742074*^9}},ExpressionUUID->"8d53d2e3-4d2d-4fb7-9ec8-\
f7636cb4010d"],

Cell[CellGroupData[{

Cell["Killing vectors with indices up", "Subsection",
 CellChangeTimes->{{3.896930763848486*^9, 3.89693077288186*^9}, {
  3.8991786194070597`*^9, 
  3.89917862422042*^9}},ExpressionUUID->"67300c36-f5ac-4153-a131-\
fb5cf4f192cd"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xit", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "0", ",", "0"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xix", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], 
      RowBox[{"Cot", "[", "\[Theta]", "]"}]}], ",", "0", ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xiy", " ", "=", " ", 
   RowBox[{"{", " ", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}], 
      RowBox[{"Cot", "[", "\[Theta]", "]"}]}], ",", "0", ",", 
     RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xiz", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.89693074886535*^9, 3.896931201347351*^9}, 
   3.896931294344936*^9, {3.896931334935363*^9, 3.8969313844954033`*^9}, {
   3.8969328329789467`*^9, 3.896932990360662*^9}, {3.8969330307644253`*^9, 
   3.896933088846839*^9}, 3.8969349603153677`*^9, 3.896946818745799*^9, {
   3.896947022982506*^9, 3.8969470390165977`*^9}, {3.8991786350437183`*^9, 
   3.899178635856683*^9}},
 CellLabel->
  "In[192]:=",ExpressionUUID->"4b2cc0af-bc5f-49d8-8501-ae5001762b5e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Lie derivative of metric by xi", "Subsection",
 CellChangeTimes->{{3.899178643304538*^9, 
  3.8991786533966713`*^9}},ExpressionUUID->"dbf53751-8576-4c99-9ee9-\
01a91d9dc1b2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Lxig", "[", "xi_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "xid", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xid", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"xi", "[", 
            RowBox[{"[", "i", "]"}], "]"}], 
           RowBox[{"g", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"xid", "[", 
            RowBox[{"[", "j", "]"}], "]"}], ",", 
           RowBox[{"xx", "[", 
            RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "+", 
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"xid", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", 
           RowBox[{"xx", "[", 
            RowBox[{"[", "j", "]"}], "]"}]}], "]"}], " ", "-", " ", 
         RowBox[{"2", 
          RowBox[{"Sum", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ChrisSchw", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], 
             RowBox[{"xid", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ximunu", "[", "xi_", "]"}], " ", ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "xid", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"xid", " ", "=", " ", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"xi", "[", 
            RowBox[{"[", "i", "]"}], "]"}], 
           RowBox[{"g", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      FractionBox["1", "2"], 
      RowBox[{"Simplify", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"xid", "[", 
             RowBox[{"[", "j", "]"}], "]"}], ",", 
            RowBox[{"xx", "[", 
             RowBox[{"[", "k", "]"}], "]"}]}], "]"}], "-", " ", 
          RowBox[{"D", "[", 
           RowBox[{
            RowBox[{"xid", "[", 
             RowBox[{"[", "k", "]"}], "]"}], ",", 
            RowBox[{"xx", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.89693074886535*^9, 3.896931201347351*^9}, 
   3.896931294344936*^9, {3.896931334935363*^9, 3.8969313844954033`*^9}, {
   3.8969328329789467`*^9, 3.896932990360662*^9}, {3.8969330307644253`*^9, 
   3.896933088846839*^9}, 3.8969349603153677`*^9, 3.896946818745799*^9, {
   3.896947022982506*^9, 3.8969470390165977`*^9}, {3.8991786350437183`*^9, 
   3.899178635856683*^9}, {3.899178667449058*^9, 3.899178670939225*^9}},
 CellLabel->
  "In[196]:=",ExpressionUUID->"da398593-11da-4196-8c62-ea72521285b3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Verifying Killing equation", "Subsection",
 CellChangeTimes->{
  3.8991786750552053`*^9},ExpressionUUID->"46748927-ee4c-4370-8de7-\
b7dd1a621f6f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Lxig", "[", "xit", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Lxig", "[", "xix", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Lxig", "[", "xiy", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Lxig", "[", "xiz", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ximunu", "[", "xit", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ximunu", "[", "xix", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ximunu", "[", "xiy", "]"}], "\[IndentingNewLine]", 
 RowBox[{"ximunu", "[", "xiz", "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.89693074886535*^9, 3.896931201347351*^9}, 
   3.896931294344936*^9, {3.896931334935363*^9, 3.8969313844954033`*^9}, {
   3.8969328329789467`*^9, 3.896932990360662*^9}, {3.8969330307644253`*^9, 
   3.896933088846839*^9}, 3.8969349603153677`*^9, 3.896946818745799*^9, {
   3.896947022982506*^9, 3.8969470390165977`*^9}, {3.8991786350437183`*^9, 
   3.899178635856683*^9}, {3.899178667449058*^9, 3.899178670939225*^9}},
 CellLabel->
  "In[198]:=",ExpressionUUID->"3cd38f6a-2e01-465c-ab07-ecded47b75ea"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896931387275691*^9, 3.896931615784917*^9, 3.8969320173632*^9, {
   3.896932873889092*^9, 3.8969329011098223`*^9}, {3.896932949927449*^9, 
   3.896932983199604*^9}, {3.896933053923349*^9, 3.896933065246232*^9}, {
   3.89693314661197*^9, 3.8969331531172943`*^9}, 3.896933345298059*^9, 
   3.8969349612054243`*^9, 3.896935051338669*^9, 3.8969470404047728`*^9, 
   3.897020335306699*^9, 3.897031997513315*^9, 3.897032161476136*^9, 
   3.897112142110279*^9, 3.897112220445435*^9, 3.897555590879108*^9, 
   3.8976345845879908`*^9, 3.897634651856186*^9, 3.897635474692801*^9, 
   3.898590025870207*^9, 3.898656802477743*^9, 3.898664212436535*^9, 
   3.89868408308902*^9, 3.8987649236064157`*^9, 3.898783617765622*^9, 
   3.898932448309708*^9, 3.899180240741209*^9, 3.899196978839018*^9, 
   3.899201993836191*^9, 3.8992047522578897`*^9, 3.899267897660763*^9, 
   3.89935313562444*^9, 3.899366258409705*^9, 3.8993689660303173`*^9, 
   3.899386104625937*^9, 3.8994329186547194`*^9, 3.899439873081026*^9},
 CellLabel->
  "Out[198]=",ExpressionUUID->"be46979f-e339-4e36-aa9d-139311af1cba"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896931387275691*^9, 3.896931615784917*^9, 3.8969320173632*^9, {
   3.896932873889092*^9, 3.8969329011098223`*^9}, {3.896932949927449*^9, 
   3.896932983199604*^9}, {3.896933053923349*^9, 3.896933065246232*^9}, {
   3.89693314661197*^9, 3.8969331531172943`*^9}, 3.896933345298059*^9, 
   3.8969349612054243`*^9, 3.896935051338669*^9, 3.8969470404047728`*^9, 
   3.897020335306699*^9, 3.897031997513315*^9, 3.897032161476136*^9, 
   3.897112142110279*^9, 3.897112220445435*^9, 3.897555590879108*^9, 
   3.8976345845879908`*^9, 3.897634651856186*^9, 3.897635474692801*^9, 
   3.898590025870207*^9, 3.898656802477743*^9, 3.898664212436535*^9, 
   3.89868408308902*^9, 3.8987649236064157`*^9, 3.898783617765622*^9, 
   3.898932448309708*^9, 3.899180240741209*^9, 3.899196978839018*^9, 
   3.899201993836191*^9, 3.8992047522578897`*^9, 3.899267897660763*^9, 
   3.89935313562444*^9, 3.899366258409705*^9, 3.8993689660303173`*^9, 
   3.899386104625937*^9, 3.8994329186547194`*^9, 3.8994398731123533`*^9},
 CellLabel->
  "Out[199]=",ExpressionUUID->"10942286-cacd-4bdd-9ca4-be7088ae2567"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896931387275691*^9, 3.896931615784917*^9, 3.8969320173632*^9, {
   3.896932873889092*^9, 3.8969329011098223`*^9}, {3.896932949927449*^9, 
   3.896932983199604*^9}, {3.896933053923349*^9, 3.896933065246232*^9}, {
   3.89693314661197*^9, 3.8969331531172943`*^9}, 3.896933345298059*^9, 
   3.8969349612054243`*^9, 3.896935051338669*^9, 3.8969470404047728`*^9, 
   3.897020335306699*^9, 3.897031997513315*^9, 3.897032161476136*^9, 
   3.897112142110279*^9, 3.897112220445435*^9, 3.897555590879108*^9, 
   3.8976345845879908`*^9, 3.897634651856186*^9, 3.897635474692801*^9, 
   3.898590025870207*^9, 3.898656802477743*^9, 3.898664212436535*^9, 
   3.89868408308902*^9, 3.8987649236064157`*^9, 3.898783617765622*^9, 
   3.898932448309708*^9, 3.899180240741209*^9, 3.899196978839018*^9, 
   3.899201993836191*^9, 3.8992047522578897`*^9, 3.899267897660763*^9, 
   3.89935313562444*^9, 3.899366258409705*^9, 3.8993689660303173`*^9, 
   3.899386104625937*^9, 3.8994329186547194`*^9, 3.899439873140025*^9},
 CellLabel->
  "Out[200]=",ExpressionUUID->"295209e4-d06a-41b1-a124-f8c7afc6445e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896931387275691*^9, 3.896931615784917*^9, 3.8969320173632*^9, {
   3.896932873889092*^9, 3.8969329011098223`*^9}, {3.896932949927449*^9, 
   3.896932983199604*^9}, {3.896933053923349*^9, 3.896933065246232*^9}, {
   3.89693314661197*^9, 3.8969331531172943`*^9}, 3.896933345298059*^9, 
   3.8969349612054243`*^9, 3.896935051338669*^9, 3.8969470404047728`*^9, 
   3.897020335306699*^9, 3.897031997513315*^9, 3.897032161476136*^9, 
   3.897112142110279*^9, 3.897112220445435*^9, 3.897555590879108*^9, 
   3.8976345845879908`*^9, 3.897634651856186*^9, 3.897635474692801*^9, 
   3.898590025870207*^9, 3.898656802477743*^9, 3.898664212436535*^9, 
   3.89868408308902*^9, 3.8987649236064157`*^9, 3.898783617765622*^9, 
   3.898932448309708*^9, 3.899180240741209*^9, 3.899196978839018*^9, 
   3.899201993836191*^9, 3.8992047522578897`*^9, 3.899267897660763*^9, 
   3.89935313562444*^9, 3.899366258409705*^9, 3.8993689660303173`*^9, 
   3.899386104625937*^9, 3.8994329186547194`*^9, 3.899439873168559*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"859266ae-5a36-449d-9a4b-d4fff312fae3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}]}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["f", "\[Prime]",
        MultilineFunction->None], "[", "r", "]"}], "2"], ",", "0", ",", "0", 
     ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896931387275691*^9, 3.896931615784917*^9, 3.8969320173632*^9, {
   3.896932873889092*^9, 3.8969329011098223`*^9}, {3.896932949927449*^9, 
   3.896932983199604*^9}, {3.896933053923349*^9, 3.896933065246232*^9}, {
   3.89693314661197*^9, 3.8969331531172943`*^9}, 3.896933345298059*^9, 
   3.8969349612054243`*^9, 3.896935051338669*^9, 3.8969470404047728`*^9, 
   3.897020335306699*^9, 3.897031997513315*^9, 3.897032161476136*^9, 
   3.897112142110279*^9, 3.897112220445435*^9, 3.897555590879108*^9, 
   3.8976345845879908`*^9, 3.897634651856186*^9, 3.897635474692801*^9, 
   3.898590025870207*^9, 3.898656802477743*^9, 3.898664212436535*^9, 
   3.89868408308902*^9, 3.8987649236064157`*^9, 3.898783617765622*^9, 
   3.898932448309708*^9, 3.899180240741209*^9, 3.899196978839018*^9, 
   3.899201993836191*^9, 3.8992047522578897`*^9, 3.899267897660763*^9, 
   3.89935313562444*^9, 3.899366258409705*^9, 3.8993689660303173`*^9, 
   3.899386104625937*^9, 3.8994329186547194`*^9, 3.899439873197226*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"491736a0-8a2a-46c0-b78e-1ae583802fe3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox["1", "2"], " ", "r", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}], ",", "0", ",", 
     RowBox[{"r", " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["r", "2"]}], " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ",", 
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.896931387275691*^9, 3.896931615784917*^9, 3.8969320173632*^9, {
   3.896932873889092*^9, 3.8969329011098223`*^9}, {3.896932949927449*^9, 
   3.896932983199604*^9}, {3.896933053923349*^9, 3.896933065246232*^9}, {
   3.89693314661197*^9, 3.8969331531172943`*^9}, 3.896933345298059*^9, 
   3.8969349612054243`*^9, 3.896935051338669*^9, 3.8969470404047728`*^9, 
   3.897020335306699*^9, 3.897031997513315*^9, 3.897032161476136*^9, 
   3.897112142110279*^9, 3.897112220445435*^9, 3.897555590879108*^9, 
   3.8976345845879908`*^9, 3.897634651856186*^9, 3.897635474692801*^9, 
   3.898590025870207*^9, 3.898656802477743*^9, 3.898664212436535*^9, 
   3.89868408308902*^9, 3.8987649236064157`*^9, 3.898783617765622*^9, 
   3.898932448309708*^9, 3.899180240741209*^9, 3.899196978839018*^9, 
   3.899201993836191*^9, 3.8992047522578897`*^9, 3.899267897660763*^9, 
   3.89935313562444*^9, 3.899366258409705*^9, 3.8993689660303173`*^9, 
   3.899386104625937*^9, 3.8994329186547194`*^9, 3.89943987323044*^9},
 CellLabel->
  "Out[203]=",ExpressionUUID->"e2af1531-3cd8-4d3a-b435-2f6d2de802cb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      FractionBox["1", "2"], " ", "r", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["r", "2"]}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
     RowBox[{"r", " ", 
      RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.896931387275691*^9, 3.896931615784917*^9, 3.8969320173632*^9, {
   3.896932873889092*^9, 3.8969329011098223`*^9}, {3.896932949927449*^9, 
   3.896932983199604*^9}, {3.896933053923349*^9, 3.896933065246232*^9}, {
   3.89693314661197*^9, 3.8969331531172943`*^9}, 3.896933345298059*^9, 
   3.8969349612054243`*^9, 3.896935051338669*^9, 3.8969470404047728`*^9, 
   3.897020335306699*^9, 3.897031997513315*^9, 3.897032161476136*^9, 
   3.897112142110279*^9, 3.897112220445435*^9, 3.897555590879108*^9, 
   3.8976345845879908`*^9, 3.897634651856186*^9, 3.897635474692801*^9, 
   3.898590025870207*^9, 3.898656802477743*^9, 3.898664212436535*^9, 
   3.89868408308902*^9, 3.8987649236064157`*^9, 3.898783617765622*^9, 
   3.898932448309708*^9, 3.899180240741209*^9, 3.899196978839018*^9, 
   3.899201993836191*^9, 3.8992047522578897`*^9, 3.899267897660763*^9, 
   3.89935313562444*^9, 3.899366258409705*^9, 3.8993689660303173`*^9, 
   3.899386104625937*^9, 3.8994329186547194`*^9, 3.899439873258222*^9},
 CellLabel->
  "Out[204]=",ExpressionUUID->"30c3248c-e3e4-4813-b506-ad2a7841b44d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", 
     RowBox[{"r", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ",", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SuperscriptBox["r", "2"], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Theta]"}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", "r"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"]}], ",", "0", ",", "0"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["r", "2"]}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}]}], ",", "0", ",", "0"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.896931387275691*^9, 3.896931615784917*^9, 3.8969320173632*^9, {
   3.896932873889092*^9, 3.8969329011098223`*^9}, {3.896932949927449*^9, 
   3.896932983199604*^9}, {3.896933053923349*^9, 3.896933065246232*^9}, {
   3.89693314661197*^9, 3.8969331531172943`*^9}, 3.896933345298059*^9, 
   3.8969349612054243`*^9, 3.896935051338669*^9, 3.8969470404047728`*^9, 
   3.897020335306699*^9, 3.897031997513315*^9, 3.897032161476136*^9, 
   3.897112142110279*^9, 3.897112220445435*^9, 3.897555590879108*^9, 
   3.8976345845879908`*^9, 3.897634651856186*^9, 3.897635474692801*^9, 
   3.898590025870207*^9, 3.898656802477743*^9, 3.898664212436535*^9, 
   3.89868408308902*^9, 3.8987649236064157`*^9, 3.898783617765622*^9, 
   3.898932448309708*^9, 3.899180240741209*^9, 3.899196978839018*^9, 
   3.899201993836191*^9, 3.8992047522578897`*^9, 3.899267897660763*^9, 
   3.89935313562444*^9, 3.899366258409705*^9, 3.8993689660303173`*^9, 
   3.899386104625937*^9, 3.8994329186547194`*^9, 3.899439873286481*^9},
 CellLabel->
  "Out[205]=",ExpressionUUID->"45f8236e-38e8-4d15-a28a-70bbaab2ba61"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Dynamics of spinning particle", "Section",
 CellChangeTimes->{{3.896940464175743*^9, 
  3.8969404709567633`*^9}},ExpressionUUID->"dedcc5ec-489b-4ef0-aa4b-\
dbb02f42656f"],

Cell[CellGroupData[{

Cell["Dynamical variables", "Subsection",
 CellChangeTimes->{{3.8969314173609943`*^9, 3.896931846186133*^9}, {
   3.8969319108683243`*^9, 3.896931948957797*^9}, {3.896932038232312*^9, 
   3.896932048467902*^9}, {3.896932093331916*^9, 3.896932149254133*^9}, {
   3.8969323319959497`*^9, 3.896932332304796*^9}, {3.896932495671736*^9, 
   3.8969324970321083`*^9}, {3.896932714929493*^9, 3.896932799338982*^9}, {
   3.8969331815351458`*^9, 3.8969333055790987`*^9}, {3.8969333541505833`*^9, 
   3.896933386409017*^9}, {3.896935723238756*^9, 3.896935768526053*^9}, 
   3.897634580975752*^9, {3.898656430255069*^9, 3.898656453742325*^9}, 
   3.8986568141724787`*^9, {3.898684016253788*^9, 3.898684043004592*^9}, {
   3.8986841195772676`*^9, 3.8986841581941147`*^9}, {3.898684197189333*^9, 
   3.898684372757249*^9}, {3.898684450024403*^9, 3.89868447542845*^9}, {
   3.898684526053136*^9, 3.8986845604547577`*^9}, {3.8991787033153353`*^9, 
   3.899178717796179*^9}},ExpressionUUID->"b6fa96fc-d000-4190-80dc-\
03fc9501dc95"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xt", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"tt", "[", "\[Tau]", "]"}], ",", 
     RowBox[{"\[Phi]t", "[", "\[Tau]", "]"}], ",", 
     RowBox[{"rt", "[", "\[Tau]", "]"}], ",", 
     RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TrRule", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"xx", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "->", 
       RowBox[{"xt", "[", 
        RowBox[{"[", "i", "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Substitute", " ", "trajectory", " ", "into", " ", "coordinate", " ", 
    "expressions"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DeTrRule", " ", "=", " ", 
    RowBox[{"Join", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"xt", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "->", 
         RowBox[{"xx", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"xt", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]"}], "]"}], "->", 
         SuperscriptBox["u", 
          RowBox[{"xx", "[", 
           RowBox[{"[", "i", "]"}], "]"}]]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"St", "[", "\[Tau]", "]"}], "->", 
         SuperscriptBox["s", "t"]}], ",", 
        RowBox[{
         RowBox[{"Sr", "[", "\[Tau]", "]"}], "->", 
         SuperscriptBox["s", "r"]}], ",", 
        RowBox[{
         RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], "->", 
         SuperscriptBox["s", "\[Phi]"]}], ",", 
        RowBox[{
         RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", 
         SuperscriptBox["s", "\[Theta]"]}]}], "}"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "  ", 
  RowBox[{"(*", 
   RowBox[{
   "Not", " ", "useful", " ", "but", " ", "visually", " ", "nice", " ", 
    "symbolic", " ", "presentation"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ucov", " ", "=", " ", 
    RowBox[{"D", "[", 
     RowBox[{"xt", ",", "\[Tau]"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Four", "-", "velocity"}], ",", " ", 
    RowBox[{"indices", " ", "up"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ucon", " ", "=", " ", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"ucov", "[", 
          RowBox[{"[", "i", "]"}], "]"}], 
         RowBox[{"g", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Four", "-", "velocity"}], ",", " ", 
    RowBox[{"indices", " ", "down"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.8969314173609943`*^9, 3.896931846186133*^9}, {
   3.8969319108683243`*^9, 3.896931948957797*^9}, {3.896932038232312*^9, 
   3.896932048467902*^9}, {3.896932093331916*^9, 3.896932149254133*^9}, {
   3.8969323319959497`*^9, 3.896932332304796*^9}, {3.896932495671736*^9, 
   3.8969324970321083`*^9}, {3.896932714929493*^9, 3.896932799338982*^9}, {
   3.8969331815351458`*^9, 3.8969333055790987`*^9}, {3.8969333541505833`*^9, 
   3.896933386409017*^9}, {3.896935723238756*^9, 3.896935768526053*^9}, 
   3.897634580975752*^9, {3.898656430255069*^9, 3.898656453742325*^9}, 
   3.8986568141724787`*^9, {3.898684016253788*^9, 3.898684043004592*^9}, {
   3.8986841195772676`*^9, 3.8986841581941147`*^9}, {3.898684197189333*^9, 
   3.898684372757249*^9}, {3.898684450024403*^9, 3.89868447542845*^9}, {
   3.898684526053136*^9, 3.8986845604547577`*^9}, {3.8991787033153353`*^9, 
   3.899178711029131*^9}},
 CellLabel->
  "In[206]:=",ExpressionUUID->"9936dec3-58f9-414c-b3fd-d7a15b20b2f1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Spin vector and tensor", "Subsection",
 CellChangeTimes->{{3.899178729046084*^9, 
  3.899178733184455*^9}},ExpressionUUID->"51b63890-f152-4eb3-82ca-\
9c209d60ae55"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Svec", " ", "is", " ", "the", " ", "spin", " ", "vector", " ", "and", " ",
     "has", " ", "indices", " ", "up"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Svec", " ", "=", " ", 
     RowBox[{"\[Epsilon]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"St", "[", "\[Tau]", "]"}], ",", 
        RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], ",", 
        RowBox[{"Sr", "[", "\[Tau]", "]"}], ",", 
        RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Spin", " ", "tensor", " ", "in", " ", "terms", " ", "of", " ", "spin", 
      " ", "vector"}], ",", " ", 
     RowBox[{"indices", " ", "up"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Stens", " ", "=", " ", 
     RowBox[{"Simplify", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         FractionBox["1", 
          RowBox[{" ", "sqrtg"}]], 
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"LeviCivitaTensor", "[", "4", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}], 
            RowBox[{"ucon", "[", 
             RowBox[{"[", "k", "]"}], "]"}], 
            RowBox[{"g", "[", 
             RowBox[{"[", 
              RowBox[{"l", ",", "m"}], "]"}], "]"}], 
            RowBox[{"Svec", "[", 
             RowBox[{"[", "m", "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"l", ",", "1", ",", "4"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Pretty", " ", "representation", " ", "of", " ", "spin", " ", 
     RowBox[{"tensor", ":"}]}], "*)"}], 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Stens", "/.", "DeTrRule"}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", "->", "1"}], "}"}]}], ")"}], "//", "Simplify"}],
     "//", "MatrixForm"}]}]}]], "Input",
 CellChangeTimes->{{3.8969314173609943`*^9, 3.896931846186133*^9}, {
   3.8969319108683243`*^9, 3.896931948957797*^9}, {3.896932038232312*^9, 
   3.896932048467902*^9}, {3.896932093331916*^9, 3.896932149254133*^9}, {
   3.8969323319959497`*^9, 3.896932332304796*^9}, {3.896932495671736*^9, 
   3.8969324970321083`*^9}, {3.896932714929493*^9, 3.896932799338982*^9}, {
   3.8969331815351458`*^9, 3.8969333055790987`*^9}, {3.8969333541505833`*^9, 
   3.896933386409017*^9}, {3.896935723238756*^9, 3.896935768526053*^9}, 
   3.897634580975752*^9, {3.898656430255069*^9, 3.898656453742325*^9}, 
   3.8986568141724787`*^9, {3.898684054684731*^9, 3.89868407628555*^9}, {
   3.8986841665667*^9, 3.8986841794543867`*^9}, {3.898684407793787*^9, 
   3.898684432180835*^9}, {3.8986844889710827`*^9, 3.89868450948917*^9}, {
   3.89875075272967*^9, 3.8987507630507183`*^9}},
 CellLabel->
  "In[211]:=",ExpressionUUID->"cc90965d-ac37-4cd2-827d-80b74fff7db3"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"0", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["s", "\[Theta]"], " ", 
           SuperscriptBox["u", "r"]}], "-", 
          RowBox[{
           SuperscriptBox["s", "r"], " ", 
           SuperscriptBox["u", "\[Theta]"]}]}], ")"}], " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"h", "[", "r", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]], 
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["s", "\[Phi]"], " ", 
           SuperscriptBox["u", "\[Theta]"]}], "-", 
          RowBox[{
           SuperscriptBox["s", "\[Theta]"], " ", 
           SuperscriptBox["u", "\[Phi]"]}]}], ")"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["s", "\[Phi]"]}], " ", 
           SuperscriptBox["u", "r"]}], "+", 
          RowBox[{
           SuperscriptBox["s", "r"], " ", 
           SuperscriptBox["u", "\[Phi]"]}]}], ")"}], " ", 
        RowBox[{"h", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["s", "\[Theta]"]}], " ", 
           SuperscriptBox["u", "r"]}], "+", 
          RowBox[{
           SuperscriptBox["s", "r"], " ", 
           SuperscriptBox["u", "\[Theta]"]}]}], ")"}], " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"h", "[", "r", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]], "0", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["s", "\[Theta]"]}], " ", 
           SuperscriptBox["u", "t"]}], "+", 
          RowBox[{
           SuperscriptBox["s", "t"], " ", 
           SuperscriptBox["u", "\[Theta]"]}]}], ")"}], " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"f", "[", "r", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["s", "t"]}], " ", 
           SuperscriptBox["u", "r"]}], "+", 
          RowBox[{
           SuperscriptBox["s", "r"], " ", 
           SuperscriptBox["u", "t"]}]}], ")"}], " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"f", "[", "r", "]"}], " ", 
          RowBox[{"h", "[", "r", "]"}]}]]}], 
       SuperscriptBox["r", "2"]]},
     {
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["s", "\[Phi]"], " ", 
            SuperscriptBox["u", "\[Theta]"]}], "-", 
           RowBox[{
            SuperscriptBox["s", "\[Theta]"], " ", 
            SuperscriptBox["u", "\[Phi]"]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
        SqrtBox[
         RowBox[{
          RowBox[{"f", "[", "r", "]"}], " ", 
          RowBox[{"h", "[", "r", "]"}]}]]]}], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["s", "\[Theta]"], " ", 
           SuperscriptBox["u", "t"]}], "-", 
          RowBox[{
           SuperscriptBox["s", "t"], " ", 
           SuperscriptBox["u", "\[Theta]"]}]}], ")"}], " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"f", "[", "r", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]], "0", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            SuperscriptBox["s", "\[Phi]"]}], " ", 
           SuperscriptBox["u", "t"]}], "+", 
          RowBox[{
           SuperscriptBox["s", "t"], " ", 
           SuperscriptBox["u", "\[Phi]"]}]}], ")"}], " ", 
        RowBox[{"f", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]]},
     {
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["s", "\[Phi]"], " ", 
           SuperscriptBox["u", "r"]}], "-", 
          RowBox[{
           SuperscriptBox["s", "r"], " ", 
           SuperscriptBox["u", "\[Phi]"]}]}], ")"}], " ", 
        RowBox[{"h", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["s", "t"], " ", 
           SuperscriptBox["u", "r"]}], "-", 
          RowBox[{
           SuperscriptBox["s", "r"], " ", 
           SuperscriptBox["u", "t"]}]}], ")"}], " ", 
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"f", "[", "r", "]"}], " ", 
          RowBox[{"h", "[", "r", "]"}]}]]}], 
       SuperscriptBox["r", "2"]], 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["s", "\[Phi]"], " ", 
           SuperscriptBox["u", "t"]}], "-", 
          RowBox[{
           SuperscriptBox["s", "t"], " ", 
           SuperscriptBox["u", "\[Phi]"]}]}], ")"}], " ", 
        RowBox[{"f", "[", "r", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Theta]", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]], "0"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.896932045722739*^9, {3.896933268785829*^9, 3.896933306108165*^9}, {
   3.896933348584228*^9, 3.896933357577005*^9}, 3.89693338864781*^9, 
   3.8969336099309072`*^9, 3.896935051481242*^9, 3.896935832524097*^9, 
   3.89702033573158*^9, 3.897031997883338*^9, 3.8970321617267437`*^9, 
   3.8971121424651003`*^9, 3.897112220747271*^9, 3.897555591297689*^9, 
   3.897634585062833*^9, 3.8976346523034687`*^9, 3.897635475143992*^9, 
   3.8985900263215446`*^9, {3.898656768616735*^9, 3.8986568027552*^9}, 
   3.898656861784412*^9, 3.8986642129482403`*^9, {3.898684059240691*^9, 
   3.8986840835041*^9}, {3.898684162343594*^9, 3.898684201517363*^9}, {
   3.898684361020406*^9, 3.8986843814501534`*^9}, {3.898684414525689*^9, 
   3.8986844337770367`*^9}, {3.898684481727833*^9, 3.8986845104548883`*^9}, 
   3.898684564241416*^9, 3.8987649240563593`*^9, 3.898783618160555*^9, 
   3.8989324487365103`*^9, 3.8991802415449743`*^9, 3.899196979356193*^9, 
   3.899201994356049*^9, 3.899204752730379*^9, 3.899267898139879*^9, 
   3.8993531360883512`*^9, 3.899366258924197*^9, 3.899368966574881*^9, 
   3.899386105136167*^9, 3.899432919136817*^9, 3.899439873599662*^9},
 CellLabel->
  "Out[213]//MatrixForm=",ExpressionUUID->"bddd3bf2-201f-4af2-97da-\
d262c39ba59f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Consistency", " ", "checks"}], "*)"}]], "Input",
 CellChangeTimes->{{3.899178810275691*^9, 3.8991788160108547`*^9}},
 CellLabel->
  "In[214]:=",ExpressionUUID->"5e32ac32-2576-4528-93d6-917bf0ee1f15"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"suOnShell", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       SuperscriptBox["tt", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}], " ", "->", " ", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"-", "1"}], "-", 
          RowBox[{"grr", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["rt", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}], "2"]}], "-", 
          RowBox[{"g\[Phi]\[Phi]", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Phi]t", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}], "2"]}], " ", 
          "-", 
          RowBox[{"g\[Theta]\[Theta]", " ", 
           SuperscriptBox[
            RowBox[{
             SuperscriptBox["\[Theta]t", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}], "2"]}]}], 
         "gtt"], " "}]]}], ",", 
     RowBox[{
      RowBox[{"St", "[", "\[Tau]", "]"}], "->", " ", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox["S", "2"]}], "-", 
          RowBox[{"grr", " ", 
           SuperscriptBox[
            RowBox[{"Sr", "[", "\[Tau]", "]"}], "2"]}], "-", 
          RowBox[{"g\[Phi]\[Phi]", " ", 
           SuperscriptBox[
            RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], "2"]}], " ", "-", 
          RowBox[{"g\[Theta]\[Theta]", " ", 
           SuperscriptBox[
            RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "2"]}]}], "gtt"], 
        " "}]]}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"ExpandAll", "[", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Stens", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], 
         RowBox[{"g", "[", 
          RowBox[{"[", 
           RowBox[{"j", ",", "l"}], "]"}], "]"}], 
         RowBox[{"Svec", "[", 
          RowBox[{"[", "l", "]"}], "]"}]}], "/.", "suOnShell"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"ExpandAll", "[", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Stens", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "j"}], "]"}], "]"}], 
         RowBox[{"ucon", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "/.", "suOnShell"}], ",", 
       RowBox[{"{", 
        RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}], "]"}], ",", 
   
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.8976347996440573`*^9, 3.897635161980936*^9}, {
  3.897635218506898*^9, 3.897635269003684*^9}, {3.8976353015400248`*^9, 
  3.897635350331506*^9}, {3.8986566887304697`*^9, 3.898656749676649*^9}, {
  3.89917874414775*^9, 3.899178754929385*^9}},
 CellLabel->
  "In[215]:=",ExpressionUUID->"7d8945b5-98b8-415e-9689-4985272aa12a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.8976349056619473`*^9, 3.8976349387641497`*^9}, {
   3.897635158764051*^9, 3.897635175927105*^9}, {3.897635339593762*^9, 
   3.8976353524782457`*^9}, 3.897635477274941*^9, 3.8985900283408747`*^9, 
   3.8986567599266567`*^9, 3.898656802812131*^9, 3.898664213013907*^9, 
   3.898684083572322*^9, 3.898764924131103*^9, 3.8987836182114*^9, 
   3.89893244879882*^9, 3.899180241701305*^9, 3.8991969794162397`*^9, 
   3.899201994434435*^9, 3.89920475280066*^9, 3.899267898195936*^9, 
   3.89935313614929*^9, 3.899366258985433*^9, 3.8993689666378098`*^9, 
   3.899386105196183*^9, 3.899432919192094*^9, 3.899439873666695*^9},
 CellLabel->
  "Out[216]=",ExpressionUUID->"f7cfdcc8-491e-4a6c-aef9-513d43dccf72"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.8976349056619473`*^9, 3.8976349387641497`*^9}, {
   3.897635158764051*^9, 3.897635175927105*^9}, {3.897635339593762*^9, 
   3.8976353524782457`*^9}, 3.897635477274941*^9, 3.8985900283408747`*^9, 
   3.8986567599266567`*^9, 3.898656802812131*^9, 3.898664213013907*^9, 
   3.898684083572322*^9, 3.898764924131103*^9, 3.8987836182114*^9, 
   3.89893244879882*^9, 3.899180241701305*^9, 3.8991969794162397`*^9, 
   3.899201994434435*^9, 3.89920475280066*^9, 3.899267898195936*^9, 
   3.89935313614929*^9, 3.899366258985433*^9, 3.8993689666378098`*^9, 
   3.899386105196183*^9, 3.899432919192094*^9, 3.8994398736915293`*^9},
 CellLabel->
  "Out[217]=",ExpressionUUID->"c69550e6-7d73-450e-b43a-2dfd1d2c244b"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Equations of motion", "Subsection",
 CellChangeTimes->{{3.8969314173609943`*^9, 3.896931846186133*^9}, {
   3.8969319108683243`*^9, 3.896931948957797*^9}, {3.896932038232312*^9, 
   3.896932041406851*^9}, {3.896933467407468*^9, 3.896933469244429*^9}, {
   3.896933544674555*^9, 3.8969335645388737`*^9}, 3.896933606912093*^9, 
   3.896933666607025*^9, {3.89693370073359*^9, 3.896933793917666*^9}, {
   3.896934378131613*^9, 3.8969344383447638`*^9}, {3.8969345213566723`*^9, 
   3.89693456170076*^9}, {3.896947191553883*^9, 3.89694721316336*^9}, {
   3.8986591594543743`*^9, 3.898659161494543*^9}, {3.8991787844045143`*^9, 
   3.899178787256159*^9}},ExpressionUUID->"1b963e1d-919a-4ca8-8d6a-\
bdb5811e76c0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Equations", " ", "of", " ", "motion", " ", "in", " ", "the", " ", "form", 
    " ", "of", " ", 
    RowBox[{"substitutions", "/", "rules"}]}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"xEOM", " ", "=", " ", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"ucov", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]"}], "]"}], "->", " ", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"ChrisSchw", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], 
              RowBox[{"ucov", "[", 
               RowBox[{"[", "j", "]"}], "]"}], 
              RowBox[{"ucov", "[", 
               RowBox[{"[", "k", "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "-", " ", 
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"Sum", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"RiemSchw", "[", 
               RowBox[{"[", 
                RowBox[{"i", ",", "j", ",", "k", ",", "l"}], "]"}], "]"}], 
              RowBox[{"ucov", "[", 
               RowBox[{"[", "j", "]"}], "]"}], 
              RowBox[{"Stens", "[", 
               RowBox[{"[", 
                RowBox[{"k", ",", "l"}], "]"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"k", ",", "1", ",", "4"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}]}]}]}], " ", 
        ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
      "TrRule"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SEOM", " ", "=", " ", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Svec", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "/", "\[Epsilon]"}], ",", 
           "\[Tau]"}], "]"}], "->", " ", 
         RowBox[{"Simplify", "[", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ChrisSchw", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], " ", 
               RowBox[{"Svec", "[", 
                RowBox[{"[", "j", "]"}], "]"}], 
               RowBox[{"ucov", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]}], "/", 
           "\[Epsilon]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "/.", 
      "TrRule"}]}], ";"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8969314173609943`*^9, 3.896931846186133*^9}, {
   3.8969319108683243`*^9, 3.896931948957797*^9}, {3.896932038232312*^9, 
   3.896932041406851*^9}, {3.896933467407468*^9, 3.896933469244429*^9}, {
   3.896933544674555*^9, 3.8969335645388737`*^9}, 3.896933606912093*^9, 
   3.896933666607025*^9, {3.89693370073359*^9, 3.896933793917666*^9}, {
   3.896934378131613*^9, 3.8969344383447638`*^9}, {3.8969345213566723`*^9, 
   3.89693456170076*^9}, {3.896947191553883*^9, 3.89694721316336*^9}, {
   3.8986591594543743`*^9, 3.898659161494543*^9}, 3.8991787844045143`*^9},
 CellLabel->
  "In[218]:=",ExpressionUUID->"03c385a9-28fe-44ec-b98b-a8337cdeb3b6"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Constants of motion", "Section",
 CellChangeTimes->{{3.896940488115079*^9, 
  3.8969404922839003`*^9}},ExpressionUUID->"76946252-83fb-4288-866a-\
371bbe58976e"],

Cell[CellGroupData[{

Cell["Killing constants of motion", "Subsection",
 CellChangeTimes->{{3.896934598879077*^9, 3.896934847024322*^9}, {
   3.896934996198616*^9, 3.896935023463715*^9}, {3.896935135177882*^9, 
   3.896935141181439*^9}, {3.8969353947308903`*^9, 3.896935432235372*^9}, {
   3.8969354631887503`*^9, 3.896935482401833*^9}, {3.8969357820320683`*^9, 
   3.8969357970696917`*^9}, {3.896940789152491*^9, 3.896940797702455*^9}, {
   3.897042410253681*^9, 3.8970424124820337`*^9}, {3.8970432351440907`*^9, 
   3.897043237252162*^9}, {3.897043348407268*^9, 3.897043362799342*^9}, 
   3.897112136489996*^9, {3.897635942751834*^9, 3.897635945392706*^9}, {
   3.8991788485972643`*^9, 
   3.899178884526622*^9}},ExpressionUUID->"0161c64f-fadd-4408-8797-\
e23557b25c18"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SpConst", "[", "xi_", "]"}], ":=", " ", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ucon", "[", 
       RowBox[{"[", "i", "]"}], "]"}], 
      RowBox[{"xi", "[", 
       RowBox[{"[", "i", "]"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], " ", "-", " ", 
   RowBox[{
    FractionBox["1", "2"], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"Sum", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"xi", "[", 
             RowBox[{"[", "k", "]"}], "]"}], 
            RowBox[{"g", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "k"}], "]"}], "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
         RowBox[{"xx", "[", 
          RowBox[{"[", "j", "]"}], "]"}]}], "]"}], 
       RowBox[{"Stens", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "j"}], "]"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], 
     "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Es", " ", "=", " ", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"SpConst", "[", "xit", "]"}]}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Jx", " ", "=", " ", 
  RowBox[{
   RowBox[{"SpConst", "[", "xix", "]"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Jy", " ", "=", " ", 
  RowBox[{
   RowBox[{"SpConst", "[", "xiy", "]"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Jz", " ", "=", 
  RowBox[{
   RowBox[{"SpConst", "[", "xiz", "]"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Jv", " ", "=", " ", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Jx", ",", "Jy", ",", "Jz"}], "}"}], "//", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"h", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}]}], "}"}]}], "]"}], 
     "&"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.896934598879077*^9, 3.896934847024322*^9}, {
   3.896934996198616*^9, 3.896935023463715*^9}, {3.896935135177882*^9, 
   3.896935141181439*^9}, {3.8969353947308903`*^9, 3.896935432235372*^9}, {
   3.8969354631887503`*^9, 3.896935482401833*^9}, {3.8969357820320683`*^9, 
   3.8969357970696917`*^9}, {3.896940789152491*^9, 3.896940797702455*^9}, {
   3.897042410253681*^9, 3.8970424124820337`*^9}, {3.8970432351440907`*^9, 
   3.897043237252162*^9}, {3.897043348407268*^9, 3.897043362799342*^9}, 
   3.897112136489996*^9, {3.897635942751834*^9, 3.897635945392706*^9}, {
   3.8991788485972643`*^9, 3.8991788621590147`*^9}},
 CellLabel->
  "In[220]:=",ExpressionUUID->"6ae2a763-581a-4444-83f3-2be611138283"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", "r", "]"}], " ", 
   RowBox[{
    SuperscriptBox["tt", "\[Prime]",
     MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "\[Epsilon]", " ", 
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{
     SuperscriptBox["f", "\[Prime]",
      MultilineFunction->None], "[", "r", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}]}], " ", 
       RowBox[{
        SuperscriptBox["\[Theta]t", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
       RowBox[{
        SuperscriptBox["\[Phi]t", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
   RowBox[{"2", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"f", "[", "r", "]"}], " ", 
      RowBox[{"h", "[", "r", "]"}]}]]}]]}]], "Output",
 CellChangeTimes->{3.896935483024852*^9, 3.8969407982814093`*^9, 
  3.8970203359863367`*^9, 3.897031998107177*^9, 3.897032161785145*^9, 
  3.897042413015847*^9, 3.897043237661097*^9, 3.897043363897003*^9, 
  3.897112142594475*^9, 3.8971122208709373`*^9, 3.897555591480762*^9, 
  3.897634585258608*^9, 3.89763465247544*^9, 3.897635477458123*^9, 
  3.897635946568865*^9, 3.89859002873382*^9, 3.898656803254857*^9, 
  3.898664213496415*^9, 3.898684083975154*^9, 3.8987649245624027`*^9, 
  3.8987836184838743`*^9, 3.89893244920722*^9, 3.899180242149585*^9, 
  3.899196979854412*^9, 3.899201994868692*^9, 3.899204753218629*^9, 
  3.8992678986174994`*^9, 3.899353136571333*^9, 3.899366259454184*^9, 
  3.899368967123534*^9, 3.899386105622077*^9, 3.899432919606374*^9, 
  3.899439874119844*^9},
 CellLabel->
  "Out[221]=",ExpressionUUID->"41d6351c-1858-4e74-99c9-42e4cd72a6b5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["r", "2"]}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Csc", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Theta]t", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
       RowBox[{
        RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
        RowBox[{
         SuperscriptBox["\[Phi]t", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], "+", 
    FractionBox[
     RowBox[{"\[Epsilon]", " ", 
      RowBox[{"f", "[", "r", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["rt", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["tt", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
        "+", 
        RowBox[{"r", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Cos", "[", "\[Phi]", "]"}]}], " ", 
            RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["tt", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["tt", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"Cot", "[", "\[Theta]", "]"}], " ", 
            RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Theta]t", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
           RowBox[{
            RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
            RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["\[Phi]t", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}]}], 
       ")"}]}], 
     SqrtBox[
      RowBox[{
       RowBox[{"f", "[", "r", "]"}], " ", 
       RowBox[{"h", "[", "r", "]"}]}]]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.896935483024852*^9, 3.8969407982814093`*^9, 
  3.8970203359863367`*^9, 3.897031998107177*^9, 3.897032161785145*^9, 
  3.897042413015847*^9, 3.897043237661097*^9, 3.897043363897003*^9, 
  3.897112142594475*^9, 3.8971122208709373`*^9, 3.897555591480762*^9, 
  3.897634585258608*^9, 3.89763465247544*^9, 3.897635477458123*^9, 
  3.897635946568865*^9, 3.89859002873382*^9, 3.898656803254857*^9, 
  3.898664213496415*^9, 3.898684083975154*^9, 3.8987649245624027`*^9, 
  3.8987836184838743`*^9, 3.89893244920722*^9, 3.899180242149585*^9, 
  3.899196979854412*^9, 3.899201994868692*^9, 3.899204753218629*^9, 
  3.8992678986174994`*^9, 3.899353136571333*^9, 3.899366259454184*^9, 
  3.899368967123534*^9, 3.899386105622077*^9, 3.899432919606374*^9, 
  3.899439880746951*^9},
 CellLabel->
  "Out[222]=",ExpressionUUID->"f9047258-5444-41c2-8b2a-4bdedef5abf0"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]t", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
     RowBox[{
      RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]t", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], "+", 
  FractionBox[
   RowBox[{"\[Epsilon]", " ", 
    RowBox[{"f", "[", "r", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"h", "[", "r", "]"}], " ", 
          RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["rt", "\[Prime]",
               MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["tt", "\[Prime]",
               MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
         "+", 
         RowBox[{"r", " ", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}]}], " ", 
             RowBox[{
              SuperscriptBox["tt", "\[Prime]",
               MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Theta]t", "\[Prime]",
               MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}]}], 
        ")"}]}], "+", 
      RowBox[{"r", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}]}], " ", 
          RowBox[{
           SuperscriptBox["tt", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}]}], 
     ")"}]}], 
   SqrtBox[
    RowBox[{
     RowBox[{"f", "[", "r", "]"}], " ", 
     RowBox[{"h", "[", "r", "]"}]}]]]}]], "Output",
 CellChangeTimes->{3.896935483024852*^9, 3.8969407982814093`*^9, 
  3.8970203359863367`*^9, 3.897031998107177*^9, 3.897032161785145*^9, 
  3.897042413015847*^9, 3.897043237661097*^9, 3.897043363897003*^9, 
  3.897112142594475*^9, 3.8971122208709373`*^9, 3.897555591480762*^9, 
  3.897634585258608*^9, 3.89763465247544*^9, 3.897635477458123*^9, 
  3.897635946568865*^9, 3.89859002873382*^9, 3.898656803254857*^9, 
  3.898664213496415*^9, 3.898684083975154*^9, 3.8987649245624027`*^9, 
  3.8987836184838743`*^9, 3.89893244920722*^9, 3.899180242149585*^9, 
  3.899196979854412*^9, 3.899201994868692*^9, 3.899204753218629*^9, 
  3.8992678986174994`*^9, 3.899353136571333*^9, 3.899366259454184*^9, 
  3.899368967123534*^9, 3.899386105622077*^9, 3.899432919606374*^9, 
  3.899439884883707*^9},
 CellLabel->
  "Out[223]=",ExpressionUUID->"0a7a5256-ecfe-40d9-89a1-2efe4ee8052e"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{"\[Epsilon]", " ", 
    RowBox[{"f", "[", "r", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"h", "[", "r", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["rt", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["tt", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], "+", 
      
      RowBox[{"r", " ", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["tt", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
         RowBox[{
          RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Theta]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}]}], 
     ")"}]}], 
   SqrtBox[
    RowBox[{
     RowBox[{"f", "[", "r", "]"}], " ", 
     RowBox[{"h", "[", "r", "]"}]}]]], "+", 
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Sin", "[", "\[Theta]", "]"}], "2"], " ", 
   RowBox[{
    SuperscriptBox["\[Phi]t", "\[Prime]",
     MultilineFunction->None], "[", "\[Tau]", "]"}]}]}]], "Output",
 CellChangeTimes->{3.896935483024852*^9, 3.8969407982814093`*^9, 
  3.8970203359863367`*^9, 3.897031998107177*^9, 3.897032161785145*^9, 
  3.897042413015847*^9, 3.897043237661097*^9, 3.897043363897003*^9, 
  3.897112142594475*^9, 3.8971122208709373`*^9, 3.897555591480762*^9, 
  3.897634585258608*^9, 3.89763465247544*^9, 3.897635477458123*^9, 
  3.897635946568865*^9, 3.89859002873382*^9, 3.898656803254857*^9, 
  3.898664213496415*^9, 3.898684083975154*^9, 3.8987649245624027`*^9, 
  3.8987836184838743`*^9, 3.89893244920722*^9, 3.899180242149585*^9, 
  3.899196979854412*^9, 3.899201994868692*^9, 3.899204753218629*^9, 
  3.8992678986174994`*^9, 3.899353136571333*^9, 3.899366259454184*^9, 
  3.899368967123534*^9, 3.899386105622077*^9, 3.899432919606374*^9, 
  3.899439885629331*^9},
 CellLabel->
  "Out[224]=",ExpressionUUID->"90ed5a57-45a7-4150-b72f-014281d23766"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Verify", " ", "that", " ", "constants", " ", "are", " ", "conserved", " ",
     "by", " ", "EOM", " ", "up", " ", "to", " ", "spin", " ", "squared", " ",
     "terms"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"Es", "/.", "TrRule"}], ",", "\[Tau]"}], "]"}], "/.", 
         "xEOM"}], "/.", "SEOM"}], "/.", "TrRule"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"Jx", "/.", "TrRule"}], ",", "\[Tau]"}], "]"}], "/.", 
         "xEOM"}], "/.", "SEOM"}], "/.", "TrRule"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"Jy", "/.", "TrRule"}], ",", "\[Tau]"}], "]"}], "/.", 
         "xEOM"}], "/.", "SEOM"}], "/.", "TrRule"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Simplify", "[", 
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"D", "[", 
          RowBox[{
           RowBox[{"Jz", "/.", "TrRule"}], ",", "\[Tau]"}], "]"}], "/.", 
         "xEOM"}], "/.", "SEOM"}], "/.", "TrRule"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.896934598879077*^9, 3.896934847024322*^9}, {
  3.896934996198616*^9, 3.896935023463715*^9}, {3.896935135177882*^9, 
  3.896935141181439*^9}, {3.8969353947308903`*^9, 3.896935459371348*^9}, {
  3.896935546102886*^9, 3.896935610294128*^9}, {3.896935663115157*^9, 
  3.896935669589469*^9}, {3.896935801446746*^9, 3.896935811253969*^9}, {
  3.896935848765432*^9, 3.896935885327705*^9}},
 CellLabel->
  "In[226]:=",ExpressionUUID->"2bf91785-eef0-4168-beea-00b0fe02527b"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
  SeriesData[$CellContext`\[Epsilon], 0, {}, 2, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.896934817871505*^9, 3.896934847971258*^9, {3.89693502920892*^9, 
   3.896935051523539*^9}, 3.896935142528916*^9, 3.896935400507824*^9, {
   3.896935552770275*^9, 3.896935611499619*^9}, 3.896935670396966*^9, {
   3.8969358272036953`*^9, 3.896935872459445*^9}, 3.897020340092498*^9, 
   3.897032001958075*^9, 3.897032161885377*^9, 3.897112153904867*^9, 
   3.897112221449458*^9, 3.897555603928841*^9, 3.897634595502626*^9, 
   3.897634659019681*^9, 3.897635489576812*^9, 3.898590039797245*^9, 
   3.898656815141849*^9, 3.898664226090074*^9, 3.898684095184359*^9, 
   3.898764936241542*^9, 3.898783619105143*^9, 3.898932460398388*^9, 
   3.899180253367518*^9, 3.899196991454432*^9, 3.899202010617303*^9, 
   3.899204764583913*^9, 3.8992679103688993`*^9, 3.8993531476381483`*^9, 
   3.8993662740039186`*^9, 3.899368982371057*^9, 3.899386116671389*^9, 
   3.8994329308454933`*^9, 3.899439889640912*^9},
 CellLabel->
  "Out[226]=",ExpressionUUID->"87413ec4-1d40-4c98-a9c9-2b7debece0f6"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
  SeriesData[$CellContext`\[Epsilon], 0, {}, 2, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.896934817871505*^9, 3.896934847971258*^9, {3.89693502920892*^9, 
   3.896935051523539*^9}, 3.896935142528916*^9, 3.896935400507824*^9, {
   3.896935552770275*^9, 3.896935611499619*^9}, 3.896935670396966*^9, {
   3.8969358272036953`*^9, 3.896935872459445*^9}, 3.897020340092498*^9, 
   3.897032001958075*^9, 3.897032161885377*^9, 3.897112153904867*^9, 
   3.897112221449458*^9, 3.897555603928841*^9, 3.897634595502626*^9, 
   3.897634659019681*^9, 3.897635489576812*^9, 3.898590039797245*^9, 
   3.898656815141849*^9, 3.898664226090074*^9, 3.898684095184359*^9, 
   3.898764936241542*^9, 3.898783619105143*^9, 3.898932460398388*^9, 
   3.899180253367518*^9, 3.899196991454432*^9, 3.899202010617303*^9, 
   3.899204764583913*^9, 3.8992679103688993`*^9, 3.8993531476381483`*^9, 
   3.8993662740039186`*^9, 3.899368982371057*^9, 3.899386116671389*^9, 
   3.8994329308454933`*^9, 3.899439889666627*^9},
 CellLabel->
  "Out[227]=",ExpressionUUID->"863b6b30-07f6-47c2-b441-3053bf6534cb"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
  SeriesData[$CellContext`\[Epsilon], 0, {}, 2, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.896934817871505*^9, 3.896934847971258*^9, {3.89693502920892*^9, 
   3.896935051523539*^9}, 3.896935142528916*^9, 3.896935400507824*^9, {
   3.896935552770275*^9, 3.896935611499619*^9}, 3.896935670396966*^9, {
   3.8969358272036953`*^9, 3.896935872459445*^9}, 3.897020340092498*^9, 
   3.897032001958075*^9, 3.897032161885377*^9, 3.897112153904867*^9, 
   3.897112221449458*^9, 3.897555603928841*^9, 3.897634595502626*^9, 
   3.897634659019681*^9, 3.897635489576812*^9, 3.898590039797245*^9, 
   3.898656815141849*^9, 3.898664226090074*^9, 3.898684095184359*^9, 
   3.898764936241542*^9, 3.898783619105143*^9, 3.898932460398388*^9, 
   3.899180253367518*^9, 3.899196991454432*^9, 3.899202010617303*^9, 
   3.899204764583913*^9, 3.8992679103688993`*^9, 3.8993531476381483`*^9, 
   3.8993662740039186`*^9, 3.899368982371057*^9, 3.899386116671389*^9, 
   3.8994329308454933`*^9, 3.899439889694558*^9},
 CellLabel->
  "Out[228]=",ExpressionUUID->"c0e635ea-79df-47e8-9b10-77e22bb8d6ee"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
  SeriesData[$CellContext`\[Epsilon], 0, {}, 2, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.896934817871505*^9, 3.896934847971258*^9, {3.89693502920892*^9, 
   3.896935051523539*^9}, 3.896935142528916*^9, 3.896935400507824*^9, {
   3.896935552770275*^9, 3.896935611499619*^9}, 3.896935670396966*^9, {
   3.8969358272036953`*^9, 3.896935872459445*^9}, 3.897020340092498*^9, 
   3.897032001958075*^9, 3.897032161885377*^9, 3.897112153904867*^9, 
   3.897112221449458*^9, 3.897555603928841*^9, 3.897634595502626*^9, 
   3.897634659019681*^9, 3.897635489576812*^9, 3.898590039797245*^9, 
   3.898656815141849*^9, 3.898664226090074*^9, 3.898684095184359*^9, 
   3.898764936241542*^9, 3.898783619105143*^9, 3.898932460398388*^9, 
   3.899180253367518*^9, 3.899196991454432*^9, 3.899202010617303*^9, 
   3.899204764583913*^9, 3.8992679103688993`*^9, 3.8993531476381483`*^9, 
   3.8993662740039186`*^9, 3.899368982371057*^9, 3.899386116671389*^9, 
   3.8994329308454933`*^9, 3.899439889722123*^9},
 CellLabel->
  "Out[229]=",ExpressionUUID->"04245cd8-bf28-4921-a060-4d1ad76ef113"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Angular - momentum vector ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["l", "\[Mu]"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "262ca1d2-68b6-4abd-b80a-493296193c44"],
 " and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "||"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "b9a8ebbf-da76-4a77-9ca1-0486b13bf6be"]
}], "Subsection",
 CellChangeTimes->{{3.89917890001789*^9, 
  3.899178949960725*^9}},ExpressionUUID->"27caf928-003a-4cc6-bfd1-\
fe967dbca317"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "An", " ", "additional", " ", "constant", " ", "is", " ", "associated", 
     " ", "with", " ", "the", " ", "angular"}], "-", 
    RowBox[{"momentum", " ", "vector", " ", "l"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"l", " ", "=", " ", 
     RowBox[{
      RowBox[{"rt", "[", "\[Tau]", "]"}], 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{
           RowBox[{"\[Theta]t", "'"}], "[", "\[Tau]", "]"}]}], "/", 
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}], "]"}]}], ",", "0", ",", 
        RowBox[{
         RowBox[{"Sin", "[", 
          RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}], "]"}], 
         RowBox[{
          RowBox[{"\[Phi]t", "'"}], "[", "\[Tau]", "]"}]}]}], "}"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ug", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        SuperscriptBox["tt", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}], ",", 
       RowBox[{
        SuperscriptBox["\[Phi]t", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}], ",", 
       RowBox[{
        RowBox[{"rt", "'"}], "[", "\[Tau]", "]"}], ",", 
       RowBox[{
        RowBox[{"\[Theta]t", "'"}], "[", "\[Tau]", "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Verify", " ", "parallel", " ", "transport", " ", "of", " ", "l", " ", 
     RowBox[{"vector", ":"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"D", "[", 
             RowBox[{
              RowBox[{"l", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]"}], "]"}], "+", 
            RowBox[{"Sum", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"ChrisSchw", "[", 
                RowBox[{"[", 
                 RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], 
               RowBox[{"ug", "[", 
                RowBox[{"[", "j", "]"}], "]"}], 
               RowBox[{"l", "[", 
                RowBox[{"[", "k", "]"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ")"}], "/.",
           "TrRule"}], "/.", "xEOM"}], "/.", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], "/.", "TrRule"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], "//", 
    "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.898658823281313*^9, 3.8986591359939404`*^9}, {
  3.898659175285775*^9, 3.8986591973741293`*^9}, {3.898659238643696*^9, 
  3.898659272507402*^9}, {3.898659380197628*^9, 3.8986594252615557`*^9}, {
  3.8987508216920958`*^9, 3.898750826142089*^9}},
 CellLabel->
  "In[230]:=",ExpressionUUID->"fcb4e0ab-ac66-4209-ae8b-d18caee3d3f4"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.8986594124634027`*^9, 3.8986594285151052`*^9}, 
   3.8986642279262238`*^9, 3.898684096980384*^9, 3.898764938096478*^9, 
   3.898783619191538*^9, 3.8989324621935253`*^9, 3.8991802552186937`*^9, 
   3.899196991556883*^9, 3.899202010733672*^9, 3.899204766420192*^9, 
   3.899267912178257*^9, 3.89935314939459*^9, 3.899366274112812*^9, 
   3.8993689824843082`*^9, 3.89938611844307*^9, 3.899432932643263*^9, 
   3.8994398897519503`*^9},
 CellLabel->
  "Out[232]=",ExpressionUUID->"2d55dd73-e898-4315-b7df-b1c1c782d230"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"The", " ", "aligned", " ", "component", " ", "of", " ", "spin"}],
     ",", " ", 
    RowBox[{"denoted", " ", "by", " ", 
     SubscriptBox["s", "\[DoubleVerticalBar]"], " ", "in", " ", "paper"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"spara", " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"(", " ", 
       FractionBox[
        RowBox[{"l", ".", "g", ".", "Svec"}], 
        SqrtBox[
         RowBox[{"l", ".", "g", ".", "l"}]]], ")"}], "/.", "TrRule"}], "//", 
     "Simplify"}]}], "\n", 
   RowBox[{"(*", 
    RowBox[{"Verify", " ", "conservation", " ", "of", " ", 
     SubscriptBox["s", "\[DoubleVerticalBar]"]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"D", "[", 
           RowBox[{"spara", ",", "\[Tau]"}], "]"}], "/.", "xEOM"}], "/.", 
         "SEOM"}], "/.", "TrRule"}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
    "FullSimplify"}]}]}]], "Input",
 CellChangeTimes->{{3.898658823281313*^9, 3.8986591359939404`*^9}, {
  3.898659175285775*^9, 3.8986591973741293`*^9}, {3.898659238643696*^9, 
  3.898659272507402*^9}, {3.898659380197628*^9, 3.898659474308009*^9}},
 CellLabel->
  "In[233]:=",ExpressionUUID->"a8869a9e-aadc-4019-be8d-d658a7d89962"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Epsilon]", " ", 
   SuperscriptBox[
    RowBox[{"rt", "[", "\[Tau]", "]"}], "3"], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", 
       RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}]}], " ", 
      RowBox[{
       SuperscriptBox["\[Theta]t", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]t", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
  SqrtBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"rt", "[", "\[Tau]", "]"}], "4"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[Theta]t", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}], "2"], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[Phi]t", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}], "2"]}]}], 
     ")"}]}]]]], "Output",
 CellChangeTimes->{{3.898658972572579*^9, 3.89865898391442*^9}, {
   3.8986590191426373`*^9, 3.898659137240917*^9}, {3.898659389510161*^9, 
   3.898659403084126*^9}, 3.898659477133979*^9, 3.898664227981674*^9, 
   3.898684097027926*^9, 3.898764938142188*^9, 3.898783619229907*^9, 
   3.898932462237056*^9, 3.8991802552776213`*^9, 3.899196991603163*^9, 
   3.899202010790056*^9, 3.8992047664706507`*^9, 3.899267912224214*^9, 
   3.899353149442054*^9, 3.899366274164886*^9, 3.899368982536874*^9, 
   3.899386118509295*^9, 3.8994329326893063`*^9, 3.8994398897992773`*^9},
 CellLabel->
  "Out[233]=",ExpressionUUID->"df8f1bfc-ffdb-4214-a0a1-294218d8f901"],

Cell[BoxData[
 InterpretationBox[
  SuperscriptBox[
   RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
  SeriesData[$CellContext`\[Epsilon], 0, {}, 2, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.898658972572579*^9, 3.89865898391442*^9}, {
   3.8986590191426373`*^9, 3.898659137240917*^9}, {3.898659389510161*^9, 
   3.898659403084126*^9}, 3.898659477133979*^9, 3.898664227981674*^9, 
   3.898684097027926*^9, 3.898764938142188*^9, 3.898783619229907*^9, 
   3.898932462237056*^9, 3.8991802552776213`*^9, 3.899196991603163*^9, 
   3.899202010790056*^9, 3.8992047664706507`*^9, 3.899267912224214*^9, 
   3.899353149442054*^9, 3.899366274164886*^9, 3.899368982536874*^9, 
   3.899386118509295*^9, 3.8994329326893063`*^9, 3.8994398898217373`*^9},
 CellLabel->
  "Out[234]=",ExpressionUUID->"8a1634f9-2a16-43c9-ae2b-51ff84446352"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Rotating into aligned plane", "Section",
 CellChangeTimes->{{3.8985954942086477`*^9, 
  3.898595504765497*^9}},ExpressionUUID->"25265eec-160b-47d9-8387-\
8cfa0ab0414f"],

Cell[CellGroupData[{

Cell["Alignment of general vector", "Subsection",
 CellChangeTimes->{{3.89917899579184*^9, 
  3.899179009074786*^9}},ExpressionUUID->"03e61f85-dafa-4f68-bf60-\
14af5454d829"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Defining", " ", "quantitities", " ", "such", " ", "as", " ", "cos", 
     RowBox[{"(", "\[Iota]", ")"}]}], ",", " ", 
    RowBox[{"sin", 
     RowBox[{"(", "\[Iota]", ")"}]}], ",", " ", "\[ScriptCapitalJ]", ",", 
    "..."}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Note", " ", "that", " ", "the", " ", "values", " ", "of", " ", 
     SubscriptBox["\[ScriptCapitalJ]", "x"], " ", "etc", " ", "do", " ", 
     "not", " ", "need", " ", "to", " ", "be", " ", "substituted", " ", 
     "explicitly"}], ",", " ", 
    RowBox[{
    "since", " ", "the", " ", "formulas", " ", "apply", " ", "in", " ", 
     "general"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ci", " ", "=", " ", 
     RowBox[{"JJz", "/", "JJ"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"si", " ", "=", 
     SqrtBox[
      RowBox[{"1", " ", "-", " ", 
       SuperscriptBox["ci", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"JJ", " ", "=", " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"], "+", 
       SuperscriptBox["JJz", "2"]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"n", " ", "=", " ", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"JJ", " ", "si"}]], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "JJy"}], ",", "JJx", ",", "0"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Align", "[", "v_", "]"}], ":=", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", ".", "v"}], ")"}]}], " ", "+", " ", 
      RowBox[{"ci", 
       RowBox[{"(", 
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"Cross", "[", 
           RowBox[{"n", ",", "v"}], "]"}], ",", "n"}], "]"}], ")"}]}], " ", 
      "-", " ", 
      RowBox[{"si", 
       RowBox[{"(", 
        RowBox[{"Cross", "[", 
         RowBox[{"n", ",", "v"}], "]"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"BackAlign", "[", "v_", "]"}], ":=", 
     RowBox[{
      RowBox[{"n", 
       RowBox[{"(", 
        RowBox[{"n", ".", "v"}], ")"}]}], " ", "+", " ", 
      RowBox[{"ci", 
       RowBox[{"(", 
        RowBox[{"Cross", "[", 
         RowBox[{
          RowBox[{"Cross", "[", 
           RowBox[{"n", ",", "v"}], "]"}], ",", "n"}], "]"}], ")"}]}], " ", 
      "+", " ", 
      RowBox[{"si", 
       RowBox[{"(", 
        RowBox[{"Cross", "[", 
         RowBox[{"n", ",", "v"}], "]"}], ")"}]}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8985954942086477`*^9, 3.8985955061418*^9}, {
  3.898595545372663*^9, 3.8985955633156424`*^9}, {3.898596047668797*^9, 
  3.898596169103059*^9}, {3.898596220923689*^9, 3.898596321735456*^9}, {
  3.89859645693365*^9, 3.898596460519618*^9}, {3.898597398074711*^9, 
  3.8985974122331*^9}, {3.898656924444478*^9, 3.898657012438146*^9}},
 CellLabel->
  "In[235]:=",ExpressionUUID->"b199a1f3-334c-4542-9498-849a96567973"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Check", " ", "that", " ", "alignment", " ", "works"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Jalign", " ", "=", " ", 
    RowBox[{
     RowBox[{"Align", "[", 
      RowBox[{"{", 
       RowBox[{"JJx", ",", "JJy", ",", "JJz"}], "}"}], "]"}], "//", 
     "FullSimplify"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Check", " ", "that", " ", "inverse", " ", "transofrm", " ", "works"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BackAlign", "[", "Jalign", "]"}], "//", 
    "FullSimplify"}]}]}]], "Input",
 CellChangeTimes->{{3.8985954942086477`*^9, 3.8985955061418*^9}, {
  3.898595545372663*^9, 3.8985955633156424`*^9}, {3.898596047668797*^9, 
  3.898596169103059*^9}, {3.898596220923689*^9, 3.898596347842802*^9}, {
  3.898597427953835*^9, 3.89859744279001*^9}, {3.898657021368763*^9, 
  3.898657046365394*^9}},
 CellLabel->
  "In[241]:=",ExpressionUUID->"03d94bc0-f308-44d6-90f6-f33bfa8dea34"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["JJx", "2"], "+", 
     SuperscriptBox["JJy", "2"], "+", 
     SuperscriptBox["JJz", "2"]}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.898596335556787*^9, 3.89859634818575*^9}, 
   3.8985964640928917`*^9, 3.898597443149604*^9, 3.898656815299827*^9, 
   3.898664228191395*^9, 3.898684097215678*^9, 3.898764938338469*^9, 
   3.89878361928608*^9, 3.898932462412044*^9, 3.899180255459807*^9, 
   3.899196991670661*^9, 3.899202010860463*^9, 3.8992047666594048`*^9, 
   3.899267912410674*^9, 3.899353149618658*^9, 3.899366274227487*^9, 
   3.899368982603425*^9, 3.899386118688259*^9, 3.899432932871339*^9, 
   3.899439889872209*^9},
 CellLabel->
  "Out[241]=",ExpressionUUID->"353d6f52-78b3-4ce4-b372-0374beae5be6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"JJx", ",", "JJy", ",", "JJz"}], "}"}]], "Output",
 CellChangeTimes->{{3.898596335556787*^9, 3.89859634818575*^9}, 
   3.8985964640928917`*^9, 3.898597443149604*^9, 3.898656815299827*^9, 
   3.898664228191395*^9, 3.898684097215678*^9, 3.898764938338469*^9, 
   3.89878361928608*^9, 3.898932462412044*^9, 3.899180255459807*^9, 
   3.899196991670661*^9, 3.899202010860463*^9, 3.8992047666594048`*^9, 
   3.899267912410674*^9, 3.899353149618658*^9, 3.899366274227487*^9, 
   3.899368982603425*^9, 3.899386118688259*^9, 3.899432932871339*^9, 
   3.899439889895619*^9},
 CellLabel->
  "Out[242]=",ExpressionUUID->"9fa5f5df-75d7-4e96-aa82-60d3451a7d05"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Transformation of spherical polar coordinates", "Subsection",
 CellChangeTimes->{{3.8991790167624474`*^9, 
  3.899179026356125*^9}},ExpressionUUID->"1e70321f-a7c1-414b-bb3a-\
5a3ba9d69e2b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Unit", " ", "position", " ", "vectors", " ", "transformed", " ", "there", 
    " ", "and", " ", "back"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xp", ",", "yp", ",", "zp"}], "}"}], "=", 
    RowBox[{
     RowBox[{"Align", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "\[Theta]", "]"}], 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], ",", 
        RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "}"}], "]"}], "//", 
     "FullSimplify"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"xh", ",", "yh", ",", "zh"}], "}"}], "=", 
    RowBox[{
     RowBox[{"BackAlign", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], ",", 
        RowBox[{
         RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], 
         RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], ",", 
        RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}]}], "}"}], "]"}], "//", 
     "FullSimplify"}]}]}]}]], "Input",
 CellChangeTimes->{{3.898596925922181*^9, 3.898597003281492*^9}, {
  3.898597558514565*^9, 3.89859759921793*^9}, {3.898655293521556*^9, 
  3.898655315700107*^9}, {3.898657052107205*^9, 3.8986570705996513`*^9}},
 CellLabel->
  "In[243]:=",ExpressionUUID->"e68e003f-5313-4947-ba46-93bcafd0a18b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "JJx"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["JJx", "2"], "+", 
        SuperscriptBox["JJy", "2"]}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"JJx", " ", "JJy", " ", 
         RowBox[{"(", 
          RowBox[{"JJz", "-", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["JJx", "2"], "+", 
             SuperscriptBox["JJy", "2"], "+", 
             SuperscriptBox["JJz", "2"]}]]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["JJx", "2"], " ", "JJz"}], "+", 
           RowBox[{
            SuperscriptBox["JJy", "2"], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["JJx", "2"], "+", 
              SuperscriptBox["JJy", "2"], "+", 
              SuperscriptBox["JJz", "2"]}]]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"]}], ")"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"], "+", 
       SuperscriptBox["JJz", "2"]}]]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{
      RowBox[{"-", "JJy"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["JJx", "2"], "+", 
        SuperscriptBox["JJy", "2"]}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["JJy", "2"], " ", "JJz"}], "+", 
           RowBox[{
            SuperscriptBox["JJx", "2"], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["JJx", "2"], "+", 
              SuperscriptBox["JJy", "2"], "+", 
              SuperscriptBox["JJz", "2"]}]]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"JJx", " ", "JJy", " ", 
         RowBox[{"(", 
          RowBox[{"JJz", "-", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["JJx", "2"], "+", 
             SuperscriptBox["JJy", "2"], "+", 
             SuperscriptBox["JJz", "2"]}]]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"]}], ")"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"], "+", 
       SuperscriptBox["JJz", "2"]}]]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"JJz", " ", 
      RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"JJy", " ", 
         RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
        RowBox[{"JJx", " ", 
         RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox["JJx", "2"], "+", 
      SuperscriptBox["JJy", "2"], "+", 
      SuperscriptBox["JJz", "2"]}]]]}], "}"}]], "Output",
 CellChangeTimes->{3.898597632772993*^9, 3.8986553173350353`*^9, 
  3.898656816444828*^9, 3.898664229340156*^9, 3.8986840982950287`*^9, 
  3.898764939467945*^9, 3.89878361939511*^9, 3.898932463485814*^9, 
  3.899180256521036*^9, 3.89919699278373*^9, 3.899202012006873*^9, 
  3.899204767747801*^9, 3.899267913476557*^9, 3.899353150684801*^9, 
  3.899366275443746*^9, 3.899368983263246*^9, 3.899386119752825*^9, 
  3.899432933950603*^9, 3.8994398906056223`*^9},
 CellLabel->
  "Out[243]=",ExpressionUUID->"0a01ea12-5f87-4771-9748-025e2ced1e49"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"JJx", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["JJx", "2"], "+", 
        SuperscriptBox["JJy", "2"]}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"JJx", " ", "JJy", " ", 
         RowBox[{"(", 
          RowBox[{"JJz", "-", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["JJx", "2"], "+", 
             SuperscriptBox["JJy", "2"], "+", 
             SuperscriptBox["JJz", "2"]}]]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["JJx", "2"], " ", "JJz"}], "+", 
           RowBox[{
            SuperscriptBox["JJy", "2"], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["JJx", "2"], "+", 
              SuperscriptBox["JJy", "2"], "+", 
              SuperscriptBox["JJz", "2"]}]]}]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}]}], ")"}]}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"]}], ")"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"], "+", 
       SuperscriptBox["JJz", "2"]}]]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"JJy", " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["JJx", "2"], "+", 
        SuperscriptBox["JJy", "2"]}], ")"}], " ", 
      RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}]}], "+", 
     RowBox[{
      RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            SuperscriptBox["JJy", "2"], " ", "JJz"}], "+", 
           RowBox[{
            SuperscriptBox["JJx", "2"], " ", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["JJx", "2"], "+", 
              SuperscriptBox["JJy", "2"], "+", 
              SuperscriptBox["JJz", "2"]}]]}]}], ")"}], " ", 
         RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "+", 
        RowBox[{"JJx", " ", "JJy", " ", 
         RowBox[{"(", 
          RowBox[{"JJz", "-", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["JJx", "2"], "+", 
             SuperscriptBox["JJy", "2"], "+", 
             SuperscriptBox["JJz", "2"]}]]}], ")"}], " ", 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}]}], ")"}]}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"]}], ")"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["JJx", "2"], "+", 
       SuperscriptBox["JJy", "2"], "+", 
       SuperscriptBox["JJz", "2"]}]]}]], ",", 
   FractionBox[
    RowBox[{
     RowBox[{"JJz", " ", 
      RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}]}], "-", 
     RowBox[{
      RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"JJy", " ", 
         RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "+", 
        RowBox[{"JJx", " ", 
         RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}]}], ")"}]}]}], 
    SqrtBox[
     RowBox[{
      SuperscriptBox["JJx", "2"], "+", 
      SuperscriptBox["JJy", "2"], "+", 
      SuperscriptBox["JJz", "2"]}]]]}], "}"}]], "Output",
 CellChangeTimes->{3.898597632772993*^9, 3.8986553173350353`*^9, 
  3.898656816444828*^9, 3.898664229340156*^9, 3.8986840982950287`*^9, 
  3.898764939467945*^9, 3.89878361939511*^9, 3.898932463485814*^9, 
  3.899180256521036*^9, 3.89919699278373*^9, 3.899202012006873*^9, 
  3.899204767747801*^9, 3.899267913476557*^9, 3.899353150684801*^9, 
  3.899366275443746*^9, 3.899368983263246*^9, 3.899386119752825*^9, 
  3.899432933950603*^9, 3.8994398915777597`*^9},
 CellLabel->
  "Out[244]=",ExpressionUUID->"1234d1d3-4198-4910-876f-c5d8573cbaa1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Forward", " ", "transform"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"cos", 
     RowBox[{"(", "\[CurlyTheta]", ")"}]}], ":"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"zp", "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"tan", 
      RowBox[{"(", "\[CurlyPhi]", ")"}]}], ":"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xp", "/", "yp"}], "//", "FullSimplify"}]}]}]], "Input",
 CellChangeTimes->{{3.898597013675419*^9, 3.898597055076755*^9}, {
   3.8985971111770983`*^9, 3.898597111894224*^9}, {3.898597640918729*^9, 
   3.898597654252049*^9}, {3.898598894843524*^9, 3.898599084585779*^9}, {
   3.898599331231292*^9, 3.898599339416079*^9}, 3.898600289259787*^9, {
   3.8986562752741833`*^9, 3.898656331587476*^9}, {3.898932489541355*^9, 
   3.898932501577848*^9}, {3.898934895090399*^9, 3.898934901616129*^9}},
 CellLabel->
  "In[245]:=",ExpressionUUID->"d776cc5b-660e-426f-88c2-532899eee5a2"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"JJz", " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"JJy", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{"JJx", " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
  SqrtBox[
   RowBox[{
    SuperscriptBox["JJx", "2"], "+", 
    SuperscriptBox["JJy", "2"], "+", 
    SuperscriptBox["JJz", "2"]}]]]], "Output",
 CellChangeTimes->{3.898656271320169*^9, 3.898656817559815*^9, 
  3.898664230458048*^9, 3.898684099330076*^9, 3.8987649406003523`*^9, 
  3.898783619665213*^9, 3.898932464528537*^9, 3.898932502382977*^9, 
  3.899180257577792*^9, 3.899196993887495*^9, 3.899202013141046*^9, 
  3.899204768810555*^9, 3.89926791450974*^9, 3.899353151690523*^9, 
  3.899366276617531*^9, 3.8993689842569933`*^9, 3.8993861207773046`*^9, 
  3.899432934963418*^9, 3.899439891647314*^9},
 CellLabel->
  "Out[245]=",ExpressionUUID->"e8ec5318-d2cc-49b6-a851-2ebc7e232eb8"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    RowBox[{"-", "JJx"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["JJx", "2"], "+", 
      SuperscriptBox["JJy", "2"]}], ")"}], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"JJx", " ", "JJy", " ", 
       RowBox[{"(", 
        RowBox[{"JJz", "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["JJx", "2"], "+", 
           SuperscriptBox["JJy", "2"], "+", 
           SuperscriptBox["JJz", "2"]}]]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["JJx", "2"], " ", "JJz"}], "+", 
         RowBox[{
          SuperscriptBox["JJy", "2"], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["JJx", "2"], "+", 
            SuperscriptBox["JJy", "2"], "+", 
            SuperscriptBox["JJz", "2"]}]]}]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}], 
  RowBox[{
   RowBox[{
    RowBox[{"-", "JJy"}], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["JJx", "2"], "+", 
      SuperscriptBox["JJy", "2"]}], ")"}], " ", 
    RowBox[{"Cos", "[", "\[Theta]", "]"}]}], "+", 
   RowBox[{
    RowBox[{"Sin", "[", "\[Theta]", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["JJy", "2"], " ", "JJz"}], "+", 
         RowBox[{
          SuperscriptBox["JJx", "2"], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["JJx", "2"], "+", 
            SuperscriptBox["JJy", "2"], "+", 
            SuperscriptBox["JJz", "2"]}]]}]}], ")"}], " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}], "+", 
      RowBox[{"JJx", " ", "JJy", " ", 
       RowBox[{"(", 
        RowBox[{"JJz", "-", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["JJx", "2"], "+", 
           SuperscriptBox["JJy", "2"], "+", 
           SuperscriptBox["JJz", "2"]}]]}], ")"}], " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], ")"}]}]}]]], "Output",
 CellChangeTimes->{3.898656271320169*^9, 3.898656817559815*^9, 
  3.898664230458048*^9, 3.898684099330076*^9, 3.8987649406003523`*^9, 
  3.898783619665213*^9, 3.898932464528537*^9, 3.898932502382977*^9, 
  3.899180257577792*^9, 3.899196993887495*^9, 3.899202013141046*^9, 
  3.899204768810555*^9, 3.89926791450974*^9, 3.899353151690523*^9, 
  3.899366276617531*^9, 3.8993689842569933`*^9, 3.8993861207773046`*^9, 
  3.899432934963418*^9, 3.8994398925937634`*^9},
 CellLabel->
  "Out[246]=",ExpressionUUID->"bde428d9-7bc6-499b-bf2e-133dfa5069b8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Inverse", " ", "transform"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"cos", 
     RowBox[{"(", "\[Theta]", ")"}]}], ":"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"c\[Theta]", "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"zh", "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"JJx", " ", "->", " ", 
              RowBox[{
               RowBox[{"Sin", "[", "\[Xi]", "]"}], 
               RowBox[{"Sin", "[", "\[Iota]", "]"}]}]}], ",", 
             RowBox[{"JJy", " ", "->", 
              RowBox[{
               RowBox[{"Cos", "[", "\[Xi]", "]"}], 
               RowBox[{"Sin", "[", "\[Iota]", "]"}]}]}], ",", 
             RowBox[{"JJz", " ", "->", " ", 
              RowBox[{"Cos", "[", "\[Iota]", "]"}]}]}], "}"}]}], ")"}], "//", 
         "FullSimplify"}], "//", "TrigReduce"}], "//", "FullSimplify"}], "//",
       "TrigReduce"}], "//", "FullSimplify"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"tan", 
      RowBox[{"(", "\[Phi]", ")"}]}], ":"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"t\[Phi]", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"xh", "/", "yh"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"JJx", " ", "->", " ", 
                RowBox[{
                 RowBox[{"Sin", "[", "\[Xi]", "]"}], 
                 RowBox[{"Sin", "[", "\[Iota]", "]"}]}]}], ",", 
               RowBox[{"JJy", " ", "->", 
                RowBox[{
                 RowBox[{"Cos", "[", "\[Xi]", "]"}], 
                 RowBox[{"Sin", "[", "\[Iota]", "]"}]}]}], ",", 
               RowBox[{"JJz", " ", "->", " ", 
                RowBox[{"Cos", "[", "\[Iota]", "]"}]}]}], "}"}]}], ")"}], "//",
            "FullSimplify"}], "//", "TrigReduce"}], "//", "Simplify"}], "//", 
        "TrigReduce"}], "//", "FullSimplify"}], "//", "ExpandAll"}], "//", 
     "FullSimplify"}]}]}]}]], "Input",
 CellChangeTimes->{{3.898597013675419*^9, 3.898597055076755*^9}, {
   3.8985971111770983`*^9, 3.898597111894224*^9}, {3.898597640918729*^9, 
   3.898597654252049*^9}, {3.898598894843524*^9, 3.898599084585779*^9}, {
   3.898599331231292*^9, 3.898599339416079*^9}, 3.898600289259787*^9, {
   3.89865533410618*^9, 3.898655337752283*^9}, {3.89865536949732*^9, 
   3.898655374427074*^9}, {3.898655424491172*^9, 3.898655597286353*^9}, {
   3.898655637514399*^9, 3.898655669422608*^9}, {3.8986557588380823`*^9, 
   3.898655762609251*^9}, {3.898656340795998*^9, 3.898656365968205*^9}, {
   3.898932578496714*^9, 3.8989326080352383`*^9}, {3.898932713302566*^9, 
   3.898932724674521*^9}, {3.898934905108788*^9, 3.898934909695101*^9}},
 CellLabel->
  "In[247]:=",ExpressionUUID->"81b38675-dced-494b-ae73-0a6bf423cefc"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}], " ", 
   RowBox[{"Cos", "[", "\[Iota]", "]"}]}], "-", 
  RowBox[{
   RowBox[{"Cos", "[", 
    RowBox[{"\[Xi]", "-", "\[CurlyPhi]"}], "]"}], " ", 
   RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], " ", 
   RowBox[{"Sin", "[", "\[Iota]", "]"}]}]}]], "Output",
 CellChangeTimes->{3.898934918121932*^9, 3.899180258677744*^9, 
  3.899196994960855*^9, 3.899202014411119*^9, 3.8992047698873577`*^9, 
  3.8992679155730743`*^9, 3.899353152711081*^9, 3.899366277901023*^9, 
  3.899368985537817*^9, 3.899386121805818*^9, 3.899432936016179*^9, 
  3.899439892706274*^9},
 CellLabel->
  "Out[247]=",ExpressionUUID->"9aab66c2-1549-47f5-bea9-f38b596eafae"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Cos", "[", "\[Iota]", "]"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Xi]", "-", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}], " ", 
       RowBox[{"Sin", "[", "\[Iota]", "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "\[Xi]", "]"}]}], "-", 
   RowBox[{"2", " ", 
    RowBox[{"Cos", "[", "\[Xi]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Xi]", "-", "\[CurlyPhi]"}], "]"}]}]}], 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Cos", "[", "\[Iota]", "]"}]}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"2", " ", "\[Xi]"}], "-", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox["\[Iota]", "2"], "]"}], "2"], " ", 
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}]}], ")"}], " ", 
    RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}]}], "+", 
   RowBox[{"2", " ", 
    RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}], " ", 
    RowBox[{"Cos", "[", "\[Xi]", "]"}], " ", 
    RowBox[{"Sin", "[", "\[Iota]", "]"}]}]}]]], "Output",
 CellChangeTimes->{3.898934918121932*^9, 3.899180258677744*^9, 
  3.899196994960855*^9, 3.899202014411119*^9, 3.8992047698873577`*^9, 
  3.8992679155730743`*^9, 3.899353152711081*^9, 3.899366277901023*^9, 
  3.899368985537817*^9, 3.899386121805818*^9, 3.899432936016179*^9, 
  3.899439894172413*^9},
 CellLabel->
  "Out[248]=",ExpressionUUID->"dd050f83-4f83-42ba-933b-765cd256cdb0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ArcCos", "[", "c\[Theta]", "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[CurlyTheta]", "->", 
       RowBox[{
        RowBox[{"\[Pi]", "/", "2"}], "+", "\[Delta]\[CurlyTheta]"}]}], 
      "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Delta]\[CurlyTheta]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//",
   "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ArcTan", "[", 
      RowBox[{"t\[Phi]", "//", "TrigReduce"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[CurlyTheta]", "->", 
       RowBox[{
        RowBox[{"\[Pi]", "/", "2"}], "+", "\[Delta]\[CurlyTheta]"}]}], 
      "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Delta]\[CurlyTheta]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//",
   "FullSimplify"}]}], "Input",
 CellChangeTimes->{{3.898597013675419*^9, 3.898597055076755*^9}, {
   3.8985971111770983`*^9, 3.898597111894224*^9}, {3.898597640918729*^9, 
   3.898597654252049*^9}, {3.898598894843524*^9, 3.898599084585779*^9}, {
   3.898599331231292*^9, 3.898599339416079*^9}, 3.898600289259787*^9, {
   3.89865533410618*^9, 3.898655337752283*^9}, {3.89865536949732*^9, 
   3.898655374427074*^9}, {3.898655424491172*^9, 3.898655597286353*^9}, {
   3.898655637514399*^9, 3.898655669422608*^9}, {3.8986557588380823`*^9, 
   3.898655762609251*^9}, {3.898656340795998*^9, 3.898656365968205*^9}, {
   3.898932578496714*^9, 3.8989326928110743`*^9}, {3.898932737044433*^9, 
   3.898932776731285*^9}, {3.898935173262804*^9, 3.898935238052302*^9}},
 CellLabel->
  "In[249]:=",ExpressionUUID->"dfe459ee-c713-4632-a235-fe9152f62bd6"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{"\[Pi]", "-", 
     RowBox[{"ArcCos", "[", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"\[Xi]", "-", "\[CurlyPhi]"}], "]"}], " ", 
       RowBox[{"Sin", "[", "\[Iota]", "]"}]}], "]"}]}], ")"}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"Cos", "[", "\[Iota]", "]"}], " ", "\[Delta]\[CurlyTheta]"}], 
    SqrtBox[
     RowBox[{"1", "-", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         RowBox[{"\[Xi]", "-", "\[CurlyPhi]"}], "]"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", "\[Iota]", "]"}], "2"]}]}]]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Delta]\[CurlyTheta]", "]"}], "2"],
    SeriesData[$CellContext`\[Delta]\[CurlyTheta], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Delta]\[CurlyTheta], 0, {
   Pi - ArcCos[
    Cos[$CellContext`\[Xi] - $CellContext`\[CurlyPhi]] 
     Sin[$CellContext`\[Iota]]], 
    Cos[$CellContext`\[Iota]] (1 - 
      Cos[$CellContext`\[Xi] - $CellContext`\[CurlyPhi]]^2 
      Sin[$CellContext`\[Iota]]^2)^Rational[-1, 2]}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.898599056699061*^9, 3.898599085128553*^9}, 
   3.898600290910658*^9, {3.8986553214906*^9, 3.8986553381686087`*^9}, 
   3.8986553751739063`*^9, {3.898655428269526*^9, 3.898655597700157*^9}, {
   3.898655640925544*^9, 3.898655669875532*^9}, 3.8986557632932863`*^9, 
   3.898656817917997*^9, 3.898664230801214*^9, 3.898684099595326*^9, 
   3.898764940845783*^9, 3.8987836200402803`*^9, 3.898932464774747*^9, 
   3.898932602419394*^9, {3.8989326690053473`*^9, 3.8989326932877007`*^9}, {
   3.898932750797701*^9, 3.898932777185923*^9}, {3.898935179795432*^9, 
   3.898935238386816*^9}, 3.899180261554966*^9, 3.89919699762462*^9, 
   3.899202017203662*^9, 3.899204772776455*^9, 3.899267918522442*^9, 
   3.8993531555491867`*^9, 3.899366280855502*^9, 3.899368987307255*^9, 
   3.8993861246695843`*^9, 3.8994329388829823`*^9, 3.899439894336774*^9},
 CellLabel->
  "Out[249]=",ExpressionUUID->"eca2a283-c148-4e33-a558-e3a60427d874"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"ArcTan", "[", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        SuperscriptBox[
         RowBox[{"Sin", "[", 
          FractionBox["\[Iota]", "2"], "]"}], "2"]}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"2", " ", "\[Xi]"}], "-", "\[CurlyPhi]"}], "]"}]}], "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox["\[Iota]", "2"], "]"}], "2"], " ", 
       RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}]}], 
     RowBox[{
      RowBox[{
       SuperscriptBox[
        RowBox[{"Cos", "[", 
         FractionBox["\[Iota]", "2"], "]"}], "2"], " ", 
       RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{
         RowBox[{"2", " ", "\[Xi]"}], "-", "\[CurlyPhi]"}], "]"}], " ", 
       SuperscriptBox[
        RowBox[{"Sin", "[", 
         FractionBox["\[Iota]", "2"], "]"}], "2"]}]}]], "]"}], "-", 
   FractionBox[
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", "\[Iota]", "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Xi]", "-", "\[CurlyPhi]"}], "]"}]}], ")"}], " ", 
     "\[Delta]\[CurlyTheta]"}], 
    RowBox[{"3", "+", 
     RowBox[{"Cos", "[", 
      RowBox[{"2", " ", "\[Iota]"}], "]"}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"\[Xi]", "-", "\[CurlyPhi]"}], ")"}]}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Iota]", "]"}], "2"]}]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Delta]\[CurlyTheta]", "]"}], "2"],
    SeriesData[$CellContext`\[Delta]\[CurlyTheta], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Delta]\[CurlyTheta], 0, {
    ArcTan[(
       Cos[Rational[1, 2] $CellContext`\[Iota]]^2 
        Cos[$CellContext`\[CurlyPhi]] - 
       Cos[2 $CellContext`\[Xi] - $CellContext`\[CurlyPhi]] 
       Sin[Rational[1, 2] $CellContext`\[Iota]]^2)^(-1) (-
       Sin[Rational[1, 2] $CellContext`\[Iota]]^2 
       Sin[2 $CellContext`\[Xi] - $CellContext`\[CurlyPhi]] + 
      Cos[Rational[1, 2] $CellContext`\[Iota]]^2 
       Sin[$CellContext`\[CurlyPhi]])], (-4) 
    Sin[$CellContext`\[Iota]] (3 + Cos[2 $CellContext`\[Iota]] - 2 
      Cos[2 ($CellContext`\[Xi] - $CellContext`\[CurlyPhi])] 
      Sin[$CellContext`\[Iota]]^2)^(-1) 
    Sin[$CellContext`\[Xi] - $CellContext`\[CurlyPhi]]}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.898599056699061*^9, 3.898599085128553*^9}, 
   3.898600290910658*^9, {3.8986553214906*^9, 3.8986553381686087`*^9}, 
   3.8986553751739063`*^9, {3.898655428269526*^9, 3.898655597700157*^9}, {
   3.898655640925544*^9, 3.898655669875532*^9}, 3.8986557632932863`*^9, 
   3.898656817917997*^9, 3.898664230801214*^9, 3.898684099595326*^9, 
   3.898764940845783*^9, 3.8987836200402803`*^9, 3.898932464774747*^9, 
   3.898932602419394*^9, {3.8989326690053473`*^9, 3.8989326932877007`*^9}, {
   3.898932750797701*^9, 3.898932777185923*^9}, {3.898935179795432*^9, 
   3.898935238386816*^9}, 3.899180261554966*^9, 3.89919699762462*^9, 
   3.899202017203662*^9, 3.899204772776455*^9, 3.899267918522442*^9, 
   3.8993531555491867`*^9, 3.899366280855502*^9, 3.899368987307255*^9, 
   3.8993861246695843`*^9, 3.8994329388829823`*^9, 3.899439895082897*^9},
 CellLabel->
  "Out[250]=",ExpressionUUID->"17b6315d-12d2-43ce-ac93-827272668948"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
   "More", " ", "elegant", " ", "expression", " ", "for", " ", "tan", 
    RowBox[{"(", "\[Phi]", ")"}]}], ":"}], "*)"}]], "Input",
 CellChangeTimes->{{3.898656237364944*^9, 3.898656263886826*^9}, {
  3.898937559841062*^9, 3.898937560289069*^9}},
 CellLabel->
  "In[251]:=",ExpressionUUID->"08de6e5f-c8df-4cf1-938c-cee6cf5ff126"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"t\[Phi]", " ", "-", " ", 
    RowBox[{"(", 
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}], 
        RowBox[{"Sin", "[", "\[Iota]", "]"}], 
        RowBox[{"Sin", "[", "\[Xi]", "]"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"\[Iota]", "/", "2"}], "]"}], "2"], " ", 
           RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], " ", "-", " ", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"\[Iota]", "/", "2"}], "]"}], "2"], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{
             RowBox[{"2", "\[Xi]"}], " ", "-", " ", "\[CurlyPhi]"}], 
            "]"}]}]}], ")"}]}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}], 
        RowBox[{"Sin", "[", "\[Iota]", "]"}], 
        RowBox[{"Cos", "[", "\[Xi]", "]"}]}], " ", "+", " ", 
       RowBox[{
        RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox[
            RowBox[{"Cos", "[", 
             RowBox[{"\[Iota]", "/", "2"}], "]"}], "2"], " ", 
           RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}], " ", "-", " ", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"Sin", "[", 
             RowBox[{"\[Iota]", "/", "2"}], "]"}], "2"], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{
             RowBox[{"2", "\[Xi]"}], " ", "-", " ", "\[CurlyPhi]"}], 
            "]"}]}]}], ")"}]}]}]], ")"}]}], "//", "FullSimplify"}]}]], "Input",\

 CellChangeTimes->{
  3.8985972400973597`*^9, {3.8986557679243107`*^9, 3.8986557708447866`*^9}, {
   3.898655870187248*^9, 3.8986560077967176`*^9}, {3.898937564071154*^9, 
   3.898937566053916*^9}},
 CellLabel->
  "In[252]:=",ExpressionUUID->"5518958b-e634-43a9-b546-5854f3aef5e2"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.8986560032436743`*^9, 3.898656008265255*^9}, 
   3.898656820766967*^9, 3.8986642332514*^9, 3.898684102355311*^9, 
   3.898764943724967*^9, 3.898783620737585*^9, 3.898932467484098*^9, 
   3.898937566762562*^9, 3.899180263128755*^9, 3.8991969985737753`*^9, 
   3.899202018175411*^9, 3.8992047743477182`*^9, 3.899267920070702*^9, 
   3.899353157070423*^9, 3.899366281888142*^9, 3.899368988001615*^9, 
   3.899386126208354*^9, 3.899432940415431*^9, 3.899439895245626*^9},
 CellLabel->
  "Out[252]=",ExpressionUUID->"cf8fbd9b-4ff0-4760-b564-944731e52ce3"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Solving for motion in aligned coordinates", "Section",
 CellChangeTimes->{{3.899179106471015*^9, 3.899179138646975*^9}, {
  3.899179178626473*^9, 
  3.899179179036676*^9}},ExpressionUUID->"51a50405-5f39-45d3-bd34-\
805c04e27922"],

Cell[CellGroupData[{

Cell["Solving for \[CurlyTheta] in aligned coordinates", "Subsection",
 CellChangeTimes->{{3.896940503611871*^9, 3.896940510683374*^9}, {
  3.898595472402727*^9, 
  3.8985954880885057`*^9}},ExpressionUUID->"7685156a-9502-485e-bc19-\
7a12603fe77f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Now", " ", "the", " ", "constraints", " ", "following", " ", "from", " ", 
    "rotating", " ", "the", " ", "coordinate", " ", "system", " ", "into", 
    " ", "J"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Jx", "/.", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "->", 
          RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Theta]t", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
            RowBox[{"\[Epsilon]", " ", 
             RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], ")"}]}],
         "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
    "Simplify"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Jy", "/.", 
        RowBox[{"{", 
         RowBox[{"\[Theta]", "->", 
          RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Theta]t", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Pi]", "/", "2"}], "+", 
            RowBox[{"\[Epsilon]", " ", 
             RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], ")"}]}],
         "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
    "Simplify"}]}]}]], "Input",
 CellChangeTimes->{{3.896935205859728*^9, 3.896935246374448*^9}, {
  3.896935922455879*^9, 3.896935937427124*^9}, {3.896937566096096*^9, 
  3.896937746365444*^9}, {3.8969377965582533`*^9, 3.896937820885103*^9}, {
  3.896938040125537*^9, 3.896938055768371*^9}, {3.896938518424436*^9, 
  3.896938543861743*^9}, {3.8969387272860327`*^9, 3.896938730312518*^9}},
 CellLabel->
  "In[253]:=",ExpressionUUID->"58ec0087-6d37-430e-98cf-746c3983c5d9"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}]}], " ", 
          RowBox[{
           SuperscriptBox["\[Delta]\[Theta]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"\[Delta]\[Theta]t", "[", "\[Tau]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], "+", 
      
      FractionBox[
       RowBox[{
        RowBox[{"f", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"h", "[", "r", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["rt", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["tt", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
          "+", 
          RowBox[{"r", " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["tt", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Phi]t", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}]}],
          ")"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]]}], ")"}], " ", "\[Epsilon]"}], "+", 
   
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, 1, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 
   0, {$CellContext`r^2 (-Sin[$CellContext`\[Phi]] 
       Derivative[1][$CellContext`\[Delta]\[Theta]t][$CellContext`\[Tau]] + 
      Cos[$CellContext`\[Phi]] $CellContext`\[Delta]\[Theta]t[$CellContext`\
\[Tau]] Derivative[
        1][$CellContext`\[Phi]t][$CellContext`\[Tau]]) + \
$CellContext`f[$CellContext`r] ($CellContext`f[$CellContext`r] \
$CellContext`h[$CellContext`r])^Rational[-1, 2] (
      Cos[$CellContext`\[Phi]] $CellContext`h[$CellContext`r] \
($CellContext`St[$CellContext`\[Tau]] 
         Derivative[
          1][$CellContext`rt][$CellContext`\[Tau]] - \
$CellContext`Sr[$CellContext`\[Tau]] 
        Derivative[1][$CellContext`tt][$CellContext`\[Tau]]) + $CellContext`r 
       Sin[$CellContext`\[Phi]] ($CellContext`S\[Phi][$CellContext`\[Tau]] 
         Derivative[
          1][$CellContext`tt][$CellContext`\[Tau]] - \
$CellContext`St[$CellContext`\[Tau]] 
        Derivative[1][$CellContext`\[Phi]t][$CellContext`\[Tau]]))}, 1, 2, 1],
  
  Editable->False]], "Output",
 CellChangeTimes->{
  3.8969375673771353`*^9, {3.896937630620171*^9, 3.896937715624483*^9}, 
   3.896937746989635*^9, {3.896937800302867*^9, 3.896937821599197*^9}, 
   3.896938056880426*^9, 3.896938589896834*^9, 3.8969387311695547`*^9, 
   3.896940546827866*^9, 3.897020342859869*^9, 3.897032004509449*^9, 
   3.8970321619649153`*^9, 3.8971121684556017`*^9, 3.897112221515691*^9, 
   3.897555619237879*^9, 3.897634610541712*^9, 3.8976346593329268`*^9, 
   3.897635504759083*^9, 3.898590041913748*^9, 3.898656821186838*^9, 
   3.8986642336838017`*^9, 3.8986841027457123`*^9, 3.898764944147708*^9, 
   3.8987836207643423`*^9, 3.89893246788095*^9, 3.8991802635330276`*^9, 
   3.8991969989867067`*^9, 3.89920201858596*^9, 3.899204774762642*^9, 
   3.899267920473316*^9, 3.8993531574687147`*^9, 3.899366282326147*^9, 
   3.8993689884443693`*^9, 3.899386126610374*^9, 3.899432940823369*^9, 
   3.899439895691264*^9},
 CellLabel->
  "Out[253]=",ExpressionUUID->"ddeec4b0-454f-4c25-b4a9-633830dee88a"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["r", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Delta]\[Theta]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
         RowBox[{
          RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
          RowBox[{"\[Delta]\[Theta]t", "[", "\[Tau]", "]"}], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], "+", 
      
      FractionBox[
       RowBox[{
        RowBox[{"f", "[", "r", "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"h", "[", "r", "]"}], " ", 
           RowBox[{"Sin", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["rt", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
             RowBox[{
              RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["tt", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
          "+", 
          RowBox[{"r", " ", 
           RowBox[{"Cos", "[", "\[Phi]", "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}]}], " ", 
              RowBox[{
               SuperscriptBox["tt", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
             RowBox[{
              RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Phi]t", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}]}],
          ")"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", "r", "]"}], " ", 
         RowBox[{"h", "[", "r", "]"}]}]]]}], ")"}], " ", "\[Epsilon]"}], "+", 
   
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, 1, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 
   0, {$CellContext`r^2 (
      Cos[$CellContext`\[Phi]] 
       Derivative[1][$CellContext`\[Delta]\[Theta]t][$CellContext`\[Tau]] + 
      Sin[$CellContext`\[Phi]] $CellContext`\[Delta]\[Theta]t[$CellContext`\
\[Tau]] Derivative[
        1][$CellContext`\[Phi]t][$CellContext`\[Tau]]) + \
$CellContext`f[$CellContext`r] ($CellContext`f[$CellContext`r] \
$CellContext`h[$CellContext`r])^
      Rational[-1, 2] ($CellContext`h[$CellContext`r] 
       Sin[$CellContext`\[Phi]] ($CellContext`St[$CellContext`\[Tau]] 
         Derivative[
          1][$CellContext`rt][$CellContext`\[Tau]] - \
$CellContext`Sr[$CellContext`\[Tau]] 
        Derivative[1][$CellContext`tt][$CellContext`\[Tau]]) + $CellContext`r 
       Cos[$CellContext`\[Phi]] (-$CellContext`S\[Phi][$CellContext`\[Tau]] 
         Derivative[
          1][$CellContext`tt][$CellContext`\[Tau]] + \
$CellContext`St[$CellContext`\[Tau]] 
         Derivative[1][$CellContext`\[Phi]t][$CellContext`\[Tau]]))}, 1, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.8969375673771353`*^9, {3.896937630620171*^9, 3.896937715624483*^9}, 
   3.896937746989635*^9, {3.896937800302867*^9, 3.896937821599197*^9}, 
   3.896938056880426*^9, 3.896938589896834*^9, 3.8969387311695547`*^9, 
   3.896940546827866*^9, 3.897020342859869*^9, 3.897032004509449*^9, 
   3.8970321619649153`*^9, 3.8971121684556017`*^9, 3.897112221515691*^9, 
   3.897555619237879*^9, 3.897634610541712*^9, 3.8976346593329268`*^9, 
   3.897635504759083*^9, 3.898590041913748*^9, 3.898656821186838*^9, 
   3.8986642336838017`*^9, 3.8986841027457123`*^9, 3.898764944147708*^9, 
   3.8987836207643423`*^9, 3.89893246788095*^9, 3.8991802635330276`*^9, 
   3.8991969989867067`*^9, 3.89920201858596*^9, 3.899204774762642*^9, 
   3.899267920473316*^9, 3.8993531574687147`*^9, 3.899366282326147*^9, 
   3.8993689884443693`*^9, 3.899386126610374*^9, 3.899432940823369*^9, 
   3.899439895994342*^9},
 CellLabel->
  "Out[254]=",ExpressionUUID->"ab691cc5-eb02-4053-88f4-d564d154d575"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "two", " ", "expressions", " ", "below", " ", "vanish", " ", 
    "independently"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"k1", " ", "=", " ", 
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Jx", "/.", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", "->", 
             RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}]}], "}"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Theta]t", "->", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
               RowBox[{"\[Epsilon]", " ", 
                RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], 
             ")"}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
       "Simplify"}], ",", 
      RowBox[{"\[Epsilon]", " ", 
       RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"k2", " ", "=", " ", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Jx", "/.", 
            RowBox[{"{", 
             RowBox[{"\[Theta]", "->", 
              RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}]}], "}"}]}], "/.", 
           RowBox[{"{", 
            RowBox[{"\[Theta]t", "->", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
                RowBox[{"\[Epsilon]", " ", 
                 RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], 
              ")"}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
        "Simplify"}], ",", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "information", " ", "you", " ", "obtain", " ", "from", " ", 
     "Jx", " ", "is", " ", "equivalent", " ", "to", " ", "the", " ", "one", 
     " ", "you", " ", "get", " ", "from", " ", 
     RowBox[{"Jy", ":"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"k1", " ", "-", " ", 
    RowBox[{"Coefficient", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Series", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Jy", "/.", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", "->", 
             RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}]}], "}"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Theta]t", "->", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
               RowBox[{"\[Epsilon]", " ", 
                RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], 
             ")"}]}], "}"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
       "Simplify"}], ",", 
      RowBox[{"\[Epsilon]", " ", 
       RowBox[{"Sin", "[", "\[Phi]", "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"k2", "+", 
     RowBox[{"Coefficient", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Jy", "/.", 
            RowBox[{"{", 
             RowBox[{"\[Theta]", "->", 
              RowBox[{"\[Theta]t", "[", "\[Tau]", "]"}]}], "}"}]}], "/.", 
           RowBox[{"{", 
            RowBox[{"\[Theta]t", "->", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
                RowBox[{"\[Epsilon]", " ", 
                 RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], 
              ")"}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
        "Simplify"}], ",", 
       RowBox[{"\[Epsilon]", " ", 
        RowBox[{"Cos", "[", "\[Phi]", "]"}]}]}], "]"}]}], "//", 
    "Simplify"}]}]}]], "Input",
 CellChangeTimes->{
  3.896937785863517*^9, {3.8969378338599873`*^9, 3.896937856149604*^9}, {
   3.8969380683295193`*^9, 3.8969380725880537`*^9}, {3.896938247483856*^9, 
   3.89693831307843*^9}, {3.896938548377475*^9, 3.896938563381028*^9}, {
   3.896938740445856*^9, 3.896938744581655*^9}, {3.89763610412428*^9, 
   3.8976361240561934`*^9}, {3.897636253146324*^9, 3.897636258732924*^9}, {
   3.8995429815926113`*^9, 3.899543101572914*^9}},
 CellLabel->
  "In[654]:=",ExpressionUUID->"9dbd40e3-d0a7-40bc-af75-d7d6de4e5340"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"f", "[", "r", "]"}], " ", 
    RowBox[{"h", "[", "r", "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
       RowBox[{
        SuperscriptBox["rt", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
      RowBox[{
       RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
       RowBox[{
        SuperscriptBox["tt", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
   SqrtBox[
    RowBox[{
     RowBox[{"f", "[", "r", "]"}], " ", 
     RowBox[{"h", "[", "r", "]"}]}]]], "+", 
  RowBox[{
   SuperscriptBox["r", "2"], " ", 
   RowBox[{"\[Delta]\[Theta]t", "[", "\[Tau]", "]"}], " ", 
   RowBox[{
    SuperscriptBox["\[Phi]t", "\[Prime]",
     MultilineFunction->None], "[", "\[Tau]", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.896937845786333*^9, 3.896937856775515*^9}, 
   3.896938073308558*^9, {3.8969382586293364`*^9, 3.896938313462144*^9}, 
   3.896938592152417*^9, 3.896938745456786*^9, 3.89702034323132*^9, 
   3.897032004848926*^9, 3.897032162020814*^9, 3.897112168759255*^9, 
   3.897112221558978*^9, 3.897555619637445*^9, 3.8976346109280148`*^9, 
   3.897634659593864*^9, 3.897635505155717*^9, 3.8976361264804*^9, 
   3.897636264866487*^9, 3.898590042242608*^9, 3.898656821552081*^9, 
   3.8986642340386953`*^9, 3.8986841030723953`*^9, 3.89876494448575*^9, 
   3.898783620827767*^9, 3.898932468213912*^9, 3.899180263887106*^9, 
   3.899196999315052*^9, 3.899202018934493*^9, 3.899204775116439*^9, 
   3.8992679208225393`*^9, 3.899353157790255*^9, 3.899366282685507*^9, 
   3.89936898881573*^9, 3.899386126945732*^9, 3.899432941165559*^9, 
   3.899439896050126*^9, {3.8995430278685627`*^9, 3.899543069207024*^9}, 
   3.8995431033438587`*^9},
 CellLabel->
  "Out[654]=",ExpressionUUID->"b36ae8d6-d79a-4ed7-a39b-3d92622310d3"],

Cell[BoxData[
 RowBox[{"r", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "r"}], " ", 
     RowBox[{
      SuperscriptBox["\[Delta]\[Theta]t", "\[Prime]",
       MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"f", "[", "r", "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], " ", 
         RowBox[{
          SuperscriptBox["tt", "\[Prime]",
           MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
        RowBox[{
         RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
         RowBox[{
          SuperscriptBox["\[Phi]t", "\[Prime]",
           MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
     SqrtBox[
      RowBox[{
       RowBox[{"f", "[", "r", "]"}], " ", 
       RowBox[{"h", "[", "r", "]"}]}]]]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.896937845786333*^9, 3.896937856775515*^9}, 
   3.896938073308558*^9, {3.8969382586293364`*^9, 3.896938313462144*^9}, 
   3.896938592152417*^9, 3.896938745456786*^9, 3.89702034323132*^9, 
   3.897032004848926*^9, 3.897032162020814*^9, 3.897112168759255*^9, 
   3.897112221558978*^9, 3.897555619637445*^9, 3.8976346109280148`*^9, 
   3.897634659593864*^9, 3.897635505155717*^9, 3.8976361264804*^9, 
   3.897636264866487*^9, 3.898590042242608*^9, 3.898656821552081*^9, 
   3.8986642340386953`*^9, 3.8986841030723953`*^9, 3.89876494448575*^9, 
   3.898783620827767*^9, 3.898932468213912*^9, 3.899180263887106*^9, 
   3.899196999315052*^9, 3.899202018934493*^9, 3.899204775116439*^9, 
   3.8992679208225393`*^9, 3.899353157790255*^9, 3.899366282685507*^9, 
   3.89936898881573*^9, 3.899386126945732*^9, 3.899432941165559*^9, 
   3.899439896050126*^9, {3.8995430278685627`*^9, 3.899543069207024*^9}, 
   3.899543103393875*^9},
 CellLabel->
  "Out[655]=",ExpressionUUID->"c4347a5a-227a-4e6c-9b2c-7d5e13aa754b"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.896937845786333*^9, 3.896937856775515*^9}, 
   3.896938073308558*^9, {3.8969382586293364`*^9, 3.896938313462144*^9}, 
   3.896938592152417*^9, 3.896938745456786*^9, 3.89702034323132*^9, 
   3.897032004848926*^9, 3.897032162020814*^9, 3.897112168759255*^9, 
   3.897112221558978*^9, 3.897555619637445*^9, 3.8976346109280148`*^9, 
   3.897634659593864*^9, 3.897635505155717*^9, 3.8976361264804*^9, 
   3.897636264866487*^9, 3.898590042242608*^9, 3.898656821552081*^9, 
   3.8986642340386953`*^9, 3.8986841030723953`*^9, 3.89876494448575*^9, 
   3.898783620827767*^9, 3.898932468213912*^9, 3.899180263887106*^9, 
   3.899196999315052*^9, 3.899202018934493*^9, 3.899204775116439*^9, 
   3.8992679208225393`*^9, 3.899353157790255*^9, 3.899366282685507*^9, 
   3.89936898881573*^9, 3.899386126945732*^9, 3.899432941165559*^9, 
   3.899439896050126*^9, {3.8995430278685627`*^9, 3.899543069207024*^9}, 
   3.899543103424961*^9},
 CellLabel->
  "Out[656]=",ExpressionUUID->"848d6b25-a74e-4aee-a1ee-a68746c7046b"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.896937845786333*^9, 3.896937856775515*^9}, 
   3.896938073308558*^9, {3.8969382586293364`*^9, 3.896938313462144*^9}, 
   3.896938592152417*^9, 3.896938745456786*^9, 3.89702034323132*^9, 
   3.897032004848926*^9, 3.897032162020814*^9, 3.897112168759255*^9, 
   3.897112221558978*^9, 3.897555619637445*^9, 3.8976346109280148`*^9, 
   3.897634659593864*^9, 3.897635505155717*^9, 3.8976361264804*^9, 
   3.897636264866487*^9, 3.898590042242608*^9, 3.898656821552081*^9, 
   3.8986642340386953`*^9, 3.8986841030723953`*^9, 3.89876494448575*^9, 
   3.898783620827767*^9, 3.898932468213912*^9, 3.899180263887106*^9, 
   3.899196999315052*^9, 3.899202018934493*^9, 3.899204775116439*^9, 
   3.8992679208225393`*^9, 3.899353157790255*^9, 3.899366282685507*^9, 
   3.89936898881573*^9, 3.899386126945732*^9, 3.899432941165559*^9, 
   3.899439896050126*^9, {3.8995430278685627`*^9, 3.899543069207024*^9}, 
   3.899543103455845*^9},
 CellLabel->
  "Out[657]=",ExpressionUUID->"e07444b6-8ece-46c8-861d-154a18267af0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "One", " ", "expression", " ", "gives", " ", "a", " ", "constraint", " ", 
     "for", " ", "\[Delta]\[Theta]t"}], ",", " ", 
    RowBox[{
     RowBox[{"another", " ", "one", " ", "for", " ", 
      RowBox[{
       RowBox[{"\[Delta]\[Theta]t", "'"}], ".", " ", "Are"}], " ", "they", 
      " ", "self"}], "-", 
     RowBox[{"consistent", "?"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"k1", " ", "==", "0"}], ",", 
     RowBox[{"\[Delta]\[Theta]t", "[", "\[Tau]", "]"}]}], "]"}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.8969383588195353`*^9, 3.896938391971249*^9}, {
  3.8969384427352858`*^9, 3.896938446138661*^9}, {3.896938828893261*^9, 
  3.896938879141696*^9}, {3.896940564318679*^9, 3.8969406032575893`*^9}, {
  3.897636273141967*^9, 3.8976362733865*^9}},
 CellLabel->
  "In[257]:=",ExpressionUUID->"ab3a76bc-4637-474e-9fea-e967b7bd4bda"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\[Delta]\[Theta]t", "[", "\[Tau]", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"f", "[", "r", "]"}], " ", 
        RowBox[{"h", "[", "r", "]"}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"St", "[", "\[Tau]", "]"}]}], " ", 
         RowBox[{
          SuperscriptBox["rt", "\[Prime]",
           MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
        RowBox[{
         RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
         RowBox[{
          SuperscriptBox["tt", "\[Prime]",
           MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox["r", "2"], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]t", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}]}]]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.896938368692872*^9, 3.8969383923954287`*^9}, 
   3.896938448871838*^9, {3.896938844098547*^9, 3.896938860588696*^9}, 
   3.897020343349091*^9, 3.897032004954821*^9, 3.897032162058466*^9, 
   3.897112168848954*^9, 3.897112221603364*^9, 3.897555619744533*^9, 
   3.8976346110365543`*^9, 3.8976346596943913`*^9, 3.897635505257124*^9, 
   3.897636274095929*^9, 3.898590042341732*^9, 3.898656821658544*^9, 
   3.898664234142165*^9, 3.8986841031560793`*^9, 3.8987649445861588`*^9, 
   3.898783620879223*^9, 3.898932468300377*^9, 3.899180263992124*^9, 
   3.8991969994157*^9, 3.8992020190309973`*^9, 3.8992047752127247`*^9, 
   3.899267920944023*^9, 3.89935315787353*^9, 3.899366282828567*^9, 
   3.899368988906075*^9, 3.899386127038151*^9, 3.899432941258645*^9, 
   3.8994398961581717`*^9},
 CellLabel->
  "Out[257]=",ExpressionUUID->"cc55d642-c224-41b5-8e41-943ab22f87f7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{
                 FractionBox[
                  RowBox[{
                   SqrtBox[
                    RowBox[{
                    RowBox[{"f", "[", "r", "]"}], " ", 
                    RowBox[{"h", "[", "r", "]"}]}]], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"St", "[", "\[Tau]", "]"}]}], " ", 
                    RowBox[{
                    SuperscriptBox["rt", "\[Prime]",
                    MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
                    RowBox[{
                    SuperscriptBox["tt", "\[Prime]",
                    MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], 
                    ")"}]}], 
                  RowBox[{" ", 
                   RowBox[{
                    SuperscriptBox["r", "2"], " ", 
                    RowBox[{
                    SuperscriptBox["\[Phi]t", "\[Prime]",
                    MultilineFunction->None], "[", "\[Tau]", "]"}]}]}]], "/.",
                  "TrRule"}], ",", "\[Tau]"}], "]"}], "//", 
              RowBox[{
               RowBox[{"Simplify", "/.", "xEOM"}], "/.", "SEOM"}]}], ")"}], "/.", 
            RowBox[{"{", 
             RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], "/.", "SEOM"}], "/.",
           "xEOM"}], "/.", 
         RowBox[{"{", 
          RowBox[{"\[Theta]t", "->", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
              RowBox[{"\[Epsilon]", " ", 
               RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], 
            ")"}]}], "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", "->", "0"}], "}"}]}], "/.", "TrRule"}], "//", 
      "Simplify"}], ")"}], "/.", "TrRule"}], "/.", 
   RowBox[{"{", 
    RowBox[{"\[Theta]t", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"\[Pi]", "/", "2"}], " ", "&"}], ")"}]}], "}"}]}], "//", 
  "Simplify"}]], "Input",
 CellChangeTimes->{{3.8969388831780233`*^9, 3.896938925293845*^9}, {
   3.8969389761320143`*^9, 3.896938997369741*^9}, {3.896939032247736*^9, 
   3.8969390345842037`*^9}, {3.896939109804639*^9, 3.896939194583394*^9}, {
   3.896939546806018*^9, 3.8969396901425323`*^9}, 3.896939828867157*^9, 
   3.8976363102286787`*^9},
 CellLabel->
  "In[258]:=",ExpressionUUID->"b20d5812-0935-4b99-9a20-af9c1f350794"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], " ", 
      RowBox[{
       SuperscriptBox["tt", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
     RowBox[{
      RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
      RowBox[{
       SuperscriptBox["\[Phi]t", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
  RowBox[{
   SqrtBox[
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
     RowBox[{"h", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]], " ", 
   RowBox[{"rt", "[", "\[Tau]", "]"}]}]]], "Output",
 CellChangeTimes->{{3.89693966494562*^9, 3.896939691771145*^9}, 
   3.89693982942411*^9, 3.897020343424848*^9, 3.897032005021969*^9, 
   3.8970321620932703`*^9, 3.897112168876957*^9, 3.897112221626824*^9, 
   3.897555619821999*^9, 3.897634611091073*^9, 3.897634659735568*^9, 
   3.8976355053335257`*^9, 3.898590042422948*^9, 3.898656821737543*^9, 
   3.898664234238769*^9, 3.898684103221794*^9, 3.8987649447009583`*^9, 
   3.898783620913806*^9, 3.898932468365893*^9, 3.89918026412027*^9, 
   3.8991969994733877`*^9, 3.899202019096602*^9, 3.899204775307143*^9, 
   3.899267921054933*^9, 3.899353157941449*^9, 3.899366282904439*^9, 
   3.89936898898193*^9, 3.899386127109171*^9, 3.899432941328382*^9, 
   3.899439896224729*^9},
 CellLabel->
  "Out[258]=",ExpressionUUID->"1fcd10e1-c455-48c0-ad91-26b0150f5935"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"The", " ", "first", " ", "identity", " ", "for", " ", 
    RowBox[{"\[Delta]\[Theta]t", "[", "\[Tau]", "]"}], " ", "implies", " ", 
    "the", " ", "vanishing", " ", "of", " ", "the", " ", "second", " ", 
    "identity", " ", "involving", " ", 
    RowBox[{
     RowBox[{"\[Delta]\[Theta]t", "'"}], "[", "\[Tau]", "]"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], " ", "r", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "r"}], " ", 
         RowBox[{
          SuperscriptBox["\[Delta]\[Theta]t", "\[Prime]",
           MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
        FractionBox[
         RowBox[{
          RowBox[{"f", "[", "r", "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["tt", "\[Prime]",
               MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
            RowBox[{
             RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["\[Phi]t", "\[Prime]",
               MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
         SqrtBox[
          RowBox[{
           RowBox[{"f", "[", "r", "]"}], " ", 
           RowBox[{"h", "[", "r", "]"}]}]]]}], ")"}]}], "/.", "TrRule"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[Delta]\[Theta]t", "\[Prime]",
        MultilineFunction->None], "[", "\[Tau]", "]"}], "->", 
      FractionBox[
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["tt", "\[Prime]",
             MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
          RowBox[{
           RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]t", "\[Prime]",
             MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
          RowBox[{"h", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]], " ", 
        RowBox[{"rt", "[", "\[Tau]", "]"}]}]]}], "}"}]}], "//", 
   "Simplify"}]}]], "Input",
 CellChangeTimes->{{3.896939267726922*^9, 3.8969393049009037`*^9}, {
  3.8969397096085978`*^9, 3.8969397691942368`*^9}, {3.896939836544549*^9, 
  3.896939843750503*^9}, {3.897636318344349*^9, 3.897636323901462*^9}},
 CellLabel->
  "In[259]:=",ExpressionUUID->"004c1d1f-58d3-4e21-8703-b43263cc4449"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.896939292159437*^9, 3.896939305580555*^9}, 
   3.896939710528883*^9, {3.896939836938748*^9, 3.896939844584877*^9}, 
   3.897020343469885*^9, 3.8970320050440073`*^9, 3.897032162114575*^9, 
   3.897112168897427*^9, 3.897112221653986*^9, 3.897555619873826*^9, 
   3.8976346111261883`*^9, 3.897634659772884*^9, 3.8976355053827343`*^9, 
   3.898590042458828*^9, 3.898656821775075*^9, 3.898664234276758*^9, 
   3.898684103267098*^9, 3.898764944727103*^9, 3.89878362093777*^9, 
   3.8989324684287567`*^9, 3.8991802641707277`*^9, 3.899196999524228*^9, 
   3.8992020191427803`*^9, 3.8992047753543167`*^9, 3.8992679210816708`*^9, 
   3.8993531579842176`*^9, 3.899366282967619*^9, 3.899368989012205*^9, 
   3.899386127172513*^9, 3.8994329413830338`*^9, 3.8994398962553062`*^9},
 CellLabel->
  "Out[259]=",ExpressionUUID->"ff5fa9e7-d6ce-49b9-a546-79ef3f795cec"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Solving for r,t,\[CurlyPhi] in aligned coordinates", "Subsection",
 CellChangeTimes->{{3.896940618574464*^9, 3.8969406377977943`*^9}, {
  3.899179064976758*^9, 
  3.899179078838683*^9}},ExpressionUUID->"63b52513-bb28-4c60-bcb9-\
65b09eb24e7f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "remaining", " ", "constants", " ", "of", " ", "motion", " ", 
    "have", " ", "no", " ", "dependence", " ", "on", " ", "theta", " ", "at", 
    " ", "given", " ", "order"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Es", "/.", "TrRule"}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Theta]t", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], ")"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"/.", "fhRule"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", " ", 
       RowBox[{"sp", "/", 
        RowBox[{"rt", "[", "\[Tau]", "]"}]}]}], "}"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Jz", "/.", "TrRule"}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Theta]t", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], ")"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Series", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"spara", "/.", "TrRule"}], "/.", 
       RowBox[{"{", 
        RowBox[{"\[Theta]t", "->", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
            RowBox[{"\[Epsilon]", " ", 
             RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], ")"}]}],
         "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Phi]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}]}], "}"}]}], "]"}], 
     "&"}], 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"/.", "fhRule"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", " ", 
        RowBox[{"sp", "/", 
         RowBox[{"rt", "[", "\[Tau]", "]"}]}]}], "}"}]}], 
     "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.896940695537272*^9, 3.896940721258299*^9}, {
  3.896940752795742*^9, 3.8969407808192987`*^9}, {3.8969408233872757`*^9, 
  3.8969408479856873`*^9}, {3.89694105491425*^9, 3.896941074589807*^9}, {
  3.897554468045313*^9, 3.897554530234317*^9}, {3.897554630175596*^9, 
  3.8975546327870092`*^9}, {3.8986593329670067`*^9, 3.8986593403621683`*^9}, {
  3.898659497551775*^9, 3.8986595292987823`*^9}},
 CellLabel->
  "In[260]:=",ExpressionUUID->"ffed0b28-13ba-4acd-92c9-386bcb51f69e"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    RowBox[{"f", "[", 
     RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
    RowBox[{
     SuperscriptBox["tt", "\[Prime]",
      MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"rt", "[", "\[Tau]", "]"}], "2"], " ", 
     RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
     RowBox[{
      SuperscriptBox["f", "\[Prime]",
       MultilineFunction->None], "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
     RowBox[{
      SuperscriptBox["\[Phi]t", "\[Prime]",
       MultilineFunction->None], "[", "\[Tau]", "]"}], " ", "\[Epsilon]"}], 
    RowBox[{"2", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
       RowBox[{"h", "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 0, {$CellContext`f[
      $CellContext`rt[$CellContext`\[Tau]]] 
    Derivative[1][$CellContext`tt][$CellContext`\[Tau]], 
    Rational[1, 2] ($CellContext`f[
        $CellContext`rt[$CellContext`\[Tau]]] $CellContext`h[
        $CellContext`rt[$CellContext`\[Tau]]])^
     Rational[-1, 
       2] $CellContext`rt[$CellContext`\[Tau]]^2 \
$CellContext`S\[Theta][$CellContext`\[Tau]] Derivative[1][$CellContext`f][
      $CellContext`rt[$CellContext`\[Tau]]] 
    Derivative[1][$CellContext`\[Phi]t][$CellContext`\[Tau]]}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.8969407376937838`*^9, 3.896940770341337*^9}, {
   3.896940830908326*^9, 3.896940848682592*^9}, 3.8969411498945227`*^9, 
   3.89702034349326*^9, 3.897032005077059*^9, 3.897032162148458*^9, 
   3.897112168926569*^9, 3.8971122216744328`*^9, 3.897554478804242*^9, 
   3.897554530963085*^9, 3.897554633727893*^9, 3.89755561990691*^9, 
   3.89763461117807*^9, 3.8976346598016577`*^9, 3.8976355054252234`*^9, 
   3.898590042512697*^9, 3.8986568218262177`*^9, 3.898659340910799*^9, 
   3.89865948399144*^9, 3.898659530067257*^9, 3.8986642343275833`*^9, 
   3.898684103297247*^9, 3.8987649447757196`*^9, 3.898783620969182*^9, 
   3.898932468457752*^9, 3.899180264197771*^9, 3.899196999554605*^9, 
   3.899202019172461*^9, 3.8992047753823633`*^9, 3.899267921131426*^9, 
   3.899353158013179*^9, 3.8993662830091333`*^9, 3.899368989049863*^9, 
   3.899386127207572*^9, 3.899432941412548*^9, 3.899439896301798*^9},
 CellLabel->
  "Out[260]=",ExpressionUUID->"299f5092-f0b1-4420-8897-fe2e830ce57f"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"rt", "[", "\[Tau]", "]"}], "2"], " ", 
    RowBox[{
     SuperscriptBox["\[Phi]t", "\[Prime]",
      MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
     RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
     RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
     RowBox[{
      SuperscriptBox["tt", "\[Prime]",
       MultilineFunction->None], "[", "\[Tau]", "]"}], " ", "\[Epsilon]"}], 
    SqrtBox[
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
      RowBox[{"h", "[", 
       RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, 0, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 
   0, {$CellContext`rt[$CellContext`\[Tau]]^2 
    Derivative[1][$CellContext`\[Phi]t][$CellContext`\[Tau]], $CellContext`f[
      $CellContext`rt[$CellContext`\[Tau]]] ($CellContext`f[
        $CellContext`rt[$CellContext`\[Tau]]] $CellContext`h[
        $CellContext`rt[$CellContext`\[Tau]]])^
     Rational[-1, 
       2] $CellContext`rt[$CellContext`\[Tau]] \
$CellContext`S\[Theta][$CellContext`\[Tau]] 
    Derivative[1][$CellContext`tt][$CellContext`\[Tau]]}, 0, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.8969407376937838`*^9, 3.896940770341337*^9}, {
   3.896940830908326*^9, 3.896940848682592*^9}, 3.8969411498945227`*^9, 
   3.89702034349326*^9, 3.897032005077059*^9, 3.897032162148458*^9, 
   3.897112168926569*^9, 3.8971122216744328`*^9, 3.897554478804242*^9, 
   3.897554530963085*^9, 3.897554633727893*^9, 3.89755561990691*^9, 
   3.89763461117807*^9, 3.8976346598016577`*^9, 3.8976355054252234`*^9, 
   3.898590042512697*^9, 3.8986568218262177`*^9, 3.898659340910799*^9, 
   3.89865948399144*^9, 3.898659530067257*^9, 3.8986642343275833`*^9, 
   3.898684103297247*^9, 3.8987649447757196`*^9, 3.898783620969182*^9, 
   3.898932468457752*^9, 3.899180264197771*^9, 3.899196999554605*^9, 
   3.899202019172461*^9, 3.8992047753823633`*^9, 3.899267921131426*^9, 
   3.899353158013179*^9, 3.8993662830091333`*^9, 3.899368989049863*^9, 
   3.899386127207572*^9, 3.899432941412548*^9, 3.899439896325947*^9},
 CellLabel->
  "Out[261]=",ExpressionUUID->"599f538e-89de-4b9b-9588-c3bda0647bc5"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{
    RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
    RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", "\[Epsilon]"}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
    SeriesData[$CellContext`\[Epsilon], 0, {}, 1, 2, 1],
    Editable->False]}],
  SeriesData[$CellContext`\[Epsilon], 
   0, {$CellContext`rt[$CellContext`\[Tau]] \
$CellContext`S\[Theta][$CellContext`\[Tau]]}, 1, 2, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.8969407376937838`*^9, 3.896940770341337*^9}, {
   3.896940830908326*^9, 3.896940848682592*^9}, 3.8969411498945227`*^9, 
   3.89702034349326*^9, 3.897032005077059*^9, 3.897032162148458*^9, 
   3.897112168926569*^9, 3.8971122216744328`*^9, 3.897554478804242*^9, 
   3.897554530963085*^9, 3.897554633727893*^9, 3.89755561990691*^9, 
   3.89763461117807*^9, 3.8976346598016577`*^9, 3.8976355054252234`*^9, 
   3.898590042512697*^9, 3.8986568218262177`*^9, 3.898659340910799*^9, 
   3.89865948399144*^9, 3.898659530067257*^9, 3.8986642343275833`*^9, 
   3.898684103297247*^9, 3.8987649447757196`*^9, 3.898783620969182*^9, 
   3.898932468457752*^9, 3.899180264197771*^9, 3.899196999554605*^9, 
   3.899202019172461*^9, 3.8992047753823633`*^9, 3.899267921131426*^9, 
   3.899353158013179*^9, 3.8993662830091333`*^9, 3.899368989049863*^9, 
   3.899386127207572*^9, 3.899432941412548*^9, 3.899439896353673*^9},
 CellLabel->
  "Out[262]=",ExpressionUUID->"ce9e7020-00be-4d03-84b6-ad5fc1852e1c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Perturbative", " ", "inversion", " ", "to", " ", "obtain", " ", "time", 
     " ", "and", " ", "phi", " ", "components", " ", "of", " ", "four"}], "-",
     "velocity"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"utint", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", 
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], 
        RowBox[{"(", 
         RowBox[{"\[ScriptCapitalE]", " ", "-", " ", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{"rt", "[", "\[Tau]", "]"}], "2"], " ", 
              RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
              RowBox[{
               SuperscriptBox["f", "\[Prime]",
                MultilineFunction->None], "[", 
               RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
              RowBox[{
               SuperscriptBox["\[Phi]t", "\[Prime]",
                MultilineFunction->None], "[", "\[Tau]", "]"}]}], ")"}], " ", 
            "\[Epsilon]"}], 
           RowBox[{"2", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"f", "[", 
               RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
              RowBox[{"h", "[", 
               RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]]}]]}], ")"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["\[Phi]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}], "->", 
          RowBox[{"\[ScriptCapitalJ]", "/", 
           SuperscriptBox[
            RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]}], ",", 
         RowBox[{
          RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", 
          RowBox[{"sp", "/", 
           RowBox[{"rt", "[", "\[Tau]", "]"}]}]}]}], "}"}]}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"u\[CurlyPhi]int", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        FractionBox["1", 
         SuperscriptBox[
          RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]], 
        RowBox[{"(", 
         RowBox[{"\[ScriptCapitalJ]", " ", "-", 
          FractionBox[
           RowBox[{
            RowBox[{"f", "[", 
             RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
            RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["tt", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}], " ", 
            "\[Epsilon]"}], 
           RowBox[{" ", 
            SqrtBox[
             RowBox[{
              RowBox[{"f", "[", 
               RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
              RowBox[{"h", "[", 
               RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]]}]]}], ")"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{
           SuperscriptBox["tt", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}], "->", 
          RowBox[{"\[ScriptCapitalE]", "/", 
           RowBox[{"f", "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]}], ",", 
         RowBox[{
          RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", 
          RowBox[{"sp", "/", 
           RowBox[{"rt", "[", "\[Tau]", "]"}]}]}]}], "}"}]}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"t\[CurlyPhi]Rule", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["tt", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}], "->", "utint"}], 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\[Phi]t", "'"}], "[", "\[Tau]", "]"}], "->", 
        "u\[CurlyPhi]int"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"urint2", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"-", "1"}], " ", "-", " ", 
            RowBox[{"gtt", " ", 
             SuperscriptBox["utint", "2"]}], " ", "-", " ", 
            RowBox[{"g\[Phi]\[Phi]", " ", 
             SuperscriptBox["u\[CurlyPhi]int", "2"]}]}], "grr"], "/.", 
          "TrRule"}], "/.", 
         RowBox[{"{", 
          RowBox[{"\[Theta]t", "->", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
              RowBox[{"\[Epsilon]", " ", 
               RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], 
            ")"}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
      "Simplify"}], "//", "Normal"}]}], "\[IndentingNewLine]", 
   RowBox[{"URule", " ", "=", " ", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox["tt", "\[Prime]",
         MultilineFunction->None], "[", "\[Tau]", "]"}], "->", "utint"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"\[Phi]t", "'"}], "[", "\[Tau]", "]"}], "->", 
       "u\[CurlyPhi]int"}], ",", 
      RowBox[{
       RowBox[{
        RowBox[{"rt", "'"}], "[", "\[Tau]", "]"}], "->", 
       RowBox[{"Sqrt", "[", "urint2", "]"}]}]}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.89694134348731*^9, 3.896941567779666*^9}, {
   3.896941640579129*^9, 3.896941651390273*^9}, {3.8969417221140957`*^9, 
   3.896941813900628*^9}, {3.896941906587262*^9, 3.8969419071422253`*^9}, {
   3.896941939227611*^9, 3.89694210700211*^9}, {3.896942282849847*^9, 
   3.896942289298559*^9}, 3.896942334393632*^9, {3.896942605792634*^9, 
   3.8969426413319073`*^9}, 3.896947965969316*^9, {3.897112201219845*^9, 
   3.897112204741836*^9}, {3.897554657178062*^9, 3.8975546732189293`*^9}, {
   3.897555556204692*^9, 3.897555561820264*^9}, {3.8976354651862288`*^9, 
   3.897635468440422*^9}, {3.8991967554724293`*^9, 3.899196773202084*^9}, 
   3.8991969291427097`*^9},
 CellLabel->
  "In[263]:=",ExpressionUUID->"58308630-958f-4fbd-88ff-8a9214db59c4"],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    FractionBox[
     SuperscriptBox["\[ScriptCapitalE]", "2"], 
     RowBox[{"f", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], "-", 
    FractionBox[
     SuperscriptBox["\[ScriptCapitalJ]", "2"], 
     SuperscriptBox[
      RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]]}], 
   RowBox[{"h", "[", 
    RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], "+", 
  FractionBox[
   RowBox[{
   "sp", " ", "\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]", " ", 
    "\[Epsilon]", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"f", "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}], "-", 
      RowBox[{
       RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
       RowBox[{
        SuperscriptBox["f", "\[Prime]",
         MultilineFunction->None], "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
       RowBox[{"h", "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    SuperscriptBox[
     RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.896954688548915*^9, 3.8970203435474787`*^9, 
  3.897032005134132*^9, 3.897032162207549*^9, 3.8971121689822817`*^9, 
  3.8971122217271757`*^9, 3.897554675696995*^9, 3.8975555629608173`*^9, 
  3.897555619973147*^9, 3.8976346112577543`*^9, 3.897634659860116*^9, 
  3.897635505504385*^9, 3.898590042641329*^9, 3.898656821903713*^9, 
  3.898664234449252*^9, 3.8986841034230556`*^9, 3.898764944885067*^9, 
  3.898783621041271*^9, 3.8989324685774937`*^9, 3.8991802643455772`*^9, 
  3.899196999642879*^9, 3.899202019263303*^9, 3.899204775531568*^9, 
  3.899267921266583*^9, 3.899353158144908*^9, 3.899366283109827*^9, 
  3.8993689891480083`*^9, 3.899386127344707*^9, 3.89943294154431*^9, 
  3.899439896433951*^9},
 CellLabel->
  "Out[266]=",ExpressionUUID->"80f11a25-788f-4570-a8ef-9cf093983209"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["tt", "\[Prime]",
      MultilineFunction->None], "[", "\[Tau]", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ScriptCapitalE]", "-", 
      FractionBox[
       RowBox[{"sp", " ", "\[ScriptCapitalJ]", " ", "\[Epsilon]", " ", 
        RowBox[{
         SuperscriptBox["f", "\[Prime]",
          MultilineFunction->None], "[", 
         RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
          RowBox[{"h", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]], " ", 
        RowBox[{"rt", "[", "\[Tau]", "]"}]}]]}], 
     RowBox[{"f", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[Phi]t", "\[Prime]",
      MultilineFunction->None], "[", "\[Tau]", "]"}], "\[Rule]", 
    FractionBox[
     RowBox[{"\[ScriptCapitalJ]", "-", 
      FractionBox[
       RowBox[{"sp", " ", "\[ScriptCapitalE]", " ", "\[Epsilon]"}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
         RowBox[{"h", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]]]}], 
     SuperscriptBox[
      RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["rt", "\[Prime]",
      MultilineFunction->None], "[", "\[Tau]", "]"}], "\[Rule]", 
    SqrtBox[
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        FractionBox[
         SuperscriptBox["\[ScriptCapitalE]", "2"], 
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], "-", 
        FractionBox[
         SuperscriptBox["\[ScriptCapitalJ]", "2"], 
         SuperscriptBox[
          RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]]}], 
       RowBox[{"h", "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], "+", 
      FractionBox[
       RowBox[{
       "sp", " ", "\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]", " ", 
        "\[Epsilon]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", 
           RowBox[{"f", "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}], "-", 
          RowBox[{
           RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["f", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]}], ")"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
           RowBox[{"h", "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}], ")"}], 
         RowBox[{"3", "/", "2"}]], " ", 
        SuperscriptBox[
         RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]]}]]}]}], "}"}]], "Output",\

 CellChangeTimes->{3.896954688548915*^9, 3.8970203435474787`*^9, 
  3.897032005134132*^9, 3.897032162207549*^9, 3.8971121689822817`*^9, 
  3.8971122217271757`*^9, 3.897554675696995*^9, 3.8975555629608173`*^9, 
  3.897555619973147*^9, 3.8976346112577543`*^9, 3.897634659860116*^9, 
  3.897635505504385*^9, 3.898590042641329*^9, 3.898656821903713*^9, 
  3.898664234449252*^9, 3.8986841034230556`*^9, 3.898764944885067*^9, 
  3.898783621041271*^9, 3.8989324685774937`*^9, 3.8991802643455772`*^9, 
  3.899196999642879*^9, 3.899202019263303*^9, 3.899204775531568*^9, 
  3.899267921266583*^9, 3.899353158144908*^9, 3.899366283109827*^9, 
  3.8993689891480083`*^9, 3.899386127344707*^9, 3.89943294154431*^9, 
  3.899439896459173*^9},
 CellLabel->
  "Out[267]=",ExpressionUUID->"21a66b57-9da6-4b4b-8136-0d93cbc2fa55"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Parallel transport in Marck-like tetrad", "Subsection",
 CellChangeTimes->{{3.897104557987749*^9, 3.8971045693212023`*^9}, {
  3.898658225255525*^9, 
  3.898658226752953*^9}},ExpressionUUID->"87861389-68a6-48a5-9d18-\
d0063a9a2feb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"The", " ", "spin", " ", "vector", " ", "fulfills", " ", "non"}], 
    "-", 
    RowBox[{"trivial", " ", "parallel"}], "-", 
    RowBox[{"transport", " ", "equations"}]}], "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{"Series", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{"Svec", ",", "\[Tau]"}], "]"}], "/.", "SEOM"}], "/.", 
       "TrRule"}], "/.", 
      RowBox[{"{", 
       RowBox[{"\[Theta]t", "->", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Pi]", "/", "2"}], " ", "+", " ", 
           RowBox[{"\[Epsilon]", " ", 
            RowBox[{"\[Delta]\[Theta]t", "[", "#", "]"}]}]}], "&"}], ")"}]}], 
       "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
   "FullSimplify"}]}]], "Input",
 CellChangeTimes->{{3.896939956491477*^9, 3.896940060974391*^9}, {
   3.896940201063921*^9, 3.896940214412848*^9}, 3.896941234613433*^9, {
   3.8969421827274837`*^9, 3.896942219488669*^9}, {3.896942262961382*^9, 
   3.896942263544795*^9}, {3.896942319957762*^9, 3.896942430510363*^9}, 
   3.896942988500832*^9, {3.896944648365781*^9, 3.896944700266099*^9}, 
   3.896946452124037*^9, 3.8969482556801357`*^9, 3.896959764867244*^9, {
   3.8969598046291533`*^9, 3.896959807759108*^9}, {3.897032151764832*^9, 
   3.897032154771344*^9}, {3.898658252992379*^9, 3.898658298483004*^9}},
 CellLabel->
  "In[268]:=",ExpressionUUID->"25eafbae-e458-41b3-8f4a-383145936054"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["f", "\[Prime]",
            MultilineFunction->None], "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["rt", "\[Prime]",
               MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
            RowBox[{
             RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
             RowBox[{
              SuperscriptBox["tt", "\[Prime]",
               MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
         ")"}], " ", "\[Epsilon]"}], 
       RowBox[{"2", " ", 
        RowBox[{"f", "[", 
         RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
      SeriesData[$CellContext`\[Epsilon], 0, {}, 1, 2, 1],
      Editable->False]}],
    SeriesData[$CellContext`\[Epsilon], 0, {Rational[-1, 2] $CellContext`f[
         $CellContext`rt[$CellContext`\[Tau]]]^(-1) 
      Derivative[1][$CellContext`f][
        $CellContext`rt[$CellContext`\[Tau]]] ($CellContext`St[$CellContext`\
\[Tau]] Derivative[
         1][$CellContext`rt][$CellContext`\[Tau]] + \
$CellContext`Sr[$CellContext`\[Tau]] 
        Derivative[1][$CellContext`tt][$CellContext`\[Tau]])}, 1, 2, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["rt", "\[Prime]",
             MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]t", "\[Prime]",
             MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}], " ", 
        "\[Epsilon]"}], 
       RowBox[{"rt", "[", "\[Tau]", "]"}]]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
      SeriesData[$CellContext`\[Epsilon], 0, {}, 1, 2, 1],
      Editable->False]}],
    SeriesData[$CellContext`\[Epsilon], 
     0, {-$CellContext`rt[$CellContext`\[Tau]]^(-1) \
($CellContext`S\[Phi][$CellContext`\[Tau]] 
        Derivative[
         1][$CellContext`rt][$CellContext`\[Tau]] + \
$CellContext`Sr[$CellContext`\[Tau]] 
        Derivative[1][$CellContext`\[Phi]t][$CellContext`\[Tau]])}, 1, 2, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["h", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["rt", "\[Prime]",
             MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
          RowBox[{
           RowBox[{"St", "[", "\[Tau]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["f", "\[Prime]",
             MultilineFunction->None], "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
           RowBox[{
            SuperscriptBox["tt", "\[Prime]",
             MultilineFunction->None], "[", "\[Tau]", "]"}]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
           RowBox[{"S\[Phi]", "[", "\[Tau]", "]"}], " ", 
           RowBox[{
            SuperscriptBox["\[Phi]t", "\[Prime]",
             MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}], " ", 
        "\[Epsilon]"}], 
       RowBox[{"2", " ", 
        RowBox[{"h", "[", 
         RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
      SeriesData[$CellContext`\[Epsilon], 0, {}, 1, 2, 1],
      Editable->False]}],
    SeriesData[$CellContext`\[Epsilon], 0, {Rational[-1, 2] $CellContext`h[
         $CellContext`rt[$CellContext`\[Tau]]]^(-1) \
($CellContext`Sr[$CellContext`\[Tau]] Derivative[1][$CellContext`h][
          $CellContext`rt[$CellContext`\[Tau]]] 
        Derivative[
         1][$CellContext`rt][$CellContext`\[Tau]] + \
$CellContext`St[$CellContext`\[Tau]] Derivative[1][$CellContext`f][
          $CellContext`rt[$CellContext`\[Tau]]] 
        Derivative[1][$CellContext`tt][$CellContext`\[Tau]] - 
       2 $CellContext`rt[$CellContext`\[Tau]] \
$CellContext`S\[Phi][$CellContext`\[Tau]] 
       Derivative[1][$CellContext`\[Phi]t][$CellContext`\[Tau]])}, 1, 2, 1],
    Editable->False], ",", 
   InterpretationBox[
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{
        RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], " ", 
        RowBox[{
         SuperscriptBox["rt", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}], " ", "\[Epsilon]"}], 
       RowBox[{"rt", "[", "\[Tau]", "]"}]]}], "+", 
     InterpretationBox[
      SuperscriptBox[
       RowBox[{"O", "[", "\[Epsilon]", "]"}], "2"],
      SeriesData[$CellContext`\[Epsilon], 0, {}, 1, 2, 1],
      Editable->False]}],
    SeriesData[$CellContext`\[Epsilon], 
     0, {-$CellContext`rt[$CellContext`\[Tau]]^(-1) \
$CellContext`S\[Theta][$CellContext`\[Tau]] 
      Derivative[1][$CellContext`rt][$CellContext`\[Tau]]}, 1, 2, 1],
    Editable->False]}], "}"}]], "Output",
 CellChangeTimes->{
  3.896940024351173*^9, 3.8969400626905622`*^9, 3.8969402150531473`*^9, {
   3.896941225350616*^9, 3.896941235254032*^9}, {3.896942195392992*^9, 
   3.896942220175866*^9}, {3.8969423772104597`*^9, 3.8969424315547*^9}, 
   3.8969429891659307`*^9, {3.896944656864316*^9, 3.8969447019921827`*^9}, 
   3.896946455318823*^9, 3.896948256855917*^9, 3.896959766497377*^9, 
   3.896959808883615*^9, 3.8970203437290287`*^9, 3.897032005325115*^9, {
   3.897032157549478*^9, 3.8970321622903347`*^9}, 3.897112169145862*^9, 
   3.8971122218072987`*^9, 3.897555620133731*^9, 3.8976346114192867`*^9, 
   3.897634659951427*^9, 3.897635505656351*^9, 3.898590042790859*^9, 
   3.898656822063777*^9, {3.898658293187458*^9, 3.898658300108007*^9}, 
   3.8986642345504017`*^9, 3.8986841035000277`*^9, 3.898764944960498*^9, 
   3.898783621092502*^9, 3.8989324686508913`*^9, 3.8991802644181004`*^9, 
   3.899196999715106*^9, 3.899202019341592*^9, 3.899204775618297*^9, 
   3.899267921367848*^9, 3.8993531582237377`*^9, 3.899366283222879*^9, 
   3.89936898923083*^9, 3.899386127435585*^9, 3.8994329416256027`*^9, 
   3.899439896516378*^9},
 CellLabel->
  "Out[268]=",ExpressionUUID->"8aee5a82-5f96-4cd1-8f9b-c5bae3b6e2aa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"A", " ", "Marck"}], "-", 
     RowBox[{"like", " ", "tetrad", " ", "e0"}]}], ",", "er", ",", "e\[Phi]", 
    ",", 
    RowBox[{"e\[Theta]", " ", 
     RowBox[{"(", 
      RowBox[{"with", " ", "indices", " ", "up"}], ")"}], " ", "allows", " ", 
     "to", " ", "simplify", " ", "parallel", " ", "transport"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"LeadURule", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox["tt", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}], "->", 
        RowBox[{"\[ScriptCapitalE]", "/", 
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[Phi]t", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}], "->", 
        RowBox[{"\[ScriptCapitalJ]", "/", 
         SuperscriptBox[
          RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"rt", "'"}], "[", "\[Tau]", "]"}], "->", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            SuperscriptBox["\[ScriptCapitalE]", "2"], 
            RowBox[{"f", "[", 
             RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], "-", 
           FractionBox[
            SuperscriptBox["\[ScriptCapitalJ]", "2"], 
            SuperscriptBox[
             RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]]}], 
          RowBox[{"h", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]]]}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"e\[Theta]", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0", ",", 
       FractionBox["1", "r"]}], "}"}], "/.", "TrRule"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"e0", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         SuperscriptBox["tt", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}], ",", 
        RowBox[{
         SuperscriptBox["\[Phi]t", "\[Prime]",
          MultilineFunction->None], "[", "\[Tau]", "]"}], ",", 
        RowBox[{
         RowBox[{"rt", "'"}], "[", "\[Tau]", "]"}], ",", "0"}], "}"}], "/.", 
      "LeadURule"}], "/.", "TrRule"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Note", " ", "the", " ", "component", " ", "order", " ", "t"}], 
     ",", "\[CurlyPhi]", ",", "t", ",", 
     RowBox[{"\[Theta]", "."}]}], "*)"}], "\[IndentingNewLine]", " ", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"These", " ", "are", " ", "denoted", " ", "as", " ", 
      SubscriptBox[
       OverscriptBox["e", "~"], "r"]}], ",", 
     RowBox[{
      SubscriptBox[
       OverscriptBox["e", "~"], "\[CurlyPhi]"], " ", "in", " ", "the", " ", 
      RowBox[{"paper", ":"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ersol", " ", "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 SuperscriptBox["etr", "2"], "gtt"}], " ", "+", " ", 
                RowBox[{
                 SuperscriptBox["err", "2"], "grr"}]}], "/.", "TrRule"}], "/.", 
              RowBox[{"{", 
               RowBox[{"\[Theta]t", "->", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Pi]", "/", "2"}], " ", "&"}], ")"}]}], "}"}]}], 
             " ", ")"}], "==", " ", "1"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"etr", " ", 
                 RowBox[{"e0", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "gtt"}], " ", "+", " ", 
                RowBox[{"err", " ", 
                 RowBox[{"e0", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "grr"}]}], "/.", "TrRule"}],
               "/.", 
              RowBox[{"{", 
               RowBox[{"\[Theta]t", "->", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Pi]", "/", "2"}], " ", "&"}], ")"}]}], "}"}]}], 
             ")"}], " ", "==", "0"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"etr", ",", "err"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", " ", 
         RowBox[{
          RowBox[{"h", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"er", " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"etr", ",", "0", ",", "err", ",", "0"}], "}"}], "/.", 
     RowBox[{"ersol", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"e\[Phi]sol", " ", "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"(*", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  SuperscriptBox["et\[Phi]", "2"], "gtt"}], " ", "+", " ", 
                 RowBox[{
                  SuperscriptBox["e\[Phi]\[Phi]", "2"], "grr"}], "+", " ", 
                 RowBox[{
                  SuperscriptBox["er\[Phi]", "2"], "grr"}]}], "/.", 
                "TrRule"}], "/.", 
               RowBox[{"{", 
                RowBox[{"\[Theta]t", "->", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"\[Pi]", "/", "2"}], " ", "&"}], ")"}]}], "}"}]}], 
              " ", ")"}], "==", " ", "1"}], ","}], "*)"}], 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"et\[Phi]", " ", 
                 RowBox[{"e0", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "gtt"}], "+", 
                RowBox[{"1", " ", 
                 RowBox[{"e0", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "g\[Phi]\[Phi]"}], " ", "+",
                 " ", 
                RowBox[{"er\[Phi]", " ", 
                 RowBox[{"e0", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "grr"}]}], "/.", "TrRule"}],
               "/.", 
              RowBox[{"{", 
               RowBox[{"\[Theta]t", "->", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Pi]", "/", "2"}], " ", "&"}], ")"}]}], "}"}]}], 
             ")"}], " ", "==", "0"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"et\[Phi]", " ", 
                 RowBox[{"er", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "gtt"}], "+", 
                RowBox[{"1", " ", 
                 RowBox[{"er", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "g\[Phi]\[Phi]"}], " ", "+",
                 " ", 
                RowBox[{"er\[Phi]", " ", 
                 RowBox[{"er", "[", 
                  RowBox[{"[", "3", "]"}], "]"}], "grr"}]}], "/.", "TrRule"}],
               "/.", 
              RowBox[{"{", 
               RowBox[{"\[Theta]t", "->", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"\[Pi]", "/", "2"}], " ", "&"}], ")"}]}], "}"}]}], 
             ")"}], " ", "==", "0"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"et\[Phi]", ",", 
           RowBox[{"(*", 
            RowBox[{"e\[Phi]\[Phi]", ","}], "*)"}], "er\[Phi]"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", " ", 
         RowBox[{
          RowBox[{"h", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
           SuperscriptBox[
            RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ">", "0"}]}], "}"}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"N\[Phi]", " ", "=", " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"et\[Phi]", " ", ",", "1", ",", "er\[Phi]", ",", "0"}], "}"}], 
      "/.", 
      RowBox[{"e\[Phi]sol", "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"e\[Phi]", " ", "=", 
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{"N\[Phi]", "/", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"N\[Phi]", "[", 
              RowBox[{"[", "i", "]"}], "]"}], 
             RowBox[{"N\[Phi]", "[", 
              RowBox[{"[", "j", "]"}], "]"}], 
             RowBox[{"g", "[", 
              RowBox[{"[", 
               RowBox[{"i", ",", "j"}], "]"}], "]"}]}], "/.", "TrRule"}], "/.", 
           RowBox[{"{", 
            RowBox[{"\[Theta]t", "->", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "2"}], " ", "&"}], ")"}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", "4"}], "}"}]}], "]"}], "]"}]}], ")"}], 
     "//", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}], ",", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", " ", 
          RowBox[{
           RowBox[{"h", "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ">", "0"}]}], 
         "}"}]}], "]"}], "&"}]}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "These", " ", "reduce", " ", "to", " ", "the", " ", "legs", " ", "of", 
     " ", "the", " ", "Marck", " ", "tetrad", " ", "in", " ", 
     "Schwarzschild"}], "*)"}]}]}]], "Input",
 CellChangeTimes->{{3.8969440671722937`*^9, 3.896944212221252*^9}, {
   3.896944628321567*^9, 3.896944636964793*^9}, {3.896944732921709*^9, 
   3.896944996634864*^9}, {3.896945203864024*^9, 3.896945221678597*^9}, {
   3.89694569171835*^9, 3.896945725142815*^9}, 3.896946111417325*^9, {
   3.89694646593657*^9, 3.8969464689197683`*^9}, {3.896952398064419*^9, 
   3.896952427744338*^9}, {3.89695246795844*^9, 3.8969525141578197`*^9}, {
   3.896952563942121*^9, 3.896952564418521*^9}, {3.8969525969150543`*^9, 
   3.8969526248559523`*^9}, {3.896952691226131*^9, 3.896952859895483*^9}, {
   3.8969528906293783`*^9, 3.896952950393342*^9}, {3.896953038141088*^9, 
   3.896953120642099*^9}, {3.896953846483046*^9, 3.8969538495630293`*^9}, {
   3.896954713034017*^9, 3.8969547150996304`*^9}, {3.896955072960103*^9, 
   3.896955130362166*^9}, {3.8969553275857773`*^9, 3.896955338006734*^9}, 
   3.89695547010664*^9, {3.896957663136204*^9, 3.896957682504258*^9}, {
   3.896957712975816*^9, 3.896957723481279*^9}, {3.8969578237340593`*^9, 
   3.896957850851632*^9}, {3.8970349436618557`*^9, 3.897034946847337*^9}, 
   3.897035099437593*^9, {3.897035421111298*^9, 3.897035465554144*^9}, {
   3.89703647834004*^9, 3.8970365025250063`*^9}, {3.89703655355606*^9, 
   3.897036556568378*^9}, {3.897036640661276*^9, 3.897036643942874*^9}, {
   3.897037276419685*^9, 3.897037304743421*^9}, {3.898658313408847*^9, 
   3.8986583717928953`*^9}, {3.898658443882965*^9, 3.89865848075972*^9}, {
   3.898658511293988*^9, 3.8986585665972157`*^9}, {3.899435785094964*^9, 
   3.8994358068283453`*^9}},
 CellLabel->
  "In[269]:=",ExpressionUUID->"605dcd28-01f2-433f-92da-b35e917b7d06"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "0", ",", "0", ",", 
   FractionBox["1", 
    RowBox[{"rt", "[", "\[Tau]", "]"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.897036479284357*^9, 3.897036502895377*^9}, 
   3.897036557290436*^9, 3.897036644315075*^9, 3.897037312788228*^9, 
   3.8971121691851263`*^9, 3.897112221829756*^9, 3.897555620164565*^9, 
   3.897634611456807*^9, 3.897634659981737*^9, 3.897635505687973*^9, 
   3.898590042827484*^9, 3.8986568221042967`*^9, 3.898658384738109*^9, 
   3.8986642345917473`*^9, 3.89868410352927*^9, 3.898764944988161*^9, 
   3.8987836211179447`*^9, 3.898932468678752*^9, 3.899180264463151*^9, 
   3.899196999759907*^9, 3.89920201937719*^9, 3.89920477564788*^9, 
   3.899267921398653*^9, 3.8993531582533073`*^9, 3.8993662832709208`*^9, 
   3.899368989266224*^9, 3.899386127482749*^9, 3.899432941655999*^9, 
   3.8994398965479507`*^9},
 CellLabel->
  "Out[270]=",ExpressionUUID->"958ff299-dd30-4aba-9513-12b0efa99cfe"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["\[ScriptCapitalE]", 
    RowBox[{"f", "[", 
     RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], ",", 
   FractionBox["\[ScriptCapitalJ]", 
    SuperscriptBox[
     RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]], ",", 
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      FractionBox[
       SuperscriptBox["\[ScriptCapitalE]", "2"], 
       RowBox[{"f", "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], "-", 
      FractionBox[
       SuperscriptBox["\[ScriptCapitalJ]", "2"], 
       SuperscriptBox[
        RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]]}], 
     RowBox[{"h", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]]], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.897036479284357*^9, 3.897036502895377*^9}, 
   3.897036557290436*^9, 3.897036644315075*^9, 3.897037312788228*^9, 
   3.8971121691851263`*^9, 3.897112221829756*^9, 3.897555620164565*^9, 
   3.897634611456807*^9, 3.897634659981737*^9, 3.897635505687973*^9, 
   3.898590042827484*^9, 3.8986568221042967`*^9, 3.898658384738109*^9, 
   3.8986642345917473`*^9, 3.89868410352927*^9, 3.898764944988161*^9, 
   3.8987836211179447`*^9, 3.898932468678752*^9, 3.899180264463151*^9, 
   3.899196999759907*^9, 3.89920201937719*^9, 3.89920477564788*^9, 
   3.899267921398653*^9, 3.8993531582533073`*^9, 3.8993662832709208`*^9, 
   3.899368989266224*^9, 3.899386127482749*^9, 3.899432941655999*^9, 
   3.8994398965722103`*^9},
 CellLabel->
  "Out[271]=",ExpressionUUID->"ea5eb38e-0861-40e0-be84-2fc38abdee5d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       FractionBox[
        SuperscriptBox["\[ScriptCapitalE]", "2"], 
        RowBox[{"f", "[", 
         RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], "-", 
       FractionBox[
        SuperscriptBox["\[ScriptCapitalJ]", "2"], 
        SuperscriptBox[
         RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]]}]], " ", 
     RowBox[{"rt", "[", "\[Tau]", "]"}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
        SuperscriptBox[
         RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]]], ",", "0", ",", 
   FractionBox[
    RowBox[{"\[ScriptCapitalE]", " ", 
     RowBox[{"rt", "[", "\[Tau]", "]"}]}], 
    SqrtBox[
     RowBox[{
      RowBox[{"f", "[", 
       RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
      RowBox[{"h", "[", 
       RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
        SuperscriptBox[
         RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]]], ",", "0"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.897036479284357*^9, 3.897036502895377*^9}, 
   3.897036557290436*^9, 3.897036644315075*^9, 3.897037312788228*^9, 
   3.8971121691851263`*^9, 3.897112221829756*^9, 3.897555620164565*^9, 
   3.897634611456807*^9, 3.897634659981737*^9, 3.897635505687973*^9, 
   3.898590042827484*^9, 3.8986568221042967`*^9, 3.898658384738109*^9, 
   3.8986642345917473`*^9, 3.89868410352927*^9, 3.898764944988161*^9, 
   3.8987836211179447`*^9, 3.898932468678752*^9, 3.899180264463151*^9, 
   3.899196999759907*^9, 3.89920201937719*^9, 3.89920477564788*^9, 
   3.899267921398653*^9, 3.8993531582533073`*^9, 3.8993662832709208`*^9, 
   3.899368989266224*^9, 3.899386127482749*^9, 3.899432941655999*^9, 
   3.89943989671268*^9},
 CellLabel->
  "Out[273]=",ExpressionUUID->"f45bbbc1-8ec5-4509-abe0-c47641c00a50"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox[
    RowBox[{"\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]"}], 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]]}]], ",", 
   FractionBox[
    SqrtBox[
     RowBox[{
      SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
      SuperscriptBox[
       RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]], 
    SuperscriptBox[
     RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]], ",", 
   FractionBox[
    RowBox[{"\[ScriptCapitalJ]", " ", 
     SqrtBox[
      FractionBox[
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        FractionBox[
         RowBox[{
          SuperscriptBox["\[ScriptCapitalE]", "2"], " ", 
          SuperscriptBox[
           RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]]}], 
       RowBox[{"h", "[", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]]]}], 
    RowBox[{"rt", "[", "\[Tau]", "]"}]], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.897036479284357*^9, 3.897036502895377*^9}, 
   3.897036557290436*^9, 3.897036644315075*^9, 3.897037312788228*^9, 
   3.8971121691851263`*^9, 3.897112221829756*^9, 3.897555620164565*^9, 
   3.897634611456807*^9, 3.897634659981737*^9, 3.897635505687973*^9, 
   3.898590042827484*^9, 3.8986568221042967`*^9, 3.898658384738109*^9, 
   3.8986642345917473`*^9, 3.89868410352927*^9, 3.898764944988161*^9, 
   3.8987836211179447`*^9, 3.898932468678752*^9, 3.899180264463151*^9, 
   3.899196999759907*^9, 3.89920201937719*^9, 3.89920477564788*^9, 
   3.899267921398653*^9, 3.8993531582533073`*^9, 3.8993662832709208`*^9, 
   3.899368989266224*^9, 3.899386127482749*^9, 3.899432941655999*^9, 
   3.899439896996809*^9},
 CellLabel->
  "Out[276]=",ExpressionUUID->"9f1f49bf-2a11-4353-8aff-29eb2d949bc4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Sanity", " ", 
    RowBox[{"check", ":", " ", 
     RowBox[{"is", " ", "tetrad", " ", 
      RowBox[{"orthonormal", "?"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Emat", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"e0", ",", "e\[Phi]", ",", "er", ",", "e\[Theta]"}], "}"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Emat", "[", 
             RowBox[{"[", 
              RowBox[{"i", ",", "j"}], "]"}], "]"}], 
            RowBox[{"Emat", "[", 
             RowBox[{"[", 
              RowBox[{"k", ",", "l"}], "]"}], "]"}], 
            RowBox[{"g", "[", 
             RowBox[{"[", 
              RowBox[{"j", ",", "l"}], "]"}], "]"}]}], "/.", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", "->", 
             RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "/.", "TrRule"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}], ",", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", " ", 
       RowBox[{
        RowBox[{"h", "[", 
         RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
         SuperscriptBox[
          RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ">", "0"}]}], "}"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.8969440671722937`*^9, 3.896944212221252*^9}, {
   3.896944628321567*^9, 3.896944636964793*^9}, {3.896944732921709*^9, 
   3.896944996634864*^9}, {3.896945203864024*^9, 3.896945221678597*^9}, {
   3.89694569171835*^9, 3.896945725142815*^9}, 3.896946111417325*^9, {
   3.89694646593657*^9, 3.8969464689197683`*^9}, {3.896952398064419*^9, 
   3.896952427744338*^9}, {3.89695246795844*^9, 3.8969525141578197`*^9}, {
   3.896952563942121*^9, 3.896952564418521*^9}, {3.8969525969150543`*^9, 
   3.8969526248559523`*^9}, {3.896952691226131*^9, 3.896952859895483*^9}, {
   3.8969528906293783`*^9, 3.896952950393342*^9}, {3.896953038141088*^9, 
   3.896953120642099*^9}, {3.896953846483046*^9, 3.8969538495630293`*^9}, {
   3.896954713034017*^9, 3.8969547150996304`*^9}, {3.896955072960103*^9, 
   3.896955130362166*^9}, {3.8969553275857773`*^9, 3.896955338006734*^9}, {
   3.89695547010664*^9, 3.896955599899535*^9}, {3.896955630083638*^9, 
   3.896955676342862*^9}, {3.896955721389625*^9, 3.8969557951280003`*^9}, {
   3.896955835822418*^9, 3.896955836169303*^9}, 3.896957768132409*^9, {
   3.896957840040515*^9, 3.896957866529848*^9}, 3.897036598803113*^9, {
   3.897036656679285*^9, 3.8970366618655376`*^9}, {3.898658394605908*^9, 
   3.8986584104445963`*^9}},
 CellLabel->
  "In[277]:=",ExpressionUUID->"72bcd2eb-92cd-4c2b-8551-61ee1faba4ce"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.8969547174489527`*^9, {3.8969551078295918`*^9, 3.8969551328285217`*^9}, 
   3.896955338755353*^9, {3.8969555894642344`*^9, 3.896955600991404*^9}, {
   3.8969556495700912`*^9, 3.896955676987454*^9}, {3.896955723289358*^9, 
   3.896955744405796*^9}, {3.89695578590763*^9, 3.896955795634204*^9}, 
   3.896955836901766*^9, 3.896957731556458*^9, 3.896957769279046*^9, {
   3.896957840746704*^9, 3.8969578670039682`*^9}, 3.896959784955084*^9, 
   3.896959815197279*^9, 3.897020343898273*^9, 3.897032005780389*^9, 
   3.897032162423183*^9, {3.897036592134714*^9, 3.897036599704844*^9}, 
   3.8970366630343857`*^9, 3.897112169869123*^9, 3.8971122220645723`*^9, 
   3.8975556208907423`*^9, 3.8976346121799498`*^9, 3.8976346605615683`*^9, 
   3.897635506406151*^9, 3.89859004353122*^9, 3.8986568228174467`*^9, 
   3.898664235316453*^9, 3.898684104231579*^9, 3.898764945730692*^9, 
   3.898783621512525*^9, 3.898932469380579*^9, 3.899180265562989*^9, 
   3.899197000434716*^9, 3.899202020091331*^9, 3.899204776360956*^9, 
   3.899267922104991*^9, 3.8993531589475603`*^9, 3.8993662840880423`*^9, 
   3.899368989979228*^9, 3.899386128184615*^9, 3.899432942367276*^9, 
   3.899439897227393*^9},
 CellLabel->
  "Out[278]=",ExpressionUUID->"58f75b59-1a27-4805-bd87-a82f8fa4118a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Similarly", " ", "to", " ", "Marck"}], ",", " ", 
    RowBox[{
     RowBox[{"we", " ", "define", " ", "a", " ", "parallel"}], "-", 
     RowBox[{
     "transported", " ", "tetrad", " ", "using", " ", "the", " ", "just", " ",
       "defined", " ", "legs"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"erder", " ", "=", " ", 
     RowBox[{"FullSimplify", "[", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"D", "[", 
               RowBox[{
                RowBox[{"er", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], ",", "\[Tau]"}], "]"}], "+", 
              
              RowBox[{"Sum", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"ChrisSchw", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "j", ",", "k"}], "]"}], "]"}], 
                 RowBox[{"er", "[", 
                  RowBox[{"[", "j", "]"}], "]"}], 
                 RowBox[{"e0", "[", 
                  RowBox[{"[", "k", "]"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "4"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", "4"}], "}"}]}], "]"}]}], ")"}], "/.", 
            RowBox[{"{", 
             RowBox[{"\[Theta]", "->", 
              RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "/.", "TrRule"}], "/.", 
          "LeadURule"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"h", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}]}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"\[Psi]dot", " ", "=", " ", 
    RowBox[{"FullSimplify", "[", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"erder", "[", 
            RowBox[{"[", "i", "]"}], "]"}], 
           RowBox[{"e\[Phi]", "[", 
            RowBox[{"[", "l", "]"}], "]"}], 
           RowBox[{"g", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "l"}], "]"}], "]"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Theta]", "->", 
            RowBox[{"\[Pi]", "/", "2"}]}], "}"}]}], "/.", "TrRule"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "4"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"l", ",", "1", ",", "4"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}], ",", 
        RowBox[{"\[ScriptCapitalE]", ">", "0"}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ">", "0"}]}], "}"}]}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Psi]dot", "/.", "fhRule"}], "//", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], ">", 
          RowBox[{"2", "M"}], ">", "0"}], ",", 
         RowBox[{"\[ScriptCapitalE]", ">", "0"}], ",", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
           SuperscriptBox[
            RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ">", "0"}]}], "}"}]}],
       "]"}], "&"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8969440671722937`*^9, 3.896944212221252*^9}, {
   3.896944628321567*^9, 3.896944636964793*^9}, {3.896944732921709*^9, 
   3.896944996634864*^9}, {3.896945203864024*^9, 3.896945221678597*^9}, {
   3.89694569171835*^9, 3.896945725142815*^9}, 3.896946111417325*^9, {
   3.89694646593657*^9, 3.8969464689197683`*^9}, {3.896952398064419*^9, 
   3.896952427744338*^9}, {3.89695246795844*^9, 3.8969525141578197`*^9}, {
   3.896952563942121*^9, 3.896952564418521*^9}, {3.8969525969150543`*^9, 
   3.8969526248559523`*^9}, {3.896952691226131*^9, 3.896952859895483*^9}, {
   3.8969528906293783`*^9, 3.896952950393342*^9}, {3.896953038141088*^9, 
   3.896953120642099*^9}, {3.896953846483046*^9, 3.8969538495630293`*^9}, {
   3.896954713034017*^9, 3.896954786334655*^9}, {3.8969548369834538`*^9, 
   3.8969549489342422`*^9}, {3.896954981696892*^9, 3.896954986088073*^9}, {
   3.896955196029868*^9, 3.896955222535067*^9}, 3.8969553045896378`*^9, {
   3.896955380516986*^9, 3.8969554093746843`*^9}, {3.896955443605876*^9, 
   3.8969554491416883`*^9}, {3.896955808932869*^9, 3.8969558311290703`*^9}, {
   3.896955906552322*^9, 3.896955933037631*^9}, {3.89695669778307*^9, 
   3.89695682344287*^9}, {3.8969568597233067`*^9, 3.8969568621854067`*^9}, {
   3.8969569198461437`*^9, 3.8969569281997557`*^9}, {3.8969570402534103`*^9, 
   3.896957040694272*^9}, {3.896957071453967*^9, 3.89695711828141*^9}, 
   3.896958565753355*^9, {3.8970369414819593`*^9, 3.8970369517312107`*^9}},
 CellLabel->
  "In[279]:=",ExpressionUUID->"3e3ecdad-303d-434f-9796-eaf7ebbb6773"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]"}], 
  RowBox[{
   SqrtBox[
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
     RowBox[{"h", "[", 
      RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
     SuperscriptBox[
      RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]]], "Output",
 CellChangeTimes->{
  3.896959829267824*^9, 3.8970203538284073`*^9, 3.8970320159631777`*^9, 
   3.897032163915744*^9, {3.897036933493881*^9, 3.897036952245824*^9}, 
   3.897112170559968*^9, 3.897112222222929*^9, 3.8975556216099854`*^9, 
   3.897634612920129*^9, 3.8976346612156267`*^9, 3.897635507149783*^9, 
   3.898590044198923*^9, 3.8986568235067177`*^9, 3.898664236068293*^9, 
   3.8986841049606333`*^9, 3.8987649464958143`*^9, 3.898783622035541*^9, 
   3.8989324700952168`*^9, 3.899180266266114*^9, 3.89919700113356*^9, 
   3.899202020819789*^9, 3.899204777131143*^9, 3.8992679228402767`*^9, 
   3.8993531596475153`*^9, 3.89936628484062*^9, 3.899368990698687*^9, 
   3.899386128917*^9, 3.8994329430762253`*^9, 3.899439897967554*^9},
 CellLabel->
  "Out[280]=",ExpressionUUID->"686033d1-a55a-4584-ac66-196f2c24d7de"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]"}], 
  RowBox[{
   SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
   SuperscriptBox[
    RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]]], "Output",
 CellChangeTimes->{
  3.896959829267824*^9, 3.8970203538284073`*^9, 3.8970320159631777`*^9, 
   3.897032163915744*^9, {3.897036933493881*^9, 3.897036952245824*^9}, 
   3.897112170559968*^9, 3.897112222222929*^9, 3.8975556216099854`*^9, 
   3.897634612920129*^9, 3.8976346612156267`*^9, 3.897635507149783*^9, 
   3.898590044198923*^9, 3.8986568235067177`*^9, 3.898664236068293*^9, 
   3.8986841049606333`*^9, 3.8987649464958143`*^9, 3.898783622035541*^9, 
   3.8989324700952168`*^9, 3.899180266266114*^9, 3.89919700113356*^9, 
   3.899202020819789*^9, 3.899204777131143*^9, 3.8992679228402767`*^9, 
   3.8993531596475153`*^9, 3.89936628484062*^9, 3.899368990698687*^9, 
   3.899386128917*^9, 3.8994329430762253`*^9, 3.8994398979926767`*^9},
 CellLabel->
  "Out[281]=",ExpressionUUID->"916db444-c1e6-42db-b6d2-a8b2cf4c4edc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"The", " ", "parallel"}], "-", 
    RowBox[{
    "transported", " ", "spin", " ", "vector", " ", "can", " ", "than", " ", 
     "be", " ", "expressed", " ", "through", " ", "this", " ", "tetrad", " ", 
     "as"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"SvecSol", " ", "=", " ", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{"sp", " ", "e\[Theta]"}], " ", "+", " ", 
     RowBox[{
      SqrtBox[
       RowBox[{
        SuperscriptBox["s", "2"], "-", 
        SuperscriptBox["sp", "2"]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[Psi]", "]"}], "er"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"Cos", "[", "\[Psi]", "]"}], "e\[Phi]"}]}], ")"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.897037572683124*^9, 3.8970376467414083`*^9}, {
  3.897037940237897*^9, 3.897037944909327*^9}, {3.89865858455103*^9, 
  3.898658621243314*^9}},
 CellLabel->
  "In[282]:=",ExpressionUUID->"67a2876a-f9ab-4457-9bf2-0a5dd74919e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"s", "-", "sp"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"s", "+", "sp"}], ")"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]", " ", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}]}], 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]]}]], "+", 
      FractionBox[
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          FractionBox[
           SuperscriptBox["\[ScriptCapitalE]", "2"], 
           RowBox[{"f", "[", 
            RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]], "-", 
          FractionBox[
           SuperscriptBox["\[ScriptCapitalJ]", "2"], 
           SuperscriptBox[
            RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]]}]], " ", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Psi]", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
           SuperscriptBox[
            RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]]]}], ")"}]}], 
   ",", 
   FractionBox[
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"s", "-", "sp"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"s", "+", "sp"}], ")"}]}]], " ", 
     RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]]}], 
    SuperscriptBox[
     RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]], ",", 
   RowBox[{
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"s", "-", "sp"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"s", "+", "sp"}], ")"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"\[ScriptCapitalJ]", " ", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           FractionBox[
            RowBox[{
             SuperscriptBox["\[ScriptCapitalE]", "2"], " ", 
             SuperscriptBox[
              RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], 
            RowBox[{
             RowBox[{"f", "[", 
              RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
               SuperscriptBox[
                RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]]}], 
          RowBox[{"h", "[", 
           RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}]]]}], 
       RowBox[{"rt", "[", "\[Tau]", "]"}]], "+", 
      FractionBox[
       RowBox[{"\[ScriptCapitalE]", " ", 
        RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
        RowBox[{"Sin", "[", "\[Psi]", "]"}]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
         RowBox[{"h", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
           SuperscriptBox[
            RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]]]}], ")"}]}], 
   ",", 
   FractionBox["sp", 
    RowBox[{"rt", "[", "\[Tau]", "]"}]]}], "}"}]], "Output",
 CellChangeTimes->{3.8970376765815697`*^9, 3.897037946221345*^9, 
  3.897112171574698*^9, 3.897112222865835*^9, 3.897555622636539*^9, 
  3.897634613984552*^9, 3.897634661996407*^9, 3.897635508207906*^9, 
  3.8985900452313337`*^9, 3.898656824548635*^9, 3.898664237155074*^9, 
  3.898684105942205*^9, 3.898764947548511*^9, 3.898783622788547*^9, 
  3.898932471095141*^9, 3.899180267329506*^9, 3.899197002197744*^9, 
  3.89920202191914*^9, 3.899204778138946*^9, 3.899267923848501*^9, 
  3.899353160648097*^9, 3.899366286066272*^9, 3.899368991601882*^9, 
  3.899386129926646*^9, 3.899432944078784*^9, 3.8994398990730247`*^9},
 CellLabel->
  "Out[282]=",ExpressionUUID->"3aa70829-2c12-43bc-a793-d419a85b3b66"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "With", " ", "the", " ", "use", " ", "of", " ", "the", " ", "precession", 
    " ", "angle", " ", "we", " ", "can", " ", "now", " ", "elegantly", " ", 
    "reexpress", " ", "\[Delta]\[CurlyTheta]"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"f", "[", "r", "]"}], " ", 
           RowBox[{"h", "[", "r", "]"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"St", "[", "\[Tau]", "]"}]}], " ", 
            RowBox[{
             SuperscriptBox["rt", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}]}], "+", 
           RowBox[{
            RowBox[{"Sr", "[", "\[Tau]", "]"}], " ", 
            RowBox[{
             SuperscriptBox["tt", "\[Prime]",
              MultilineFunction->None], "[", "\[Tau]", "]"}]}]}], ")"}]}], 
        RowBox[{" ", 
         RowBox[{
          SuperscriptBox["r", "2"], " ", 
          RowBox[{
           SuperscriptBox["\[Phi]t", "\[Prime]",
            MultilineFunction->None], "[", "\[Tau]", "]"}]}]}]], ")"}], "/.", 
      "TrRule"}], "/.", "LeadURule"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"St", "[", "\[Tau]", "]"}], "->", 
       RowBox[{"SvecSol", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], " ", ",", 
      RowBox[{
       RowBox[{"Sr", "[", "\[Tau]", "]"}], "->", 
       RowBox[{"SvecSol", "[", 
        RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}]}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"rt", "[", "\[Tau]", "]"}], ">", "0"}], ",", 
        RowBox[{"\[ScriptCapitalE]", ">", "0"}], ",", 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
          SuperscriptBox[
           RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}], ",", 
        RowBox[{
         RowBox[{"h", "[", 
          RowBox[{"rt", "[", "\[Tau]", "]"}], "]"}], ">", "0"}]}], "}"}]}], 
     "]"}], "&"}]}]}]], "Input",
 CellChangeTimes->{{3.897046373087237*^9, 3.897046384859725*^9}, {
   3.897046430027377*^9, 3.897046572887672*^9}, 3.897636486918432*^9, {
   3.898658688318387*^9, 3.898658723732085*^9}},
 CellLabel->
  "In[283]:=",ExpressionUUID->"31870c69-715b-4431-ab63-abf28ff2f2c7"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "-", "sp"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"s", "+", "sp"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
       SuperscriptBox[
        RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]], " ", 
   RowBox[{"Sin", "[", "\[Psi]", "]"}]}], 
  RowBox[{"\[ScriptCapitalJ]", " ", 
   RowBox[{"rt", "[", "\[Tau]", "]"}]}]]], "Output",
 CellChangeTimes->{{3.897046486156107*^9, 3.897046573691627*^9}, 
   3.897112172371689*^9, 3.897112223477252*^9, 3.897555623471023*^9, 
   3.897634614824477*^9, 3.897634662670024*^9, 3.897635509041504*^9, 
   3.897636487667454*^9, 3.898590046350205*^9, 3.898656825336331*^9, 
   3.89866423746768*^9, 3.898684106241932*^9, 3.89876494787472*^9, 
   3.898783622961834*^9, 3.898932471390408*^9, 3.899180267670032*^9, 
   3.899197002512145*^9, 3.8992020222377167`*^9, 3.899204778435336*^9, 
   3.899267924145233*^9, 3.899353160938464*^9, 3.899366286362998*^9, 
   3.89936899188374*^9, 3.8993861303892603`*^9, 3.899432944368223*^9, 
   3.899439899355343*^9},
 CellLabel->
  "Out[283]=",ExpressionUUID->"15497660-c694-4e26-a04a-502a50bd7e15"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Schwarzschild p,e parametrization", "Section",
 CellChangeTimes->{{3.8971177130906353`*^9, 3.8971177273195763`*^9}, {
  3.897194401249525*^9, 3.897194403060565*^9}, {3.898664608602283*^9, 
  3.8986646165037746`*^9}},ExpressionUUID->"5b819c66-de88-40f9-94ea-\
2b7b73fc7897"],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox[
   RowBox[{"R", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"r", ";", "\[ScriptCapitalE]"}], ",", "\[ScriptCapitalJ]", ",", 
      
      SubscriptBox["s", "||"]}]}]}], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ae9ed4cd-e75d-496b-9397-555d70f475c5"],
 ") polynomial"
}], "Subsection",
 CellChangeTimes->{{3.8991792280426197`*^9, 3.899179290434066*^9}, {
  3.899179615006844*^9, 
  3.89917961540944*^9}},ExpressionUUID->"83a82e81-2935-4a55-8308-\
156c333ca950"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Omitting", " ", "the", " ", 
     RowBox[{"1", "/", 
      RowBox[{"r", "^", "3"}]}]}], ",", " ", 
    RowBox[{
    "\[ScriptCapitalR]", " ", "is", " ", "a", " ", "cubic", " ", "in", " ", 
     "Schwarzschild"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Rpol", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"rt", "[", "\[Tau]", "]"}], "4"], "urint2"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", 
         FractionBox["sp", 
          RowBox[{"rt", "[", "\[Tau]", "]"}]]}], "}"}]}], "/.", "fhRule"}], "//",
      "Simplify"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CoefficientList", "[", 
     RowBox[{"Rpol", ",", 
      RowBox[{"rt", "[", "\[Tau]", "]"}]}], "]"}], "//", "Simplify"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Coefficient", "[", 
     RowBox[{"Rpol", ",", "sp"}], "]"}], "/.", 
    RowBox[{"{", 
     RowBox[{"\[Epsilon]", "->", "1"}], "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.897102835433017*^9, 3.897102837916753*^9}, {
   3.897115053715169*^9, 3.897115147784685*^9}, {3.897115788445966*^9, 
   3.897115801418167*^9}, {3.89711586237955*^9, 3.897115917721497*^9}, {
   3.8971159576157312`*^9, 3.8971159702114773`*^9}, {3.897116300545128*^9, 
   3.89711632931131*^9}, {3.897191140184738*^9, 3.897191152953718*^9}, {
   3.897192519956683*^9, 3.8971925650601254`*^9}, 3.897286350215109*^9, {
   3.897553801395857*^9, 3.897553840786695*^9}, {3.8975606536326733`*^9, 
   3.89756067622298*^9}},
 CellLabel->
  "In[284]:=",ExpressionUUID->"4ca21be1-83cf-445f-afab-6f56ef3b6238"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", "M", " ", "\[ScriptCapitalJ]", " ", 
     RowBox[{"(", 
      RowBox[{"\[ScriptCapitalJ]", "-", 
       RowBox[{
       "3", " ", "sp", " ", "\[ScriptCapitalE]", " ", "\[Epsilon]"}]}], 
      ")"}]}], "-", 
    RowBox[{"\[ScriptCapitalJ]", " ", 
     RowBox[{"(", 
      RowBox[{"\[ScriptCapitalJ]", "-", 
       RowBox[{
       "2", " ", "sp", " ", "\[ScriptCapitalE]", " ", "\[Epsilon]"}]}], ")"}],
      " ", 
     RowBox[{"rt", "[", "\[Tau]", "]"}]}], "+", 
    RowBox[{"2", " ", "M", " ", 
     SuperscriptBox[
      RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"rt", "[", "\[Tau]", "]"}], "3"]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.897191153293778*^9, 3.897194381268194*^9, 3.8972863516922483`*^9, {
   3.897553802748857*^9, 3.8975538411413803`*^9}, 3.897554813249263*^9, 
   3.897555623616744*^9, 3.897557625858824*^9, {3.897560664107498*^9, 
   3.897560677399727*^9}, 3.8976346149826097`*^9, 3.897634662822146*^9, 
   3.897635509195487*^9, 3.898590046526314*^9, 3.898656825516108*^9, 
   3.898664237507709*^9, 3.898684106281645*^9, 3.898764947928233*^9, 
   3.898783622998776*^9, 3.898932471430235*^9, 3.899180267776449*^9, 
   3.899197002562237*^9, 3.8992020222913513`*^9, 3.899204778487671*^9, 
   3.8992679241891813`*^9, 3.899353160977903*^9, 3.89936628640271*^9, 
   3.899368991925405*^9, 3.8993861304426527`*^9, 3.899432944410411*^9, 
   3.899439899411366*^9},
 CellLabel->
  "Out[284]=",ExpressionUUID->"a4846ebe-035c-4dbc-a749-764f27ad125e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", 
   RowBox[{"2", " ", "M", " ", "\[ScriptCapitalJ]", " ", 
    RowBox[{"(", 
     RowBox[{"\[ScriptCapitalJ]", "-", 
      RowBox[{"3", " ", "sp", " ", "\[ScriptCapitalE]", " ", "\[Epsilon]"}]}],
      ")"}]}], ",", 
   RowBox[{
    RowBox[{"-", "\[ScriptCapitalJ]"}], " ", 
    RowBox[{"(", 
     RowBox[{"\[ScriptCapitalJ]", "-", 
      RowBox[{"2", " ", "sp", " ", "\[ScriptCapitalE]", " ", "\[Epsilon]"}]}],
      ")"}]}], ",", 
   RowBox[{"2", " ", "M"}], ",", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["\[ScriptCapitalE]", "2"]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.897191153293778*^9, 3.897194381268194*^9, 3.8972863516922483`*^9, {
   3.897553802748857*^9, 3.8975538411413803`*^9}, 3.897554813249263*^9, 
   3.897555623616744*^9, 3.897557625858824*^9, {3.897560664107498*^9, 
   3.897560677399727*^9}, 3.8976346149826097`*^9, 3.897634662822146*^9, 
   3.897635509195487*^9, 3.898590046526314*^9, 3.898656825516108*^9, 
   3.898664237507709*^9, 3.898684106281645*^9, 3.898764947928233*^9, 
   3.898783622998776*^9, 3.898932471430235*^9, 3.899180267776449*^9, 
   3.899197002562237*^9, 3.8992020222913513`*^9, 3.899204778487671*^9, 
   3.8992679241891813`*^9, 3.899353160977903*^9, 3.89936628640271*^9, 
   3.899368991925405*^9, 3.8993861304426527`*^9, 3.899432944410411*^9, 
   3.899439899435957*^9},
 CellLabel->
  "Out[285]=",ExpressionUUID->"af9e190e-fd84-4269-9912-53b321dd287a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rt", "[", "\[Tau]", "]"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "6"}], " ", "M", " ", "\[ScriptCapitalE]", " ", 
     "\[ScriptCapitalJ]"}], "+", 
    RowBox[{"2", " ", "\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]", " ", 
     RowBox[{"rt", "[", "\[Tau]", "]"}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.897191153293778*^9, 3.897194381268194*^9, 3.8972863516922483`*^9, {
   3.897553802748857*^9, 3.8975538411413803`*^9}, 3.897554813249263*^9, 
   3.897555623616744*^9, 3.897557625858824*^9, {3.897560664107498*^9, 
   3.897560677399727*^9}, 3.8976346149826097`*^9, 3.897634662822146*^9, 
   3.897635509195487*^9, 3.898590046526314*^9, 3.898656825516108*^9, 
   3.898664237507709*^9, 3.898684106281645*^9, 3.898764947928233*^9, 
   3.898783622998776*^9, 3.898932471430235*^9, 3.899180267776449*^9, 
   3.899197002562237*^9, 3.8992020222913513`*^9, 3.899204778487671*^9, 
   3.8992679241891813`*^9, 3.899353160977903*^9, 3.89936628640271*^9, 
   3.899368991925405*^9, 3.8993861304426527`*^9, 3.899432944410411*^9, 
   3.89943989945922*^9},
 CellLabel->
  "Out[286]=",ExpressionUUID->"0564a06b-0887-44e3-b1e4-c604c7c114c4"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Corrections to \[ScriptCapitalE] and \[ScriptCapitalJ] relation to \
eccentricity ",
 Cell[BoxData[
  FormBox["e", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "3f8458f2-be05-45d3-bb78-3b3ce168801f"],
 " and semi-latus rectum ",
 Cell[BoxData[
  FormBox["p", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "e6925c6d-3ddd-47d4-9914-3b6df65b2555"]
}], "Subsection",
 CellChangeTimes->{{3.897117184641844*^9, 3.8971172849209003`*^9}, {
  3.897117757527516*^9, 3.89711780105193*^9}, {3.897117845456586*^9, 
  3.897117889281123*^9}, {3.897118343314732*^9, 3.897118368318022*^9}, {
  3.897286404753091*^9, 3.897286407325397*^9}, {3.897556174970346*^9, 
  3.897556188941121*^9}, {3.897560757414723*^9, 3.8975608269225807`*^9}, {
  3.897560966099464*^9, 3.897560994755376*^9}, {3.8975611883602743`*^9, 
  3.897561264531146*^9}, {3.8975613389178534`*^9, 3.8975613566109657`*^9}, {
  3.897617798933399*^9, 3.897617835383758*^9}, {3.89866425780455*^9, 
  3.898664260744031*^9}, {3.899179364107683*^9, 
  3.8991794109936657`*^9}},ExpressionUUID->"9610ae58-17c9-4f79-81ed-\
6f6084e56a31"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"EJRule", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[ScriptCapitalE]", " ", "->", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"p", " ", "-", " ", 
             RowBox[{"2", "M"}]}], ")"}], "^", "2"}], " ", "-", " ", 
          RowBox[{"4", 
           RowBox[{"M", "^", "2"}], " ", 
           RowBox[{"e", "^", "2"}]}]}], 
         RowBox[{"p", 
          RowBox[{"(", 
           RowBox[{"p", " ", "-", " ", 
            RowBox[{"M", 
             RowBox[{"(", 
              RowBox[{"3", " ", "+", " ", 
               RowBox[{"e", "^", "2"}]}], ")"}]}]}], ")"}]}]], "+", 
        RowBox[{"\[Epsilon]", " ", "dE"}]}]]}], ",", " ", 
     RowBox[{"\[ScriptCapitalJ]", " ", "->", " ", 
      SqrtBox[
       RowBox[{
        FractionBox[
         RowBox[{"M", " ", 
          RowBox[{"p", "^", "2"}]}], 
         RowBox[{"p", " ", "-", " ", 
          RowBox[{"M", 
           RowBox[{"(", 
            RowBox[{"3", " ", "+", 
             RowBox[{"e", "^", "2"}]}], ")"}]}]}]], "+", 
        RowBox[{"\[Epsilon]", " ", "dJ"}]}]]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"koef2", " ", "=", " ", 
   RowBox[{"Coefficient", "[", 
    RowBox[{
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ExpandAll", "[", "Rpol", "]"}], "/.", "EJRule"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], "->", 
          FractionBox["p", 
           RowBox[{"1", "+", "e"}]]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
     "\[Epsilon]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"koef1", " ", "=", 
   RowBox[{"Coefficient", "[", 
    RowBox[{
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"ExpandAll", "[", "Rpol", "]"}], "/.", "EJRule"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], "->", 
          FractionBox["p", 
           RowBox[{"1", "-", "e"}]]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", 
     "\[Epsilon]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dEdJRule", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Solve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"koef1", "==", "0"}], ",", 
        RowBox[{"koef2", "==", "0"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"dE", ",", "dJ"}], "}"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", "+", 
               SuperscriptBox["e", "2"]}], ")"}], " ", "M"}], ")"}]}], "+", 
          "p"}], ">", "0"}], ",", 
        RowBox[{"p", ">", "0"}]}], "}"}]}], "]"}], "&"}]}]}]}], "Input",
 CellChangeTimes->{{3.897117184641844*^9, 3.8971172849209003`*^9}, {
  3.897117757527516*^9, 3.89711780105193*^9}, {3.897117845456586*^9, 
  3.897117889281123*^9}, {3.897118343314732*^9, 3.897118368318022*^9}, {
  3.897286404753091*^9, 3.897286407325397*^9}, {3.897556174970346*^9, 
  3.897556188941121*^9}, {3.897560757414723*^9, 3.8975608269225807`*^9}, {
  3.897560966099464*^9, 3.897560994755376*^9}, {3.8975611883602743`*^9, 
  3.897561264531146*^9}, {3.8975613389178534`*^9, 3.8975613566109657`*^9}, {
  3.897617798933399*^9, 3.897617835383758*^9}, {3.89866425780455*^9, 
  3.898664260744031*^9}, {3.899179364107683*^9, 3.899179367490683*^9}},
 CellLabel->
  "In[287]:=",ExpressionUUID->"818b5bea-f01b-418f-b71e-436704cd67d2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"dE", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], "2"], " ", 
       SuperscriptBox["M", 
        RowBox[{"3", "/", "2"}]], " ", 
       SqrtBox[
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              SuperscriptBox["e", "2"]}], ")"}], " ", 
            SuperscriptBox["M", "2"]}], "-", 
           RowBox[{"4", " ", "M", " ", "p"}], "+", 
           SuperscriptBox["p", "2"]}], ")"}]}]], " ", "sp"}], 
      RowBox[{
       SuperscriptBox["p", "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"3", "+", 
               SuperscriptBox["e", "2"]}], ")"}], " ", "M"}], ")"}]}], "+", 
          "p"}], ")"}], "2"]}]]}]}], ",", 
   RowBox[{"dJ", "\[Rule]", 
    FractionBox[
     RowBox[{
      SqrtBox[
       RowBox[{"M", " ", "p"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           SuperscriptBox["e", "2"]}], ")"}], " ", "M"}], "+", 
        RowBox[{"2", " ", "p"}]}], ")"}], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["e", "2"]}], ")"}], " ", 
         SuperscriptBox["M", "2"]}], "-", 
        RowBox[{"4", " ", "M", " ", "p"}], "+", 
        SuperscriptBox["p", "2"]}]], " ", "sp"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3", "+", 
             SuperscriptBox["e", "2"]}], ")"}], " ", "M"}], ")"}]}], "+", 
        "p"}], ")"}], "2"]]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.89755618943818*^9, 3.897557637550935*^9, {3.897560787605296*^9, 
   3.897560827483387*^9}, 3.8975609956739893`*^9, {3.897561189564073*^9, 
   3.897561199980318*^9}, {3.897561255626899*^9, 3.897561265403738*^9}, 
   3.8975613572409363`*^9, 3.8976178371875267`*^9, 3.897634615995674*^9, 
   3.8976346632003*^9, 3.89763551007745*^9, 3.8985900474599237`*^9, 
   3.898656825959944*^9, 3.898664238309348*^9, 3.898684107181241*^9, 
   3.898764948884383*^9, 3.8987836239154787`*^9, 3.8989324723432207`*^9, 
   3.899180268706685*^9, 3.899197003517318*^9, 3.8992020232273912`*^9, 
   3.899204779400971*^9, 3.899267925111883*^9, 3.899353161887252*^9, 
   3.89936628740269*^9, 3.899368992924535*^9, 3.8993861313708467`*^9, 
   3.899432945314115*^9, 3.899439899801299*^9},
 CellLabel->
  "Out[290]=",ExpressionUUID->"b661f350-4bfa-447f-8816-b3092e70c48f"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Solving for third root ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["r", "3"], TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "ddfe70ea-94a4-4e90-9ac8-369afb4d7f72"]
}], "Subsection",
 CellChangeTimes->{{3.897192608202134*^9, 3.897192628421733*^9}, {
   3.897286181183247*^9, 3.897286185208969*^9}, {3.897286246625692*^9, 
   3.897286255200138*^9}, {3.897286459671075*^9, 3.897286469447299*^9}, {
   3.897286529214019*^9, 3.8972865319262877`*^9}, 3.897556847988018*^9, {
   3.897558721373784*^9, 3.8975587793784523`*^9}, {3.897558810095105*^9, 
   3.897558838896318*^9}, {3.89755887512685*^9, 3.897558982913619*^9}, {
   3.897561366916827*^9, 3.897561368825329*^9}, {3.897561453109439*^9, 
   3.8975614783966093`*^9}, 3.897561560765766*^9, {3.897561608894546*^9, 
   3.89756161736292*^9}, {3.897617172926272*^9, 3.897617177192017*^9}, {
   3.897619028544907*^9, 3.897619031084886*^9}, {3.899179425949717*^9, 
   3.8991794450680027`*^9}},ExpressionUUID->"b6af78ae-864f-459a-b34a-\
b8c78d89eb52"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Coefficient", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], 
              RowBox[{"(", 
               RowBox[{"r1", " ", "-", " ", "r"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"r", "-", "r2"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"r", "-", "r3"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"r", "-", "r4"}], ")"}]}], ",", 
             SuperscriptBox["r", "2"]}], "]"}], "==", 
           RowBox[{"Coefficient", "[", 
            RowBox[{"Rpol", ",", 
             SuperscriptBox[
              RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], "]"}]}], ",", 
          "r3"}], "]"}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[ScriptCapitalE]", " ", "->", 
           SqrtBox[
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"p", " ", "-", " ", 
                  RowBox[{"2", "M"}]}], ")"}], "^", "2"}], " ", "-", " ", 
               RowBox[{"4", 
                RowBox[{"M", "^", "2"}], " ", 
                RowBox[{"e", "^", "2"}]}]}], 
              RowBox[{"p", 
               RowBox[{"(", 
                RowBox[{"p", " ", "-", " ", 
                 RowBox[{"M", 
                  RowBox[{"(", 
                   RowBox[{"3", " ", "+", " ", 
                    RowBox[{"e", "^", "2"}]}], ")"}]}]}], ")"}]}]], "+", 
             RowBox[{"\[Epsilon]", " ", "dE"}]}]]}], ",", " ", 
          RowBox[{"\[ScriptCapitalJ]", " ", "->", " ", 
           SqrtBox[
            RowBox[{
             FractionBox[
              RowBox[{"M", " ", 
               RowBox[{"p", "^", "2"}]}], 
              RowBox[{"p", " ", "-", " ", 
               RowBox[{"M", 
                RowBox[{"(", 
                 RowBox[{"3", " ", "+", 
                  RowBox[{"e", "^", "2"}]}], ")"}]}]}]], "+", 
             RowBox[{"\[Epsilon]", " ", "dJ"}]}]]}]}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r1", "->", 
          RowBox[{"p", "/", 
           RowBox[{"(", 
            RowBox[{"1", "-", "e"}], ")"}]}]}], ",", 
         RowBox[{"r2", "->", 
          RowBox[{"p", "/", 
           RowBox[{"(", 
            RowBox[{"1", "+", "e"}], ")"}]}]}], ",", 
         RowBox[{"r4", "->", "0"}], ",", 
         RowBox[{"\[Epsilon]", "->", "1"}]}], "}"}]}], "/.", "dEdJRule"}], "//", 
     RowBox[{
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{"r3", "/.", "#"}], ",", 
        RowBox[{"{", 
         RowBox[{"sp", ",", "0", ",", "1"}], "}"}]}], "]"}], "&"}]}], "//", 
    "Simplify"}], ")"}], "//", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"#", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", "+", 
              SuperscriptBox["e", "2"]}], ")"}], " ", "M"}], ")"}]}], "+", 
         "p"}], ">", "0"}], ",", 
       RowBox[{"p", ">", "0"}], ",", 
       RowBox[{"M", ">", "0"}]}], "}"}]}], "]"}], "&"}]}]], "Input",
 CellChangeTimes->{{3.897192608202134*^9, 3.897192628421733*^9}, {
   3.897286181183247*^9, 3.897286185208969*^9}, {3.897286246625692*^9, 
   3.897286255200138*^9}, {3.897286459671075*^9, 3.897286469447299*^9}, {
   3.897286529214019*^9, 3.8972865319262877`*^9}, 3.897556847988018*^9, {
   3.897558721373784*^9, 3.8975587793784523`*^9}, {3.897558810095105*^9, 
   3.897558838896318*^9}, {3.89755887512685*^9, 3.897558982913619*^9}, {
   3.897561366916827*^9, 3.897561368825329*^9}, {3.897561453109439*^9, 
   3.8975614783966093`*^9}, 3.897561560765766*^9, {3.897561608894546*^9, 
   3.89756161736292*^9}, {3.897617172926272*^9, 3.897617177192017*^9}, {
   3.897619028544907*^9, 3.897619031084886*^9}, {3.899179425949717*^9, 
   3.899179431130373*^9}},
 CellLabel->
  "In[291]:=",ExpressionUUID->"233d8380-b81d-444a-b186-e75cfe2c6a5a"],

Cell[BoxData[
 RowBox[{"{", 
  InterpretationBox[
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"M", " ", "p"}], ")"}]}], 
      RowBox[{
       RowBox[{"4", " ", "M"}], "-", "p"}]]}], "+", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", " ", "p", " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["M", "3"], " ", "p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["e", "2"]}], ")"}], " ", 
              SuperscriptBox["M", "2"]}], "-", 
             RowBox[{"4", " ", "M", " ", "p"}], "+", 
             SuperscriptBox["p", "2"]}], ")"}]}]]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"3", "+", 
           SuperscriptBox["e", "2"]}], ")"}], " ", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["M", "5"], " ", "p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["e", "2"]}], ")"}], " ", 
              SuperscriptBox["M", "2"]}], "-", 
             RowBox[{"4", " ", "M", " ", "p"}], "+", 
             SuperscriptBox["p", "2"]}], ")"}]}]]}]}], ")"}], " ", "sp"}], 
     RowBox[{"M", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", "+", 
           SuperscriptBox["e", "2"]}], ")"}], " ", "M"}], "-", "p"}], ")"}], 
      " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", "M"}], "+", "p"}], ")"}], "2"]}]], "+", 
    InterpretationBox[
     SuperscriptBox[
      RowBox[{"O", "[", "sp", "]"}], "2"],
     SeriesData[$CellContext`sp, 0, {}, 0, 2, 1],
     Editable->False]}],
   SeriesData[$CellContext`sp, 
    0, {(-2) $CellContext`M (
       4 $CellContext`M - $CellContext`p)^(-1) $CellContext`p, \
$CellContext`M^(-1) ((
         3 + $CellContext`e^2) $CellContext`M - $CellContext`p)^(-1) ((-4) \
$CellContext`M + $CellContext`p)^(-2) (
      2 $CellContext`p ($CellContext`M^3 $CellContext`p ((-4) (-1 + \
$CellContext`e^2) $CellContext`M^2 - 
          4 $CellContext`M $CellContext`p + $CellContext`p^2))^Rational[1, 2] - 
      2 (3 + $CellContext`e^2) ($CellContext`M^5 $CellContext`p ((-4) (-1 + \
$CellContext`e^2) $CellContext`M^2 - 
         4 $CellContext`M $CellContext`p + $CellContext`p^2))^
       Rational[1, 2])}, 0, 2, 1],
   Editable->False], "}"}]], "Output",
 CellChangeTimes->{
  3.897194381695264*^9, 3.897286192389841*^9, 3.897286256829612*^9, {
   3.897286523957623*^9, 3.897286532687793*^9}, 3.8975556240915003`*^9, 
   3.897556854107267*^9, 3.8975587269184017`*^9, 3.8975587822808437`*^9, {
   3.897558910193919*^9, 3.897558929582708*^9}, 3.897558983910033*^9, 
   3.897561370705304*^9, 3.897561461325738*^9, {3.897561536335555*^9, 
   3.897561563569214*^9}, 3.89756161159654*^9, 3.897617178763835*^9, 
   3.897619034035741*^9, 3.897634617293997*^9, 3.897634663321216*^9, 
   3.897635511291*^9, 3.89859004878689*^9, 3.898656826524188*^9, 
   3.898664238898409*^9, 3.898684108503212*^9, 3.8987649502677183`*^9, 
   3.8987836252278423`*^9, 3.898932473658688*^9, 3.899180270038268*^9, 
   3.8991970048681087`*^9, 3.899202024619391*^9, 3.899204780706173*^9, 
   3.899267926447816*^9, 3.8993531631855173`*^9, 3.8993662888183327`*^9, 
   3.899368994346945*^9, 3.899386132692769*^9, 3.899432946608163*^9, 
   3.899439900629756*^9},
 CellLabel->
  "Out[291]=",ExpressionUUID->"c8062b30-9f0f-465c-872c-39c2a078c06a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Deriving", " ", "a", " ", "simpler", " ", "expression", " ", "for", " ", 
    "dr3"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"EQN", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Series", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Rpol", "/.", "EJRule"}], "/.", "dEdJRule"}], " ", "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"rt", "[", "\[Tau]", "]"}], "->", "r"}], "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{"r", "->", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "M", " ", "p"}], 
            RowBox[{"p", "-", 
             RowBox[{"4", "M"}]}]], " ", "+", " ", 
           RowBox[{"\[Epsilon]", " ", "dr3"}]}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Epsilon]", ",", "0", ",", "1"}], "}"}]}], "]"}], " ", "//", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", 
           RowBox[{"6", "M"}], ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}]}], "}"}]}], "]"}], "&"}]}], "//", 
    
    RowBox[{
     RowBox[{"Coefficient", "[", 
      RowBox[{"#", ",", "\[Epsilon]"}], "]"}], "&"}]}]}]}]], "Input",
 CellChangeTimes->{{3.89761877784833*^9, 3.897618938704274*^9}, {
  3.897618971679853*^9, 3.897618986567041*^9}, {3.897619085807642*^9, 
  3.897619162559011*^9}, {3.897619201566918*^9, 3.897619208048202*^9}, {
  3.897619459787477*^9, 3.89761952353684*^9}, {3.897619560324441*^9, 
  3.897619573552999*^9}, {3.8986645374272633`*^9, 3.8986645542291927`*^9}},
 CellLabel->
  "In[292]:=",ExpressionUUID->"9d52883b-f36c-458b-b829-6157f9775d1d"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", "M"}], "+", "p"}], ")"}], "4"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3", "+", 
             SuperscriptBox["e", "2"]}], ")"}], " ", "M"}], ")"}]}], "+", 
        "p"}], ")"}], "2"]}]], 
   RowBox[{"2", " ", 
    SuperscriptBox["M", "2"], " ", 
    SuperscriptBox["p", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"dr3", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", "e"}], ")"}], " ", "M"}], "-", "p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"3", "+", 
            SuperscriptBox["e", "2"]}], ")"}], " ", "M"}], "-", "p"}], ")"}], 
       " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", "M"}], "+", "p"}], ")"}], "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3"}], "+", "e"}], ")"}], " ", "M"}], "+", "p"}], 
        ")"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "108"}], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["M", "7"], " ", "p", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["e", "2"]}], ")"}], " ", 
               SuperscriptBox["M", "2"]}], "-", 
              RowBox[{"4", " ", "M", " ", "p"}], "+", 
              SuperscriptBox["p", "2"]}], ")"}]}]]}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["e", "4"], " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["M", "7"], " ", "p", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["e", "2"]}], ")"}], " ", 
               SuperscriptBox["M", "2"]}], "-", 
              RowBox[{"4", " ", "M", " ", "p"}], "+", 
              SuperscriptBox["p", "2"]}], ")"}]}]]}], "+", 
         RowBox[{"72", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["M", "5"], " ", 
            SuperscriptBox["p", "3"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["e", "2"]}], ")"}], " ", 
               SuperscriptBox["M", "2"]}], "-", 
              RowBox[{"4", " ", "M", " ", "p"}], "+", 
              SuperscriptBox["p", "2"]}], ")"}]}]]}], "-", 
         RowBox[{"15", " ", 
          SqrtBox[
           RowBox[{
            SuperscriptBox["M", "3"], " ", 
            SuperscriptBox["p", "5"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "4"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["e", "2"]}], ")"}], " ", 
               SuperscriptBox["M", "2"]}], "-", 
              RowBox[{"4", " ", "M", " ", "p"}], "+", 
              SuperscriptBox["p", "2"]}], ")"}]}]]}], "+", 
         SqrtBox[
          RowBox[{"M", " ", 
           SuperscriptBox["p", "7"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["e", "2"]}], ")"}], " ", 
              SuperscriptBox["M", "2"]}], "-", 
             RowBox[{"4", " ", "M", " ", "p"}], "+", 
             SuperscriptBox["p", "2"]}], ")"}]}]], "-", 
         RowBox[{
          SuperscriptBox["e", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"24", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["M", "7"], " ", "p", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["e", "2"]}], ")"}], " ", 
                  SuperscriptBox["M", "2"]}], "-", 
                 RowBox[{"4", " ", "M", " ", "p"}], "+", 
                 SuperscriptBox["p", "2"]}], ")"}]}]]}], "-", 
            RowBox[{"8", " ", 
             SqrtBox[
              RowBox[{
               SuperscriptBox["M", "5"], " ", 
               SuperscriptBox["p", "3"], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["e", "2"]}], ")"}], " ", 
                  SuperscriptBox["M", "2"]}], "-", 
                 RowBox[{"4", " ", "M", " ", "p"}], "+", 
                 SuperscriptBox["p", "2"]}], ")"}]}]]}], "+", 
            SqrtBox[
             RowBox[{
              SuperscriptBox["M", "3"], " ", 
              SuperscriptBox["p", "5"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SuperscriptBox["e", "2"]}], ")"}], " ", 
                 SuperscriptBox["M", "2"]}], "-", 
                RowBox[{"4", " ", "M", " ", "p"}], "+", 
                SuperscriptBox["p", "2"]}], ")"}]}]]}], ")"}]}]}], ")"}], " ",
        "sp"}]}], ")"}]}]}]}]], "Output",
 CellChangeTimes->{{3.897619506659773*^9, 3.897619527354055*^9}, {
   3.897619573837747*^9, 3.897619574170179*^9}, 3.897634632187223*^9, 
   3.897634667422564*^9, 3.8976355189893303`*^9, 3.89859006790991*^9, 
   3.8986568349063177`*^9, 3.898664247530348*^9, 3.898684124940192*^9, 
   3.8987649676457043`*^9, 3.8987836417771873`*^9, 3.898932490201654*^9, 
   3.899180273324555*^9, 3.899197008233593*^9, 3.8992020281231422`*^9, 
   3.8992047839300537`*^9, 3.899267929710628*^9, 3.899353166390348*^9, 
   3.8993662925517197`*^9, 3.899368997942751*^9, 3.899386135938743*^9, 
   3.899432949838876*^9, 3.899439902740484*^9},
 CellLabel->
  "Out[292]=",ExpressionUUID->"de5166ff-15df-4df8-bd0e-b99781bf2b4d"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.897619606822247*^9, 3.897619648482383*^9}, {
   3.897619758152063*^9, 3.89761987400753*^9}, 3.899179344898075*^9},
 CellLabel->
  "In[293]:=",ExpressionUUID->"275c86fc-2801-47d6-a9b2-26ba9105707b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"dr3", "/.", 
    RowBox[{
     RowBox[{"Solve", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"EQN", "/.", 
          RowBox[{"{", 
           RowBox[{"M", "->", "1"}], "}"}]}], ")"}], "==", "0"}], ",", 
       "dr3"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], ")"}], "//", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"#", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", ">", "0"}], ",", 
       RowBox[{"0", "<", "e", "<", "1"}]}], "}"}]}], "]"}], "&"}]}]], "Input",\

 CellChangeTimes->{{3.897619606822247*^9, 3.897619648482383*^9}, {
   3.897619758152063*^9, 3.89761987400753*^9}, 3.899179344898075*^9},
 CellLabel->
  "In[294]:=",ExpressionUUID->"b03bd200-6b42-4a78-8bf9-77d1a2aa3508"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["e", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", "p"}]], 
    " ", "sp"}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]]}]], "Output",
 CellChangeTimes->{{3.897619619427821*^9, 3.897619648952921*^9}, {
   3.897619758817997*^9, 3.8976198194039173`*^9}, {3.897619851514433*^9, 
   3.8976198754997587`*^9}, 3.8976346323432217`*^9, 3.897634667547497*^9, 
   3.8976355191474648`*^9, 3.898590068096547*^9, 3.898656835063192*^9, 
   3.898664247681353*^9, 3.8986841251127453`*^9, 3.898764967810685*^9, 
   3.8987836419379587`*^9, 3.898932490383251*^9, 3.8991802734950647`*^9, 
   3.89919700840136*^9, 3.899202028299103*^9, 3.899204784097192*^9, 
   3.899267929887814*^9, 3.8993531665535994`*^9, 3.899366292723024*^9, 
   3.899368998111548*^9, 3.899386136115594*^9, 3.899432949996994*^9, 
   3.899439902888876*^9},
 CellLabel->
  "Out[294]=",ExpressionUUID->"2ede0661-3d69-425c-a0a3-c52d5426101d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"rootsRule", " ", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"r1", "->", 
      FractionBox["p", 
       RowBox[{"1", "-", "e"}]]}], ",", 
     RowBox[{"r2", "->", 
      FractionBox["p", 
       RowBox[{"1", "+", "e"}]]}], ",", 
     RowBox[{"r3", "->", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "M", " ", "p"}], 
        RowBox[{"p", "-", 
         RowBox[{"4", " ", "M"}]}]], "-", 
       FractionBox[
        RowBox[{"2", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["M", "2"], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "2"}], "M"}], "+", "p"}], ")"}], "2"]}], ")"}], 
           " ", "M", " ", "p"}]], " ", "sp"}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], "M"}], "+", "p"}], ")"}], "2"]]}]}]}], 
    "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.897623971483179*^9, 3.897624030557611*^9}, {
   3.897624070898918*^9, 3.897624084144599*^9}, {3.897624267328423*^9, 
   3.897624275713868*^9}, {3.898765018521537*^9, 3.8987650300066633`*^9}, 
   3.898765267361999*^9, {3.8987655291362677`*^9, 3.8987655294254427`*^9}, 
   3.899179340030089*^9},
 CellLabel->
  "In[295]:=",ExpressionUUID->"9133c8bf-8d26-439e-bcfe-50a4ef749b96"]
}, Closed]],

Cell[CellGroupData[{

Cell["The last stable orbits near p=(6+2e)M", "Subsection",
 CellChangeTimes->{{3.897117368177498*^9, 3.897117368178729*^9}, {
   3.897117426554305*^9, 3.897117433210341*^9}, {3.897117467593924*^9, 
   3.897117592689126*^9}, {3.897119182600113*^9, 3.897119196427575*^9}, {
   3.8971926483711348`*^9, 3.897192648790222*^9}, {3.8971930594432297`*^9, 
   3.897193107609737*^9}, {3.897193169045827*^9, 3.897193181056305*^9}, {
   3.8971932352589273`*^9, 3.897193290615983*^9}, 3.897193388136936*^9, {
   3.8971945308048573`*^9, 3.8971945485795927`*^9}, {3.897556912850092*^9, 
   3.897556920232748*^9}, {3.89763668353841*^9, 3.8976367270299883`*^9}, {
   3.8976368161387444`*^9, 3.897636842381164*^9}, {3.8991794841767483`*^9, 
   3.899179510832066*^9}},ExpressionUUID->"fa375f26-e35d-47ed-81c9-\
f8bc59dcc98e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Jac", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[ScriptCapitalE]", "/.", "EJRule"}], "/.", "dEdJRule"}], 
         ",", "p"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[ScriptCapitalE]", "/.", "EJRule"}], "/.", "dEdJRule"}], 
         ",", "e"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[ScriptCapitalJ]", "/.", "EJRule"}], "/.", "dEdJRule"}], 
         ",", "p"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[ScriptCapitalJ]", "/.", "EJRule"}], "/.", "dEdJRule"}], 
         ",", "e"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"JacCoef", " ", "=", 
  RowBox[{"Coefficient", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Series", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Det", "[", "Jac", "]"}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "->", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{"6", "+", 
                RowBox[{"2", "e"}]}], ")"}], "M"}], " ", "+", " ", 
             RowBox[{"sp", " ", "dp"}]}]}], ",", 
           RowBox[{"\[Epsilon]", "->", "1"}]}], "}"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"sp", ",", "0", ",", "1"}], "}"}]}], "]"}], "//", 
      "FullSimplify"}], "//", "Normal"}], ",", "sp"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.897117368177498*^9, 3.897117368178729*^9}, {
   3.897117426554305*^9, 3.897117433210341*^9}, {3.897117467593924*^9, 
   3.897117592689126*^9}, {3.897119182600113*^9, 3.897119196427575*^9}, {
   3.8971926483711348`*^9, 3.897192648790222*^9}, {3.8971930594432297`*^9, 
   3.897193107609737*^9}, {3.897193169045827*^9, 3.897193181056305*^9}, {
   3.8971932352589273`*^9, 3.897193290615983*^9}, 3.897193388136936*^9, {
   3.8971945308048573`*^9, 3.8971945485795927`*^9}, {3.897556912850092*^9, 
   3.897556920232748*^9}, {3.89763668353841*^9, 3.8976367270299883`*^9}, {
   3.8976368161387444`*^9, 3.897636842381164*^9}, {3.8991794841767483`*^9, 
   3.899179487043339*^9}},
 CellLabel->
  "In[296]:=",ExpressionUUID->"44ca1895-6e4f-4787-83b2-96798a9bfb87"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"e", " ", 
    RowBox[{"(", 
     RowBox[{"3", "+", "e"}], ")"}], " ", 
    SuperscriptBox["M", 
     RowBox[{"5", "/", "2"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SqrtBox["2"], " ", "dp", " ", "e", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "9"}], "+", 
         SuperscriptBox["e", "2"]}], ")"}], " ", 
       SuperscriptBox["M", 
        RowBox[{"3", "/", "2"}]], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], " ", 
         SuperscriptBox["M", "2"]}]]}], "+", 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], "2"]}], " ", 
          SuperscriptBox["M", 
           RowBox[{"3", "/", "2"}]], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"3", "+", "e"}], ")"}], " ", 
            SuperscriptBox["M", "2"]}]]}], "+", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "e"}], ")"}], "2"], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], " ", 
            SuperscriptBox["M", "2"]}]], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"3", "+", "e"}], ")"}], " ", 
            SuperscriptBox["M", "3"]}]]}]}], ")"}]}]}], ")"}]}], 
   RowBox[{"4", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "+", "e"}], ")"}], "5"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "e"}], ")"}], "3"], " ", 
    SqrtBox[
     FractionBox["1", 
      RowBox[{"9", "-", 
       SuperscriptBox["e", "2"]}]]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "e"}], ")"}], " ", 
       SuperscriptBox["M", "2"]}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       FractionBox[
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"3", "+", "e"}], ")"}], "2"], " ", 
         SuperscriptBox["M", "2"]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "e"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}]}]]}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{
  3.8971174336272707`*^9, 3.897117531284346*^9, {3.897117587733539*^9, 
   3.897117592992592*^9}, 3.8971931599953747`*^9, 3.897193195276595*^9, {
   3.89719327473182*^9, 3.897193300109424*^9}, 3.897194382207094*^9, 
   3.8975556332791862`*^9, 3.8975569332374477`*^9, 3.897634626642412*^9, 
   3.8976346645572367`*^9, 3.8976355132281303`*^9, 3.897636743161347*^9, {
   3.897636846570676*^9, 3.8976368468036222`*^9}, 3.898590061936763*^9, 
   3.8986568298383837`*^9, 3.898664241822608*^9, 3.89868412148006*^9, 
   3.89876496399667*^9, 3.898783638318931*^9, 3.898932486683958*^9, 
   3.899180286633325*^9, 3.899197021618003*^9, 3.8992020415579453`*^9, 
   3.899204797084732*^9, 3.8992679429458313`*^9, 3.899353179451988*^9, 
   3.899366307013195*^9, 3.8993690124075727`*^9, 3.899386149036772*^9, 
   3.899432962942089*^9, 3.899439906188045*^9},
 CellLabel->
  "Out[297]=",ExpressionUUID->"04be0e36-d127-49a3-882e-0005fed8f0e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Now", " ", "solve", " ", "for", " ", "the", " ", "correction", " ", "dp", 
    " ", "for", " ", "LSO"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Solve", "[", 
    RowBox[{
     RowBox[{"JacCoef", "==", "0"}], ",", "dp"}], "]"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{"M", ">", "0"}]}], "}"}]}], "]"}], "&"}]}]}]], "Input",
 CellChangeTimes->{{3.897117607931772*^9, 3.897117638920331*^9}, {
   3.897193316457534*^9, 3.8971934008834333`*^9}, {3.897194518652865*^9, 
   3.897194521396351*^9}, 3.897556974675953*^9, {3.897636755316655*^9, 
   3.897636755829154*^9}, {3.897636852587675*^9, 3.897636853117206*^9}, {
   3.898664335773204*^9, 3.898664337195326*^9}},
 CellLabel->
  "In[298]:=",ExpressionUUID->"668f2032-1387-4835-993e-61cda46ebaab"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"dp", "\[Rule]", 
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", 
       SqrtBox["2"], " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "e"}], ")"}]}], 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", "e"}], ")"}]}]]]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.897117617261269*^9, 3.8971176392678757`*^9}, 
   3.8971933217340937`*^9, {3.897193359332219*^9, 3.897193365835136*^9}, 
   3.8971943822427483`*^9, 3.897555633376911*^9, 3.897556984678419*^9, 
   3.8976346267338257`*^9, 3.897634664632208*^9, 3.897635513318139*^9, 
   3.8976367570597677`*^9, 3.897636853817618*^9, 3.8985900620650787`*^9, 
   3.8986568299401484`*^9, 3.898664241927392*^9, 3.898684121587031*^9, 
   3.89876496411982*^9, 3.89878363840853*^9, 3.898932486795351*^9, 
   3.899180286730838*^9, 3.899197021723407*^9, 3.89920204167356*^9, 
   3.8992047971984777`*^9, 3.899267943072199*^9, 3.899353179547105*^9, 
   3.899366307121599*^9, 3.8993690125087767`*^9, 3.899386149142112*^9, 
   3.899432963046275*^9, 3.89943990632312*^9},
 CellLabel->
  "Out[298]=",ExpressionUUID->"5c2eecb9-2b4e-461a-8dc9-b05572f4b790"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Expressions for Mino velocities of t,\[Phi] DOF", "Subsection",
 CellChangeTimes->{
  3.8991795395070953`*^9},ExpressionUUID->"b0b8a43e-9d0a-4c51-b514-\
f270c194b935"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Expressions", " ", "for", " ", "Mino", " ", "velocities", " ", "of", " ",
      "t"}], ",", 
    RowBox[{"\[Phi]", " ", "DOF"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"CoefficientList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"r", "^", "2"}], "utint"}], "/.", "fhRule"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", 
          RowBox[{"sp", "/", "r"}]}], ",", 
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], "->", "r"}]}], "}"}]}], ",", 
      "\[Epsilon]"}], "]"}], "//", "FullSimplify"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CoefficientList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"r", "^", "2"}], "u\[CurlyPhi]int"}], "/.", "fhRule"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", 
          RowBox[{"sp", "/", "r"}]}], ",", 
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], "->", "r"}]}], "}"}]}], ",", 
      "\[Epsilon]"}], "]"}], "//", "FullSimplify"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CoefficientList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"r", "^", "2"}], 
         RowBox[{"(", 
          FractionBox[
           RowBox[{"\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]"}], 
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
            SuperscriptBox[
             RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}]], ")"}]}], "/.", 
        "fhRule"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"S\[Theta]", "[", "\[Tau]", "]"}], "->", 
          RowBox[{"sp", "/", "r"}]}], ",", 
         RowBox[{
          RowBox[{"rt", "[", "\[Tau]", "]"}], "->", "r"}]}], "}"}]}], ",", 
      "\[Epsilon]"}], "]"}], "//", "FullSimplify"}]}]}]], "Input",
 CellChangeTimes->{{3.897288515924809*^9, 3.8972885561230516`*^9}, {
   3.897288592364731*^9, 3.8972886472461023`*^9}, {3.897288735868917*^9, 
   3.897288750149014*^9}, {3.897376389379676*^9, 3.897376390129863*^9}, {
   3.897380305752982*^9, 3.8973803229909143`*^9}, {3.897381482622834*^9, 
   3.897381484194475*^9}, {3.898664374305336*^9, 3.8986643897863894`*^9}, 
   3.899196775894341*^9},
 CellLabel->
  "In[299]:=",ExpressionUUID->"306f2f49-e9f1-4a57-9cb6-7e83df56d3c1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["r", "3"], " ", "\[ScriptCapitalE]"}], 
     RowBox[{
      RowBox[{"2", " ", "M"}], "-", "r"}]]}], ",", 
   FractionBox[
    RowBox[{"M", " ", "sp", " ", "\[ScriptCapitalJ]"}], 
    RowBox[{
     RowBox[{"2", " ", "M"}], "-", "r"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.8972885410541677`*^9, 3.897288556451263*^9}, {
   3.897288636742251*^9, 3.8972886486120567`*^9}, 3.897288750864643*^9, 
   3.8973763907648478`*^9, 3.897381485900559*^9, 3.897555633410172*^9, 
   3.897557050229506*^9, 3.897634626776321*^9, 3.897634664674141*^9, 
   3.8976355133610163`*^9, 3.898590062120778*^9, 3.898656829986945*^9, 
   3.898664241976198*^9, 3.89868412162541*^9, 3.898764964172151*^9, 
   3.89878363844029*^9, 3.8989324868320513`*^9, 3.899180286780559*^9, 
   3.899197021765853*^9, 3.899202041713831*^9, 3.8992047972456083`*^9, 
   3.8992679431214447`*^9, 3.899353179580862*^9, 3.899366307156889*^9, 
   3.899369012549822*^9, 3.899386149181777*^9, 3.899432963080215*^9, 
   3.899439906376734*^9},
 CellLabel->
  "Out[299]=",ExpressionUUID->"1405f241-a919-4a56-a6fe-b73f28d4c7aa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\[ScriptCapitalJ]", ",", 
   RowBox[{
    RowBox[{"-", "sp"}], " ", "\[ScriptCapitalE]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.8972885410541677`*^9, 3.897288556451263*^9}, {
   3.897288636742251*^9, 3.8972886486120567`*^9}, 3.897288750864643*^9, 
   3.8973763907648478`*^9, 3.897381485900559*^9, 3.897555633410172*^9, 
   3.897557050229506*^9, 3.897634626776321*^9, 3.897634664674141*^9, 
   3.8976355133610163`*^9, 3.898590062120778*^9, 3.898656829986945*^9, 
   3.898664241976198*^9, 3.89868412162541*^9, 3.898764964172151*^9, 
   3.89878363844029*^9, 3.8989324868320513`*^9, 3.899180286780559*^9, 
   3.899197021765853*^9, 3.899202041713831*^9, 3.8992047972456083`*^9, 
   3.8992679431214447`*^9, 3.899353179580862*^9, 3.899366307156889*^9, 
   3.899369012549822*^9, 3.899386149181777*^9, 3.899432963080215*^9, 
   3.899439906400167*^9},
 CellLabel->
  "Out[300]=",ExpressionUUID->"2b3bf4b8-0462-4598-8db2-cf22453927d9"],

Cell[BoxData[
 RowBox[{"{", 
  FractionBox[
   RowBox[{
    SuperscriptBox["r", "2"], " ", "\[ScriptCapitalE]", " ", 
    "\[ScriptCapitalJ]"}], 
   RowBox[{
    SuperscriptBox["r", "2"], "+", 
    SuperscriptBox["\[ScriptCapitalJ]", "2"]}]], "}"}]], "Output",
 CellChangeTimes->{{3.8972885410541677`*^9, 3.897288556451263*^9}, {
   3.897288636742251*^9, 3.8972886486120567`*^9}, 3.897288750864643*^9, 
   3.8973763907648478`*^9, 3.897381485900559*^9, 3.897555633410172*^9, 
   3.897557050229506*^9, 3.897634626776321*^9, 3.897634664674141*^9, 
   3.8976355133610163`*^9, 3.898590062120778*^9, 3.898656829986945*^9, 
   3.898664241976198*^9, 3.89868412162541*^9, 3.898764964172151*^9, 
   3.89878363844029*^9, 3.8989324868320513`*^9, 3.899180286780559*^9, 
   3.899197021765853*^9, 3.899202041713831*^9, 3.8992047972456083`*^9, 
   3.8992679431214447`*^9, 3.899353179580862*^9, 3.899366307156889*^9, 
   3.899369012549822*^9, 3.899386149181777*^9, 3.899432963080215*^9, 
   3.899439906423491*^9},
 CellLabel->
  "Out[301]=",ExpressionUUID->"12f9d01f-480a-4389-9a29-8731d1a31a25"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Elliptic integrals and expansion", "Section",
 CellChangeTimes->{{3.898664628360124*^9, 3.8986646743892603`*^9}, {
  3.89919934754312*^9, 
  3.899199349250587*^9}},ExpressionUUID->"6478f18a-954e-4ae9-bc84-\
2febb6b52087"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "The", " ", "elliptic", " ", "integrals", " ", "were", " ", "computed", 
     " ", "in", " ", "Maple"}], ",", " ", 
    RowBox[{
     RowBox[{"since", " ", "it", " ", "has", " ", "better", " ", "elliptic"}],
      "-", 
     RowBox[{"integral", " ", 
      RowBox[{"algorithms", "."}]}]}]}], "*)"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Here", " ", "one", " ", "can", " ", "verify", " ", "the", " ", "results", 
    " ", "against", " ", "numerical", " ", 
    RowBox[{"integrations", "."}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.899179838593815*^9, 3.899179860803639*^9}, {
   3.899197921914483*^9, 3.899197936412674*^9}, 3.899267924492285*^9},
 CellLabel->
  "In[302]:=",ExpressionUUID->"893bc0f4-3ae0-49df-9c93-7eb435e75451"],

Cell[CellGroupData[{

Cell["The \[Lambda](r) integrals, period, frequency", "Subsection",
 CellChangeTimes->{{3.899179681812755*^9, 3.899179682261392*^9}, {
   3.8991797236055527`*^9, 3.8991797423150043`*^9}, 3.899179798039151*^9, {
   3.8991865947521467`*^9, 3.899186596989479*^9}, {3.8991866964469*^9, 
   3.899186699677617*^9}},ExpressionUUID->"20b41a83-3623-4303-9022-\
f024d8233a7d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Subs", " ", "=", " ", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"EJRule", "/.", "dEdJRule"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"M", "->", "1"}], ",", 
        RowBox[{"\[Epsilon]", "->", "1"}]}], "}"}]}], ",", 
     RowBox[{"rootsRule", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"M", "->", "1"}], ",", 
        RowBox[{"\[Epsilon]", "->", "1"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"M", "->", "1"}], ",", 
       RowBox[{"\[Epsilon]", "->", "1"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Rfunc", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", " ", "-", " ", 
      SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"r1", " ", "-", " ", "r"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"r", "-", "r2"}], ")"}], 
    RowBox[{"(", 
     RowBox[{"r", "-", "r3"}], ")"}], "r"}], "/.", 
   "Subs"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"N\[Lambda]r", "[", 
    RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "rf_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       SqrtBox["Rfunc"]], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "->", "pi"}], ",", 
        RowBox[{"e", "->", "ei"}], ",", 
        RowBox[{"sp", "->", "spi"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       FractionBox["pi", 
        RowBox[{"1", "+", "ei"}]], ",", "rf"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Lambda]r", " ", "[", 
     RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "r_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{
     RowBox[{
      RowBox[{"2", " ", 
       FractionBox[
        RowBox[{"EllipticF", "[", 
         RowBox[{
          RowBox[{"ArcSin", "[", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"r", "-", "r2"}], ")"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"r", "-", "r3"}], ")"}]}]]], "]"}], ",", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], "r2", 
          RowBox[{"(", 
           RowBox[{"r1", "-", "r3"}], ")"}]}]]]}], "/.", "Subs"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", "->", "pi"}], ",", 
       RowBox[{"e", "->", "ei"}], ",", 
       RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Consistency", " ", "check"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"N\[Lambda]r", "[", 
       RowBox[{"10", ",", "0.4", ",", "0.01", ",", "r"}], "]"}], ",", 
      RowBox[{"\[Lambda]r", "[", 
       RowBox[{"10", ",", "0.4", ",", "0.01", ",", "r"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", 
      FractionBox["10", 
       RowBox[{"1", "+", "0.4"}]], ",", 
      FractionBox["10", 
       RowBox[{"1", "-", "0.4"}]]}], "}"}], ",", 
    RowBox[{"AspectRatio", "->", "1"}]}], "]"}], "//", 
  "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"N\[Lambda]r", "[", 
      RowBox[{"10", ",", "0.4", ",", "0.01", ",", "r"}], "]"}], "-", 
     RowBox[{"\[Lambda]r", "[", 
      RowBox[{"10", ",", "0.4", ",", "0.01", ",", "r"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", 
      FractionBox["10", 
       RowBox[{"1", "+", "0.4"}]], ",", 
      FractionBox["10", 
       RowBox[{"1", "-", "0.4"}]]}], "}"}], ",", 
    RowBox[{"AspectRatio", "->", "1"}]}], "]"}], "//", 
  "Quiet"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.899179681812755*^9, 3.899179682261392*^9}, {
   3.8991797236055527`*^9, 3.8991797423150043`*^9}, {3.899179800062207*^9, 
   3.899179822123213*^9}, {3.899180031136139*^9, 3.899180092782403*^9}, {
   3.899180139315366*^9, 3.899180165949873*^9}, {3.899180204319422*^9, 
   3.899180237076522*^9}, {3.899180299678746*^9, 3.899180557373704*^9}, {
   3.899180603052128*^9, 3.899180687589567*^9}, {3.899180736657943*^9, 
   3.8991807404122953`*^9}, {3.899180806554537*^9, 3.899180907203721*^9}, {
   3.899180939116651*^9, 3.899180942870222*^9}, {3.899181403534944*^9, 
   3.8991815627290297`*^9}, {3.899181599520794*^9, 3.899181737525885*^9}, 
   3.899181949335096*^9, {3.899184684588591*^9, 3.899184816065152*^9}, {
   3.899185694212044*^9, 3.899185697517461*^9}, {3.899190204223186*^9, 
   3.899190204573391*^9}},
 CellLabel->
  "In[303]:=",ExpressionUUID->"5e4ab0dd-5c67-4612-852b-22574c229a14"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    FractionBox["p", 
     RowBox[{"1", "-", "e"}]], "-", "r"}], ")"}], " ", "r", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox["p", 
      RowBox[{"1", "+", "e"}]]}], "+", "r"}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     FractionBox[
      RowBox[{"2", " ", "p"}], 
      RowBox[{
       RowBox[{"-", "4"}], "+", "p"}]]}], "+", "r", "+", 
    FractionBox[
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["e", "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
        "p"}]], " ", "sp"}], 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]]}], ")"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SuperscriptBox["e", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], 
     RowBox[{"p", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "-", 
        SuperscriptBox["e", "2"], "+", "p"}], ")"}]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["e", "2"]}], ")"}], "2"], " ", 
      SqrtBox[
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["e", "2"]}], ")"}]}], "-", 
          RowBox[{"4", " ", "p"}], "+", 
          SuperscriptBox["p", "2"]}], ")"}]}]], " ", "sp"}], 
     RowBox[{
      SuperscriptBox["p", "2"], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         SuperscriptBox["e", "2"], "+", "p"}], ")"}], "2"]}]]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{{3.899180893300766*^9, 3.8991809080129547`*^9}, {
   3.899181661116849*^9, 3.899181680862946*^9}, {3.8991817217276983`*^9, 
   3.89918173906439*^9}, 3.899181950506143*^9, {3.8991847295870743`*^9, 
   3.899184751301589*^9}, 3.899184797237405*^9, 3.899185698069202*^9, 
   3.8991902063195047`*^9, 3.899202041808465*^9, 3.899204797330976*^9, 
   3.8992679432174063`*^9, 3.899353179665619*^9, 3.899366307241209*^9, 
   3.8993690126356707`*^9, 3.899386149287965*^9, 3.899432963164706*^9, 
   3.899439906469843*^9},
 CellLabel->
  "Out[304]=",ExpressionUUID->"86ba15f7-dce5-4648-b1de-78dd795b6757"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
g6dyuNzV++1+bqU+QcH/AJasfBk=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1: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
kZ3NnSeXf1RlkoL/AXYtepk=
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
g6dyuNzV++1+bqU+QcH/AJasfBk=
             "]]}, "Charting`Private`Tag#1"], 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1: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
kZ3NnSeXf1RlkoL/AXYtepk=
             "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{7.142857142857143, 16.666666666666668`}, {0., 
           1.3071730872012286`}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {7.142857142857159, 0}, "ImageSize" -> {360, 360}, 
          "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2]], 
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{7.142857142857143, 16.666666666666668`}, {0., 
          1.3071730872012286`}}, "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {7.142857142857159, 0}, "ImageSize" -> {360, 360}, 
         "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2]], 
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJwV03k01gkXB3AjbaiExOvZ7BnPwy8JQ3XvyFrJyDKJkVGUyVZjm5aXRKmI
LGXJmiXPyJaSCmULNdYhW9mSJR48vx+VJa/3j3vu+fzzPed7zr1yzl5HXAQF
BATurs7/d7578k6zaBp+CGrwCDr5I+RptY0Yx9FQX27QQ9o4AbhL6xIN42n4
el5kxeJDOjyo0T9skETDj7L1QtcGsyAr3FsQU2jo2t1lo7A/FzKss57sTaeh
U3LSWY+9eZBG6/lDP5OGi5xgmYO8fLiXt79dm0vD9HRJOYueIkj0Cbim9ZCG
b68PtHXxiiF+z0N9zUIaNreHXzxAPYLYt1KZnCc0rA65LAQ9j+Hm5LiPYhUN
+f/EWS7qlEFYCUNVvpaG4YeFOWXLZXD1otV7Zj0NW6bs27LKn0GwaLmRbBMN
7RuNs4c5L+A8O0pKvIeGd9TtOie7K+C0u/bTlVkaEnYtVSWNr8BV64z7MkXD
Xv/UA3liVXByKZW1+IWGyD23IdKmCo6Hb7w+v0zD78K6Z4z6qsA2r89uaiMd
pzuPqcd9qAbDyeDFHjk6DhU/c+gorwWDktKCLkU6NuR8lHs2Xwt4cfJEpwod
P33v3LJWow70RW3ftnLoKM3McepPrgNNtmpy/U90lO1wG97u+xrk3Jv3PbGk
o7JbrXSSaANIruPYU9Z0rBermnn6cwNsSLvhr3l01eyzIk5+DcBrNyrMd6Tj
VSuWt82HBnim/0Iu5wwddyuZGijnNoK1SK5QfCgd58wGDzqy30IYN7jxrzI6
buq8k3htrgkuGA58Kn1Bx3Op217WMZvB88PeNfOVq3mn1j2uM2sGG/Fv+ufq
6MjtO7Z5U3IzyJ/3evhHOx0NdiYOubJa4IWZQ5T9FB3vjiVmTVe0wMzYbtu9
cgw0Dl8QyxxvhW0VP3gbKjKw8co7CZeFVtCL+ef6QRUGhvx96oikSBuE7HUp
t+MwcFHmsNk+dhvIRMcq+v3EQNrVXx1qPdrAQJ/k51sy0FxPxuT1VBvERhRG
soIZeMe8LSl/qB10NdUa1gwz0CZ8zHM0uwNafO7nL44wUOie38jWkg44XSob
S44xUDS39bXmqw5I2CN6fJjHwKizY9uP9nbAgvEUVbXAQMmIsteaWzrhuX0B
K1icifIGOl+1fTthX+iuAAEDJn7LV7Ib0XsHRl36KstpTMRJYd2igi54d+ml
SZgOCwN9Kj1+Ce2Fel9ubtFdFvoeUtok1PceTuXli42tsDBDqyKIEB8At9s4
peMqh0ObT6k5bh+EnL4E/5xaOZwocsw8+XUQYlw3rVfkyON09KWWiN4heGFr
avgyQh6t5Yhi7YxhMJkT++I7KY/fNwTcZB/7CJfbyHxdKwU8wlQRMdk+Al+2
pUjKPlLAPs9QukzlCMjGOwcKyyoiPdNItsL9E2TUlxyXuKyIPdVOiS1bRsHl
eNOU/oAi1v+tUbo+YxTeaQlePmuihLSxvV2jemMQ6r38qi5HCRtG3Xwba8Zg
cEJ8g6qYMl7Eh7lXbMYhTeJJdaafMu7S0XG27x+HpAwWBzuVMaNQlnnLYQKM
vLOSxvaqYGxB+dLiwASoZc6WFqaooGDlh3vddp/B5+obs+hlFbz8vtJ/XdNn
OJNTORB0cgeuueb+sdpsElLULyhF1uxAIQOnJ8eeT0IQ9YsXl62Krc7OTcVa
U1BzukS9P1oVo802ylpxp8Bof3/SLr4qPs91HZiV4oGPg+LmOLsf0fqvHTmt
N3nQ30uoSz37EatUIpstvvLg4cY31YXSapj5RjnjqPM0qPoFOh4NVEPv2n26
th3TMGS6mM3sV0O++tFED9YMmB27TZHGbLT4tWx+jf0MTLbypkdz2Njz6FLt
rugZ4H/pdppbx8F/pcbb5+pnINuhv3OLJwcvq+3n2K+dhbsqeQtmTRx09aUV
fdk3C9o7YxRua6tjn6qCiEbgLOiMr6+avaeO/jNXaxJezoLvesPN55bU0cCk
2sBdgA+/n0w8vnJCA284OX0rN+PDDZWnjnk1GhhjfjsiIoYPN98WuZVtJVD8
vs08DvNh8tcssWviBJaHaawUfOTDoeH4UmsJArM9lXqZn/gguhC4dkaSwFHm
ja2C43y4pXI4XVmawJRXSk9beHyIDp7oimEQ+Gitd2z8Ah8SdRVMPdUIZIhL
/DsoTsJCtdS0PpvAQOW6A16SJNhbCN/ZyCEwRFf5/fI2Emius8OZ6gTOmPs5
MWRISImpDOzdSSBLXGu3B5OEdJ59qakugXr2f/Ybskl4kBmrrGBEYIbMyZQ5
YxI6KoZFh1fdohNVFWlKgmC3JplhTGBJHNdE7QAJDptaK+VNCZy8YhHqak6C
mN8mO/mDBD6wCTDhWZHgb3L1ppwlgUPb7n0z/p0E4wn/GeZvBH4UobT3XyLh
T6HXnf2r1g26cUIikIQ0hlR5qiOBgp+DuCNBq/2OlFxnOhGoOpX/ICqEhIfP
Z+SZJwicb7ey+yGcBMkINxuGG4FaeZ9mbZJIGNawf0bzJbCO4h5gviCB67yF
z1/1fXP92LAKEs7FVas2+BEYH37l+vzL1T6Lagm+AQQ28kp4A7UksOqW/Jsu
EOiQ834n2bzazyFld1AwgV87hPZojJCgGHnEw/YKgfm2He7UKAmfX63LYocQ
OMhKnXg5QcJ5FS/J7lACJVstGrxnSEjgA7nzOoGt/eGNu5ZI6AwbLByOJFC4
6AgvdhsFKc/jxsqiCIwcaraYl6bAhWfGirpNIDtQ9YwLjQLKqjhyTwyB+wtc
uF4KFEgwr3jG3SGQs2SpfEiTgh5Lnewzdwl8oycwqalNQUbI5/c/xxOYsF0K
NfQo0JywMuclEGgdkVrhaUDBL48V2SbJBEbt+q87WlMgPdZ1gp5CYL34K29h
Owr6/xORRK76L/moiOXfKPAMmhNOSyOw8FbL0tnTFGg/yjXwSyfwbW0zrnhQ
sDzy2/lDGQSuKR5UbPqTgvCDdeNf7xN4T7jCziGIAuv/npdrziQQGgW26l2j
QLZI3S4ri0C78k9VCbcoGBoeirqQTWDA8mRx8h0KuFJ36y1zCOTJTAecT6Xg
nNlBgR0PCGz6XpoWlkuB3sUVne+rHsn9udPnMQWCBY+8/s1d/S+ax8xSDQUN
g6dyuNzV++1+bqU+QcH/AJasfBk=
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1: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
kZ3NnSeXf1RlkoL/AXYtepk=
          "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{7.142857142857143, 16.666666666666668`}, {0., 
        1.3071730872012286`}}, "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {7.142857142857159, 0}, "ImageSize" -> {360, 360}, 
       "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2]], 
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{7.142857142857159, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{7.142857142857143, 16.666666666666668`}, {0., 
   1.3071730872012286`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.899180893300766*^9, 3.8991809080129547`*^9}, {
   3.899181661116849*^9, 3.899181680862946*^9}, {3.8991817217276983`*^9, 
   3.89918173906439*^9}, 3.899181950506143*^9, {3.8991847295870743`*^9, 
   3.899184751301589*^9}, 3.899184797237405*^9, 3.899185698069202*^9, 
   3.8991902063195047`*^9, 3.899202041808465*^9, 3.899204797330976*^9, 
   3.8992679432174063`*^9, 3.899353179665619*^9, 3.899366307241209*^9, 
   3.8993690126356707`*^9, 3.899386149287965*^9, 3.899432963164706*^9, 
   3.899439906787669*^9},
 CellLabel->
  "Out[307]=",ExpressionUUID->"22c2286d-fa9e-4f52-8a1b-0d962ea52521"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
         Opacity[1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAQBWIQvS5nrqHnJBkHBoZ3X+McNOzWmFx66jYVxGf4tea7
yb5Vf9hmucwA80WcQ+z3rThi7ec0G8Q/8ILptdO+pT0FTA7zQPyG1FgJ832L
QpZus10IVh++3ctu3wKZW1nWS0B8hx06C5z2zXvCJ2+5HCx/5o+n6745a5wv
m60C638/a737vlklFe0ma8F8M+XHnvtm2Ky1NtoAVv+V+ZTrvmksj97rbwbz
HzoyeeybckZsie42sPoPv0S89k2a4h2hvRPMrxVh89k3IaaBR3MPWP06PRW/
fX0qWw+o7QfLb/p/339f95uXJSqHwP45Nv9wwL6OLXKaSkfB6rnCNf32tdUE
35U/AXb/HX2ugH0tLh0TZU+D+aVa1wP28Wpv+dp7VsbhuvDW1inlgfsAHEqD
Xw==
          "]], LineBox[CompressedData["
1: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
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]], 
            Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQvS5nrqHnJBkHBoZ3X+McNOzWmFx66jYVxGf4tea7
yb5Vf9hmucwA80WcQ+z3rThi7ec0G8Q/8ILptdO+pT0FTA7zQPyG1FgJ832L
QpZus10IVh++3ctu3wKZW1nWS0B8hx06C5z2zXvCJ2+5HCx/5o+n6745a5wv
m60C638/a737vlklFe0ma8F8M+XHnvtm2Ky1NtoAVv+V+ZTrvmksj97rbwbz
HzoyeeybckZsie42sPoPv0S89k2a4h2hvRPMrxVh89k3IaaBR3MPWP06PRW/
fX0qWw+o7QfLb/p/339f95uXJSqHwP45Nv9wwL6OLXKaSkfB6rnCNf32tdUE
35U/AXb/HX2ugH0tLh0TZU+D+aVa1wP28Wpv+dp7VsbhuvDW1inlgfsAHEqD
Xw==
             "]], 
            Line[CompressedData["
1:eJws13c81t8XAHB7Ze/tsTePPZ9rj0qSpJIkSTQloRSSCtmpREMlKkQlqTgJ
lZYoaUuDRKQSMurX757vX73er3Pvueecez9INWST72oONja2UR42tv//q8re
nbeoT8nxucSVPfmxC6BL6uTid//8L/Sk/vBsuFf1Z4vSADXDiWM21M8OzFk2
RC26z88Tqj5eqzgyQl1teMYDTu2Uuff8JzVHyE9POCSztVdqnDoy380T0i4+
YfebpFa7X+0BO+YylfNmqOs4ODwgsjfTtp1N+f8uZff0hFWJg/7CXNQxuwo9
wF9u9hYvXuqkxkF3mH25NDtdgFq2aLE72M/jqmgVorZ/ttMDmJ9XtvKIUd+v
6HMH9V03P7lKUhsstHUHaQUl9t0y1NOsUjcQuLJd6ZY8NWFvdocZ7xc2f5Wo
jaal3WGk38KfpUqdUJTsBlLAHumqQV2zfrsb2B54lDZXm3rsx2Y3WBF+5LSv
HvVEYaIbpLBWNyw1pG7ZtdUNzombPA9mUl/SXOcGbZ+nR9aYYb3NMW4wWt8q
sMmSOuDNWjeQy8vXiLFBT51xAbImmOy0x/xfCl0g1N5gSYoDzkP3XzxNbGLz
fmfqlO4CF7jQ17w/z426Fva7wNMb2WeOeFJfX5XvAhM5y24Wz6UODdvrAkph
2i/LvKmrc2NdwNnu548LC6jv7At3gTWiNwVr/ajTj290gYzedK2GxdR/jIJc
4OJ1f8eWAGprhzNO0JWtFvBgOfYvWe4EU6HDW54EYz0ZhU7AsL2e+XIV3u+j
NCdwF9lb1hNGfeF5phOs+7Tg1ucIat/L8U6Qn1mdzUjG9affELA21b/H+ZG6
bnMdE9qjT1+Y6qVmBr9jQvhVhfyf/dSNatwmwDZ5YNvgIM6rmssEjtgLrvg4
TN3OyDIA08QU19ffqVt1Mgzg/q1p3aej1I59Tw0ghGuryINxarYAWUOYdB8a
bZqkZswXM4S8tNWvrs9QpzaUaYPew7c3L7Gp0POrTmhDk7D/mfOc1D4JPdoQ
sKAt/RQP9YuMTm34ccA9spCfujhEVAfSu2BRniB1klK5GqjJWdmli1D3mB1T
gxvLqhjJ4tTtS7rUgOwxi2NzxvMUcyYb3F7Yac8UUzNO6huSJ1/fRFuUUIfH
BBiTYPaEpg1l1IoTLUwyLKUiWnqeum5ixIjs0Gtc3l1JzbXhAJMIOKwsl75I
/Ya93IQcXsjx27uG2r6jyZRohJ9233eVOjBp0oxc2uGaf/M6dUv+AVPimNv7
fryB2mD9BTPSdmavMfMWdWjIHXMSeF17Z3gLtU7vjAX50tZ6v/gudQWHlBWJ
+Rgh+/I+9uNaY0G4JgTCxNqopyMfW5I8wYrLsztwPm94rAlDdR57cid1v5Cy
DblgMex9/Tm1Z2qTFbGbk330xyvqHSteWZPWIOaAXjc1m66ULfHf0mG16j3m
TzGwI5m3F210HaZeYujIIvKvxm7s+I71xy8m5OzwYf4ro9SdBzc6EEtOm8VD
49RfnQkhLTKvSjSn8H4eLnEgM+ZVGzi5GP9324NrjsT1ZmL+CW7qAV4PJ5I+
2+eGHS91y40nTqTjKePDcz7qpLsbnIls0He+aAHq+3/vO5EV/beMRQWpI7/4
O5PSqDz/CiHqHoVPzmRoOmSnpwh1jFiiCzHfZ1bySZS6/4OAK4kX43qQJE4N
+9a6kKaizu+KktRv1o25ED6tM7LXpKh5GvNcyfzqrQ6LZKh/HFZ2I2tfXn11
W4m6Zp25O7m4KpU9RAXPI43uZGJoic4fBnXnGQ13QuJ05xeqUbsn33Qnezgm
t1pqUDuWenmQYn17sTI9anJ9tSd5vrPRI9UK+xstnkNqNT2H+GyoW9/emkMO
PXqcl2ZLffaBqBeJ2brYWsAe57XFxIv4K717m86ito/39SKWt8N2z3KgDlBO
9iLSG4Z1Mhypv3Kd8iJjkjFtgs7Yb12zF+mqn9mS6YLzfPfTi9SG7pETdsP7
Wm/qTQ4JCt3Mcqc2XZroCjE1+aEintTdX3a7wqJARYGc2dSuSqmuYM5VUiU6
F/1hpytIVugvyvWi5viwyxVGF16eFPOmLm7e6wqdU7bFefOptfh3uELN6SY3
iQXUn8TDXCB/7pzBA77UwpHLXCD6Z0eOpB91U+e/n88Li5ZaHlxEPefDShcw
dXn/Wmox9fpKfxcQHwzfdWgJ3ueSpS7wI29ESyaAWuPRPBd4Yhv38PAyaq7v
Ns5w6cPfzbLLqbdfZzlDXvo+mSNBOG9VU2eIMhVpkAumzokwd4YFrw6FFK6k
XhJg6QzMZGU+hVXUoeZ6ziCqV1pZFEp9/K6+M4x0GC5UDKOOnqfiDO3brkwc
XYPvZZuQE1Srso4rRVAHvRV2gpx7LS7H11LXn+R0gsjNXl+U11NfesblBPPl
OrNObKAeucLtBEa3lpkzNlEnnJlwBOGIjy+LI3F+er8dYVh0XaJqFHX6vUFH
aKv7oXFqC9bz8qoDPBw3XlCWiN/n1zksaN16/tzFwxj/5GcNp/a67/Y9Qm0e
sdEKdh7+EPizkFrQcJs1LDmbYJl/FL03zwpMr8mLWhzH+5assATB+7Vfnp3A
93avwwo+v/JtjjlJnaI6aAlNg8NHZU5Tj5Z+toCj0+kxdSXUzAh2C4gR0vZZ
Wkqtc0LDEhYoN+tOllEfNSUWYGC8grPoHNafzjIHHsepN3bl1KKci8ygx+dw
7ZsKauuareZwY6VZzs4LWF9SthkcinocoVyN97n9nClE7l7ncvMitcG9SjOY
k8+rFHyZOs7otilonjk9xnYF3xPz3b/fx7UO7Sdrsd5Vv5nw6s7rc8512K/X
lAm4CniJ3gFqNpuVTJDNNXj78AE138BnXVhTcUG0/y++N93lIw3TPxk+u9hV
6fo5x5405NgdyJbnRAffecPS2M39+DIXWuPLD1bd/VjheTzopJcHWV7iA/P6
eNFyjH5Wz9LAzER+6qSYu+Os6JNtD2VnofOm2QjfF0fBS4Joh+c85Cjz8ty5
wtSN3hcFCTNOc/8nEXR3MidpuXn4/k4xzF+xkp8s4RUQkJHA/Sfni5Cv3jtm
V0tSO2YfFCdJh4ZTZ0tTF/9KliKS3cGtH2TQvJtlyVnNp7w75HB9U58E6T8+
/kfEjLr9yIwm2dEXQc6ZU4/0btUmokZvdjpbon2GdEjJVu+G11bUorWhesS6
oXE62gbrG3qtTx5ymdkL22G8eqEhCfY6E19mj/l3auqT0QMyNxwJ1m99zICk
vk6bfOlAnXNf0ogoqk/bbHHC+jozjEn12o3bBF2oCwxTmMT1Uk/dGVfq6rh3
RuTFb98J4k7NXCfJJOudblu98MC4TzuTsKVZxW6eTc0nnGFC8tvP1QrMxXoe
e5gSHVnFsdNe1OEdnGakfkWWBcubut/thwnxKWPb2jUf6zO+YEo+DUfVbFqA
cdm1ZiTOsvcn30Lq1jAdcyKYsNjslB+1tcEnc1J8+16Unf9//Z2wIOZC9pc6
F+N+uVxz0up34fuGpdRL1C0tSOBRhgnvMmrZv98tyMjHvMjiQGrG+0pLkqLP
XW0TRN3DsdaKyG6J/fZkBfbfvNySVFz/YrR+Ja6/L2dFHDkCN3KvwnmMPLci
nbPbKo+H4jys861JRK7jkFUYvjclHxtyaCyi/MoavO+toTakadmBCLMI7E8r
1oZ8a6zXvrgW+xnbb0MUtfp6jdZT1y04aUNm7xcpqdhA7VO43Y7EjFiH6G3C
97E7046cXhTCOBuJ71H2tB1pv76/WzMK55FcZ0dmVK4cPb0F92e02RG9Pd0B
qltxHrs+2ZHFA7xyJ2KoJ6Sus0jKfJPninG4f2k7i1ysCThYuA3nv7ePRbrl
UhbKxqN5JQmZlVgpdmgHdWSsDiHWn7oeSyRgfV4OhKyezZaVm0id8kbAkeRd
0PUS2YX9u0s7kpsSCwUyk6kDf6k6kq9xO1oFUqi99hs4ErnuM3tT9+D7X2vt
SNxdHrvy7KOOdnN1JFvOTnCkpFLnZxs5kWIhtVvs6dQZebZO5FHU3MTE/Xgf
CW5OZPJ5NGsmA9dfW+BEtFnHp7ZnYb39y52I36m71yayqc/qrXUiu3i/x8bk
4rzafZ3JhfXylqN51F/lVziT1x0uo5vzqdefXedM+Kw2XPp2EOejF+dMLI4e
itxwGN/HVLYzCWFvNBosoA59/dkZssO+fA0vxO9nXMQZ6h+Il/cVof9KOMMX
pn1E6DH8niRknUH60GrtD8epNYYUncFlKqt3RTH10fsMZ4gMrjv99iS1QaaG
Mxy7/X7lstPU5h7znOC+3izGyxKcn8ACJxjPNu/2L8X6DixyAo1fy492lmE+
xlIneJHGefBBJc7/cKYjcH8zWDi7irrzWY4jmPr5i92txvlNHnCEFdcSH7te
wvrfHnKEDOVzmU2X8XuS2OgA13Y/met4Be/j3RYH6Ouf4oda/D66tjmAhLdm
q10d1mOf6ACOl733XruG3/ONFAfYIBvnanUD36dQhgMU7jzJcaUe39Pu9yy4
++F+oyngz7e2PhaMeowmVN/E93l+kAWqlUoso1v4PRz+wQJvcY+p8iZqz9nj
LNgeG3lNtwXr2THFgrI3R2LLbmO82Nce2s4/j3C7i/XP92LBWJxU4MdW/H7f
FdiDssdC71338edJUa8duEvlOqo8xHigqR18mpfKf/gJ7g/WsAW1mzFFe99h
fTt/WMGxkwtvrv6N+4dDzeBAmBCvhqEarffvZg3w8+WIKzWirv73hzpIkvF+
HSa1o/9jBjzT/bq03ISa+eEwAw5Jvb9vaEY9YhvIAH/2Lrtqc+rIHhUGyAzd
rzC1pG5cdlcFXry4qXTFCvNp+KtAQUtNlpUNxnnfKsNxtUDpuW5o/3uScLb7
vGbUcmq24t8nG8Lvnzg0GoSWTbrK0q3N540NRudLPWANnEyL+70S/fXqM9b5
zIQv8avQ/gNvWeu2bQn4E4rOlPjIMlgd/iApDB1DPrO++iy35wynTrqnwkkq
7X0r90Sgx7S5yEYdD2W+dVjfViY3MZK0z05fj/2E2fKQb3+ZbEIbMb7HkpdU
D2puzt6Efu/ERyKfy38Q24zrH/jwE5NmkYX5UZhfO0iA/LjA1SIdjb62fha5
VPjb/MhW6uDtiyVJ1N7hMwqxuD+tW5KYRX2UPh5H3aMYJkVqZj+aOBWP+zkj
pclWi6YIzZ3o5glpYql69VVZAq5XSZYhY4IVc/WSMN+3WbLk6kRxfcUunMfM
QVkS9+mgofFuasZ+pgqxbk8/fjEF45tuqJDfNxJFzPfi/p9qDHK9LDqpdh91
8eJwBtl+IOK7dRr2H3KeQewSg0JupGN83giDTK9d+JSVge8l2FKV1Pt7ujZm
UvvM2alKLLdJKNhlo9v2aJDqou7vV3Jw/8Z0DaIH51qZeRj/kK1BzvREnyg/
QC3qvlaDZK09OXnoCMaZgdqEL3N9h1gRzlNslTZJrrI6m3EU15+J0CbTHRyJ
vMexnsceeiRm9NGi5BPU7b+99ciI9BGDmWKc39dFemStTShn3CnqatMAPfJp
mfGrH6fRtbZ6ZEXCZPWGM9Q5B5wNyavi2/v6SzHfAXdD4tecE7TqLPWIqI4h
aetdZtF9Dr2WaUg8+bQFl5Zjv0EWhqRJ78eHpxVY7wslJrGf13DN+wJ13SVh
JqndlJpzrwrrKxRjEmbewjWuF/E8Z2kmOV+jTG5ewnl85GUSjedfJG1rqFOt
U03I8d81gzVX0M6ZJkROManJ+CqeZ5JnQjhKK5QUGqhfNAmakR2tsaMHgdr6
3R9TMjbg/EC0kfrsTS4zEikkfGr/LdxftducDBi/jONppvZ0jDEnob4l83e1
UMvOxJuT7uhNWtO3qVtlkszJksO2MzF3qZOC95qTp9e4O7+34nyMf1oQ7zft
59ffx36ujVuQ1j9Fuz4/oGYMzVgQZ9U1S0IeYT0pXJak3sXU+G0bdZzEmAWx
DJvhXtKO9R3dakWqU1vfPOnA/So7rIhe+YHL857ie+ndYEVKHgWlt3biff6O
tiLKI7orXbpwXkPxVqRA/JcVPMf13yasibhFo7DNS2rHZ1+tSebi/b2XX2H9
1qPWhG+7f73RG2qdG7+tSfJR1QPn3lLzLR+2JtPwNULjHfant96WxLy/6nii
B+ctFWVLRjh3y8h/wHrObbMla7W8h/M/oldvtCWfPOVui/Tiec3RtiRo3aei
9D7qyK7vduRFZlUUdz968rcd8a3ePjvpC76X+UN25OETN8bUAPWSG7/siMcv
0fGtX3FeTb5OUJ80wi42jPUGiDsBU7BdsOIbtV9KqyOcOVwl4/Gd+qFmqiPI
q2erffiB8SDiCNkXNhruHKXO57/gCFy23tayY9hvyQZH2Hbb0OXyOJ7/RP3f
/9d9hLy9f2N/3XccYNWbr0u+TGJ8sZkDvFjzcFXKNDUXm7gjzPtZvlHlD/az
KMcBmhL2b7v+F+8/XcQBrATWpSxiV6fxiXgCFQfnZI9wUCfF9f/7fa6qV7if
i9pH5QWBQxX8Z7R4qIMTXAl8WsWx8LkKNd+BVzaw68nPC9YLqas3/2LCuNRx
SYXL1GwnH441sOnMfnK9Bn2tfKCBz3Y0O6AW3eg10SDmdWLe5FX0xXNDDfJB
c2YVXkNHKnQ02JeOscs1og3yvrKSLOd/k35E7Wh1hZ/wL2a7L/6Zulj5lQoR
jyjfd6kf10t9UyTy8f5uvgMYH8hWIeqZ7Jw/BqlFt40xiMGJisbcIWqGiYca
Mb+4OMHkG/UI71MGYTVz2HeM4Hmr1NWI+7PK35E/qCMbFqgT789LroqOUucw
2NWI/2/OrdW/MP7kX3zFrCpTn3HqnvlJGiRcKWDk2wR14/x2TRJpzH0hexLr
GQrSIHmxF0uE2TVo/HGDFilMCwy5wEHts0RYh5wu4mV4c2H8mL0uqai89HaI
m5oxlKFHam4uL8rkxfV9Srqki1cgT1CYmrkjUZ8oFIQkCihQywaZMUl3z8dT
pxSpk5ZfYJJi3dV3bJWp2W5qm5CQqL4vT1SoUytPmRCNG2uE1qmiNxiZkj7O
L0xOdczPFWRCznqt9SvSwHqEXpqQtQcHY820qHPk/EyJQff6ogfa1NUD70zJ
sNYwrNKl7vkYYEaqN236MKWH3t1pRqLqRrjzDbAfa24zYs4epWtgRD3in2RG
xmb/9Goxpl5iLGhO6vKiIwNNcD62+8zJ9te/DoyaUhc7clgQe43Yqxnm1J6u
Oy3In/UTrzQsqePabpqTxivb/tRbYf0bbSxI8p9J1UU21NYZNRbE1WOH25At
9l9mbEl4cmbC99hTt6+/YUlaXyRkKBFq0dZqB0hXZau+4kA9auT+7/tcu+vp
PCfq+gERRxC9zDHe64zzC7jsAE+mdssnuGI/d6wcIN+Vm0i7o5c8IOCfuXfl
BQ+8n69BBGS7ePe4z8b+jtg4wCvltLPdczBfVD2Bo2sEHsZ4URcMzCcQVL3/
m7A31r/mIwsYvwUlyubjPL7GsOCDU5alwwLMt2rKHkrSRQKe++J6jmcsCHua
s3OTH9ZjFs4CHUXxk7z+1GdP/Fs/EHqg5cRifF/C2fZQUSnZb7UU5/dbzB42
jR2c1R6A7y3sjB2YOsgYhwfi/NgT7GF0X4EvWxD1iz5xe6htl4spWIHv5dZB
O4iTKzrCXEndqqlrB7Yhig2tITiPnHpbmD5/rCc4FOPD820Bfipz/V5Nzccl
YwdJ9sXauWuo6xadtwXnPapzdSMwvollC1xtpzbeWovvZ94TG7gjrZG3dD3O
8+xqG0hdcebK9w3U/Wn91jDnrNbLtE3UwRI3bUDwe9m06mbqCT9fG2iz0WVc
j8L3f6TXGnKTz7v4RuN7Tgy3Br8H+msGtuL+W1NWIC1ZmZ4ci/sP51jBi0Cj
C/Lb8D3KhVlD4Zmqjkvbsd/hfisIHGb+mrMD56mzwwqUrS7JftyJ9RmLWEFP
opl9fCLe7+pTlnCqtWaFxC6czzkLS5gxGmLPScb8l4wtYclBzRLBFJxPjLUl
XJ5a7p62hzrc09QShEMO9XPvo9Yps7WEiNa29ORUnFcWhwW0GPEa/k3D73fe
tDmoHHR4HL8f+3/AZQHbp2I3T2Tg93FZ2AKerayW2JqF33MKjwUwW/uvfM/G
fsxFLWC/keqSjbnUjmdemEFf/tLJgTx8n4pPzMBpKvfomnzsh+uVGRxdeZ98
Oojv9W6HGUzc5XgffBjfp/1rM1hoZLf7bQG+J9USU+DKv1VaVk0dqS9jBCsm
f3tqXML7sNQxguvBpoPFl7GeCSkjkLq7NlPpCvqYlhFEGp42LqzF+zgpYQQP
DrzukK7D+ng0jEBrUiL6wDV830XX9GFXsJe06A28/4FSfXhzJ6Uuox77v1Cr
D1aGDQH8gPuhWR/yDvya3nMT5xV9WR+Gfhue4LiF8+SaowuewWFOiU14/uul
unD6zvGPU824n9tdF/4YPN8Tdxv7S1mkC0sPiOj8uoPn9zvpQs1vj/ubW7Ff
FW9dEAlOWj98D/tT69eCtXfqhNc9wPsN6dSC2wbfqz8/xPMDPmoB44DuwtA2
vG+lb1oQ/3vlr57HmO/1Wy3oWlF4eHkH+v1WDTC588Tm1RNcH5+iARkGs974
d2JcIFIDPue5JDx9huevjNcA59/xDJ/nWH9lhAYcW1HT9PAFfo860Rowcftr
6OxX6GxRNVhooMl75zXeb/OUKlzIW37O+S3OP5VfDQR+H5x7sxt9TkINVq9o
G7LrwfkHsKvBdSOFlhfvsV+bvwwQ/bOmcOtHtPaUCoQ9qokU78X6GONKUH+U
3aOqDy04mwHi672VvPrxPjoylSHcruhn/xfc356mCCDQf2/PIPbbvEceJF+Z
F6sNYTwtVRbWntsVc3MY3/szhgI0xrV5BY7gvM4oyoG0p4L67+94XqasDKyT
Cf998CfmK5CUgia/Il/+Sfyep0rEQFajX6d0CvMZO4vAxp/mf51n8LzDW8Sh
pWnXs3d/8L2sNBEFuby28h1smjR/fYAgRD5m5x7hoXa0j+IG5TnhV7skqNkW
8Yw0RMtdydwihfZ/+a7hfj97qKgMOpJ5kcWo87atlEXPYX1gbd1XJDpHHp0q
3Nhw37+/r08BbWTzgsXQsmjYrYS+a/eVFfNr1wGGCjpUa5z1sKUtooGBzvzy
maWWr+AYoIZ25hplxa0Klx5XR/+QmGa1mV75ekAT+zkpxkHUOTiamdoYVxWe
ZMV1eB95pEPdaCbCTtqKizat1UOvkeImGpH9brwGaHElfrLdwUKxxPA/ywmR
duHkH47GmD9Lgo9odbe1vmVifI+CINlRqXBiuynGb4uKko4d4VtlzKkZOyXF
ic71orZ0W+rg80ekyHNzjl2bPdDCVYrkjipP1w9PrDfilyKpERbQj56D9xFi
qUROTwkl/ZqLbr6uRPL6xZ7FzMP9HezKJOmZlN6ENzUzMUGVbGqSS9zmQz1y
vVGVBFUpdU4uoM5JeK9KvI6q6u5YiHbgViNNnE4de1dgP3EdmuTiiKsW30rs
h21MkxS/9YxPC8H8IZZaJOu+V7tAKLWP8jItsvOqj2bGaqxff6cWWV/it11o
DXXxBjldEpC75HFWOJ5nT3TJ7IRADdG11NVBwbrEel3wttx12M/AaV1y4Umi
6tFY6h7hJYbk2M3dMUrbsD7Ho4Yko2Lfg+PbqSOX3zQk24/sZzB2YL3reg1J
xN7srSd3UosqaRuRJVsO3FdLpJ6QWcAk7sGHVUqSqFNvhTCJxbyiaM1k6nCe
PUyiYXviXulujE8dZhIJ7dPKOnuo69rPMQmHZNmWc3up2+0fMskIW3mrXire
j343k7wbuqBUkYb3n/edSdpeXYoy3I/1Gdubkvq7tXcvZOC8suabkvKa64rM
LOqzBStNSeFJ2Hwxm7rfKMWUpGU13THNRQf+IBAXf0ehJo+6ddUAgbDw+5EW
+dSyvR0EFi1qu117EPN33iPg6vxE3vow1vP4MAtMjbs2XSvA+6lO+vf/QcVX
LbaFOF9mLAtE+bvl6ouwX85NLPjz6/1G1jFqvgB/Fgx96G2G41jPBS8WvHn8
RdaxGO9vsSsL7tcPbbh1EvOl6rPg2rnvTc6ncX/2lB2cPfRLpqUE67n33Q4O
7f693q2UWmfpKzvYEzlz604Zziu+3Q423pGaG34O8+l42sESRaNO/nKs/2Cf
HThFuS8vr8D7NQuyA73WoD6vC3g/cq22IKkcu2m4Cu9ncZgdzGzJnsi+iPGW
t7bQd69sl8llfC/bF9lCu0qjwNMarGfqoQ1c3/riQHQtvsdjy2zh9IMRRek6
rM//qQ1kqPKXXr2GcXsvG4iJVTVeegP7nWq2huBHNnWT9VifwUobmK3u63QU
8Hv6/MIaTLetvc9qxPWZTtag+Dh54btbmD+n2xp4NIveJDXj/cr7W8O37ZdX
q93G/RWP/v392P5guPkOtWe/uxU0aX2KXd2K/dh9tILwBLejg23UBQXP//29
Z8jXO/4a31vJY3N4PyDOpyuqRb/Pr176UCxR21wSQ812atVb1puGZSbqcWid
4ncs2XD2Eye3od/e7mH5iZcJMuLRml/es3LqvbYf34H2//CB9TDsx2fFBOok
RuIUi0+sYFFRInrO9BTL9QarWW4Xrr+QNc1KWv2RWZCMFhKaYdWLpB2XTsH1
tzNmWBPXjAQP7sH4WdU/LPPQzm0S+9C8p/+wIoW3f85NxfU//PhIRZ3KItF0
9KKDfKQ/5HZT1n705x4+oiG0jimUifvF1PjJiquix/dnUTcqbeQnhStrZwnk
UDtuquYnXbMCt6XmUhev9xUj4rXsn3kOoB/HiRHv4DK/PfnUjOkjYiRdYF4T
5yHcf7RRjNyp+WGcfBjPD/4gRjhWFBxjO0LdE8MvTgg/mZVYiPW8S5Ym2y9/
jJspwnxC56VJ7fK0vvhjWJ/gQ2nyg9fYb/I45j/9U5oYXeq8FVeM+aSkZcja
wO3G4yfxvMvWMqSUh3Fs62msd+KKAvlQfVtgtATjuS8UiPKydXFRpRg/xKZI
ArjF+kbKMH+LuiI5VFW7cNM5rM/eS5E8WRp4a+g8+vQmRSLMxWG8vgLru7iV
QeZcKDs6UEndvnofg+xdMk8gooo62PMIg8xUFPSuvoT7O24yiPVisvDTZayn
sJNBotk/NYZcoWZ29DFIdXma0ftadIO6Ovm6yPjoijpcP8tSneiwPePvvkYt
+n2OOgk9vz028AbOY/1ydVLsx+h9VY8e3qRO3vy57bsU8HzVPepE9ty6xuc3
cf9T0CR+C8WM/G9h/RydmiRnpraoswm/l8t9muRhWSD/whbsV39ak/D5csR2
3KYeERPRIq7TZZ/m38V8TRpaJKl0nm9bK/roch1S7/Pzptd97KcwUodMTBYY
PniA9S3bq0PMz5Ci2Y9wXulHdEjk/E98rW14P5uqdEjF77QY93as73OTDuk/
bfyppQPrKZrRIxrezxa4PMX3MyOqT4Intt+81Yn5Gdr6pOgUw9Cxi9rnhq0+
eXLlVVv3c1wfxjIgfPfyI3e+pK4eV9AnDm+8xRVfU0fOZTMgMd/4aq6/wf1T
HIakgqN50dJu7MeO24h8lNo5Pv4O62njNSbyulZHDr3Hfuo+GRIf+++2Fh8x
X+BnI7Jvfvmbp5/wva3LZgGErE6I6sN67mmwYHSrCkOsnzrVD1ign/byVtUX
zH/XjQUhRw+s8h7E9yD2yB4KquZxD33F81b42cPjJt6y/cPU4deG7IGn65an
3gi19etke7D/Ej/Q+p16YqmAPWyZtshY8xPXV+XawXmREUOeX1hfqZ499Kid
f1wyhvl/XrSDG5vy/FVmcL6pw7YQyb8qVFJAm76HmiU2UKqoxHN5FnW4TI81
vDV+XrZAiLq1eo01SLrkzh4Rpo7cPMsG5vjPHcwSpfaRzLcGzdNmUfwy1I4H
blnBK3uupD/q1J4vLC3BLfJMUT+LeoKT3QwkT0rXr3Ogjns7aAqfOva9GXbE
81c/M4Uajt/Tm50xf2CjKaSYrVX65YL5ak6YgF/oa1acGzWfY5oJqB/0Cppy
p642jzaBpjGjE+xzqBtXeZpAnnbxzZS52G+biQmsXCLWwzuPuue4ogkw05LZ
9nujEyRMgO36T4awD/Yr+IcJ7QOhTrkLqPsP9DPhhELXSsmFGP+SZQwbvTyS
D/tRs/GEGgPZWXdK3p86aZ+lMQhf0G0+tpg6OGGWMbztLvzIWIrzsus2ggoR
Qa6SAFwvetkIdjju1NAOpBb12mMEXpuHXc8vx/XuAUageGrFasMV2M87IyP4
+qR9T3Uwrh9mM4IbnM6lZiHUTKEmfUg3v3yndhV1++58fQhYrfHZZjXOhytC
Hybv8Og4hlMzAkT04f54rGdzBK7n/6QHR3S+hLuvw/levKIH4UsD0u6tx/v5
kKYH1ukPznltxP7il+mBfsn3q9XHsV55fjmomWVDDIqxv3s8ckC2JLWUnUQv
/CsLd1/dnaN+mrpY3FQOfJxFOo6X4Dz1jOXg5Tn/xfKluP6kiBSEiB1/e7AM
8ys5S8FgXO8qsXPoaSIF0T0GAxnnMd9tSymY8YiO5KvA/mLCpWBv1Y2x3ZVY
L/d8MRCV4dz59wLGj7iLwZGEOZzx1ZhvMlYM1Ppy08Yu4vni0WJQMe+lSNRl
jNuvEwOLK4xDQzXoZJFZAIrhihG16Dfcs8DnYHeSahv2Uxrf3fByWpP32GN0
jUx3Q0johkzZDnRbQk/D4IMaifwn6PS5Paxos+kjIp1o+cQe1kyhC2P/M3SI
YjdrL8f+Up7n6LPPu1mia58YJL9AM93esY50yF2eeYn1d3qNs9RsVtpse42O
3DHOqig+e3P0zX/zLRhnWfCNuEV24/7yj2Ms2GT1cPAdxqukxlkezxN817zH
9zNRxUnayZ0XHz5gvxcXcZKlpUIrgj79N7+NnOSD0KLel724/2sCJ1m39ei6
RZ/RbzQ5yeibj9/b+zFflRMn2emqH+c1gOdnhM4iPBVRf+4O4noiOItkS1xP
cRlC39KaRWTj2WfdHMbzbKxnkVMfPHNtRzCf8nsBoj8nR6b2O66v2yNGai4+
P2byE+/7dJYYIXIqGpWjGF+6SozcTQo7rzOG7yd9sxjx6a9kloxjvrfbxcjL
+b9qVX5jfX8WSZGQq/asokn8+eEfKkUGlVOapadxP/tGKRK998HsvBl0hIsU
mfDX5jL6i++vQkiG7NDeDffYdGi+yS5ZwjbRHbeag7qxa408SWm1NWPnog7O
MJQlfEcODR3lpmZsaJYjGRE/yqx5cX9xqgIRtfUO6eTD+DMlJXJA4LxipAC1
47XPykT6NffzWYLUPbkxiqSwfGVumRDGBR2VifKOhrkuItTF75+pkFNecjzv
RKlzVB4xyKWs1G/zZKhFp3TViOWKT+e+yFKPxP1QI9eNHUP3yGM9B56rEsJ2
VFlVEffnnPr3//v28Rf1Snj+rRR14n5y4YElKpiveb4Gub+5at4og7r6tLkm
8XaexZejRp0k+UeddIivadLXwLjCRw3i97Fpx11NrF/ygiZ5cVnZapU2tY9F
jhYJTNn+/Y8O1mO2TJv0+HWVF+rhfG47aZFQTdMwSwPsN1hAm/T/ymQ8McTz
/L9pk/V3vrzaYIznfbumQ0YOuR3kN8F8G4/qkug1J+efMcX7cVz77+8lqxl+
J3Ps7463LtnBt7TljQXe52YZPcL2siYhzoo6Uq/LHlLOidpI2uD8RmNYwLd9
/c8qW+qzfrNYkDGntXKuPXX4qwp7EFHQCP/Mwn4Tne0hbzBRbbcD9YvOj3Yg
Xf/6jbIT9ucVYw+FGVaHrzvj/g5Ze1BefmCBvyvWE1ZpB0YnOOxuz6Hmeyxj
B5c2Bf0K9vrvfVXagqXj9arpedRxo962cF1Uem3BfGqd6I82wHq/WcN8Ac7P
cLctNF581P3YF/spkbEF12TdI+v8qAsm62yg1XfPQl5/fA+PvG3AS/290OnF
eF9vvtpA+0/7VrIU8/nusgG/loLkVwE4r3F1G3iRP2ofE0jtGVtnDYGrfcbF
gvD9GCyzhh6LiouVK6iXTAxaQygP3/rZK6lT3TKtob9rlVZvCJqhbg3rym72
JIVST6xtsYLUg0/k2MOw/rW1VlCyu9d31xrqVt8yK7i1eWI/ewT2I1JqBd0r
Zt3etRbdf9gKpuYp/2Ffj/2sOmgFsvYmVskb8Lys/ZZgoecaybEJ53dkpyX4
yi4+lxyJ8xWItwTrtOHNKTuwHwFNC1gUy17OlYD3Z6pmAVGrJT+lJGK+2xIW
kLVQW4l7F75HP24LKHey9d+TjPf3jdccWo3nZXOn4Dx3/jaDT0rBrXv24Hu+
Om4G7IJb2Hn24Xvj7TcD5ck9tntTMf/Jl2bAtU6JMzUf+5PONAXVpUx7vkMY
35ZgCsTDZWvqYaw3aIcpBFj4X+A7gv09ijKBWPWIz6mFaN5QE8gX28HgP4r9
8oaYQPXfrKVpx6jbOX1N4NHQyTz+E5jv9nwTGHhd8yCtGM9/42gCvPfvcgmc
omZ+YpqARt0rVvpprH+vBROcSodiBM7g+z6ixYSgfLbq9FLMt0maCfHJEl8E
zuL34iTJhIJILbX95/B7MuVmQk2QzbJZ5Xh/P74YQ4eXV/7+Cpzn6CdjGLZd
8WjWBXyPRc8MQUA3iiejCr38iiFoy+xxELyI54dXG4Ird0FcxiW8H6E8Q1j5
8/xFwRrMH7DZEBLeNwxkXMH8e9YbQtHjdnWhq9jf73mGUNfwMTCzDuvzcjeE
Z+VjB4Wu47xKrPThxxH+x5k3MH+UnD4IpyryCTfgz59zYvqgH2PslAX4njl+
6oFnqPN24Ub8/iw79SDUd9HlrFv4PmY/1INdjuFfhZsxf12lHhw3itfMbsGf
h60ndKB2z6k84zsY17ikC4/e3Pv7+C6+J4F6Hfhk9n195D1cf+e9Nkyny74S
fYDxpkEtkPzg4HHxIf68zJnRBn2bNTUL2nC9nIA2OOdkqf54jPVYG2pBwOcr
WXkd6AyiDVHk7ZTpU5yf7lwtSDvIFfG0E+fvsVETir/qd23pwvmzx2tAnctC
F8kXOL/m/ZogXTwyfrAb5zHyTB2MxmVWW/bg/E59UAM3b4cnXe9x/u3cahB4
Jswh9iPOc++0GkRPZ1bI9OJ+HzU1eLJEf+WRQXTtOgZki4XdPzqB9/nirxyU
hmdasSbRLClZgJs1JW+nMF+8uTx0Sb8RS5jBeeTHy8LwBs5E5b84D45cafC6
X2xWzK1L4yaaEhCq2lrsyEvtuGu9GMTHfRN6z0fdM7pQAvIeS8fvEqBO0joh
Bue1SL+qIPpMhAjw7X599LQ47tfI5gPGKw4BV0nqxu0NgmBlohf7SQrXj/bz
gXfqgk8pMmi7RG4Iexe3QFOOmk2inB0SLIvhtjzmc3vODQcz7+qHKaJBgAMq
Pg0X8Cjj/iCzmYYWO2meMhX0jRUc8CaPtcVDFfNpf5tp+PkltOezGlrNY6xB
wCljXqoGWuv2cINaweXrOlros3/HGmy/vdK+p42erTTSsMCd42CELvpp/oeG
8GO6HAL66HbT6w1Joz6bzhugj3d/bFiQ7O3sYoQe+fuwQU3US+qNMbr4zk3W
z2Oz+6NN0I0i3awWfY8bQmbozY4DrIPXXLNKzdF8Qg9ZYR7OKx0s0Z5NH1lW
zxzMX1ihhaeHWXyrWLybbbD/Md5frJcjtq/47dDfT06yzidYV56yRwtLs5F4
QcskO4JOKR1jeRWaLex0QF//Oc1S0jHR2uCE+cM82cnwFaPf3C4Yvy/ERRpd
DB4ed8V40Ssektuhe8LKHf3mBD8JWaEd1e6B63lduIn5kIZbxGz0Nx4+wh2v
JssxF++z4JkA6eJjDBZ64X5miRApO6QEZt74/v6aiZI4DYXch/PxPT0tn0Vm
X5INXb0A9998KkzkHaWt/vhSM461i5LBRxICh/0w7mImTuqXib019sd8Rwsl
SOYX4erWxVjPtWlJEhQruHvlUsyv0yFOjLkF/CcDqIuVzCUJ2wFe3QOBmL+3
UIp0MLin9YMwvzGHDDl1geNxywr8noRWy5It9mynlq/E8y4/kCOu92eix0Iw
f8AxGSK1ZMojOxTj9VxypK93Ql4nDPsX+ff3+dUtY0ONa/C8PW0KJJV9tHFp
BNZbwlQiS7O/H/ixFuvra1Umekrfwvavx/1z1imSqfNfbTQ2YpzviRJ5aD0g
2LAJ94tYqJBjdz6/W7QZ65nrzSAb/XovDUdhXFZelTh8+LBnXzTWt/OBKhGN
7FnCiKFm3j3BIB9m3upfi8V+2Raoksv7X/9ZsA3jV7nUSIrcy46B7Vi/Q60a
8S/rKtm9g3qEN1mdaFt0xiomoFv91MhEU8ecK4m4P4dPndzzeazkvQv99Jo6
Kex+ONKXTN1+ZoMGWbf+fnNiCnqLlSaxn7x7SHbvf/czoEmEUm9HXNyH93Ol
UYN0SzXbz0mjrnaL0iRVpxtFPqZT1zHK7SHJBD7EZ/z3/Sy2hwU3b1yRzKLu
3z9uB2rzrqVWZuM8C0vs4Oer2mXuudQ+X4k9tITXGL3Lw/Nh8N/fv5IRSYH5
WN/gsB0U3FR68vIgtU7ChC1wrHuivvgwnl84bQvrpfdt7SygXnKBzQ66btnd
XVBIPXHk33rHDSOyj4vwvKopWzgve2at1zHqgrK/tiDZsrT+3nHqF3H8tpCw
SVjYoxjP2yhkC/3yzStaTuJ9s0RtwfdO7EWn09Q5lny2UL/ZgPNmCc5HUdAW
tJTe+9mXYv8jIraQ03qw9FoZteiMnA1MbpkzYXmOOvWSog2EqvydXXMe513G
sAGurtmr05qwPzY/S3BzeVdk9gPrLck2gehADeGDS/XoPAUjZSEqq0RcZhk1
m9xmSYhs1JA5Ekjd6GYnCRt/lCgoBFEz0tklYZ2GJuPYCnTQAwkI9z+jobIS
zbFGAsJSNXVPhlA7VjL//X67fsZQPRTjE5PiEPJV0/TMajzPI1cc5u/Q9r+y
GdefvcMPekf1jj9Lw3hNxPMGnbbzpxbvR4vzdTRosumXvcxA93A+aFAzLS9f
loV23dDcwAjVr36bjZ4ZHmApHyqvWZGLrr74laXYqn/tfR6abfMwS36yvGFV
Plrm2QhLxsCgqfcgddK8O99ZXPWGfb9OYvzbQi7CMVw5EHsa6+Vr4yJsDKNv
v0sw3nKMm/xZcOFnfCnu3yTCQ6Z2G03MlOH6u8k8ZOLKhenEc+gFccJk7LMR
O0c5zjtrUJiMylVxp1Tg/szlIuTHXGMBngsYN+kQISM7q4RTq3CetT6iZKjK
WELgInXPiixRMvC+SibjEnplqyjpl2AqCtfgfZsxxUifWzUj5wrWm7ZWjHyK
ZWqKX8X85yykyIdz1br5deivm6TIu9dMI+nr6JbnUuSQ676CnBtov9tSxLvy
LcesBuyH57IU4ZY237AHqIOni6VIfUL68783sd4X8nJky+cep+23sL5FgnJE
z8eqYrQJvXBSlryvy5Te1IL5ovtlSYHqp6Qvt3H/1S5ZMj/ddnDVXcyv7KNI
eH7mLOpuxfXhRJHAss83l9zHfjsNFMnWFpbe0wc4z0Z5ReK75vDT+g7snz1U
hfC3D7GsnmI/vzVUSKO169mLnbjexluVxJ0sFDfownijmyoxFvi+o/Q57l/E
UiV9UR6fGS9x/aS5Kjn++tiColfUI7cMVMki19EbUm+oc04MqBHByjlaOW+p
wzep2kOz1MkcgXfUzFFde9ieMD6Z0oP7I03twfTzvNV/31PLKi21gy/zSx5v
+0jNl73SDorrJm1GP1FX/4mwgyWqC0o29lFb50TZgUh6mfCXz9Q+37fbwZ0f
M3GrvlAXXCm2hZ3L/D6+HaCukzxnC+Yt5+ct+Uo9se6iLXw1YK97MoT9X7xm
C6cPLlab9426XaXJFgL+VGbcHUHLf7EB8TVc404/qPuDvtvAvccBK+t/4vkF
v20gyfriA8tfWO8DdluwOslreXEM5/Pu38/DYf6gYv0JzKfLtIHSqBqB0t84
D19rG1j+WmArYwrnvcXRBmwTQpUF2PXpPAcTreF73/XUFA7qOulUazg7X+zn
H05qPp5sawiuW7N8GzfGN9VagYwq3P3JQ526DqygLU3SdCMfdWPQHSvY+2Pt
0X5+6jinNitgLbvFs2oW2qvLCkabZTa/FcT1b2Ysodxg4+vFwtQ9DdxWEHKw
xe2JCHXOISErkPsjX+0lRt3uL2kF7WGb5e+KY/3Silaw7/HdFCdJ6iW/XCyB
WCt/uyFFLVo/1xLGiqOXWsqgty+0hEr+B83VstQjxsssIei1Rchceey3hd0S
RCuL2foUqFsdzllAU8KsE0lK1GzugRYQ7RPDUlCh1mnisAAttfevrzAwv2C6
Bbz4OXe7jxp1QRzTAtJv18oOqlNXK7wwB/vDqlf3aFL7XEkwh+HwjEUMbdxf
aGIOxbbjP6/rYP9FdebgKxiSt0iPmsm7why4uh8yR/SpX5znMYfaKqvH6YbU
/RqVZhC+69QGTWOc9yM/M5BfKCTYyKR27Oo1g4cacecDTLEe70wzGHTQzOXy
ovZ8X88E3ZjEoCWJ1AxVcS2IXn0y/nkSdaQGpxaAX3OBfzLW8+KnJvC79l55
thv7afqkCX5mvE/99mD9Ps804YSa7sjTvXh/y4U0YEBsrtDCVMxXLKkBFuwb
9J6kURcrc2tA0kiWx4L9+B4+/lKHB++qQ9sz8DzvPnWQfvxk1/ws3P+xUx1W
wujxtmzsx/y2OlRUStfPy8V5Ns+owvhR65cP89Chw6rgnBEwNjcf6znTrQov
1h5nzjmM73H5TVVQD2icd68A7/telSpsnP1hrWch1vf2hCpcs+ZKvVuE89xe
qQJcOlpn3I/hepcsFZgv49l0+zh1cNxGFSjkWfvOtZg6iX++Cnz6tX+6+STO
96uRChj3Vsq5nMb880RUYHvnY8umEux/cpcCtDR/X+hUiufdX6kAIpclNjeW
Yb3izgoQcMoiy+EcOkdJAc7kLi6H83je2Rl5GEna1sqqwPqO8SuAXWRRb30l
WvSLPOxd0cBhX4U2XS4DHd7vVG5UY7599jKgSNhZtpfwfH9FGVhjqB5w7TLm
3zYlDZcU3WKtr2Bc9rU0zMxak3+1FvMNXZEGz6nUi5Z1GHfQ+/f/84HzbVeu
YbyVXwLevnw4aH4Dz7vbLw7mfm86De9i/N1HQUh0+fO9ohW9s1gQ7psyRAzu
4/kTywVBSs3ZoPwB+qecIASLhc7We4TrJXm4oZxtb9i5NnRQMxeMfSvbrdOO
6x895wLHd/eKyzownpjBBfvbBhu0nmJ8wIMLPnhOlaq8w7hK0ViDzkmTCehB
51qPNGz4vWZ20Ac0o/xjw6UFxwtnPqJd57c3TJzrHDzai45J62sQmXWBKf8V
zVawm2X/KPi65O//5nV6nJWseXhWzST6vewf1t2djwIXTqO1etmJYBfnhR8z
aDdlbuJrZPs39y/6wH52EpEt4SrCY0Ad7c5LDi2484hfgjpp9zIx8ubctPI5
SfTLcXGiymEW6SlN3aifI0nCAiJufZbBeK+ONKm4dEJ8nxy1440wSdIssW0x
FwPN4SxD+NZXnT2tir7XLUu8W3p/O6tjPse58iRfUXHuBw2Mz0uXJa+ifY/u
0sL68tTkCeNR6hBDB+NvQYGs1rxJGnXx/J2Llcj5nb+yV+iji9YokJFn+u//
GOD+u5xKxNIoxPS4Eca/FymT+L3/hsqkDp5bbgeN3W2db0yofeYz7IHHiltr
hxnWZ9NqB17ZdrEKFrh/WZgd5H7e3Hrdkronnevf/28czsoFWON5wXF2oFjQ
vfa3DeZLk7aDkBHJ+gI76uJDYAtlnnOFrFm4/1Tgv78HincFPSdYj0e7LZj+
vloV44jeutEW4hYMs0k7UzP3yNgCnNPwveKC8dqaf/8/4Vh22s8NzdS1hdkB
uaM/3fE80zs2oNOe0BLrifN7dckGeNzX50/NpmZsPWEDvTeWhibOxX6H99tA
i4mHOec86urdcTZwqsyca583ni/67/f9LiW1TgEf6sjwvf9+/x8QKclagOun
o6yB8M9sEV+I61ODrEExccDlkB/O78cca5gafS4h74/1xlhZw6u1tz8eW4xm
17CGup5Ll1WXUufsELWGQ/7Fu88EYH2Ppq1g68PMhbqB1CNzvliBn3O8euVy
XH/tmRWY1oX/ZK7A/uO//vt9beTfXBOM5/96YQnfTrscsA5Bh7ZYQpucyar6
VXgfVdWWUJGtbOa4Gj1UZgnp3IKcLWHYr0++JUTE/37iEY7OSrIErTWdUfPX
4XxtlloC19tbzk/XY/8b3Czho2+V+OKNmO+qiSU0tR798GoTtehvDwsoJumX
gjZjP/rmFpBQE5v8IQrri2FYwHK91b5h0RhvFrQA+2JftYGtOC/u3+YgL+34
Y0MsxpV7zeFrx/C3z2V4vjkPE36Mvwz+xWNI87HOysEeoUv3c/moHV0DZEFW
Pd3cSICa7XmvNJy3Djl+fxauL3wrCyxvW741QtSNqdky0L5KPIpTBC2kIA0h
2wZenxBFs3dIwq+sJjd7cbTSEglILSmseiGBLp8vBQrXo+S2SqGtXkvAhcdz
dovJ4Hm2meLg1Ks2VCmL9T2XFYPOyUn/OfLoKWEJWCP6tLFPAdfvLBSDSc1y
vd1KWP92L1HIsNudr6KCcctqIVBZsOzPDQY6THEWXAozC1+ihutV/gqD645Z
T0bV0bbSgvA896NdriaaP5kf1pbdOGOojc7J5YHaGYV5Jwwxn68QB3idf1OU
bIvxrrM/Gt7drOFWsUcH5HxpiHqWsekGC+2T2N3ANRj6crEDumn3UMNhNpbL
qCM6SPhjg560VGWOM7ru4qOGev0haUNXdI/6VdZ8p9tJ99zQLVu7Gj74HxtY
7YFO8jzWsHX9Vj+O2WjBbc9YfMnz4Pic/84z6GUVHdbUsfNC86wZYRlVzuQ+
n4fOcHvPutX0bGrLfPRDniGW34vK1aIL0Isv/GT1De15XOH7Xz1dE6xtnEE2
s/3QL0v/sATlLE/3LkIf/TXGOm4kLJS8GJ18Z5pl4toXo7wUfWmCjbQshZ7r
ATjPin5OIlqtnGqwEuOrY/lIaeC7LpGNGNcqFSVPsjfezNmEtvsqSv40zZSJ
bcb38dpEjOiNZeTkReH+e7PFyCJdxW0S0fjeNO9KkqTA8pX5W3H97w+SpCLb
do5ULMYrdKQI19gSBZntaNH9UoSp289ZEI/n5XZIkcDA2K+yO9FNQ1IkNZvn
2ZEEXP/MTJpcbjrYIJ+E8fnVcqT7l0Zp0S6sJ/OhHBHQrclS3I3nVxfZgWWg
S+yxFHTH4X+/L7KfrFDei/mOp9lBVtNKzxP7qEfWxtvB9V8jTEYadeT2WDvo
00mSO5lOXWz37/+rYoEiHGoZ1NUeBbZgn3184FQmui/NFsKbDJ+qZ2P+0nhb
yP9Vf6Mkh9rnUawtNOp4lWjmYXx5hC0oN93uNziO+4972sCcX34dlSfw/GOu
NhCj8+ma0Unsz9zy3++LZVtOVZ3C/fGrreFRFsd+ZglabLE1TNzK3XLxDLXo
GU9r0PjFCDQto86JcrUGH51q18tnsd9pC2vYsczB0Pw8nv/J5N/vi9G6zXa1
/32/olZwWLticnYbNVP5gTlA83yZwcf/9b/RHD6t+GmW0YHzkeMzB4HpQz6G
T3He+2LNgVlgu6GtE/u/IG8O9/nuvfN9jfUOB5vBSMn66Z9vcD1MmoKMk6jc
wW6sbzDCDMjbyxaWPegWDjMI3bbY9/l7rO9LqSn8+dLbsqyfmtHx1QQ09qa9
n/6C53HlmMBcNcM/xwYx/6FRE4iCdnmHIZzH9QITKAiItuoZpu4ZsDcBGJPx
2zWC61cUm0Bv3o1ItR9Y7x5XExA0XpHZ/BPPj+hmgukDjvOhv3AexbuYsGRN
6R3ucer2wV4mJHLO+Vg6gfls0plQemLor8ck3u9GQyY8tMtV/DKF9R7N/ff7
5Lm5TfoM3l+TBRPkol8s0v9LHbzymDE4iu6IeshmROf9oNcIwipUsjdwUDfe
rzQGS5MD6rmW1D3OlzRBmkuoVM/aCL9nRU0Y69qr02JD7Xg2RQO6zrGVL7fD
fOPD6lC7Y7vhuD2un7tUHQ7NH63KIeilzWoQo7bRVM8RfQvUwf/X55pmJ7Sm
tjpYtq60Wu5CHSy0Uw2ki15fG3PF88Q+q8LYhkX2Oe64fv4CVehyfAy6nnj+
Yi81qJWY7dQ8G+OXa1ThUF9Tc+Bc7K9SWRVirtm7j3lh/nepDPDPqG3N9sb4
3gYVsFzBnKvrg+dJ5imDtOn5R00LMF+EEwPGuDR8Ahdi3HmxCnQ9P/bklx/6
gL4y1J6XWZTtj+u52JTg0M7c5zpLqNmGnipAjM+sgKaleF5NkRL4q+95s2wZ
rv++SREsx/4E/QrE9V6uCiB9L+59VtB/85aVh7GiH6t0gtHbv8pC18b1fbdW
4nrxBhmodeoLX7YK49rVcnBIMnhwNBTPC0+RhZjPLzdkhaH3GcuA//WFI9rh
/82XTRosMx9F3YpA23dKgnSwx6+AdZg/+440jJneih1dj9YrlIIubrvJzI2Y
z2+jJNS+qNmhHYn7m4gEHCo3+tu4GfvzHBCDmISzuwK2YPxbgyj4L1DjGo1G
21aJg6XG0b2ZMZjPcbcYSI9L8WvHYfx/Ldd5PJRtFwdwBtmZbCH7Nsm+zTCa
O1re9JZok5K1PFJZkofCG4XKmhJFZUsLLZRCMgclS2WJhMouCWmyJYrXZ878
+f38znWd61xzzz0E7STDTP2FuMqT2H/KVgw+XBcU2xeKVpgRhmK/yKTJMOw3
ES0Oqev+SiScwjxVTxSCpINTtCIw//JWCByGWSsqT6PrAgWA+vxw+t5I9COF
ZSCTOKgwGYXrU6p5YMbNJTP+LHo6mx8+mHSoap3Hetl1fFC8bEduRQzmb6+S
ILXzjdbeOMyPWnFB0P2NeRPxmCc3zTMdwit04hMxv/iSG6g7LB5qJmHeVbPA
lNEsMqy4iD4hPcec+aVb5JiMFj84zfzw+rbZxGX0/8RYzOIbKqVxqWiBsiFm
qn86XfMqOo1nkhm0XooJaWjyzTGmg0ziWsdr6KsWA0zaN/4XP6+jh/NamYWd
5i/9MtD2F5uZq157V3/PRDsONTGzy9JfHclGFxY1MuXvvan5loM+dKaBmXzt
T61XLpp3tp8hEq9X/+UW+vXGAUZ0mMvrA3c4+4cMMBaOXnjTdxc9XjfACHau
fOuaj853+sJg2f5s6LqHDiv8wvAm1JqcHnD6u/5i9OvvbO58iB7RmWU4KUe9
21OI/rhrlvFe/GlL2yP0vlOzDFuuodadRehP+bOMGpZM27sn6HVevxlr+zZ9
sCtG18yQiNJ3J9obSjj9RXkIoxd5HVueoUXVeYj8xx8768s488TyEOo3hT9t
KuecL4uHuJ685vMrJn7e88U8hHSUT9f6CjTMCRKJgRndVZVYH8EUJPg9m3rW
vkDP1gsSEbu5+pgv0a2fBYnfG436LV9x7ttKiAigegw8q0Hf3SVEjGolD9Lq
cH+jzWTi4IrqL0/rOe+jHWSii396yOQNfr8Y0WTCYVZz+NFb/P5xXSATTcMO
3wwasf5NCpmw6Tw38qAJ8+JMMlFVXzqq8w7XKw5JEvSyb2N5LZz3G0uSKMqX
H6e8RxfMSRK617b8uNXGtv34A0u4FRfGUm/H9/eOh5agFPbgZ3YH26zSJV85
2j2h/BEtOUIHsrP41I1PuJ9LHx1ibK2mV3axbQhLJhHHZtK62S78teRQ/Zxf
K3px/cZ+Okwptc6m9GF9UAcdfMR55yQH2CbLSNFhaNF0/uIg1rst2ZXl+Ud8
CM+XIESHjt7Uvwlfsb5tydvf1S4If2O7+aMwHV5XzS7GjHDeByJ0WP9Ym1tg
DOt7GBZQnrOPdPY73tfEks2S43h4f+B96BIW8DCynPcMi/N5LPlf/g1iAX9w
/5vO5jDsFrOevIC/z/6C5rC/rPHEw0W2Vayf0qBZUurhVm4D9nyr3GiwwWfv
wAiJbfuxJhqU1mTIxvCy3dsdSgMdlUFbyjK2IwooNMg4qR35ip9t/9OtVJBo
9S09IMi2FXUdDc7qPvnOLYz15EEqzEX/VssSYbuw/wIVfHsIR0IM8xJLKvSZ
RyV8Fkeb36PCrkv1L0KW43mUHKhQNyo2KyvJduU4NxXWbNylVyKF/aofmEFh
RprHbhk8b/peM9CY7b4yuQLzkTozuLpdo+GiHNtcLcfNQOSeN8lwJc5fIm0G
4bwFtEYFzC9UmcK2w9Uim9Sx/w4TUxg1+1Fsboj5UVETcD+Y7rp4APcv/aEL
sZRSl/vVeH7aohTYt8WeoNRg/U9+aZCJdL6UU4v1PMul4bOh4X3FerSfnDTc
7CbVXH2N6yspEnA4vq1H8i3OS9kjAYb0u78TG7B+1FUCZr6GSAo1YR5zSALK
U2z1opsxz/OXgDPrVTZxtWB/3wUxsPk54Rbail4nJg5ima9CZt6jJZTF4f3W
q5ePfUCfNBCH9LnDD8fa8Tw1G8XB7S6jzqsTc939gqDlQO7v/4i52BFB+M4z
MO/8GfPSEEGw7xVNE59CL+b+ZMok9j6OnUZnPP/J/GxZ9JbvF/puajsz51v0
UMQsunq0nel9xZHrz290ll8H03CjjnzwPJrF7GDOTPw1mfiDLhfoZJZnNdv6
LKB5v7Yyzmy76TW8yDnvoVaGxkJZ5SMuQ7an9FsZArtzbf240YE/Whij9xI+
6pI4Lm5hNJKCvUY49j7BYjza6zZ1hwetf4TFuFy4+bQnL9pw7XdGML+JmDof
Oon0nbHPReFaL8fD9WMMxlO+VRnLOP3l5xgqIj+eOPGjSX9/M3gOdFjLCaBP
9v1mDD2ravzAcfvL34wAaS9SgzDbESEbScTuo/YXYkXQdjQSYf7SQsFGFD2n
RiJWyqvn8Ynh+mweAWLBX4T6kuOCGX6ir3b6RYQ4OmuYn6hW6rEjyOiuVn7i
7r91n+fREa61/ETc20fez5ZjPn9blBjbc4t8TgJtSRcitg5cLdkliXYqEyHu
+8a7qEmxbVVwwxJE5sL5WOjmEHtLOBp9/D5Tmm37bTyW0ED22hkng+uLAyxB
//q+OccVbCepGCz9/0zZlq0ly7bhxNL7evyxtc0UuvLlZTrYEWY/quTYVknb
RIfC+lWpF+TZ7i0qWfo92K3AcF7JdqF6IB38e8UHVytg/xYtOrw7whM3i2Zl
dFqA8a8ZoxpFnD8w3gIunRnpSFZCCyyjw4Rod7i7MvYfK7GAnWnvtAxUcN6K
wxbwRONVwx+OkxUtQKqwNPC1KttZ7s3mEGh5f+VVNbbJtZstoK0m84WnOuZX
/pgv/X2X7G2igfYoMIfUrrNkbk2cj+phDjOHQkoa0YY5SuawZ8rH5boW9tuQ
aA6l4e58hyk4v4i1OcgK775PW4X5/AQN0s3VbXx1cJ5/o2gw91Lmh6Uu2pJG
Ayc7oVRBPazPmaRC+ce/a9rRzZMeNFD45+dArj6ev1iaBmE/B2MDDHD9mToq
dIV1GFkZcp7PUCoQAm87RI1wv1oqFTKSK8I/of1HblFhQalIK88Y533sSAXX
/NsNQSac50WYCpVm6YEbTPH5aKo1A5WqhJUSZmy7pYaYQcTW0y960Kz4b2bQ
2x7o/YCK57O5bgZWBw6RQ2l4HmE7M8gedyqxMcf1+4XNgBRi5yJjgfe5AkzB
g2893yCaa07HDF4kUe8/ouN9Puk2BTWF1TvDLfF5mkw3hTN3FOe2rsHn6b6t
KQwYL8+WZ6APcpnCBuC1GUYXjvmaQu7m2fGnBM5/VdUUeNtGUyLXYr/mLhPw
dOtZs90Kz3MyyQRqRlsGlKzxfmTXm4BWcE3sGNr+yCMTOEsqMypbh+sfHDWB
rwkPOs6tx+fFUtkEbOSyw3dvwO/Tm3fGcDf3spb6Rqx3iDKGNhgQGeD4Rqgx
kDqNJ3P+g8935nFjMJg83emxCe9zb6Ax7Bd9V6Fmg/cZdcQYYigqt/vRrBwP
46X/L/3iczbj+S7uM4YBJwjw+C/e35pUIyAHie5V24K5RIIRBG86G6e6He/H
+5Ih5Lq3HetDZz05bwjNoRqO2Tsw7zhlCH9TjhPuO7HfYKAhrC58oaG6C/eP
PmIIe14vF+5DZxVtNYCoQbefWbsxH6UZwKOFgnY3B5yvRc0AumUXmSp7MFcQ
NwBhk225vWgV/d/6YG57IzbLEe+ndVofPL3G/N32ct6n3fpw6bTlHpV92C9j
px5UXItl9KIjZuL1YOxpp3qWEz5vSaF6INe8SshtP9brHNaD/4wEs5Sdcb8S
Rz04zlv7oQet8spGD7KUZJiZLvj9WUPTgwZzz5uurlj/rFAH5nY8iVF2w35E
pg5QfHj8e9CVnjk6sOvcDodMd1zfm6QDEdnZa1w9cN6FUzrw4DlLTfkA9jvs
owMf29YK9qC56p10YBkr8UfGQc77p10bTIS621w8cZ70V9rgpqFXrvQP1g8U
aUMCEZbTjVYxytGGMsc35zO88HyjF7Xha4C8n8shrF8VoQ1SCd67lbzxPlx9
tcH6TqllN7rXdJ4CvlX8ahmHsd/BbxS49slBwOUIzmfVSYG66VvjikexXr6W
AtPi0++70JW6TymgtnrD8xs+2J9ykwJ2G5KznX2xvucSBcJc+s8p+mH9LxEt
yDth5NuF5hqa04QPlyJ23fDH+wsa1gSeB01052NogQ5NMKxVUlUMwPV3l+zc
58Pfhe61qdGE2Pny79eP4310FWlCsbTI+/2BWD+qpwEDBk5lCv/ifD0KGpDv
IT4xgba6nqEBASkvteuD0FUV6kCvC3bPDObMa60BpHmdtH9PYL7dVh1e6/U2
bzmJ5+fyVYOLbpcF1EKwPm5cDVRq/gQ3hmI/u0Q1GJ4tLMgN4/xep6tCgY7n
15D/Yb5SVw2CXOSUt5/C+1tLUwXiYoMDJRzrD1irwLLq04l/0b2azSrQMGNW
0xqB9ecKlWH//gyziDM4b/s7JdC4sMPHIRLN3a4Ao1XLbulGodN6FeHxVNln
UjSe/1OxAoRQ/KQ60VZF3xRh3T71rQVn0WRtBRBKaI+MPof1wxqK0FIR99zp
POY1rishbWLtpFEM5osBcuCmObVaIBZzfi95WOV416Ob4+OpssCK3Z/+JA7P
kx8pB6VMcktsPOZTMSsgglUt6J6A+0mmyMIm9ZPWtETMO5Jl4MP5vsKBC7i+
MVEaMp6nDD9LQg9FSoLn+GaVpIu4nidcCnRVF/b8cwnXZz2XhKmdjy+sSUYf
4Vr6+/7sP7USl9F13JIQ9Ux+cZhjNdXlsHWskVqRgvvVbJIASeVI35RUzDd4
keHjdtrtI1fw85A7tBxyoka7rK+i9faJg/HITtvxNLT3F1GYUxCIrk7nvI80
hKDKrrw8/Rrm7hoicP6M/5T/dc7vzR0BsH+qobvpBuYTd4RAdrjjgGIG2uPr
MuiRT7g2iea6fYwHbttat9Znom8e4wPfiGmhrCysV/zDDdSivHVB2ZgfnOeB
v1+cQ7bmYG5gyQXVshKP1W5iTkldZMRvqfk2y7F1zF/mrlMhqk25aDf+GebK
R/p7b91CR6fNMfsH+pNCb6Pz5SaZ+TJX6rbfQQ/m/2IGbN7CteouepsOi0kP
W6QtcNzt0MckFRT5vc9DZwWPMOv7vO7k5+PvNfmNIfF/0o6ymw==
             "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{7.142857142857143, 
           16.666666666666668`}, {-1.6267513875252936`*^-8, 
           1.4061561970368786`*^-8}}, 
          "Frame" -> {{False, False}, {False, False}}, 
          "AxesOrigin" -> {7.142857142857159, 0}, "ImageSize" -> {360, 360}, 
          "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.368417, 0.506779, 0.709798], 
             AbsoluteThickness[2]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{7.142857142857143, 
          16.666666666666668`}, {-1.6267513875252936`*^-8, 
          1.4061561970368786`*^-8}}, 
         "Frame" -> {{False, False}, {False, False}}, 
         "AxesOrigin" -> {7.142857142857159, 0}, "ImageSize" -> {360, 360}, 
         "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.368417, 0.506779, 0.709798], 
            AbsoluteThickness[2]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]], 
         Line[CompressedData["
1:eJxTTMoPSmViYGAQBWIQvS5nrqHnJBkHBoZ3X+McNOzWmFx66jYVxGf4tea7
yb5Vf9hmucwA80WcQ+z3rThi7ec0G8Q/8ILptdO+pT0FTA7zQPyG1FgJ832L
QpZus10IVh++3ctu3wKZW1nWS0B8hx06C5z2zXvCJ2+5HCx/5o+n6745a5wv
m60C638/a737vlklFe0ma8F8M+XHnvtm2Ky1NtoAVv+V+ZTrvmksj97rbwbz
HzoyeeybckZsie42sPoPv0S89k2a4h2hvRPMrxVh89k3IaaBR3MPWP06PRW/
fX0qWw+o7QfLb/p/339f95uXJSqHwP45Nv9wwL6OLXKaSkfB6rnCNf32tdUE
35U/AXb/HX2ugH0tLh0TZU+D+aVa1wP28Wpv+dp7VsbhuvDW1inlgfsAHEqD
Xw==
          "]], 
         Line[CompressedData["
1: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
          "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{7.142857142857143, 
        16.666666666666668`}, {-1.6267513875252936`*^-8, 
        1.4061561970368786`*^-8}}, 
       "Frame" -> {{False, False}, {False, False}}, 
       "AxesOrigin" -> {7.142857142857159, 0}, "ImageSize" -> {360, 360}, 
       "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[2]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{7.142857142857159, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{7.142857142857143, 
   16.666666666666668`}, {-1.6267513875252936`*^-8, 1.4061561970368786`*^-8}},
  
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.899180893300766*^9, 3.8991809080129547`*^9}, {
   3.899181661116849*^9, 3.899181680862946*^9}, {3.8991817217276983`*^9, 
   3.89918173906439*^9}, 3.899181950506143*^9, {3.8991847295870743`*^9, 
   3.899184751301589*^9}, 3.899184797237405*^9, 3.899185698069202*^9, 
   3.8991902063195047`*^9, 3.899202041808465*^9, 3.899204797330976*^9, 
   3.8992679432174063`*^9, 3.899353179665619*^9, 3.899366307241209*^9, 
   3.8993690126356707`*^9, 3.899386149287965*^9, 3.899432963164706*^9, 
   3.899439910089538*^9},
 CellLabel->
  "Out[308]=",ExpressionUUID->"b9e8ab2e-5f02-41a3-8896-f72bc8a87ac6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Mino", " ", 
    RowBox[{"period", ":"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalLambda]r", " ", "=", " ", 
     RowBox[{
      RowBox[{"2", 
       RowBox[{"\[Lambda]r", " ", "[", 
        RowBox[{"p", ",", "e", ",", "sp", ",", 
         FractionBox["p", 
          RowBox[{"1", "-", "e"}]]}], "]"}]}], "//", "FullSimplify"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Mino", " ", 
     RowBox[{"frequency", ":"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"\[CapitalUpsilon]rOS", " ", "=", "  ", 
    RowBox[{
     RowBox[{"2", 
      RowBox[{"\[Pi]", "/", 
       RowBox[{"(", 
        RowBox[{"4", " ", 
         FractionBox[
          RowBox[{"EllipticF", "[", 
           RowBox[{
            RowBox[{"ArcSin", "[", 
             SqrtBox[
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r3"}], ")"}], 
                RowBox[{"(", 
                 RowBox[{"r", "-", "r2"}], ")"}]}], 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r2"}], ")"}], 
                RowBox[{"(", 
                 RowBox[{"r", "-", "r3"}], ")"}]}]]], "]"}], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], 
          SqrtBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", 
              SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], "r2", 
            RowBox[{"(", 
             RowBox[{"r1", "-", "r3"}], ")"}]}]]]}], ")"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"r", "->", "r1"}], "}"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalUpsilon]r", "[", 
      RowBox[{"pi_", ",", "ei_", ",", "spi_"}], "]"}], " ", ":=", " ", 
     RowBox[{
      RowBox[{"\[CapitalUpsilon]rOS", "/.", "Subs"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "->", "pi"}], ",", 
        RowBox[{"e", "->", "ei"}], ",", 
        RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.899179681812755*^9, 3.899179682261392*^9}, {
  3.8991797236055527`*^9, 3.8991797423150043`*^9}, {3.899179800062207*^9, 
  3.899179822123213*^9}, {3.899180031136139*^9, 3.899180092782403*^9}, {
  3.899180139315366*^9, 3.899180165949873*^9}, {3.899180204319422*^9, 
  3.899180237076522*^9}, {3.899180299678746*^9, 3.899180557373704*^9}, {
  3.899180603052128*^9, 3.899180730287608*^9}, {3.8991807729970827`*^9, 
  3.8991807871450367`*^9}, {3.899181883271062*^9, 3.899181921827693*^9}, {
  3.899181973538418*^9, 3.899182063449317*^9}, {3.899182130966469*^9, 
  3.899182143721249*^9}, {3.8991850405947227`*^9, 3.8991850545728416`*^9}, {
  3.899194875119336*^9, 3.899194927318138*^9}, {3.8991986460445433`*^9, 
  3.8991987427979727`*^9}},
 CellLabel->
  "In[309]:=",ExpressionUUID->"8682a397-07af-46ba-97a1-09d31281340e"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[Pi]", " ", 
   SqrtBox[
    RowBox[{"r2", " ", 
     RowBox[{"(", 
      RowBox[{"r1", "-", "r3"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", 
       SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}]}]]}], 
  RowBox[{"2", " ", 
   RowBox[{"EllipticK", "[", 
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{"r1", "-", "r2"}], ")"}], " ", "r3"}], 
     RowBox[{"r2", " ", 
      RowBox[{"(", 
       RowBox[{"r1", "-", "r3"}], ")"}]}]], "]"}]}]]], "Output",
 CellChangeTimes->{
  3.899180665469696*^9, {3.8991807311062202`*^9, 3.899180791020586*^9}, {
   3.899181914522015*^9, 3.899181922427018*^9}, 3.899181958662488*^9, {
   3.8991820277312107`*^9, 3.899182037553925*^9}, {3.899182133602317*^9, 
   3.8991821453580923`*^9}, 3.899185058590631*^9, 3.899185718678718*^9, 
   3.899194929682044*^9, {3.899198720984536*^9, 3.8991987377996397`*^9}, 
   3.899202047046253*^9, 3.899204802682907*^9, 3.899267948525243*^9, 
   3.899353184891879*^9, 3.8993663128243713`*^9, 3.899369018237822*^9, 
   3.899386154584449*^9, 3.899432968666914*^9, 3.8994399102043867`*^9},
 CellLabel->
  "Out[310]=",ExpressionUUID->"9186e0e0-6c31-4e15-bec8-763960221ac7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "r(\[Lambda]), ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "(", 
    SuperscriptBox["q", "r"]}], TraditionalForm]],ExpressionUUID->
  "46fa6ebd-dc98-4e71-8aef-7b30134250a8"],
 ") direct expression"
}], "Subsection",
 CellChangeTimes->{{3.8991866605431004`*^9, 
  3.899186690056534*^9}},ExpressionUUID->"1bbda41a-2daa-4ee4-87c1-\
f7d3e65cf7ba"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"The", " ", "r", 
    RowBox[{"(", "\[Lambda]", ")"}], " ", "inverse"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"r\[Lambda]", "[", 
      RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "\[Lambda]_"}], "]"}], " ",
      ":=", " ", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{" ", 
         RowBox[{
          RowBox[{"r3", 
           RowBox[{"(", 
            RowBox[{"r1", " ", "-", " ", "r2"}], ")"}], 
           SuperscriptBox[
            RowBox[{"JacobiSN", "[", 
             RowBox[{
              RowBox[{
               FractionBox[
                SqrtBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", " ", "-", " ", 
                    SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], "r2", 
                  RowBox[{"(", 
                   RowBox[{"r1", "-", "r3"}], ")"}]}]], "2"], "\[Lambda]"}], 
              ",", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "2"]}], 
          "-", 
          RowBox[{"r2", 
           RowBox[{"(", 
            RowBox[{"r1", " ", "-", "r3"}], ")"}]}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r1", "-", "r2"}], ")"}], 
          SuperscriptBox[
           RowBox[{"JacobiSN", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               SqrtBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"1", " ", "-", " ", 
                   SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], "r2", 
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r3"}], ")"}]}]], "2"], "\[Lambda]"}], 
             ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "2"]}], 
         " ", "-", 
         RowBox[{"(", 
          RowBox[{"r1", " ", "-", " ", "r3"}], ")"}]}]], "/.", "Subs"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "->", "pi"}], ",", 
        RowBox[{"e", "->", "ei"}], ",", 
        RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Expression", " ", "in", " ", "terms", " ", "of", " ", "angle", " ", 
     "coordinate", " ", 
     SuperscriptBox["q", "r"]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"rqr", "[", 
      RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "qr_"}], "]"}], ":=", 
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{" ", 
         RowBox[{
          RowBox[{"r3", 
           RowBox[{"(", 
            RowBox[{"r1", " ", "-", " ", "r2"}], ")"}], 
           SuperscriptBox[
            RowBox[{"JacobiSN", "[", 
             RowBox[{
              RowBox[{
               FractionBox[
                RowBox[{"EllipticK", "[", 
                 FractionBox[
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]], "]"}], 
                "\[Pi]"], "qr"}], ",", 
              FractionBox[
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "2"]}], 
          "-", 
          RowBox[{"r2", 
           RowBox[{"(", 
            RowBox[{"r1", " ", "-", "r3"}], ")"}]}]}]}], 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r1", "-", "r2"}], ")"}], 
          SuperscriptBox[
           RowBox[{"JacobiSN", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"EllipticK", "[", 
                FractionBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]], "]"}], "\[Pi]"],
               "qr"}], ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "2"]}], 
         " ", "-", 
         RowBox[{"(", 
          RowBox[{"r1", " ", "-", " ", "r3"}], ")"}]}]], "/.", "Subs"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "->", "pi"}], ",", 
        RowBox[{"e", "->", "ei"}], ",", 
        RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Consistency", " ", "check"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"r\[Lambda]", "[", 
           RowBox[{"10", ",", "0.4", ",", "0.01", ",", "\[Lambda]"}], "]"}], 
          ",", "\[Lambda]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Lambda]", ",", "0", ",", 
          RowBox[{
           FractionBox["\[CapitalLambda]r", "2"], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"p", "->", "10"}], ",", 
             RowBox[{"e", "->", "0.4"}], ",", 
             RowBox[{"sp", "->", "0.01"}]}], "}"}]}]}], "}"}], ",", 
        RowBox[{"AspectRatio", "->", "1"}]}], "]"}], ",", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"r", ",", 
          RowBox[{"N\[Lambda]r", "[", 
           RowBox[{"10", ",", "0.4", ",", "0.01", ",", "r"}], "]"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"r", ",", 
          FractionBox["10", 
           RowBox[{"1", "+", "0.4"}]], ",", 
          FractionBox["10", 
           RowBox[{"1", "-", "0.4"}]]}], "}"}], ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{"Red", ",", "Dashed"}], "}"}]}]}], "]"}], ",", 
      RowBox[{"ParametricPlot", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"rqr", "[", 
           RowBox[{"10", ",", "0.4", ",", "0.01", ",", "qr"}], "]"}], ",", 
          RowBox[{
           RowBox[{"qr", " ", 
            FractionBox["\[CapitalLambda]r", 
             RowBox[{"2", "\[Pi]"}]]}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"p", "->", "10"}], ",", 
             RowBox[{"e", "->", "0.4"}], ",", 
             RowBox[{"sp", "->", "0.01"}]}], "}"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"qr", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
        RowBox[{"PlotStyle", "->", 
         RowBox[{"{", 
          RowBox[{"Yellow", ",", "Dotted"}], "}"}]}]}], "]"}]}], "]"}], "//", 
    "Quiet"}]}]}]], "Input",
 CellChangeTimes->{{3.899182162870524*^9, 3.899182219216033*^9}, {
  3.899182274431883*^9, 3.899182276202726*^9}, {3.899184266004931*^9, 
  3.8991842753443832`*^9}, {3.899184308974166*^9, 3.899184619773058*^9}, {
  3.899184810978503*^9, 3.899184820713835*^9}, {3.899184904490692*^9, 
  3.899185028622384*^9}, {3.8991850667844057`*^9, 3.899185176268401*^9}, {
  3.899185209660616*^9, 3.899185317415059*^9}, {3.8991853624748497`*^9, 
  3.899185407078719*^9}, {3.899185444096445*^9, 3.899185444571972*^9}, {
  3.899185600965753*^9, 3.899185637391033*^9}, {3.8991856727630663`*^9, 
  3.8991856769321747`*^9}, {3.899185738071171*^9, 3.899185753896762*^9}, {
  3.899186338137599*^9, 3.8991864543548317`*^9}, {3.899186494214593*^9, 
  3.899186572831777*^9}},
 CellLabel->
  "In[312]:=",ExpressionUUID->"cbdc9ebb-f0fa-4001-96c2-8b22e4df9410"],

Cell[BoxData[
 GraphicsBox[{
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[2], 
          Opacity[1.], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
RN/MmOY+wxT8DybBxRg=
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[0.368417, 0.506779, 0.709798]], 
             Line[CompressedData["
1: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
RN/MmOY+wxT8DybBxRg=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{7.142857142857142, 16.666666666666668`}, {0., 
            1.3072436356495107`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {7.142857142857142, 0}, "ImageSize" -> {360, 360}, 
           "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[0.368417, 0.506779, 0.709798]]}, 
           "HighlightLabelingFunctions" -> <|
            "CoordinatesToolOptions" -> Identity, 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ParametricPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{7.142857142857142, 16.666666666666668`}, {0., 
           1.3072436356495107`}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {7.142857142857142, 0}, "ImageSize" -> {360, 360}, 
          "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.368417, 0.506779, 0.709798]]}, 
          "HighlightLabelingFunctions" -> <|
           "CoordinatesToolOptions" -> Identity, 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ParametricPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.368417, 0.506779, 0.709798]], 
          Line[CompressedData["
1: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
RN/MmOY+wxT8DybBxRg=
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{7.142857142857142, 16.666666666666668`}, {0., 
         1.3072436356495107`}}, "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {7.142857142857142, 0}, "ImageSize" -> {360, 360}, 
        "Axes" -> {True, True}, "AspectRatio" -> 1, "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.368417, 0.506779, 0.709798]]}, 
        "HighlightLabelingFunctions" -> <|
         "CoordinatesToolOptions" -> Identity, 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ParametricPlot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[1, 0, 0], AbsoluteThickness[2], Opacity[1.], 
          Dashing[{Small, Small}], FaceForm[Opacity[0.3]], 
          LineBox[CompressedData["
1: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
RFhr99lJGv4H9tFmpg==
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[1, 0, 0], 
              Dashing[{Small, Small}]], 
             Line[CompressedData["
1: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
RFhr99lJGv4H9tFmpg==
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{7.142857142857143, 16.666666666666668`}, {0., 
            1.3072436309158708`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {7.142857142857143, 0}, "ImageSize" -> {360, 432}, 
           "Axes" -> {True, True}, "AspectRatio" -> Automatic, "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[1, 0, 0], 
              Dashing[{Small, Small}]]}, 
           "HighlightLabelingFunctions" -> <|
            "CoordinatesToolOptions" -> Identity, 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ParametricPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{7.142857142857143, 16.666666666666668`}, {0., 
           1.3072436309158708`}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {7.142857142857143, 0}, "ImageSize" -> {360, 432}, 
          "Axes" -> {True, True}, "AspectRatio" -> Automatic, "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[1, 0, 0], 
             Dashing[{Small, Small}]]}, 
          "HighlightLabelingFunctions" -> <|
           "CoordinatesToolOptions" -> Identity, 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ParametricPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[1, 0, 0], 
           Dashing[{Small, Small}]], 
          Line[CompressedData["
1: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
RFhr99lJGv4H9tFmpg==
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{7.142857142857143, 16.666666666666668`}, {0., 
         1.3072436309158708`}}, "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {7.142857142857143, 0}, "ImageSize" -> {360, 432}, 
        "Axes" -> {True, True}, "AspectRatio" -> Automatic, "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[1, 0, 0], 
           Dashing[{Small, Small}]]}, 
        "HighlightLabelingFunctions" -> <|
         "CoordinatesToolOptions" -> Identity, 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ParametricPlot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[1, 1, 0], AbsoluteThickness[2], Opacity[1.], 
          Dashing[{0, Small}], FaceForm[Opacity[0.3]], LineBox[CompressedData["
1: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
y2OYgv8BjmvGag==
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[1, 1, 0], 
              Dashing[{0, Small}]], 
             Line[CompressedData["
1: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
y2OYgv8BjmvGag==
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{7.142857142857142, 16.666666666666668`}, {0., 
            1.3072436356495107`}}, 
           "Frame" -> {{False, False}, {False, False}}, 
           "AxesOrigin" -> {7.142857142857142, 0}, "ImageSize" -> {360, 432}, 
           "Axes" -> {True, True}, "AspectRatio" -> Automatic, "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[1, 1, 0], 
              Dashing[{0, Small}]]}, 
           "HighlightLabelingFunctions" -> <|
            "CoordinatesToolOptions" -> Identity, 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ParametricPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{7.142857142857142, 16.666666666666668`}, {0., 
           1.3072436356495107`}}, "Frame" -> {{False, False}, {False, False}},
           "AxesOrigin" -> {7.142857142857142, 0}, "ImageSize" -> {360, 432}, 
          "Axes" -> {True, True}, "AspectRatio" -> Automatic, "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[1, 1, 0], 
             Dashing[{0, Small}]]}, 
          "HighlightLabelingFunctions" -> <|
           "CoordinatesToolOptions" -> Identity, 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ParametricPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[1, 1, 0], 
           Dashing[{0, Small}]], 
          Line[CompressedData["
1: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
y2OYgv8BjmvGag==
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{7.142857142857142, 16.666666666666668`}, {0., 
         1.3072436356495107`}}, "Frame" -> {{False, False}, {False, False}}, 
        "AxesOrigin" -> {7.142857142857142, 0}, "ImageSize" -> {360, 432}, 
        "Axes" -> {True, True}, "AspectRatio" -> Automatic, "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[1, 1, 0], 
           Dashing[{0, Small}]]}, 
        "HighlightLabelingFunctions" -> <|
         "CoordinatesToolOptions" -> Identity, 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ParametricPlot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]]},
  AspectRatio->1,
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{7.142857142857142, 0},
  DisplayFunction->Identity,
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{7.142857142857142, 16.666666666666668`}, {0., 
   1.3072436356495107`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.899267949174005*^9, 3.899353185528974*^9, 
  3.8993663134563513`*^9, 3.899369018894253*^9, 3.899386155234479*^9, 
  3.899432969298251*^9, 3.8994399107978*^9},
 CellLabel->
  "Out[314]=",ExpressionUUID->"55eeb60e-793d-42e6-8ce8-45b1cb8ac3c4"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox["t", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "02feeccc-28b0-4d7e-8692-621863099d23"],
 " integrals"
}], "Subsection",
 CellChangeTimes->{{3.89917965094309*^9, 3.899179674701448*^9}, {
  3.8991797486243477`*^9, 
  3.8991797543870583`*^9}},ExpressionUUID->"aade0b93-89fb-4843-bca9-\
69d421fd25dd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tintegr", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["r", "2"], "utint"}], 
       SqrtBox["Rfunc"]], "/.", "fhRule"}], "/.", "DeTrRule"}], "/.", 
    "Subs"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Nt", "[", 
     RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "rf_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"tintegr", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "->", "pi"}], ",", 
         RowBox[{"e", "->", "ei"}], ",", 
         RowBox[{"sp", "->", "spi"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", 
        FractionBox["pi", 
         RowBox[{"1", "+", "ei"}]], ",", "rf"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     SubscriptBox[
      OverscriptBox["T", "~"], "r"], 
     RowBox[{"(", "\[Chi]", ")"}]}], ":"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Ttr", "[", 
    RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "\[Chi]_"}], "]"}], ":=", 
   " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["\[ScriptCapitalE]", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], "r2", 
          RowBox[{"(", 
           RowBox[{"r1", " ", "-", " ", "r3"}], ")"}]}]]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"2", "M", 
             RowBox[{"(", 
              RowBox[{"r1", " ", "-", " ", "r3"}], ")"}], 
             RowBox[{"(", 
              RowBox[{"r2", "-", "r3"}], ")"}]}], " ", "+", " ", 
            RowBox[{"r3", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r3", 
                RowBox[{"(", 
                 RowBox[{"r2", " ", "+", " ", "r3"}], ")"}]}], " ", "-", " ", 
               
               RowBox[{"r1", 
                RowBox[{"(", 
                 RowBox[{"r2", " ", "-", " ", "r3"}], ")"}]}]}], ")"}]}], " ",
             "-", 
            RowBox[{"2", " ", 
             FractionBox["\[ScriptCapitalJ]", "\[ScriptCapitalE]"], "M", " ", 
             "sp"}]}], 
           RowBox[{"r3", " ", "-", " ", 
            RowBox[{"2", "M"}]}]], 
          RowBox[{"EllipticF", "[", 
           RowBox[{"\[Chi]", ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], " ", "+",
          " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
           "r1", "  ", "+", " ", "r2", " ", "+", " ", "r3", " ", "+", 
            RowBox[{"4", "M"}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"r2", " ", "-", "r3"}], ")"}], " ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"r1", "-", "r2"}], 
             RowBox[{"r1", "-", "r3"}]], ",", "\[Chi]", ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], " ", "+",
          " ", 
         RowBox[{"r2", 
          RowBox[{"(", 
           RowBox[{"r1", "-", "r3"}], ")"}], 
          RowBox[{"EllipticE", "[", 
           RowBox[{"\[Chi]", ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], " ", "-",
          " ", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "M", 
            RowBox[{"(", 
             RowBox[{"r2", "-", "r3"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"8", " ", 
               SuperscriptBox["M", "2"]}], " ", "-", " ", 
              RowBox[{
               RowBox[{"\[ScriptCapitalJ]", "/", "\[ScriptCapitalE]"}], " ", 
               "sp"}]}], ")"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r2", " ", "-", " ", 
              RowBox[{"2", "M"}]}], ")"}], 
            RowBox[{"(", 
             RowBox[{"r3", " ", "-", " ", 
              RowBox[{"2", " ", "M"}]}], ")"}]}]], 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"r1", "-", "r2"}], 
              RowBox[{"r1", "-", "r3"}]], " ", 
             FractionBox[
              RowBox[{"r3", "-", 
               RowBox[{"2", "M"}]}], 
              RowBox[{"r2", " ", "-", " ", 
               RowBox[{"2", "M"}]}]]}], ",", "\[Chi]", ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], " ", "-", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r1", "-", "r2"}], ")"}], " ", 
           SqrtBox[
            RowBox[{"r2", " ", 
             RowBox[{"(", 
              RowBox[{"r1", "-", "r3"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"r2", " ", 
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r3"}], ")"}]}], "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"r1", "-", "r2"}], ")"}], " ", "r3", " ", 
                SuperscriptBox[
                 RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}]}], ")"}]}]], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Chi]"}], "]"}]}], 
          RowBox[{"r1", "+", "r2", "-", 
           RowBox[{"2", " ", "r3"}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r1", "-", "r2"}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Chi]"}], "]"}]}]}]]}], ")"}]}], ")"}], "/.",
      "Subs"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "->", "pi"}], ",", 
      RowBox[{"e", "->", "ei"}], ",", 
      RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spf", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Ttr", "[", 
         RowBox[{"10", ",", "0.4", ",", "spf", ",", 
          RowBox[{"JacobiAmplitude", "[", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"EllipticK", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]], "]"}], "\[Pi]"], 
             "qr"}], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], "]"}], "/.",
         "Subs"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "->", "10"}], ",", 
         RowBox[{"e", "->", "0.4"}], ",", 
         RowBox[{"sp", "->", "spf"}]}], "}"}]}], ",", 
      RowBox[{"Nt", "[", 
       RowBox[{"10", ",", "0.4", ",", "spf", ",", 
        RowBox[{"rqr", "[", 
         RowBox[{"10", ",", "0.4", ",", "spf", ",", "qr"}], "]"}]}], "]"}]}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qr", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Dashed"}], "}"}]}]}], "]"}], "//", 
  "Quiet"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Ttr", "[", 
         RowBox[{"10", ",", "0.4", ",", "spf", ",", 
          RowBox[{"JacobiAmplitude", "[", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"EllipticK", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]], "]"}], "\[Pi]"], 
             "qr"}], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], "]"}], "/.",
         "Subs"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "->", "10"}], ",", 
         RowBox[{"e", "->", "0.4"}], ",", 
         RowBox[{"sp", "->", "spf"}]}], "}"}]}], ")"}], "-", 
     RowBox[{"Nt", "[", 
      RowBox[{"10", ",", "0.4", ",", "spf", ",", 
       RowBox[{"rqr", "[", 
        RowBox[{"10", ",", "0.4", ",", "spf", ",", "qr"}], "]"}]}], "]"}]}], 
    ",", 
    RowBox[{"{", 
     RowBox[{"qr", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Dashed"}], "}"}]}]}], "]"}], "//", 
  "Quiet"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQXXXQ8Yg071vHglkxYHqydMI5EL2GJQdMf3xywVoW
SLfoPXMD0SHLtvqC6JzS1UEgOmOfeQSItmJPBdOtuZWxIHp7/rdSsPonTNUg
+vpGuw4Q3a/h1QOiD0QVbQTRzyKy9oPoTddzLoP5c4/eBtE9HIrvQLSD961P
INpHVPYviJ5zs5lVDkhf3C/OBqJXTHuVJw+kt8wXrQTR/uV760D0HvZFjSB6
Vs6ObhCddPUAmH4VOG8CiD61ZdliEM1nE59eDKQ5Ci1zQHRYMk8ViL72e3UN
iN4hMPcIiO6L0TwGoqdYLToFVif19xKIXiGTH1ICpGX+HwTTZ22kMkD0A2Fn
MC26OrIQRHOdzAXTAEOaoL8=
  "],
 CellLabel->
  "In[315]:=",ExpressionUUID->"714a2b35-4b48-4a6c-8ce9-0a34c7feaf9f"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0, 0, 1], AbsoluteThickness[2], Opacity[1.], 
         LineBox[CompressedData["
1:eJwVjH081HccwM/dxe+qeXG4VqbzMGeTUtfjueP7cUOimS7lIuHu95OQp2yL
NG0ZS1vj6DoS6QGlREKhulXmSGZj0aGkRCpPcc55uNkf79f79f7nbSGKEhBk
Eon09QL/m3J/ccurjTFOV9uZ7N60Gifrt/e4KzO/QWkO4o/zQhnSlNnjzySB
yKe7bk2TsBj1G4eqqyRR6KMJf7BMeBsp3ZIfXJYkoc8yxbeKhQr0b6DE5pzk
d/TwxpxvlbATCSKWK2WSfDShz7eg7hlEGeN7K6SSGyjBWjHt5qdG3HqPxfxD
cmSk2dYQEEKD6ASv4IpoBYqoubCF3U+Hg7eJU2SrVjR1reORSvsptA9uoxWJ
2tE7H596nRImpNmrSFV7OpG7yqlNf9oSYlYpTssvdyOlrFZsf4AFGnF4aU9k
L3phWoZFtH8Joru7vdND+tA5Bts80mA1iMfa5fJfXqPITVoTwnst/Lq2Oqow
5Q1KvDHmptZhA1levTk5YRDtl/RImRXrwdDWs+WFbAjBcUtXTuZGcM/nXxyV
vEei8BUTdwM2w7KRZrek6mHUidgbjvlzIKehRodyYBTd1KT8YLePCzwzZ605
PoboYl4Ra7sjrOo1eH00bhx50NNqr8UhuF5MD62M/Yj0Hh30ffwIIPF5QNuq
lAmkGBKSFSPOEMPb4pmXNYn8uC95JeZfgSbfRfQuXYUufTvWyHJ3gdbonKDv
L0yhwW67gounXYGz1XK+p0CNFq+bKgtWukGjK6cYcqeR/C9P4S6WO1wuz+b0
lWiQ8ztu+EDeNjCxsgvbd2UGkYzKc2f1PeEfHeyn5XWzKPSV6uSJ8u1QiR0q
bG2cQ38YJvn8HewFdiYGYaL6eWRitqjgPtUbRk6pjNc/1SIv9VZthMobrFJT
7aPCSPDYYUiqerUD+vy6lPwBEugNbxGUdArAvb9tujJSByZzbm1YPboTDscS
oYwPOpDlozS5Sd4FXlVnPRjfkYG/rmmyl7sbhmfDEikqMjToRplGRPlCQceP
tyIPUUA8f9glpEQImlDHoPgZCmjfsEKP0v3AbC7DPyaBCg1HqwaGo/3hzdaT
TRh1EcyPjuP6c3vhIasZrTy5CAoEpdZ9GfsgDCukWtB0IYu9piNmaRBUn//c
8WGGLmS3rljCGAiCFi6vXmCoB3Hn85zu3A4GddjZnUGn9MCmP89EmiYChXf+
rk8YGCwjP0lnxIpBxOEVFWVh8PyYskm2HYcDH55MdksxONPbsjHCG4fogkAX
ejYGxXfb7iAfHJJox18mnsOA65C4ZMAfh9xnjaaCQgxcbfhNm8JxeBrvmz5b
jcGGapcA5QkcPGpi43d0YXB1idzIvgGHHZFURUrPwj/5QTf1MQ5CSymj7gUG
lflf3FS24LA/7U4F6zUGU2dSj6U8xSHZjzQ88x4DmUHI+ef9ONzT/CYqnMeA
Y+6YmU4loL6UWd5FosGZWNl4CEZAs6hca0ChwRHLCV/HpQR0NbXnHtGjgdTa
aP2QEQHqHNMObwMaWHXUMV2sCNB6XbdOodMgw2vw4gobAnQpKK7WmAbvR3pt
x2wJMA4XGbKW00D8IR/lsQkwZU4E+pvS4BKe3Ry3iQDLtp9L080Wmvenn6cD
Abapy+bqmTSoJcnfWjgRsI57xXPGYqG55vFqZwL+A/KEL+s=
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
         Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVjnk41HkcgMdRfr8cIbR47ISadsVqSTWu7ycJURpsGcM4xu/nGHLOoxxt
l4gippqKJGdaUWOScj+Vh5CnY6gcJRRdrtXEuLb9433e/97n1edEupOyFAqF
8ZP/Lde0qmvYItp2KlmVVxZxx1Z3+N6WxaW9yKzqemWs/iUkvWNKvOH7oX3z
eZZ1zDIklKButcpgVPQ8UOG4XRX6rihpCPwjCg2LuqSHZ+6js9ptypV1sYii
mhbyPKIRlf7mk0+pPIQEAvfHiXYPUa9D8sMS/lH0w3hDZiGzDXX78Tfm8c+h
zE9GOiLma+Qert17mZ+PGhuVNq/wGkPZ0z4iAf82Coyov+nAmkVWLc6r7GKb
EZZBXmQH4RCV4BogimpDZ+24imYf1OHgfTJT1vAZwprFqZLlX0A8thu/wRGj
IH5TnEw5FdJNJZR7Xq9RjMGxIpU5A4je1HaxuaQfVbPeG5uG0kAaGFY5EDGI
4i3/bg8T/w6chgOMrKAhlJPu1HtQ1QQCp8TNzadHUIKnjhLJ2AxnN9dElqZ8
RNrsWTQrYwayzTXbkhPG0HpqP58qMgc1I5eud5c/I17FG3v6eQtwyrcrmuR/
RV65Iz8a2Ntg7USnw9GacZR9/pbNMW865LTWysiFTiLW6po4Y18rsNbbsbyO
mELZPFEhbY8NbBpUHTnCm0arF6l1t3gIKsrUQ6pj/kXdJ4O9Oh4DJL1lv9yU
MoOSiuuXWid2QLT1dpdrF76j0yIPq/J1O0Gab8/5kiVBxVti2mlO9vAsKsf/
UOEPxCzn5hVd3AV0R4OlgYJZZKnCuR3Q6wBPdtHL4OocKtnwlrmf5gQlwiv0
oXIpUl7DDBm9ths0DY25vjfnkVhzPndBxQVeyGAntOsXUPFQX0aacA9UY7Gl
z54souJihsfzAFcw1lTlclqWUIJOXkGTPAMmMiUa5j3LCHcQLIVLGGCYmmoa
yaWA5XLAJcmwGwyx+nrtRing6JToVv7aHZw+vJyrjpABgr7FwmTSAw7HkCFa
32TAh71Xs0p2P7jey3XWipMFoZLvzKDVARhf4CbJSWRBaqKhGx7pCQWvjt+N
iJWDnrUmO4PKmSANsfGPn5eDwIxPwUfUWaC3mO0dnSAPY4qnPo5HecNHxzPt
mPwKsH5YS6gs+sAjWif69cwKCAo9vn4o2xe4WKm8Pr4S2F5TPdFK/lBzfb3N
o+yVkCY0V9Qa9YcuK+sWdzUFaJvWtn1wPwBmubke/pkKMKHnqilI50AbI3+/
shYGzeFlWVoxgcChW9+4cQEDvDuu4/IeAkK/Pf3eL8Bg25cmi3AGAVEFfvbq
VzDQMW59gP4i4Ch+8n1SHgb77kQqjnoTcPXNE133UgwmZejtW8MI6In3zFqo
wSDcyJrdm0aAc21MvFvfz/7T2jWmrQS4Rci3pQxgUKhb3y/fQQDTQKBV/w6D
QUy/qreLgOD0ByLaCAZ5xieOpfQQkMyijM9/xeAfR9/rbz8Q0CjN4JQuYRBZ
QT+fJU9CSyVV2EfBoeNp9nQQRkInR7isKofD3cQJTxslEvraxVcTFXCgeSub
f15DwmyO7iuGKg71g9VUe0MSll0rNqSo46C1brRIZyMJK+UQr04Dh+2sAaMp
IxI0wjhqNG0cXjTcQtfMSNClzvh56+Lgf0DQydtKgsHLU5VZejiYza32drEk
wSh17WILFQfNZefP+rYk/Gl102Ve/+ef2c7Y2R0k/AcpNz1g
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1]], 
            Line[CompressedData["
1:eJwVjH081HccwM/dxe+qeXG4VqbzMGeTUtfjueP7cUOimS7lIuHu95OQp2yL
NG0ZS1vj6DoS6QGlREKhulXmSGZj0aGkRCpPcc55uNkf79f79f7nbSGKEhBk
Eon09QL/m3J/ccurjTFOV9uZ7N60Gifrt/e4KzO/QWkO4o/zQhnSlNnjzySB
yKe7bk2TsBj1G4eqqyRR6KMJf7BMeBsp3ZIfXJYkoc8yxbeKhQr0b6DE5pzk
d/TwxpxvlbATCSKWK2WSfDShz7eg7hlEGeN7K6SSGyjBWjHt5qdG3HqPxfxD
cmSk2dYQEEKD6ASv4IpoBYqoubCF3U+Hg7eJU2SrVjR1reORSvsptA9uoxWJ
2tE7H596nRImpNmrSFV7OpG7yqlNf9oSYlYpTssvdyOlrFZsf4AFGnF4aU9k
L3phWoZFtH8Joru7vdND+tA5Bts80mA1iMfa5fJfXqPITVoTwnst/Lq2Oqow
5Q1KvDHmptZhA1levTk5YRDtl/RImRXrwdDWs+WFbAjBcUtXTuZGcM/nXxyV
vEei8BUTdwM2w7KRZrek6mHUidgbjvlzIKehRodyYBTd1KT8YLePCzwzZ605
PoboYl4Ra7sjrOo1eH00bhx50NNqr8UhuF5MD62M/Yj0Hh30ffwIIPF5QNuq
lAmkGBKSFSPOEMPb4pmXNYn8uC95JeZfgSbfRfQuXYUufTvWyHJ3gdbonKDv
L0yhwW67gounXYGz1XK+p0CNFq+bKgtWukGjK6cYcqeR/C9P4S6WO1wuz+b0
lWiQ8ztu+EDeNjCxsgvbd2UGkYzKc2f1PeEfHeyn5XWzKPSV6uSJ8u1QiR0q
bG2cQ38YJvn8HewFdiYGYaL6eWRitqjgPtUbRk6pjNc/1SIv9VZthMobrFJT
7aPCSPDYYUiqerUD+vy6lPwBEugNbxGUdArAvb9tujJSByZzbm1YPboTDscS
oYwPOpDlozS5Sd4FXlVnPRjfkYG/rmmyl7sbhmfDEikqMjToRplGRPlCQceP
tyIPUUA8f9glpEQImlDHoPgZCmjfsEKP0v3AbC7DPyaBCg1HqwaGo/3hzdaT
TRh1EcyPjuP6c3vhIasZrTy5CAoEpdZ9GfsgDCukWtB0IYu9piNmaRBUn//c
8WGGLmS3rljCGAiCFi6vXmCoB3Hn85zu3A4GddjZnUGn9MCmP89EmiYChXf+
rk8YGCwjP0lnxIpBxOEVFWVh8PyYskm2HYcDH55MdksxONPbsjHCG4fogkAX
ejYGxXfb7iAfHJJox18mnsOA65C4ZMAfh9xnjaaCQgxcbfhNm8JxeBrvmz5b
jcGGapcA5QkcPGpi43d0YXB1idzIvgGHHZFURUrPwj/5QTf1MQ5CSymj7gUG
lflf3FS24LA/7U4F6zUGU2dSj6U8xSHZjzQ88x4DmUHI+ef9ONzT/CYqnMeA
Y+6YmU4loL6UWd5FosGZWNl4CEZAs6hca0ChwRHLCV/HpQR0NbXnHtGjgdTa
aP2QEQHqHNMObwMaWHXUMV2sCNB6XbdOodMgw2vw4gobAnQpKK7WmAbvR3pt
x2wJMA4XGbKW00D8IR/lsQkwZU4E+pvS4BKe3Ry3iQDLtp9L080Wmvenn6cD
Abapy+bqmTSoJcnfWjgRsI57xXPGYqG55vFqZwL+A/KEL+s=
             "]]}, "Charting`Private`Tag#1"], 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Dashing[{Small, Small}]], 
            Line[CompressedData["
1:eJwVjnk41HkcgMdRfr8cIbR47ISadsVqSTWu7ycJURpsGcM4xu/nGHLOoxxt
l4gippqKJGdaUWOScj+Vh5CnY6gcJRRdrtXEuLb9433e/97n1edEupOyFAqF
8ZP/Lde0qmvYItp2KlmVVxZxx1Z3+N6WxaW9yKzqemWs/iUkvWNKvOH7oX3z
eZZ1zDIklKButcpgVPQ8UOG4XRX6rihpCPwjCg2LuqSHZ+6js9ptypV1sYii
mhbyPKIRlf7mk0+pPIQEAvfHiXYPUa9D8sMS/lH0w3hDZiGzDXX78Tfm8c+h
zE9GOiLma+Qert17mZ+PGhuVNq/wGkPZ0z4iAf82Coyov+nAmkVWLc6r7GKb
EZZBXmQH4RCV4BogimpDZ+24imYf1OHgfTJT1vAZwprFqZLlX0A8thu/wRGj
IH5TnEw5FdJNJZR7Xq9RjMGxIpU5A4je1HaxuaQfVbPeG5uG0kAaGFY5EDGI
4i3/bg8T/w6chgOMrKAhlJPu1HtQ1QQCp8TNzadHUIKnjhLJ2AxnN9dElqZ8
RNrsWTQrYwayzTXbkhPG0HpqP58qMgc1I5eud5c/I17FG3v6eQtwyrcrmuR/
RV65Iz8a2Ntg7USnw9GacZR9/pbNMW865LTWysiFTiLW6po4Y18rsNbbsbyO
mELZPFEhbY8NbBpUHTnCm0arF6l1t3gIKsrUQ6pj/kXdJ4O9Oh4DJL1lv9yU
MoOSiuuXWid2QLT1dpdrF76j0yIPq/J1O0Gab8/5kiVBxVti2mlO9vAsKsf/
UOEPxCzn5hVd3AV0R4OlgYJZZKnCuR3Q6wBPdtHL4OocKtnwlrmf5gQlwiv0
oXIpUl7DDBm9ths0DY25vjfnkVhzPndBxQVeyGAntOsXUPFQX0aacA9UY7Gl
z54souJihsfzAFcw1lTlclqWUIJOXkGTPAMmMiUa5j3LCHcQLIVLGGCYmmoa
yaWA5XLAJcmwGwyx+nrtRing6JToVv7aHZw+vJyrjpABgr7FwmTSAw7HkCFa
32TAh71Xs0p2P7jey3XWipMFoZLvzKDVARhf4CbJSWRBaqKhGx7pCQWvjt+N
iJWDnrUmO4PKmSANsfGPn5eDwIxPwUfUWaC3mO0dnSAPY4qnPo5HecNHxzPt
mPwKsH5YS6gs+sAjWif69cwKCAo9vn4o2xe4WKm8Pr4S2F5TPdFK/lBzfb3N
o+yVkCY0V9Qa9YcuK+sWdzUFaJvWtn1wPwBmubke/pkKMKHnqilI50AbI3+/
shYGzeFlWVoxgcChW9+4cQEDvDuu4/IeAkK/Pf3eL8Bg25cmi3AGAVEFfvbq
VzDQMW59gP4i4Ch+8n1SHgb77kQqjnoTcPXNE133UgwmZejtW8MI6In3zFqo
wSDcyJrdm0aAc21MvFvfz/7T2jWmrQS4Rci3pQxgUKhb3y/fQQDTQKBV/w6D
QUy/qreLgOD0ByLaCAZ5xieOpfQQkMyijM9/xeAfR9/rbz8Q0CjN4JQuYRBZ
QT+fJU9CSyVV2EfBoeNp9nQQRkInR7isKofD3cQJTxslEvraxVcTFXCgeSub
f15DwmyO7iuGKg71g9VUe0MSll0rNqSo46C1brRIZyMJK+UQr04Dh+2sAaMp
IxI0wjhqNG0cXjTcQtfMSNClzvh56+Lgf0DQydtKgsHLU5VZejiYza32drEk
wSh17WILFQfNZefP+rYk/Gl102Ve/+ef2c7Y2R0k/AcpNz1g
             "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, Pi}, {0., 170.06158119483538`}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Dashing[{Small, Small}]], 
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0, Pi}, {0., 170.06158119483538`}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2], 
            Dashing[{Small, Small}]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJwVjH081HccwM/dxe+qeXG4VqbzMGeTUtfjueP7cUOimS7lIuHu95OQp2yL
NG0ZS1vj6DoS6QGlREKhulXmSGZj0aGkRCpPcc55uNkf79f79f7nbSGKEhBk
Eon09QL/m3J/ccurjTFOV9uZ7N60Gifrt/e4KzO/QWkO4o/zQhnSlNnjzySB
yKe7bk2TsBj1G4eqqyRR6KMJf7BMeBsp3ZIfXJYkoc8yxbeKhQr0b6DE5pzk
d/TwxpxvlbATCSKWK2WSfDShz7eg7hlEGeN7K6SSGyjBWjHt5qdG3HqPxfxD
cmSk2dYQEEKD6ASv4IpoBYqoubCF3U+Hg7eJU2SrVjR1reORSvsptA9uoxWJ
2tE7H596nRImpNmrSFV7OpG7yqlNf9oSYlYpTssvdyOlrFZsf4AFGnF4aU9k
L3phWoZFtH8Joru7vdND+tA5Bts80mA1iMfa5fJfXqPITVoTwnst/Lq2Oqow
5Q1KvDHmptZhA1levTk5YRDtl/RImRXrwdDWs+WFbAjBcUtXTuZGcM/nXxyV
vEei8BUTdwM2w7KRZrek6mHUidgbjvlzIKehRodyYBTd1KT8YLePCzwzZ605
PoboYl4Ra7sjrOo1eH00bhx50NNqr8UhuF5MD62M/Yj0Hh30ffwIIPF5QNuq
lAmkGBKSFSPOEMPb4pmXNYn8uC95JeZfgSbfRfQuXYUufTvWyHJ3gdbonKDv
L0yhwW67gounXYGz1XK+p0CNFq+bKgtWukGjK6cYcqeR/C9P4S6WO1wuz+b0
lWiQ8ztu+EDeNjCxsgvbd2UGkYzKc2f1PeEfHeyn5XWzKPSV6uSJ8u1QiR0q
bG2cQ38YJvn8HewFdiYGYaL6eWRitqjgPtUbRk6pjNc/1SIv9VZthMobrFJT
7aPCSPDYYUiqerUD+vy6lPwBEugNbxGUdArAvb9tujJSByZzbm1YPboTDscS
oYwPOpDlozS5Sd4FXlVnPRjfkYG/rmmyl7sbhmfDEikqMjToRplGRPlCQceP
tyIPUUA8f9glpEQImlDHoPgZCmjfsEKP0v3AbC7DPyaBCg1HqwaGo/3hzdaT
TRh1EcyPjuP6c3vhIasZrTy5CAoEpdZ9GfsgDCukWtB0IYu9piNmaRBUn//c
8WGGLmS3rljCGAiCFi6vXmCoB3Hn85zu3A4GddjZnUGn9MCmP89EmiYChXf+
rk8YGCwjP0lnxIpBxOEVFWVh8PyYskm2HYcDH55MdksxONPbsjHCG4fogkAX
ejYGxXfb7iAfHJJox18mnsOA65C4ZMAfh9xnjaaCQgxcbfhNm8JxeBrvmz5b
jcGGapcA5QkcPGpi43d0YXB1idzIvgGHHZFURUrPwj/5QTf1MQ5CSymj7gUG
lflf3FS24LA/7U4F6zUGU2dSj6U8xSHZjzQ88x4DmUHI+ef9ONzT/CYqnMeA
Y+6YmU4loL6UWd5FosGZWNl4CEZAs6hca0ChwRHLCV/HpQR0NbXnHtGjgdTa
aP2QEQHqHNMObwMaWHXUMV2sCNB6XbdOodMgw2vw4gobAnQpKK7WmAbvR3pt
x2wJMA4XGbKW00D8IR/lsQkwZU4E+pvS4BKe3Ry3iQDLtp9L080Wmvenn6cD
Abapy+bqmTSoJcnfWjgRsI57xXPGYqG55vFqZwL+A/KEL+s=
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Dashing[{Small, Small}]], 
         Line[CompressedData["
1:eJwVjnk41HkcgMdRfr8cIbR47ISadsVqSTWu7ycJURpsGcM4xu/nGHLOoxxt
l4gippqKJGdaUWOScj+Vh5CnY6gcJRRdrtXEuLb9433e/97n1edEupOyFAqF
8ZP/Lde0qmvYItp2KlmVVxZxx1Z3+N6WxaW9yKzqemWs/iUkvWNKvOH7oX3z
eZZ1zDIklKButcpgVPQ8UOG4XRX6rihpCPwjCg2LuqSHZ+6js9ptypV1sYii
mhbyPKIRlf7mk0+pPIQEAvfHiXYPUa9D8sMS/lH0w3hDZiGzDXX78Tfm8c+h
zE9GOiLma+Qert17mZ+PGhuVNq/wGkPZ0z4iAf82Coyov+nAmkVWLc6r7GKb
EZZBXmQH4RCV4BogimpDZ+24imYf1OHgfTJT1vAZwprFqZLlX0A8thu/wRGj
IH5TnEw5FdJNJZR7Xq9RjMGxIpU5A4je1HaxuaQfVbPeG5uG0kAaGFY5EDGI
4i3/bg8T/w6chgOMrKAhlJPu1HtQ1QQCp8TNzadHUIKnjhLJ2AxnN9dElqZ8
RNrsWTQrYwayzTXbkhPG0HpqP58qMgc1I5eud5c/I17FG3v6eQtwyrcrmuR/
RV65Iz8a2Ntg7USnw9GacZR9/pbNMW865LTWysiFTiLW6po4Y18rsNbbsbyO
mELZPFEhbY8NbBpUHTnCm0arF6l1t3gIKsrUQ6pj/kXdJ4O9Oh4DJL1lv9yU
MoOSiuuXWid2QLT1dpdrF76j0yIPq/J1O0Gab8/5kiVBxVti2mlO9vAsKsf/
UOEPxCzn5hVd3AV0R4OlgYJZZKnCuR3Q6wBPdtHL4OocKtnwlrmf5gQlwiv0
oXIpUl7DDBm9ths0DY25vjfnkVhzPndBxQVeyGAntOsXUPFQX0aacA9UY7Gl
z54souJihsfzAFcw1lTlclqWUIJOXkGTPAMmMiUa5j3LCHcQLIVLGGCYmmoa
yaWA5XLAJcmwGwyx+nrtRing6JToVv7aHZw+vJyrjpABgr7FwmTSAw7HkCFa
32TAh71Xs0p2P7jey3XWipMFoZLvzKDVARhf4CbJSWRBaqKhGx7pCQWvjt+N
iJWDnrUmO4PKmSANsfGPn5eDwIxPwUfUWaC3mO0dnSAPY4qnPo5HecNHxzPt
mPwKsH5YS6gs+sAjWif69cwKCAo9vn4o2xe4WKm8Pr4S2F5TPdFK/lBzfb3N
o+yVkCY0V9Qa9YcuK+sWdzUFaJvWtn1wPwBmubke/pkKMKHnqilI50AbI3+/
shYGzeFlWVoxgcChW9+4cQEDvDuu4/IeAkK/Pf3eL8Bg25cmi3AGAVEFfvbq
VzDQMW59gP4i4Ch+8n1SHgb77kQqjnoTcPXNE133UgwmZejtW8MI6In3zFqo
wSDcyJrdm0aAc21MvFvfz/7T2jWmrQS4Rci3pQxgUKhb3y/fQQDTQKBV/w6D
QUy/qreLgOD0ByLaCAZ5xieOpfQQkMyijM9/xeAfR9/rbz8Q0CjN4JQuYRBZ
QT+fJU9CSyVV2EfBoeNp9nQQRkInR7isKofD3cQJTxslEvraxVcTFXCgeSub
f15DwmyO7iuGKg71g9VUe0MSll0rNqSo46C1brRIZyMJK+UQr04Dh+2sAaMp
IxI0wjhqNG0cXjTcQtfMSNClzvh56+Lgf0DQydtKgsHLU5VZejiYza32drEk
wSh17WILFQfNZefP+rYk/Gl102Ve/+ef2c7Y2R0k/AcpNz1g
          "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{0, Pi}, {0., 170.06158119483538`}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Dashing[{Small, Small}]], 
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0., 170.06158119483538`}}, {{0, 3.141592653589793}, {0., 
     170.06158119483538`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.899191175559408*^9, 3.8991911934962*^9}, {
   3.899191245577835*^9, 3.899191273747528*^9}, {3.899194258282827*^9, 
   3.899194313613503*^9}, {3.899194360494864*^9, 3.899194381890396*^9}, {
   3.89919452527073*^9, 3.899194582747326*^9}, {3.899194616621078*^9, 
   3.899194654832519*^9}, 3.8992020477748327`*^9, 3.899204803350974*^9, 
   3.8992679499167957`*^9, 3.899353186268264*^9, {3.899366220409192*^9, 
   3.899366243783492*^9}, 3.8993663142381687`*^9, 3.899366375428575*^9, 
   3.899366962707821*^9, {3.899367057790832*^9, 3.899367065197452*^9}, 
   3.8993681039418697`*^9, 3.8993682598287373`*^9, 3.899368303370552*^9, 
   3.899368335075498*^9, 3.899369019654413*^9, 3.899386156020056*^9, 
   3.899432970072268*^9, 3.899439911533739*^9},
 CellLabel->
  "Out[319]=",ExpressionUUID->"ca106dfe-f66e-4276-897f-f02af4d795fb"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0, 0, 1], AbsoluteThickness[2], Opacity[1.], 
         Dashing[{Small, Small}], LineBox[CompressedData["
1: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
DyH31bQ=
          "]], LineBox[CompressedData["
1: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
paBAOd7/RTODsK/4rF9VSy349GgK2a0RkKh8AeORHAwSeXxBx90WauHnNxmk
PTOLxfI2dezCghTC2rpm+0Q39ve0TiXqHxt9wp9QvzNfk0bC+NQblgzg/VcM
pJDWbT2jlcO4H75zqYTJ3nKd8hdqN66INLIjadTm7g9q84Wm6ST4on++Bctn
+n54LkwjZIDjyTgndceJ0TTye0EWbzg/dU/Nw3SiKr9m3xJhjD8qzCAB5o3R
laup7W4fTSdXonbeUNpIXXfEJIP8PHf/V+dWautLcplEud9CwQKoFx1ZkEF8
mUfdxjWp96WPZpBLkv5nwg5QC67tyyTfDDiG+E2oH/e+yiIKQZmildbUSgfO
ZZKTlavNlI5RX+spzSJN9xsyOt1xHo+CbDL1Xa3H3J+6vck/i8iL3+ccD0eb
h2YTDx2L3WGncJ59MTmkwetTCH86epV3NvlS4HelIh/n8XXKIbL/zZ9WrKA2
9AnLJa4TGTKdZ6l5ftnkkHPLVzuZN1MPJ4fnkjH1hvIxgvMpxeeRjS5qr0P/
o04wC8glLhndy/l7qB0X1uSRWmJuWNFPrcHSmk8+fRhJUnxDvaSlNY9I8vrd
ufOR2qR6IJ8cU5nPZj5JzbjFWkiqj2TA2E/qqQs/8slwgoRfKOvY/10esb6Q
rGuub+RbRF19RaOAOLzeMVa+hDq9yKqQVHJ0r1dcSS3Nnl9E3m82P3JnDfVw
S20hWW02UmC2iVrrZn8RORLp2/9ZgTpyPVcRKT3Lzh+6g3q9k1gxEWOSiC3X
o44tMygm1hvq2xQOUzfkTxWTYv0dvztsqDkrw4vJ64AuRTMnavaI9SVkVYWZ
x2cPat3EO8XEovtjbUgAta/p0RKS/83nA28ktUri/FLyXJRdvDyBejV/XQkR
0k43V8igHos0LCWHPcWzOgqoxefPlJDs/LoHppXUV/4WlpL+W7Do8zlq8lGz
lCwbv6cZcpHao2qqlGSnXLf5eJ3acDqslAhuaQg06KCOzhcvI9l95VktPXh+
Rdtc3C+rYd1T3O9fk7n4iviulDfUU7//lpHlJHD410dqB8guI0Kstqt6flKH
GrwuI7kVhsoqrOP/d2ZGaDlZobXHsHwh9fqLYuUkf0TZlWsJdffOx+VEOFE6
3leYWm+5/1xcRqRicDW1SqV4BVn5kLd130ZqjtquclLoxfa8eSu1/6njFWTV
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
oMnFPD9vvK+Nz9zn1enygJO+mG/6KRVW/k4xc/fHeiuXpYHW4P7LWYF4Xuxq
Knj9t2AZCUYfsUiFotpbXu9CqXt6/6ZAZ0rYQ84InPdmTQpMe2+X3RyF9WMN
UkDU/EeicQzuZ9e5FNDZeeFTUBw1j6RVCnivdd9bfopaVIA9BUoWbqzqTMR9
tFxgwL2JYbYvyXj/u/Zzn3e95bbLUnHeZQIMkLhq3bo9HesvyUme+/wTXmWX
ie+XMWcy+Ef1B8RnY/ypQxJUOKU/rctFj/clQs8BPcUn+bif/pokCC/l4t9+
HePPR6PgbEyn25EbOF/+qSjod4nujruJ8Z5Nc3+Z9dWl627h+xD9OBI2Kf6J
6/sP6w2mRMJh4SsfZu/g+W6IhEhm790S9/C87EQE1A1tLtvbjeenKyLg+d3P
TG49OP9T6whgr6+xzHyI+2wkYSCXaX/t2mN8HtGuYWARICb0tg/7vVOc+/1s
/dJnwVPMt5wXBlum742VvsF+7cNBYPUsdt+dt+i3mUEQf13j9Ph79Kh0EFwo
Z+JYOoz1Fyj6w0DcNXvVEZynfpE/JK6qfdE7iZZx84ZLrI4qs1NoLgdveDcs
kS3+Dd9/vXhP4O5+Pa3149/nnZ8nqDTmGbj+wvx+X0+wzzauz/iNcSEbT2AE
8XNf+4vneW66wVXb+y6DzPNovk+3GwztOdXJwUbNZLPMBWx1rEXXsKP3Wx2H
l7pbvXdyoE2ZjoGJPuc9C070ORUneHzotZj/IurQaw/tQe9wk08mFzpq91G4
ax7X1cCDrhc5Am1H5P0+LUGbl1sDHOW4P3/Zv3pih+Gy08vVq5ejl8uYw5YT
Df5qK9BLqwyhzj2mx3wlelmdMUidNF/rJ4LuqtGDSt/NgRli6NrsnSAeyP6w
XgLtZL8XCkKer+teg77WvRUEI+qCRtahGR6CJD066hG7JNqtfg1wx5tukJBG
r2+VJfGJMiE7NqEr43YT9hS2XjPZf/XiDpKw9KeSvnJoJUNtMpt1LjR9C3pc
34D45kX01SmgLZoPk6lCE+kuJXRKsxVxLd0Y/lEFPStuRkYqWPrnbcd9eUZa
E4eaJxvFd6Ctdh0hg7W1EbAT85MkHIhFXdhT013o9i5H0t9oJOOzG92z0YEY
XpSKStuDdiSOpOcK0/Pze7HepJMz0SG9svd0MC4yeJzcvnE6eng/2kXZjajf
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
i///7+R/QZt/9Q==
          "]], 
         LineBox[{{0.3662589145367714, 1.3659555027091524`*^-6}, {
          0.3669230293326119, 1.3624800576650387`*^-6}, {0.36789106452194426`,
           1.3582561813052507`*^-6}, {0.3688590997112766, 
          1.3511798329091107`*^-6}, {0.369827134900609, 
          1.3448956046602234`*^-6}, {0.37079517008994134`, 
          1.3394438145297727`*^-6}, {0.37176320527927365`, 
          1.3311160085294205`*^-6}, {0.372731240468606, 
          1.3276386976457388`*^-6}, {0.37323674362958065`, 
          1.3659555027091524`*^-6}}], 
         LineBox[{{0.3778501172669675, 1.3659555027091524`*^-6}, {
          0.3785394516046001, 1.3614915328474808`*^-6}, {0.3795074867939325, 
          1.3523020960803933`*^-6}, {0.37969463700336537`, 
          1.3659555027091524`*^-6}}]},
        Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1], 
             Dashing[{Small, Small}]], 
            Line[CompressedData["
1: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
DyH31bQ=
             "]], 
            Line[CompressedData["
1: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
paBAOd7/RTODsK/4rF9VSy349GgK2a0RkKh8AeORHAwSeXxBx90WauHnNxmk
PTOLxfI2dezCghTC2rpm+0Q39ve0TiXqHxt9wp9QvzNfk0bC+NQblgzg/VcM
pJDWbT2jlcO4H75zqYTJ3nKd8hdqN66INLIjadTm7g9q84Wm6ST4on++Bctn
+n54LkwjZIDjyTgndceJ0TTye0EWbzg/dU/Nw3SiKr9m3xJhjD8qzCAB5o3R
laup7W4fTSdXonbeUNpIXXfEJIP8PHf/V+dWautLcplEud9CwQKoFx1ZkEF8
mUfdxjWp96WPZpBLkv5nwg5QC67tyyTfDDiG+E2oH/e+yiIKQZmildbUSgfO
ZZKTlavNlI5RX+spzSJN9xsyOt1xHo+CbDL1Xa3H3J+6vck/i8iL3+ccD0eb
h2YTDx2L3WGncJ59MTmkwetTCH86epV3NvlS4HelIh/n8XXKIbL/zZ9WrKA2
9AnLJa4TGTKdZ6l5ftnkkHPLVzuZN1MPJ4fnkjH1hvIxgvMpxeeRjS5qr0P/
o04wC8glLhndy/l7qB0X1uSRWmJuWNFPrcHSmk8+fRhJUnxDvaSlNY9I8vrd
ufOR2qR6IJ8cU5nPZj5JzbjFWkiqj2TA2E/qqQs/8slwgoRfKOvY/10esb6Q
rGuub+RbRF19RaOAOLzeMVa+hDq9yKqQVHJ0r1dcSS3Nnl9E3m82P3JnDfVw
S20hWW02UmC2iVrrZn8RORLp2/9ZgTpyPVcRKT3Lzh+6g3q9k1gxEWOSiC3X
o44tMygm1hvq2xQOUzfkTxWTYv0dvztsqDkrw4vJ64AuRTMnavaI9SVkVYWZ
x2cPat3EO8XEovtjbUgAta/p0RKS/83nA28ktUri/FLyXJRdvDyBejV/XQkR
0k43V8igHos0LCWHPcWzOgqoxefPlJDs/LoHppXUV/4WlpL+W7Do8zlq8lGz
lCwbv6cZcpHao2qqlGSnXLf5eJ3acDqslAhuaQg06KCOzhcvI9l95VktPXh+
Rdtc3C+rYd1T3O9fk7n4iviulDfUU7//lpHlJHD410dqB8guI0Kstqt6flKH
GrwuI7kVhsoqrOP/d2ZGaDlZobXHsHwh9fqLYuUkf0TZlWsJdffOx+VEOFE6
3leYWm+5/1xcRqRicDW1SqV4BVn5kLd130ZqjtquclLoxfa8eSu1/6njFWTV
sm/TokBdXSlcQQovf+Q5pUldaNJVQUTMX0hN61Kzl4VWENGSGzZ3rKizxwYq
iLhUQpd7GLWo5flKUtoVPPw8jjq3/kgVkXBzZ9VMpX6xaWUVWX3BSFmojPr7
u9QqsnaHWEVbOzXDL7GaVL7hb5Xuoj790KiarI1kf57ZSx25i7eGVK79Mc30
CvcT/LqarLvzicd5iPqdVEENqXZ+JdU7Rm07eqSGrOd6oLnjGzWIyZ8m1XU3
bWr+Uodu/VND0jeYkQVsE/TzZcG9GvLY//Fd4KAONeQuhSX39j/1XESducy4
FAxX/jdUzUMtHHquBDJOqE29XEJtYvilBPquX2bmX06dzSxbCkt55bm1VlLH
B4WXgJFtrXCQGPW7O3dKILNxjWTDGurv/iyl0MdWpPhhA3X15v0lsNRIcLfw
Jmp2nqS581Up+gflqOsC75ZA1ndO62gF7GfCUwL9eyOPX1WhHoO9JSCY99t/
AtA5ISVgMuodu2YXnhcgxZC9fSLDdA+1h+hsMfQnHStL1sH+nHPftwUHBuva
D6C/uRaDyWZz8sOA+ueuqmLICe+9u8mE2lS2uxiePdJ9esSc2nxoYTEIrekY
yram9n29rRhMvXdOddlRk1HHYsj97woz6zFq67M7imBioM5v3IX6xcolxbDn
Z+WX527UbDd5iqCQv+BYhxfuu/9FEUxJp71p8qUuLmkvBG3NuMMlgdSx55OK
oMQq5EFiKPUEp2chfPc9udc/knr1TZUi0E11vuEQS93+ma0Qys/YKBskoEfu
FMKvduP6HQxq0Se1BaD/av8G6XRqpvIThVD9bVeJYPa/90exAFgshMM6q7Cf
sHE+OE8GMaUOUcu+25ADqit3/hW1+0Lvc0UiFaQGeN4FeU3+3626Uaag+0G0
zduXWq05whDcxmSLXQOpQ93u74PUabVgx1BqptIPO6BpVs/cJhLt6CgAfaw2
Kqax6OncreQ7p7ugQQKeH1Q7AEJ8YTM6DIxb9qmB6vKUxxrp6EvADZaiJQ3b
s9H9RiokdF09QyEffV5Am5RuunFCphjraQsdIu1bH+xbX44+N2FGhlTfSIpV
o9+I2BIOjS8cQrXUA9XEnkjqMH/gq8P7jt87TPbp895a2IT5XS3WxKWdtzLn
K+ZfHPclSXfFIlO/YX9duwBS93Cz7alf1Nb8EEwePt2pFvmXmiFtH0qmBg6u
CmL9St/v2sYwsnTYZvbkfOrQ0PwQojTu/uzEQuriVskwYjoTdukoN+Y32YST
wN8pmdb8aNZ7EaSQrdTr8DJqt63M4aR1YYO+/grq1jN6EWSQr01WRwTz/3RH
Ejahh1waEli/dkM0WSs2OKq6jlpvJjCSaK2f7NwqRS2a8CGKOMmw1GySwfmi
TGJIggJfzDp5ajWlvChytprP8YIH9cBsXjKJ7L2+k9WHeoJrXwoxZzm+4mAA
dbbuhhQiLyM0XRhCPfyQK4Vwmv/XPRpBrTQ+yyAO3IFbV2dgv9tmqWS76gZu
jxzst2Q8jSw51jd8vYCaQ/FtGhnNiGhbXIr5TwbSyM022XyzSurYoQ9pRNT7
PUvaReoOzYAM8q009cXAVWotwcwM0n1/R/OmVuz/rDyDVM6OJge2435U5LNI
0IbcY50d1IzOg1nE0GjPLsEu3O9puywiHTEl7PCA2ncqJIuw1pXMNPZivYjk
LPLshW4P8zNqJr7KLFK/YLbmwCvcN0Mvh8Qq1EQUDP6bzzeHWB8xsvg0hPMl
pOcQRQarovInjC+7lEO4Wup4YsapBZve5ZChjxYjj79S958RzCUtSxe2i3/H
ffOr55L0XZcK3GbxPnc8comzm70PYZqi78PynFyiXsB3cNE8ajexI/lEqPO6
pOkC6uyM7HzyZcaFrXoxdSxHez7pkBB6Nc1L3aq/oIAU6/13cddSjJfMfX/T
PS3m/HoVtV4iKSBrnnRrbJSgHuD4W0BmWQNXBayjLp7aU0jOWPQ9WCpLvb7p
ZSEJj484Y7eFmmNUsoiYXpSNalDCuGBYEdn87qUl03ZqNa97RYSD95SS7k5q
uyPcc9/Xtivx5e+mfrFhezFpdnr/6eNe6v4vvsWQlJV6S1GXmme5eTHYt+8o
itKnZuya+/xX/TLq+8iIekm5SDEsWZWrL2ZGPbWcqRg+ae+RdrWivmR+uQja
fKbmtRyhNllyrAhyykteczpSTzyXKAK3B7qXTVxwn5/7CkFEqsZlyouaqUex
EGaMjTTV/fD8wfcF0B3JKsoIou6IiC+Aivq6Hy/DcN8NKgUQ+MrikVQ0tbXc
YD5M7dleYB9PLfqhNB9c6oWPFiVRh150zQezyOc/+bKoq5dM5sHDz1fa9+Xh
Pm2r8kDbODcpugjr8zvlgYrkYfGfVdRaO57kQkOa0qh8LT4/s8xckPy9rPl4
Hd7/3P5cKHX4FlLVhO/P2t85INTTt/fNJerh+MocSFVu5l/RQi340TQHOMsy
XhrewPuvmZ8D4YtOViXdwvsXSuTCj5OG7h13qB2je3PA7bX8NpZufF+PO+XA
sBb/PNWHeH870RzoX/Ew+/wzfF8YVtmgF1Vv+/EVdY/p7yzoGGNIS7zF90Us
PQvUTNxmzD9gvSGJLLh040Br5id8f3NaMkFWSia+Zxzvy6mXCdXpXIacUzj/
Av0sEP3zeaXGd9yv0XAmZB3t+hA0i+fZfTKB60Ft/UWmaVp/158MiFZJCPjC
Rt2vkpoBf8qcd0stoL40uCADvBfrcNsvpq6WKUkHd1UlncJ0atGg/lhgOpEe
kpyN9cQNYiGpaKIxNJ+6+PxYDJxmqRE+Uo4OHIiGwY7lY+ua0EntkeD286T4
8ktYb7tGJPyRemjEeY1aL/ZqBKxIjr8+epNabTIuHE63Dn19+R81j+y7MFCa
VF9//y71gKhCGNyWKDJvvY/x5SGhYHjoF6P+EdZ3uh0Cg9HGt0qfYL1A9nBw
u9T4I+055p80DoM/H7k3Rb3G+T6UhkLCChdb77eYP9gWAkL7OzKPfsB+PBuD
oTp49V2TT9P49+dBINx680J+21c8L5zjB4b8yo7S36hbqxb4wqBGRv7KX9TW
C+y9wc37Sw/XX6wvOuUFf6r2z2NinaHvX+JaT0h4WqP8hZ1ajWulDwgtZD8x
yInxLKmTUK1qW/qIC23o4QkKJ0hfOx86v8Yd2ouEFjYvpRZ9wOcG+g+8d1QJ
YVxY1QUGWB55Zq/C+oo7HeHEFpnqOPEZ/HtfZQez9qde+K+lbvUYdIb4rA88
LpKYr/rjKAje2bXbYhPGpz4dgaqfRX66clh/t78VKEjPnt2hgPUsvxtDu4XJ
oKwKxpXEdUE/uWmpOKAFH5jDQCuPDr865sebGcKJSZcQNk2Mtx7bA7MSdxqn
96Jjj6yB+ENrhof2oy2vbiWCMWHC/QfRHUQFfhZp2H5ioAeWuRH4tj11cwbO
n+1ykoTpKrb55FBbM2ufJO0VspMtBRgf/+lFOH5vEGcrpR5IED5JBEy5B4Ub
8b6V1v7EpJ6D78hF3O/h7yEkn4NFvebqv/kXhpLXVr/cx6/jeZtFoUT84lTJ
1naMT+4IJbJLntno9mK/EbcI4un8KCX9KdbXS40gzW33bjx7Se12rCOC/Fx+
+4voIDWjlzuSbHe/LnZ0COu5fIgmoR2XDp4dwfxXMjGkXaQh7OsYtd7dozFk
vs+ZeuWv1Dyj52KIdnf5m5Bv/94HjliStKaQ9/YvzDc/GEseBGbtXMT0jc73
vjaWLHnMcNdnoy7uXRZHTKTiS7I5qEOPLE0geeERD14toma6ZZlAXj0NZF7D
S11393UCEd/svdlZgLpVRTeR2Me62tQvp2ZcPp1Iql87pnxbSS3aKJRERhVs
b2wXRxcWJBGP94ZinZJo1sZk0qyqe5BHhprjJy+D/EjbE2Ykj/WUDBkkVF3l
zeA26tjTgwxyM0eed4ManvfamELYv0jvdNWg7lcPTyGJRSIlv/ZRT2xanUpy
Z9lsllhSd3wLTCOvDP4wTG0x/vVFGhE786212IF6+NnudFJ9eER0oyvWe/En
nXyqe6vn6UnNM2iVQTZxvAy97ENtsqczg1xovj+wO5S62qk6k3xffIcnIRLn
G1mYRVTt29QexlI7ivpkkZBrV90EEzH/8acs0sZ/odgyhdr317Fswu58rqc8
A+eLeZ1N9rZVMX3KwX2L6uaQhOUlspsLMb5oSwH0uOVa+5Ti80vgLQRJBs8v
r0p83vqf8yHifHSGx2mcp3JhAbzonpVxO4f3uyteAApjHp3HG7DeyN88YCz+
aOfcTC1YtiIfRqSt/jpeoVbSlc8HjX29OQ4E851350OBs84Wuzbq78HCeTAT
f6Pb5jY+P33xPNA7rXjMqhPnkd6SB6fvnGW16MZ4wIE8YPsoUWj6kNpagjcX
LDlylUz6qHuqxXPh4jqeR4eeYb9m6Vzg2RN93OAV7nO3XC44OczOPziI9bfM
mc3c8ryk+Hd6v0P3M0B5j/iflyXUTBv142BLWWfsfxXUjMLpWNj014O/voba
ujMhFsQv3lwfWU+tl9IWAwvX2RtI3sDzi/ijgT1i8Sv+W3h+pioKmF5fcPzd
gfknZKNgKpM9uKeHujVGMxLGJs9xXHlMPdBZHwHDusZpZf3Uam1bI+Ale3W1
9wD2nxQOh7DbGw24RX7Qf58sC7wgULzv5XdxatHNmR7gHRzsOLiWeiCsxw2c
FO4HXdhEzXQ9zhnsUn04iuTQj9kcwXJMJC1WAb3suR2YaHes9FChViuLsQGD
SrdqM8B4OI856LIsl9+tjh56cQS0LG+0bNJEPz1lDepXjmkJaqMnV5iC6lK+
R8y61KEbBvRBweOKxaeDGP/Qpgmy3bbDjw+hteylQVJyoSc5jOax3kjWRDf+
rrJA/zkHcGe3crVaPt7/mrYH8f0veFNIMXXrAm8Psn5ve1NLOd5fu8ODPOlc
sG22Gr2y2IdE7ztwQ+Us1nug4EsUutP3+NXj/oLcfcn7A8+6Ll7AeZnu+5L0
ByKGM5exfr2uH9EwsH+2hWBcPiGYTD0+be3ZhvEvT4JJmdHEUP1tjHsHhRD9
/q3HJzqxf8r8UMJiGvB1031q64uWoaTheavf8Ud4/lZNKLGxYGeqfULN0z/3
+5nntU70yHPqui9FEaTVOmXRhgFqvU1/IojbYF/q0XfUE4EHIomInfDyymH0
tYZI0v3epujdKN5Xd3UUCT5atUbiC8bPxUWRTR9Hz9hMYzyUKZq8dJKTK/5B
LavjHE0SRn0uvfpNzcjYFEdUT7TASpaf9N+f1OU4MjrOcsuMnVrUQzGe5Llr
6eRyUreKVMWTn16PjJfxUzOKr5wiFwM+uvGuptbbyJ9EHH5v+nZgPeZ7FCWR
pSFeQUnS1BNrzJKJV/jfuIVbqXkM5z7vV7Pt5tFWpmZKKGCQR1HxmbHbqesk
/jCIXJxA2TxNakf/2hQyyGm2QUOb2tdgWSpJSSg+H66L9QNcUoka19DWG/rU
btKdqWQiWeraXyNqjruyaaSY110dzKiV+grTyIG05o5AK+z3iT2d/Fkyq3v1
CHXoza48OJe5s/fHUerhSyfzwFIwxkzJBfM1lubB4tx7b7zdqPuZXuTBtRV8
jhe80Ef98sClwHjsqy917JeVeSAsUuAlF4T1d1/NhbvFgz/dwqgFT+rO/R4q
Pz5/LA73y4jPgWdrGhOlk7Cf3NIciKv6zu+cir7dlA1KGyC3JhOfn5jZ3O+Z
0xGiw7m4/6GRbMiSvlO5tojapCg0GzTPcW20L8N9lS3OhhkZw8ayKnzee9Oy
5n4f5igPnqEuvrEqC5x+mUn2n8d6fpuzQHb3qhXdjbg/pv1ZMJM0sLD9It7P
RykTrvWXzl6+is/rrVYmPPp75nrKXervEYczgFmX7N75idp67440sBgZPFgs
+Yu+n9mFiSAgIe1kWUMdWnHdGxipp4xqzlJbm4v4ACfLJ/Wpemq1EFsfiHLX
ltnR/As/z/w9gelNzYr4K9TFNRc9IUBvAUcvwXh1givMXHecErmJ9blHXMFd
pmPA6T+sv0TZDUYL13VduIv5geAIR7liLjP1oB+3OMJg0FCFzmPqVtuvjmDx
eXdqZj/awN0a+s0rgt+8wPmWpFuDwT02Z+k3GG8dsobubXbGPu+xf7OQHuw9
c3NX20c0b6ketAtJyC4eQwek64EXn9DMVblZen7Ex52Mh/kNsitSD5gIeRCn
L/3dB7dhPLzUg7y3Vrqav4PaOkjTk1j3ZFV92IWeZPElz3d8S5PTQu+v8yVG
541Cg/ZRMzXt8SMPVjW7dOhhfe0/fmRfksBh/kPUom8K/cl/v712Wx7G80/S
A4j68cebayyo1eK3B5KWF/KrpmyoGU7poURpXxrnDgeMv2cLI41XJ2finKh7
Dp8II5uk9N8+PkGtJ/4ujEhw8l5z8qEuXvUunBT6uVVfCKCeaJ37/BT8eD+d
KRTzXbojSJqJTJhOJNZbZBFJuDqSjmfGYr+wF5EkTnHs8JsEvB+HaxRhq9qv
KZ2C8ezJKBKy9KycTwY1z8L0WPIzapFIWw51HVGMIyennRcuLsT+v7riyITd
3W/GpXj/NK94MrQrvufzadzPk+ZTxKbx4zWl8zhfvmECeSG+tyaiEZ9PO3Mi
MU6tzui+iOdVShLJQ2aO8OXXMP71QBIZO5tjqdeK8/B3JZEFplLbYtpxH1dF
k8lq9pZlpINatjw3mag16E5N3aO+9IeVQcwtB3qkHuB9A3XywIfT46xtL85X
L5AHqc2s8TlPqQVVB3PgnG2GQ89L6g6HyznQybVu1/xB6n7rUznw/solERjC
/UYdygFh/hf9Z8awHuv7bDh1U1wn5i+1bydrNlS6Nq0jrL/pfjM6sqBthSbb
9HzqWMOYLPjpeazFlod6/evfmeC4uk4GxKiZDN5kgEbU9iXT6tRuFnZpYL35
/oTUHmoGJ3saBLy07rLVoS6uO5sKDVsjo3sMqEPbf6RA9xuBI/NNMH9efgp8
TKzaAebYv0EpBdhUlIVPWlP3PH3BANGhzu9n7KgHTvgzQDXVvHfQkbq1h48B
xjBWv/w4teiH8wzwGAlJ0nNHH9ZiQFImr3PMSbzvcHcynFYv20P8sN6doSS4
NbZl9XQQtbUcdxIM5N5mkg6n1stTT4RZTZOXttHUdfuOJ8AFDs/Knjs434Oh
cBgKDPtMuqgnHOYs+CV5y9kHGA+dDgdt+8KAvF6sl8EZBoFPa9vinuL9z3GH
gcbpoVfqH3G/ww7B4L1qes3mzzjf9JFgqE5lPS7yBffH7uQPz9j5mhZP4/0C
9vrDwgDRX7++4/lMYX94qGO67ALHH3qf+bknga3V0bJsETWTW4Q7KGzxqUjh
oR44r+IOjtVRoyFL0N+F3CFXOF3+hCC1qMF1N7D53HVg3Xrq0FsnjkKqzYtM
AWnq1nv5DtDeO/KSVRbj26bMYGbvj9WT8mip6cOwnsx3GVBE66eagKnc0sbu
bWgFVmNIqFz989oOdKLiISBC8jvP7EIPBerDRNLO2Jw9OL91qjCIs+rdj9FB
MzSYiKGP5VLvA+ja2nUk+pOLhZ0BGpLkySWrgHJ9Y3RPBZCRR3Gf1MzQw493
EWGtbDkZKzT/eTOie63Sb+URNLeKJQmRvdC68Ci6zteacD1c/yMoGuf7sM+D
qGkqqrnE4z5G1nkSjyu7Y0yTMP8+vxfpK7UVUMzE/R7oOUk4lrmbr8nF5xNf
6U1UToWU8Rdi/vKLPqTAM3/zRAXmO2f5ke4Pp31f1WD8Z6Y/YTK/fP3eWWq1
1UUBRK7nP/ar9eiUc4HETqNvf80FakbvnVCSeeldetZlatkDFmGkQ/rr86gW
6rptz8PIz2JmCa8beH67TziRFuBxsr1FXVz7N5zwn79aW3EH34foP+Hkp9bR
8eEunG+KI4K8GeSTk36I+6j4E0k6AomXax/ez54tipxf6nSx4Rnm3+CLIpl1
Aj+nX+F9pBbHkCDtG6rKb/8932UxxO6dS0jgBzz/aVcM0QkWbLv+CedjVosj
coLtbKwTGN+gG0eWN7ju0ZxC/wqKI0z7VsTHfcf8PcVx5MP72/fuzeLzgepT
pDvEg5uH+S/Nd577fdu8fJW+wTxq0bi/OVDQeCc9cwE1z++pHIjcf/LJ08XU
sgUz2eDyQVRoJR91z/6JbDAIu2duvZQ6dG1/Nqis8C0qE6IunteRDX3ha0/X
SVGriSVnQYvww9GvMui30ZlQ3hwko7iFmsnCMRNO6W3w8Feibo07mDn3efa4
qUWV2i1xayZw6Udc79xPPeBzJx2mP21i4dKn1tOrSIcXUc80Dhphfl9sOtwU
iY5JN8V8I/N0OH15c+cTS5xPUTsNUgxeLlpxhJohJp4Gvp9jD1gexfO7p1PB
KmZLaokzxsfup4Km2MDjd644/968VAieUB35k4LzN69mwHjSzBL5PqyvpRAN
oxOr2jY+w/s0vImEEf09rutfoc95RMGHJldhiUH02uWR8G5p9p2VQ1h/R1kk
DPq2eguO4POJNIuA18+GJfjHcN9LOiPghSrvg8WT2K8gKByeFSoHc8xgfolg
GPQz2Uqx/sTn7ZsVBr228f2/f+N5a6lQcEw7nvODhUnt//N75ASDrTH5OsaJ
jk72h/1HmS3aJalDFyRaw77sjMYb0hhfU2AI2nc2cF7fhH61zwi0pPQvXpZD
y6lqgab50OKLW9DF5kxkd6K/XZMCmtHHA+rjpbznVdBGuhpkp6iiY60qepHe
TqJ28C6pAfRun0MEwq0EqtTQb5kNyfbGr87l6uh8R2ui+i6mrUQDbSlkTVQE
hJcXaaLJU0uirFnnmq+Fvv3Mnij5aNzO0UZnp9gTxep+4ax9aFVmF6Lw1MUz
XRfv33nJmWzhZO5M0UP3LXEm8tsyRJP1qVsnJ9yInMsGnwRDjHM9dCOyBS1d
cUZYr3GbF5HpPrg6xgQdNepJNv197x9piucj73sSiZgYGVcn9IovQcSjb0uw
rQu12rRzKGldM3jv0AnqgXvCocSyXdVJ1QPzX+uHkbP8I5dkvLD/k75wMmub
NV/CG/Onw8NJLvNk+QJ/rBd2M4J81Cv6OhtAbX1gZxRRKt6nPhFELfp7SRSJ
Gf/BeBuC86okRZM+qHrdF4Y+bBlN1iQZbuqMoHarhRzweskc1BL1b5+2OXBT
+vzduhjqnpCqbOALNBcqj8P+mm3ZYHN3wbGsUzjfmwXZUCd08WJ8IvVEiGw2
6F7mPeSegvfrSciCAo7rZXZpOO/Z2iwYNXaZNM6gLg4cy4T4mdvJkIP9DOZ+
3z3d7fVqcx7mJ1lnwvoMsY1rCjCfpSADfN51BwgWoddczIDb8oGdC0sw36gj
AwQiNiz/W0ot+3F+Btg97Ds6WY7zcK3IABb3zfOeVuP94Vg6HGx9ZXDvNO7f
PjQdirkTSq/X4v2m6tJg3FL5S8M5ar2f19MAzg3tqKyjZghMpULi77SknAbc
X8e8NHixb+fLhCacx355Gkjlj0mFNuN5nj2p4P8pz9/zEp6vsEiFSXv2icUd
ON/GJQwYNH3+TP0D1rvUFAOLthtXWX/E+36xioatIo88gz9h3LUqGiyZD6jl
f8Z+9w9FQezbzkVXxnF+888R0HBL8+mTL//eT5VIeFHVVjH99d+//yfhIONy
BTZ/x/z+O2Fgoquw8MBPzA/jCIdw2YYnLrO4H77zodA3VeNWzcRM34fKRSEQ
GJRTKrKAGd9nPX+otBJw3b4Qffa2P9zfmbLNbDG6etgHxNnjHmfyUoe6OZ6E
fcNsJU38aKG7J+FkZ+jxhwLoFU89oCPJl51LCPu5KLrBpNvUQylh9M5oN1hh
4Fa0dxXmF7I6g8bWUeejoujr15zhxDJHpShxaiaRfnvI/vGWrWw1usPEAdqe
Wz1oXYv5+irWMNryvODVeoxvem4NAsXGTrOS6LMxNgDhjxSENqJ5A43A0e4A
q5IM+r67MVxbvyffU/5f/QtaMMR50zFlK5pJaKqF+zNsPa+IDrX4s922XqF7
ZBt6lG0PSUhryOUA9L3fu8mFk5uOrlVDJ+Ubk1fGp+U11NFrOowIh8paJlsN
nH/kjQ2REy69F6KJ8VelNsTsz8qcAi30+MxREjmQY39VG50+fJScaxOQe7oP
7XDnKOkvT/kzo4uulTpBmGMW311yEOu3bz1BJI/FZckZ4PPsUPAghjrz7PQO
4fN4c8CDBG8Mkz1hjPn88h6kmvv37KnD6PdRJ8nDL753asywfpzfSfLr0VTG
fxZ4/k7KSbK62c32vRXmiw37Et3s0U2stphvPuRLfP0df4naoaMkAkmp+bv/
wAEtsTmQ3APrdHNHPN9pFUimRV9Y+zuhZQtDyCpWk43ZLthvVXMI0Xr/6MeF
E3ifvA8hJEgqKeC8G8bro0NJg7vW72oPatEVPGFk6CJLSKkXdfHaa2FkxZ9r
TPneeN5aO5zoafiEZ/hiv1KXue9j8ZvZkv0xvlA8By73fIqKDcT6Ic+zYWxp
5fzwYGo3jdxskLCwjgsIRT/TzwaTMqGFJ8Op9VrYsuGGTDKXYzTGd/lmQbqW
r4BuEjVjdF8m3EmSy9rDoJ5QXJQJfx6PCu5MxXn2XcmAozY2wlsycV+dazMg
v2pF4cZs9K+n6dDzuVdkXS617Gh0Oqj4a0sIFeL53V/SwLWVrYK/GPexKycN
ytmvr11civtYdDAN+vf5VbOX432HWNNgcZq8JFMltTVrfSqoP/185kcV9pM/
kgreItUbv9bgPkx4U+GMve350TPYv+xyCgycEd48dBbvO7w1FQQm+xpen8d5
dD6mgLZSypan9bifV1kp0Ng+T+neBTz/dZwBw5ytl29dxP2M5TBA+KD/tuuX
0S17GRD9cgwaWnAeTYVkuCpR03rmOjosMQkmjh1Rr7iB92N7lQir61a2F96k
HnitlAiHZ57szr6F902JS4Ak1dT/Uv7DOPOjU9AWvm/vqTs47+CNBPjWwX43
8i7W91mcANLcN/YFd2EcHE6BzaGAbp/7uF+25njIzNuq5/4Afe1XHPxdd9rA
rhfn8c6NhS0n7HotnuD+YiZiwLFplbHxU8xXl4yBgp/9/XrPsf7B6Gh4qJZm
qv0S573WHgXzY/a/2PUaz3OeiQbVrvmW29/gfHzjUeDG3/Za4S3227YjCioO
B9rIvsfzEjGR8KxI4e2GD1g/6k4EcA1N2El8xPuvFYyAXdJnhoQ/Yb0KnXDw
9bB3XPoZ/aEwDGJ1xo6qjOO892XDIGu1z1HLL/8+T7tCofL3X4fwrxj/ahMK
zX2xDpXTGBd4GQK3zvM6dH7D+U8vDoHHsbn2Yz8w/ls2GN7ZSNjzzaLPOAfB
V5VaO4U/OL/uLj9gWbLVzpSJhTom2hf4PrccCWahDl2Z5QOyRfdtb7NTq93o
Owlqvia2IxzUTMvee8GBg29suBbi+ZscXmAp6WQjtxjjuyU84QTrV2sjbozf
MPKAoBcB1v68WF/UwB0SLrBZF/JjvmCsE+QnJVq1CaC9JxzhzNGlVkPLMD/s
qwNcUSuy5BTCeNcGe+hcvt5ykzDGhzWOwPBdZQtvUYzvlLCC7+Vt5rni6DwP
M5gfrGNOVqN3VRjDUuPHZoNr/8UzDWCtrIUZ+wY070I92LpgyFRSCs0kOdKi
MXjCVHcjummPLDG8+u2whwx6QlaNHEkPPZy5GS1cokU8ji84fEUerc2kR8I1
U01ebUXf7DUgxd/LjNeqoFcamZG6B9LG2qr/nGtFrp++YHQC0Ow1NqQ7AoxS
1fC+8wuPkFfm/x1qVsd4QKE9+bxV79AzDYynfD5OZrmeGv7RxOf3Zp4bWTRs
Yyi+F6057UZW3Bgx0NTB80ZLPIhkrqeB0358XhY8nkTFc1Y/6QDmG/B7EZM1
XPp9Bpj/h8mbOP7JPPjzEOafWeZDfJ6IHFxlgpZn9yXRddV66qY4j9c6P5IZ
t1nPwRz9dLU/qbC9ciDeEuvxrwkgTdt2HThnjU6UDCTtS+7pPrRFt8gFkUef
DXVn7NAptaFk8PbL/UJHqQfcrbJhsshhPxzDeZnFs4HZb3yfrTP1xJvPWcCj
77sv+ji1KPf5LBCVYt532hXnjfLLAhm2eJ1udzyvpJwF8JJPZ9KTuo6XNQt0
m/O0l3pT8+xtywTHr7Z/BXzxPqt0MyFCVrJJwJ+6+G5PBhQe/+IoEIjxLrFM
uHT60kqBYOy3piwDxIt6J/ijcb57Yemg+iK/gj+WWs+FNR2Ml9uZ8sdT93gY
pIOHkRQ3fwI1Q7g3DRLSJm/yJVHL6tikQWXPZV8+BuYvqE6DG4vDNvKlYr98
ybnv59pag7zp2G/ZxVSYieHO4s3E+1xWSQWeW306vNnUbirhqSDFUsjEm4v1
jvOkguYO+ws8+bj/tRkpYB0o7cRTiPmWr1LA//LXVTzFaB67FMiYufKIuxSt
9YkBdfLhsdzluN9EDwZ0uu3dzl2Jz+9REwPeneWZ5KrGfqrAgL8jTyq5TuP8
FSnJILS+yIyrFvvbpCfBFnsHHq5z/94v+WQoPBzxdlEzPt+6mQS4lKmdvegS
Po+Rr6fg0SPe/YuuYL2F7KdgjOcp86JrOM9o6Sng0C1uXkj+7asqHjzUW+I4
b2O9N16xoCn1TYajDz3KGQljs06BrDN4Xr7ZGw6b6Gz48Q3na088Ce2NUn1j
P7BenaYXbOJeFPHuF877YrEn5DiNyjz7jfGyAXdgu33vxf2/WO90jhucEDsb
d4uZleY/vnoCngYmKlxlRWvLuoNG//G3dfOomervu8J5eV1G5Xz01trjIJS8
aXv+AvQaJmeY2D2eGbMYzwcbOkBeo5u2pQDGVyQfBnbug98MlqFVtxwCN6fN
5XuXox199EBTbPL3lpXo9HuqMJnkWb9wDVpwRJNoOXkLXt6C9S2uHyWNt4xu
nVNA8389RlaJKXqUK2F+wE9n8vXJt7vJqujTu92IpXy/bxSg1RXcSUfSpTUB
anh+/hEPUrjbL8RBA+OmoV5kQclhaXNNjBtknyRes8pPD2qhI/K9534vCEXv
0aZuzarzIXsbf8pt34dxrXpf0sT1/LWcLtabyPMjq5yuJqzXw3zda/4k7lae
8ip9jKfcDSBTooFD/IbUdXnrs8Eq0DxtgRE1w3ju86XziaraX2NqtY/NWVCU
9DtnxAzryWplgfZs8P4bR6gHhI9kwgVjq5/N9tR64psyQbRxR1XtUWrripkM
mDnGxJztTN1TkJwBJU/Cmk54oh1JOgzdkn2ddJKah+1iOkg3vV5w3gfrVc19
X3UvTdpy34/a7dhQGjQztluNB+D5i/1pMBs8GscdjPMfF0yDncfzmmRCMX+E
Jw2izbRfHwjH++fMT4N7e38scIvEeKdOKvApVW9hRFNPXNmRCsZrja3qYjHO
ppoK+UvY43vi8XxYQAoMslxomkjAfVw4mQLrvxx5zZOM+Ut8UuD4az7OzSno
nBYGNHTd2HIwDffZ38iA71fdrNwzMC7VwADdYitOr4vUxZkb4iA9iWtr+mXc
b+mDmLl/Ly1WTVfxeUeOxoDd4RUXpq5j/ytF0eDH98TqZAeevyAZCeWRuhe8
n2K+3sYQGPH4/TrzOc4v5RcCMja1nBdfYvzzp0C4sp3T+tsb9IXxud/7M7c4
fUewPv8bb1jy3mtr9iien9TwAdNHEtaXxtBBfV7w7nzYhe+TeL+rEx4gWSg7
IDiNTvD3BNeE15zK3zBfYIs7NPknbT38A+u/P+0OPx23W/v9wnh37QnQviqp
dvI32nXqOOQtFhR1/4sO/usCo1bzmI4zs1GznXEA1YbJ146s1KGWt+0h+FeV
lclCjBdvNIXu/Rk7DBejX4yZgEhxuIgeN/pvpzG4Tbr+1eFFX+kyglYNi9d7
+NF/fuwC1iQ+K8UVaCXTrcRw4C/Ir0QL+yuRcrnPq2RE0Fpi28h05LM/kmJo
UacdRPPJf6/WSqCZEw1IrGiQ5VIpnFf1mjXp93ACvo3o7v+syYZbxqu4ZDD/
IasN8V+2+8+CzRg/1OdAOo/JvZonj3GWNw5E6JoIYd6KcQWJo8SZa3HhbwWM
//7iQq5Z/wz6oYT2qXchixo/WEyroOePuxDzeb3bv6iizyq6k7PGbSs/A/ra
Nnfyp+b872E16talLF5Edzb/5Tt1jAt+8iSFuvEtAxrUao+HPcl4sU/BC02c
xzjGm6h9tQvq10LHGGcDY7e+xWNtzJ+0zIaBrB3be/ZhvYy5z5vNI9Ir7+lS
WzvfyoKHSfNf3tSnHrCWywLxN1PXrhtSyxZpZIGn/GD+VSNqxpaqTFjSf828
0ZS6TlQoE+wkT6ueN6cuPi8/93kVmCV8xhL730jPAPb7kbOV1jjfx3MZYCTm
8aLUFufxvpkBlZ5W1wrtqPWMNmTAt1v78nMd0O17MiDbaZ15qhP267qXDsPX
lqgmuVC7+aumgzI3i3D8CeqJq2bp8KzxxfMwD7xf09s0kGLvvBrkhf26DqVB
oMnFPD9vvK+Nz9zn1enygJO+mG/6KRVW/k4xc/fHeiuXpYHW4P7LWYF4Xuxq
Knj9t2AZCUYfsUiFotpbXu9CqXt6/6ZAZ0rYQ84InPdmTQpMe2+X3RyF9WMN
UkDU/EeicQzuZ9e5FNDZeeFTUBw1j6RVCnivdd9bfopaVIA9BUoWbqzqTMR9
tFxgwL2JYbYvyXj/u/Zzn3e95bbLUnHeZQIMkLhq3bo9HesvyUme+/wTXmWX
ie+XMWcy+Ef1B8RnY/ypQxJUOKU/rctFj/clQs8BPcUn+bif/pokCC/l4t9+
HePPR6PgbEyn25EbOF/+qSjod4nujruJ8Z5Nc3+Z9dWl627h+xD9OBI2Kf6J
6/sP6w2mRMJh4SsfZu/g+W6IhEhm790S9/C87EQE1A1tLtvbjeenKyLg+d3P
TG49OP9T6whgr6+xzHyI+2wkYSCXaX/t2mN8HtGuYWARICb0tg/7vVOc+/1s
/dJnwVPMt5wXBlum742VvsF+7cNBYPUsdt+dt+i3mUEQf13j9Ph79Kh0EFwo
Z+JYOoz1Fyj6w0DcNXvVEZynfpE/JK6qfdE7iZZx84ZLrI4qs1NoLgdveDcs
kS3+Dd9/vXhP4O5+Pa3149/nnZ8nqDTmGbj+wvx+X0+wzzauz/iNcSEbT2AE
8XNf+4vneW66wVXb+y6DzPNovk+3GwztOdXJwUbNZLPMBWx1rEXXsKP3Wx2H
l7pbvXdyoE2ZjoGJPuc9C070ORUneHzotZj/IurQaw/tQe9wk08mFzpq91G4
ax7X1cCDrhc5Am1H5P0+LUGbl1sDHOW4P3/Zv3pih+Gy08vVq5ejl8uYw5YT
Df5qK9BLqwyhzj2mx3wlelmdMUidNF/rJ4LuqtGDSt/NgRli6NrsnSAeyP6w
XgLtZL8XCkKer+teg77WvRUEI+qCRtahGR6CJD066hG7JNqtfg1wx5tukJBG
r2+VJfGJMiE7NqEr43YT9hS2XjPZf/XiDpKw9KeSvnJoJUNtMpt1LjR9C3pc
34D45kX01SmgLZoPk6lCE+kuJXRKsxVxLd0Y/lEFPStuRkYqWPrnbcd9eUZa
E4eaJxvFd6Ctdh0hg7W1EbAT85MkHIhFXdhT013o9i5H0t9oJOOzG92z0YEY
XpSKStuDdiSOpOcK0/Pze7HepJMz0SG9svd0MC4yeJzcvnE6eng/2kXZjajf
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
i///7+R/QZt/9Q==
             "]], 
            
            Line[{{0.3662589145367714, 1.3659555027091524`*^-6}, {
             0.3669230293326119, 1.3624800576650387`*^-6}, {
             0.36789106452194426`, 1.3582561813052507`*^-6}, {
             0.3688590997112766, 1.3511798329091107`*^-6}, {0.369827134900609,
              1.3448956046602234`*^-6}, {0.37079517008994134`, 
             1.3394438145297727`*^-6}, {0.37176320527927365`, 
             1.3311160085294205`*^-6}, {0.372731240468606, 
             1.3276386976457388`*^-6}, {0.37323674362958065`, 
             1.3659555027091524`*^-6}}], 
            
            Line[{{0.3778501172669675, 1.3659555027091524`*^-6}, {
             0.3785394516046001, 1.3614915328474808`*^-6}, {
             0.3795074867939325, 1.3523020960803933`*^-6}, {
             0.37969463700336537`, 1.3659555027091524`*^-6}}]}, 
           "Charting`Private`Tag#1"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, Pi}, {-7.808126802899551*^-7, 
            1.3659555027091524`*^-6}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1], 
             Dashing[{Small, Small}]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0, Pi}, {-7.808126802899551*^-7, 
           1.3659555027091524`*^-6}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1], 
            Dashing[{Small, Small}]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]], 
         Line[CompressedData["
1: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
DyH31bQ=
          "]], 
         Line[CompressedData["
1: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
paBAOd7/RTODsK/4rF9VSy349GgK2a0RkKh8AeORHAwSeXxBx90WauHnNxmk
PTOLxfI2dezCghTC2rpm+0Q39ve0TiXqHxt9wp9QvzNfk0bC+NQblgzg/VcM
pJDWbT2jlcO4H75zqYTJ3nKd8hdqN66INLIjadTm7g9q84Wm6ST4on++Bctn
+n54LkwjZIDjyTgndceJ0TTye0EWbzg/dU/Nw3SiKr9m3xJhjD8qzCAB5o3R
laup7W4fTSdXonbeUNpIXXfEJIP8PHf/V+dWautLcplEud9CwQKoFx1ZkEF8
mUfdxjWp96WPZpBLkv5nwg5QC67tyyTfDDiG+E2oH/e+yiIKQZmildbUSgfO
ZZKTlavNlI5RX+spzSJN9xsyOt1xHo+CbDL1Xa3H3J+6vck/i8iL3+ccD0eb
h2YTDx2L3WGncJ59MTmkwetTCH86epV3NvlS4HelIh/n8XXKIbL/zZ9WrKA2
9AnLJa4TGTKdZ6l5ftnkkHPLVzuZN1MPJ4fnkjH1hvIxgvMpxeeRjS5qr0P/
o04wC8glLhndy/l7qB0X1uSRWmJuWNFPrcHSmk8+fRhJUnxDvaSlNY9I8vrd
ufOR2qR6IJ8cU5nPZj5JzbjFWkiqj2TA2E/qqQs/8slwgoRfKOvY/10esb6Q
rGuub+RbRF19RaOAOLzeMVa+hDq9yKqQVHJ0r1dcSS3Nnl9E3m82P3JnDfVw
S20hWW02UmC2iVrrZn8RORLp2/9ZgTpyPVcRKT3Lzh+6g3q9k1gxEWOSiC3X
o44tMygm1hvq2xQOUzfkTxWTYv0dvztsqDkrw4vJ64AuRTMnavaI9SVkVYWZ
x2cPat3EO8XEovtjbUgAta/p0RKS/83nA28ktUri/FLyXJRdvDyBejV/XQkR
0k43V8igHos0LCWHPcWzOgqoxefPlJDs/LoHppXUV/4WlpL+W7Do8zlq8lGz
lCwbv6cZcpHao2qqlGSnXLf5eJ3acDqslAhuaQg06KCOzhcvI9l95VktPXh+
Rdtc3C+rYd1T3O9fk7n4iviulDfUU7//lpHlJHD410dqB8guI0Kstqt6flKH
GrwuI7kVhsoqrOP/d2ZGaDlZobXHsHwh9fqLYuUkf0TZlWsJdffOx+VEOFE6
3leYWm+5/1xcRqRicDW1SqV4BVn5kLd130ZqjtquclLoxfa8eSu1/6njFWTV
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
oMnFPD9vvK+Nz9zn1enygJO+mG/6KRVW/k4xc/fHeiuXpYHW4P7LWYF4Xuxq
Knj9t2AZCUYfsUiFotpbXu9CqXt6/6ZAZ0rYQ84InPdmTQpMe2+X3RyF9WMN
UkDU/EeicQzuZ9e5FNDZeeFTUBw1j6RVCnivdd9bfopaVIA9BUoWbqzqTMR9
tFxgwL2JYbYvyXj/u/Zzn3e95bbLUnHeZQIMkLhq3bo9HesvyUme+/wTXmWX
ie+XMWcy+Ef1B8RnY/ypQxJUOKU/rctFj/clQs8BPcUn+bif/pokCC/l4t9+
HePPR6PgbEyn25EbOF/+qSjod4nujruJ8Z5Nc3+Z9dWl627h+xD9OBI2Kf6J
6/sP6w2mRMJh4SsfZu/g+W6IhEhm790S9/C87EQE1A1tLtvbjeenKyLg+d3P
TG49OP9T6whgr6+xzHyI+2wkYSCXaX/t2mN8HtGuYWARICb0tg/7vVOc+/1s
/dJnwVPMt5wXBlum742VvsF+7cNBYPUsdt+dt+i3mUEQf13j9Ph79Kh0EFwo
Z+JYOoz1Fyj6w0DcNXvVEZynfpE/JK6qfdE7iZZx84ZLrI4qs1NoLgdveDcs
kS3+Dd9/vXhP4O5+Pa3149/nnZ8nqDTmGbj+wvx+X0+wzzauz/iNcSEbT2AE
8XNf+4vneW66wVXb+y6DzPNovk+3GwztOdXJwUbNZLPMBWx1rEXXsKP3Wx2H
l7pbvXdyoE2ZjoGJPuc9C070ORUneHzotZj/IurQaw/tQe9wk08mFzpq91G4
ax7X1cCDrhc5Am1H5P0+LUGbl1sDHOW4P3/Zv3pih+Gy08vVq5ejl8uYw5YT
Df5qK9BLqwyhzj2mx3wlelmdMUidNF/rJ4LuqtGDSt/NgRli6NrsnSAeyP6w
XgLtZL8XCkKer+teg77WvRUEI+qCRtahGR6CJD066hG7JNqtfg1wx5tukJBG
r2+VJfGJMiE7NqEr43YT9hS2XjPZf/XiDpKw9KeSvnJoJUNtMpt1LjR9C3pc
34D45kX01SmgLZoPk6lCE+kuJXRKsxVxLd0Y/lEFPStuRkYqWPrnbcd9eUZa
E4eaJxvFd6Ctdh0hg7W1EbAT85MkHIhFXdhT013o9i5H0t9oJOOzG92z0YEY
XpSKStuDdiSOpOcK0/Pze7HepJMz0SG9svd0MC4yeJzcvnE6eng/2kXZjajf
CnnBpofvz097d0I6DOXE9DE+XeBBlO9tiN1uSF3H5J0NTff/vDxsRM3DrpwN
so8eyXubUDOUJrOgtq86LtUUz0vWZ8G6Z0Gvz5lTD+z3yYJVb9ad+mBNPXF9
XhYsGg8YNDmG8yrN/b2IndRTOulMbV31JwNYZ9YkpRzH+KUHGfBz9r5ypzt6
W1AGeDNVJA95UqspHsqAL6z+71m8qd2uSWeAy/wD20R8sV/OwgwY5lydss0f
821G0sGO68eQcSC17PYV6fCat1vVKxjvu5o5HUwFylIZoZgvNfd9uE/Qd7g2
/F//zjQ4KLwf7kRS94Q0z/39EBFPfx+N/d6Xzv29kPj2kTkO96uQlAY3197b
seoU1k/rTgXtpNfaSxOpi3mE06BnevIQVzLGX7fNfT+2YLdhT6EWNXNIhVft
y13+pOI8/typYCe90WcmHfvFWafCpzS18LFM9JZFqeDxyyBxKBufl25LCny3
PZr9KhefzzenFAju9C/ry8f6rgIpME8u6Vx3Id6nwD8FEnJKLt8uxn4K61OA
j/lCOynFeM47BmQ7dtxvLsf6URkMEOl5/uxcJdZ3PcSASsXx95XV+Pyj+Bgg
XcTypfA07gN8576vsy+dzazF562lxADlExvmJ59Df/icDJrb9VaGNGB/5d9J
0FV+ZL1PE84LyUlguMhH3rUZ9/d+RRLYPC/Ya3UF+/PrJsKwer2h8TXsrzmZ
ACdOt1sdIFjvR2oCTPP2O+1pxXw/mQQI9Pt0ckcbPl+hZ6eA5c2fUMV2zN8c
fgritPgSZG5j/62Kp4Cnbk3Wug68z8OP8ZC5TLlUpBPnt6mJByeOSjaxBey0
Xp5LMNxliU3ctRAd6x0E0r+PLXVYTM30fmkIJH3TKYrlRpdyBMP4l43rz/Ci
K2SDQG+Uu76LHy20LxAahr4oTwhgvUbzAPB6fkFnqxB6+XU/6O3NemwsjN4r
4AcKPX4W/qvQi6x94Xv7dtfr4livTNAHDl8X+f5mNca323vDlcvMYWzrMD7x
+SQIN71dsG4Dxp+7noSgc7dS90qhtd95wavqqhUuGzFfsdcd1MriypNkMN4T
4g4lBc4b6zej54u6A0v2/uZH8phv99INjqTK7JjZ+q/fmBu0J/B2CCph/t0S
N1gT81VvmwrGcz46Q3RY71MLVfRvX2f4EHDRNhTQR9ScQcs751OpGnrtLmc4
7RbgdUsdfWubMyx0tvj9QQP986M9uNjviObcg9Zc7gDdVmLcG/eiawMcQMaU
NfuAzr/5jGyAYfhe1GM/mn/EBr7o/leTfgAtts0W9PfWyF08+O958plB065T
V58aoPsLzUEAjmvMHkK/y7MAb6UDXatM0B1bD0G/3GajnabohnIjyF03fTTa
Ej0qrAe/xJ5MVFujY9XVwFz4st9dW7Tb2t1AluaxjNn9m/fgahDhDTrFc/Rf
fJkChC60WiJ/DN2qIUIG5+0sOOSMFlXngV1MEmt9j6NNcpVJ+U+287mu6NDZ
tWTe9JBiizu6PX4XcRjvaH3tid60TI90fDy9l8Ub/Xhai2x4l/BwtS9a8IY+
iX91wmyPP/rarAkZ7dd7dywQPbzNkOx/JHc8IRgNB03Jua4lM+dC/91n0Ipw
d8wEPwhHB0+ZEre2/vlTkWgFWWvy4NoVxtIYdH6WLZG7mL9cOQ59B+xJWn1w
qdmpf++/lS2ZOmMtFZyIbjxtR4wq1ZuKk9F7qxzIxeLV22+m/Os/4EhW/9UI
uJGGfnvLkTAs7C9fz0CTSEcyezXqW0sWtWjgTBY4ClVuvZZDPWDKlg2PfW97
XsmjbhUVzIadT4bqLxVQq/0Iy4JzW+dPNBdRW9/PzgKh9HWbLpSgc5uyIHpy
j0tjGf77cF2fBZN6jqfrK6iL////j+4urll7rgb7nx/JBCWXO3a1Z7D/voVZ
UN75sfT0WZzXISETeDZwvqk+j/WDL2dCYIykSFU9xr9tz4Th99oWFY047y7X
TDik4ZxXdgHrA3MmtJWeelpyEefX2JQJm5hrlxVfxnh0ewbkWt07VHgVvW3u
7zs7GU3Lb8F5N6ZkgIfw4oe517Hfp/sZ8Np/I0/ODbxfumsG7Hu6XzfrJs73
fHEGXFI8kZBx69+/pwMZsDozqTPtP+yv+DUdGFPnOFLvoMcK0mFW/74m4y7O
f3U0HY7Vj0cmdeH5Nenp0MfNczPhPvbLVE8H9ROyzKceYD+vjHQ4d09vR9wj
3N+DvemwQso9KKYXz7/+nQaxcSlXo55g/S2X0mDqQ/2PiKdY7+iydLDWfKgY
/hzjn+/PfV8onzwZ+vLf801OAyVW/qbg12hT4zSosJGfDHyD8+9amgZ8rQay
AW9xf6fi0iB4ldcJv/fYf0o3DUYC02t9PqBNV6SB0fOmkZMfMX/pcCq0Kfeu
9/qE9Rvmfr/KZE87eHzG/Tcmp0L+jECF2zjOt885FTgOKbw98QXr/bd77vdu
o5HY8a+YzySWCm94faycp3G+tz9TQNctq+DYN8xf/zIFrnRffH70B+ZfuZ4C
azf2L3f4hfu4Pvd7OPXUd2O735i/LD0F/nwUzLT9i/1Vg1PAWUv5sTXzfDr/
kFsKdG9TvaXPSx16Ye77Rvylk780+albp9gZsGfr+c3bBKit761mAFvD8FGZ
ZejdOxnQukm8UGI5tdoxt2QIOmP2eNkKrJdZkQwq6zM4F61EJ4wkw0x5txqT
CDVT9nQSNIpx+EyJ4vnLisngVrjz7LA45hfFJYH0ioC3L1Zj/vmJJPiY1bT8
wVqc7+KiJKhcMnbg1no8/8U9CbLnP16fKYvnp+oT4cgj54SnB9DpW+Lhu1Oe
gXUS1uveHAnJ/mXzQxjo50yRsDb+zNWCVMz/9DoCSE6j67V0jC8gEXCo5qrE
80z03bMRMHrp5pMf2Zgvmh8BkR13Twnm4Xyxu8NhRf+jHYoFmB8554YPz78e
KkJPzHnvt7dVXiU4v7pmOAywj5qllWG9auNw8F06xd1QgXEu+TDgXjt7s6cK
4+d3h0HlVjbf8Rqsl3gsDGD3ImmuWswfLwiDXsMlA9LncJ6QwFBwsRNO16nD
/Ad1ocDqtVrLqQHjy3+EQm6E9GxsE8Z7H4eAXNqWuqpm7Oe3ORTulKra3b6E
ccO5etYNGoLvr2C8QzwEvt/Yd4+1BeNL+0Mg+YFhqPh19Df2YFj7xnzLzhuY
v/9tMLRM2A1b3cT4yJYgMGQ6nh98C+O1H4JhlPukXsF/aMVDQf+r6d7joUzb
OICXNNiN6ECSWDpMbYq38mrTL8ox1plCdlCIMTJjDMaQVOqVLNNhdx0qJR0c
QtlOWLVNoUi9k80h24laRY4la/X2cT3vn9/PdV33c9/Xfd/P5/nvwR69BMXK
OnKNMBFzV+y72nqP6m1VE1COQ+GfGsg7VifC3umo/pwmck+zBM/8cuWmj5jz
kRuPGN6ZA55y8pshCdQSis2FzeTztfEoSKvokz6h+v5qMdblVOWXtZIr7CSQ
F8q2NLVT/phjPMJvNEx730EWe4kx5d7jGtXn5EkhcchqfSpc9pJssiQeJt2d
bIdOZn07xKj91NMe+prGz70QB3+VDxkH/iJnjMTi45xxq7NvKd89LBbpbNYn
WQ85WxaDRWZqxa/eM+uxiUGVrWbAlAFyeKMIHpvnzzYYYu77bhHeBi+qs/hA
ztEWIVm0PIEzQs/jtUVjboqpSeIoxXmnolF2FJ05Y8x9EUbD7ozNLzfGycpO
0Xh22en71knKEx7fJUTMba/JnxQmnFRpLISa/IcKramMlYQ48zI41FSJPP9F
FMwHI3Q9VchGt6MgV4h5GPU1jVf45fuWO2PXPqkqxR2mffneNdi/pmw6xXm6
fGSZ/NjzQIPi3Fl8mFj+lNc7k3zfmI9alxOeqprkwk0ChN3urFaaQ/WjXlFQ
NVvGVphLTmzko7RQkDmmQ/l9LwRw07s2+kGX4topfAxJP2/r1yMvuSnAMZZN
w9tvKH8mlw8zcZpplyHFv1oaibaeRyeeLSTnfalPDNBWaVtM+X5OkdB/zBE8
XkIeLuPjll1B24NvKV9SEIntle+s6o3IW3x2gmW8suT2CvJ37jycPx2n9ZsJ
+ZZVJBy1apKurSSz2iLQm8rqvrSa2Z/ZPGSMO7qX/JusnMDFSsHhynNryDr6
O9Hc2bLw9FrywQ4eYr31f8xdR5buC8fchuCRn9aTp3G4qLIoDpBaktM5YfC/
PFiftpE82T0UCuzvVu23Jp+L4SE/Oyl3ty0zniwcttPvsiT25IcjXHQnq0aK
HMh1X8ZP++DeEvk9M7/3YVgelrWB60xm88LQ9PRZYZAr2XdLGASui2f7u5PP
DIRitoyX6ONJXj8Wiqtml197bCbfHQyFT9Goi7M3eadyEMb0LK/b+5KfaAfh
+OH9hlZ+5Gd+QbBQakwDh7zpQRBeimd9MAsgC4yCkdLrw1m5jZxUGQx2YF6t
URDZVRKC+sevTdgh5BT9beDZL882CGWeN74N6lVCRV0uOb9uO8qNb/C0eGTV
qcHwyJ/8h8ZO8oKlgfioZWcxjc/0y2obsg6mn2dFkc9nbof5Z/mMydHky6wA
dAh0JH+LmPMUHYjdXQGdw7Hkq2o/YIHPOac+Mflauz/uNPRe6ZaQL2YHYofl
6m86E8lHpnPwVUV86p9JZOOiABSxbw22JJNPhfjBOUfZT76XbP6bPwamO99p
TGH6uWUrjuw5uqLuADktyx+mH9t+/j2VXPLQF0/CDBSq05h6sT/EHTu4V9PJ
qZyt0HW7KC/PICuWbkaNbHhdsZTcvMcPgWvMz549MmH/famHq0N7Gobbj1G8
ptsPkXkcqxm/kOcZeiPWs19qm01+88IPu1T2PJfkMvsz0xspVbOMy0+Qy3/1
QDq/IPF1HnO/hD44utCsYV4++aSuF3Ja6nTcCsgXNrnh9CHfsP3nyEOK3rhg
2XO18gJ51SlPlA8nKg0UkR1r3XDtvLrX4ovkn+XOqPE7lb+1jFy0bDNqNVYN
Zl5izluTBx7IZJZ3K8jCHjc0x23OGLtCztB2xVOjvzpMrjPr3e2EV8/FRiGV
TP/uO+Dd0WmSnGpmvQvsMWh/vP5hDXmkzhOj/6zQVvqd/ErsCYXymyHmMvIM
Y0+oBLv/yr9LFrV6QH1up+LZOnLkR2toNYrc2++Rw0NsMD9Z+ZRGI9nuiS0W
mWb12TSR3/nYw6j72/WSR8x8Xjpg1fGqQ2VyZr5cJ5i7Obd3NTPjx7lgI+v5
0nktTP1WC2y6LohzbSPvHbWCa4RibcpTsvy0PbYYHNOs/JPs4esE/+bFQf3P
mfNRvx4hqdcuLXpF3lFsjQg4KGztYvqd6gjRQLtL5htmv1OBhIKIE3e6ybfZ
ttjrM6n373fM/TJ0xkE1qbnJe3Llm42Q3jI8GNzP7E+HI7JEFS3Zg8z77aYl
8pbash8Ok2NLHHCu44mINcL0X7oBpdIw2dpRcqn1SlyxGZvJH2P6ybZG9eih
wIJxssuxtZCV6JW1TVKZsPHhTbgfWPZZfQp5XvYGyDU3OtlMJcdqrkZbvTwn
Xolcs8QWLxKD35aqkNuTLdH9r5E1XV+TtwdZoL/rPwd01MhFZZYYydL5w0Wd
nNPigM9OxQtTZpBLXxuANWW98MYs8slic6heabrVp0lmH7fALG6gxiJtcsdJ
72odvSGOrw5ZX2AGg//uK8nQnXCS4c7k6qX7tf6R6U3Y4h4ns/rOA6viAX0V
i///7+R/QZt/9Q==
          "]], 
         Line[{{0.3662589145367714, 1.3659555027091524`*^-6}, {
          0.3669230293326119, 1.3624800576650387`*^-6}, {0.36789106452194426`,
           1.3582561813052507`*^-6}, {0.3688590997112766, 
          1.3511798329091107`*^-6}, {0.369827134900609, 
          1.3448956046602234`*^-6}, {0.37079517008994134`, 
          1.3394438145297727`*^-6}, {0.37176320527927365`, 
          1.3311160085294205`*^-6}, {0.372731240468606, 
          1.3276386976457388`*^-6}, {0.37323674362958065`, 
          1.3659555027091524`*^-6}}], 
         Line[{{0.3778501172669675, 1.3659555027091524`*^-6}, {
          0.3785394516046001, 1.3614915328474808`*^-6}, {0.3795074867939325, 
          1.3523020960803933`*^-6}, {0.37969463700336537`, 
          1.3659555027091524`*^-6}}]}, "Charting`Private`Tag#1"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{0, Pi}, {-7.808126802899551*^-7, 
         1.3659555027091524`*^-6}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1], 
          Dashing[{Small, Small}]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {-7.808126802899551*^-7, 1.3659555027091524`*^-6}}, {{
     0, 3.141592653589793}, {-7.808126802899551*^-7, 
     1.3659555027091524`*^-6}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.899191175559408*^9, 3.8991911934962*^9}, {
   3.899191245577835*^9, 3.899191273747528*^9}, {3.899194258282827*^9, 
   3.899194313613503*^9}, {3.899194360494864*^9, 3.899194381890396*^9}, {
   3.89919452527073*^9, 3.899194582747326*^9}, {3.899194616621078*^9, 
   3.899194654832519*^9}, 3.8992020477748327`*^9, 3.899204803350974*^9, 
   3.8992679499167957`*^9, 3.899353186268264*^9, {3.899366220409192*^9, 
   3.899366243783492*^9}, 3.8993663142381687`*^9, 3.899366375428575*^9, 
   3.899366962707821*^9, {3.899367057790832*^9, 3.899367065197452*^9}, 
   3.8993681039418697`*^9, 3.8993682598287373`*^9, 3.899368303370552*^9, 
   3.899368335075498*^9, 3.899369019654413*^9, 3.899386156020056*^9, 
   3.899432970072268*^9, 3.899439925711732*^9},
 CellLabel->
  "Out[320]=",ExpressionUUID->"6e2267b0-2db3-4b49-9c61-c2ad90366dfd"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[CapitalUpsilon]tOS", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["\[CapitalUpsilon]rOS", 
       RowBox[{"2", "\[Pi]"}]], 
      RowBox[{"(", 
       RowBox[{
        FractionBox["\[ScriptCapitalE]", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", " ", "-", " ", 
             SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], "r2", 
           RowBox[{"(", 
            RowBox[{"r1", " ", "-", " ", "r3"}], ")"}]}]]], 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{
             RowBox[{"2", "M", 
              RowBox[{"(", 
               RowBox[{"r1", " ", "-", " ", "r3"}], ")"}], 
              RowBox[{"(", 
               RowBox[{"r2", "-", "r3"}], ")"}]}], " ", "+", " ", 
             RowBox[{"r3", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"r3", 
                 RowBox[{"(", 
                  RowBox[{"r2", " ", "+", " ", "r3"}], ")"}]}], " ", "-", " ", 
                RowBox[{"r1", 
                 RowBox[{"(", 
                  RowBox[{"r2", " ", "-", " ", "r3"}], ")"}]}]}], ")"}]}], 
             " ", "+", " ", 
             RowBox[{
              FractionBox["\[ScriptCapitalJ]", "\[ScriptCapitalE]"], "M", " ",
               "sp"}]}], 
            RowBox[{"r3", " ", "-", " ", 
             RowBox[{"2", "M"}]}]], 
           RowBox[{"EllipticF", "[", 
            RowBox[{"\[Chi]", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r1", "  ", "+", " ", "r2", " ", "+", " ", "r3", " ", "+", 
             RowBox[{"4", "M"}]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"r2", " ", "-", "r3"}], ")"}], " ", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"r1", "-", "r2"}], 
              RowBox[{"r1", "-", "r3"}]], ",", "\[Chi]", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], " ", 
          "+", " ", 
          RowBox[{"r2", 
           RowBox[{"(", 
            RowBox[{"r1", "-", "r3"}], ")"}], 
           RowBox[{"EllipticE", "[", 
            RowBox[{"\[Chi]", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], " ", 
          "-", " ", 
          RowBox[{
           FractionBox[
            RowBox[{"M", 
             RowBox[{"(", 
              RowBox[{"r2", "-", "r3"}], ")"}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"16", " ", 
                SuperscriptBox["M", "2"]}], " ", "-", " ", 
               RowBox[{
                RowBox[{"\[ScriptCapitalJ]", "/", "\[ScriptCapitalE]"}], " ", 
                "sp"}]}], ")"}]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"r2", " ", "-", " ", 
               RowBox[{"2", "M"}]}], ")"}], 
             RowBox[{"(", 
              RowBox[{"r3", " ", "-", " ", 
               RowBox[{"2", " ", "M"}]}], ")"}]}]], 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"r1", "-", "r2"}], 
               RowBox[{"r1", "-", "r3"}]], " ", 
              FractionBox[
               RowBox[{"r3", "-", 
                RowBox[{"2", "M"}]}], 
               RowBox[{"r2", " ", "-", " ", 
                RowBox[{"2", "M"}]}]]}], ",", "\[Chi]", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], " ", 
          "-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{"r1", "-", "r2"}], ")"}], " ", 
            SqrtBox[
             RowBox[{"r2", " ", 
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"r2", " ", 
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r3"}], ")"}]}], "-", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r2"}], ")"}], " ", "r3", " ", 
                 SuperscriptBox[
                  RowBox[{"Sin", "[", "\[Chi]", "]"}], "2"]}]}], ")"}]}]], 
            " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"2", " ", "\[Chi]"}], "]"}]}], 
           RowBox[{"r1", "+", "r2", "-", 
            RowBox[{"2", " ", "r3"}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"r1", "-", "r2"}], ")"}], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Chi]"}], "]"}]}]}]]}], ")"}]}], ")"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"\[Chi]", "->", "\[Pi]"}], "}"}]}], " ", "//", 
    "FullSimplify"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalUpsilon]t", "[", 
    RowBox[{"pi_", ",", "ei_", ",", "spi_"}], "]"}], " ", ":=", " ", 
   RowBox[{
    RowBox[{"\[CapitalUpsilon]tOS", "/.", "Subs"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "->", "pi"}], ",", 
      RowBox[{"e", "->", "ei"}], ",", 
      RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.899194680885172*^9, 3.899194722218244*^9}, {
  3.8991947866707897`*^9, 3.89919482380068*^9}, {3.899194946651363*^9, 
  3.899194969246273*^9}, {3.899195713951632*^9, 3.899195759071331*^9}, {
  3.89919580752945*^9, 3.899195845947011*^9}},
 CellLabel->
  "In[321]:=",ExpressionUUID->"fb2babea-ad2d-48b5-83c5-acce8ba5dbc1"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox["\[CurlyPhi]", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "23703913-b0a5-4968-8fad-4ed4997716fd"],
 " integrals"
}], "Subsection",
 CellChangeTimes->{{3.89917965094309*^9, 3.899179674701448*^9}, {
  3.8991797486243477`*^9, 
  3.8991797727616463`*^9}},ExpressionUUID->"b1233e12-a3ec-4c16-a156-\
61ac238618b1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[CurlyPhi]integr", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["r", "2"], "u\[CurlyPhi]int"}], 
      SqrtBox["Rfunc"]], "/.", "fhRule"}], "/.", "DeTrRule"}], "/.", 
   "Subs"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"N\[CurlyPhi]", "[", 
     RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "rf_"}], "]"}], " ", ":=", 
    " ", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"\[CurlyPhi]integr", " ", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "->", "pi"}], ",", 
         RowBox[{"e", "->", "ei"}], ",", 
         RowBox[{"sp", "->", "spi"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"r", ",", 
        FractionBox["pi", 
         RowBox[{"1", "+", "ei"}]], ",", "rf"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     SubscriptBox[
      OverscriptBox["T", "~"], "r"], 
     RowBox[{"(", "\[Chi]", ")"}]}], ":"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPhi]tr", "[", 
    RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "\[Chi]_"}], "]"}], ":=", 
   "  ", 
   RowBox[{
    RowBox[{
     RowBox[{"2", 
      RowBox[{"(", 
       RowBox[{"\[ScriptCapitalJ]", " ", "-", " ", 
        RowBox[{"sp", " ", "\[ScriptCapitalE]"}]}], ")"}], " ", 
      FractionBox[
       RowBox[{"EllipticF", "[", 
        RowBox[{"\[Chi]", ",", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", " ", "-", " ", 
           SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], "r2", 
         RowBox[{"(", 
          RowBox[{"r1", "-", "r3"}], ")"}]}]]]}], "/.", "Subs"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "->", "pi"}], ",", 
      RowBox[{"e", "->", "ei"}], ",", 
      RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalPhi]tr", "[", 
         RowBox[{"10", ",", "0.4", ",", "0.05", ",", 
          RowBox[{"JacobiAmplitude", "[", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"EllipticK", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]], "]"}], "\[Pi]"], 
             "qr"}], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], "]"}], "/.",
         "Subs"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "->", "10"}], ",", 
         RowBox[{"e", "->", "0.4"}], ",", 
         RowBox[{"sp", "->", "0.05"}]}], "}"}]}], ",", 
      RowBox[{"N\[CurlyPhi]", "[", 
       RowBox[{"10", ",", "0.4", ",", "0.05", ",", 
        RowBox[{"rqr", "[", 
         RowBox[{"10", ",", "0.4", ",", "0.05", ",", "qr"}], "]"}]}], "]"}]}],
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qr", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Dashed"}], "}"}]}]}], "]"}], "//", 
  "Quiet"}]}], "Input",
 CellChangeTimes->{{3.899196668364132*^9, 3.899196740076252*^9}, {
  3.899197029938088*^9, 3.899197049163031*^9}, {3.8991970868327007`*^9, 
  3.899197108790927*^9}, {3.89919718108119*^9, 3.899197211241514*^9}, {
  3.8991972635090923`*^9, 3.899197264297742*^9}},
 CellLabel->
  "In[323]:=",ExpressionUUID->"af30e24b-5473-4a9b-bedc-a03402ad55ac"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    RowBox[{
     FractionBox[
      SuperscriptBox["p", "2"], 
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       SuperscriptBox["e", "2"], "+", "p"}]], "+", 
     FractionBox[
      RowBox[{
       SqrtBox["p"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          RowBox[{"(", 
           RowBox[{"3", "+", 
            SuperscriptBox["e", "2"]}], ")"}]}], "+", 
         RowBox[{"2", " ", "p"}]}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["e", "2"]}], ")"}]}], "-", 
         RowBox[{"4", " ", "p"}], "+", 
         SuperscriptBox["p", "2"]}]], " ", "sp"}], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         SuperscriptBox["e", "2"], "+", "p"}], ")"}], "2"]]}]], "-", 
   RowBox[{"sp", " ", 
    SqrtBox[
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["e", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], 
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "-", 
          SuperscriptBox["e", "2"], "+", "p"}], ")"}]}]], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["e", "2"]}], ")"}], "2"], " ", 
        SqrtBox[
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["e", "2"]}], ")"}]}], "-", 
            RowBox[{"4", " ", "p"}], "+", 
            SuperscriptBox["p", "2"]}], ")"}]}]], " ", "sp"}], 
       RowBox[{
        SuperscriptBox["p", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "-", 
           SuperscriptBox["e", "2"], "+", "p"}], ")"}], "2"]}]]}]]}]}], 
  SqrtBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["p", 
       RowBox[{"1", "-", "e"}]], "-", "r"}], ")"}], " ", "r", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["p", 
        RowBox[{"1", "+", "e"}]]}], "+", "r"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", "p"}], 
        RowBox[{
         RowBox[{"-", "4"}], "+", "p"}]]}], "+", "r", "+", 
      FractionBox[
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", "sp"}], 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      FractionBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["e", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], 
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "-", 
          SuperscriptBox["e", "2"], "+", "p"}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["e", "2"]}], ")"}], "2"], " ", 
        SqrtBox[
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["e", "2"]}], ")"}]}], "-", 
            RowBox[{"4", " ", "p"}], "+", 
            SuperscriptBox["p", "2"]}], ")"}]}]], " ", "sp"}], 
       RowBox[{
        SuperscriptBox["p", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "-", 
           SuperscriptBox["e", "2"], "+", "p"}], ")"}], "2"]}]]}], 
     ")"}]}]]]], "Output",
 CellChangeTimes->{3.899197050606642*^9, 3.899197213714921*^9, 
  3.899197265180953*^9, 3.899202048357747*^9, 3.899204803921258*^9, 
  3.899267950475226*^9, 3.8993531868150454`*^9, 3.899366315255604*^9, 
  3.899369035769331*^9, 3.8993861702579117`*^9, 3.89943298474337*^9, 
  3.899439926046137*^9},
 CellLabel->
  "Out[323]=",ExpressionUUID->"e47a8c16-c80b-4b85-87aa-93b04a9cdc09"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0, 0, 1], AbsoluteThickness[2], Opacity[1.], 
         LineBox[CompressedData["
1:eJwVx3081AccwPF74Px+LevcT4QQlQq9UFMZ+n5ZRYm4SkY5nbRLyx15mcds
TR6yTKfk2XrwkI1qlpMiKwqTlYc8JSQuRR6SznGs/fF5vV8fA76Q68eg0WjO
n/tf5v1FTQOWgVsfevJcDxhFbF09XGWtl7IHYpuPSjOkHiC/aXakU8yDWovy
jCNSAQyqC2RlYiH49fsE75SGQteOmAd54mjYYmXZby2NhzaeeE22+FdY4Zer
aSlNA+73Wl1p4lzgRLT+aSEthPOTB0tTxTfgS5aQZi4tB+vaXYvsT1ZDM3hn
unyoB1G4y+FSUR0E+QYuYTi0wIlyvyTGyqegl+KhIgnuhNY3O8kCfiuEeBe+
sFXvg7Nm07SybztgYvDuWO9XAxBoUnexOu8FRL5t701IGwK57/GSnoA+0PZj
vfMZGQZ+pbtr8tFX4MDdffMTaxR8J1qrq+NfwzfezuucNozDL+YSYX7sENzY
/eOB8JoJYFRLNseEvwG9EBuq2uUDqBk7NfWmvQWdl5GVCfIpcMy1vzouHgHe
Qt220oRp0Bxr3BEteQ+mvPQKn69lkPG4gs48Ng4LM5OVqwZmwEbXbmHFkQkw
dPHIcRTOgkkf+3VU8CQ86rM7Mb5cAcWFHMHtoA9QbrpZS1Y8D5EvD7WYxE5B
uldHp505DQNttjjlXPgInlWdo2JlOspzt/HfJU/D3wqf8ZRGOj4VZfj8cOUT
CA4av3W/xkArB8P5nssykFwKa64/wcT67VaFmDUDcaJzdMeNSph3K93q1e9y
yBUMrIknlXHpSlN/7+uz4G173yb0mTI204nTWvfmwMuix9G4iIW3iZP5T+sV
0P/gfqb0lAqaLmX782vnYbHF2p592wkcS5pW3/h8AUKrmpfGLCdxZVycmdCf
hglrmba+gyS+8uzuspfSUNdcVuRctAgdB1tmbgfQUeFuxpZHf4GhQX4CjVE6
RnuO+Lo7LEaXssxdGiEMtIt6VxKsr4rv5/wjmdMM/CNS9MZ+WBUvt//0V8BJ
JqZrVQiW3/gS5QJbn7BZJja0be+TnFmCuorzXoHhSugmMblKX8PGIYfEBkJJ
GQ+ltLnFp7DxoVEj6CUq4/qq/qvq82z0J/KVDEgW7mk3Hw09rIaS31bZPjzP
QnWawYatT9Swydqmlqumgsaa+wK6LTgo88/c65OkgkpRw86nLnCwzjV3v6oG
gVGT+utOL3CQb2VTUHCBQCf39NlDvhQeG33y8UUqgc5g3qvjR6HoMm8bJ51A
17WPH3QepTCa/Lk/MpvAvfKphP3+FGZ11utw8wn0znFd5hxI4fOwA8lzEgJF
QyqWNtEU7qoICnPrJjAlJCRAO5NCtwClutgeAi/yVLkdWRR6GKZq3Osl8JLj
NcvUHAq/O3un1Og1gdnazXNqVyiM8aS9nx0h8FrV+kTyOoVV8nP8/HkCy1mD
BbIyCmtL9G9100i8MxaRWFZOYSP/1gKbSeLdDo4wuILC7obWrAgVEquLcNN4
JYWyDJ12VzaJ9S5ZNdIaChdcilfHckhs3LyxMO8RhSwmBN9VJ7FpRUOibx2F
6sf5akZaJLZMfuL2/kOhjv4Uz0vn83cnbcp+QqFhy5mSZF0S22pWa3v9S6Fx
nKaiVp/EruJ7imXPKLSwvu40a0Bid+re/ufNFP4HyPUvwg==
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
         Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVx3k4lAkcwPE5HO/bapvxTiSJVLS0T+UqOX6/ZoVYs1FZpYORMJVxrZCy
icmxlYbVCFla5z54sCGSqSharJByJR0mpSiFxrXtH9/n83xX8YUu3gwajcb7
2v8y6xe1vTANtN67tF6rvJxvvXbklsXK5J8guccho0zmBmf70k1PJXvAVIfI
Q11PAGWT8Ihd4gOHOeX+ocVB8IrjO10pFkKwJLfSShYGvbYxd3LFUaDXfX98
sywOHh0S62eKL0LsgFuPkUwCLsc0eiXiLOANnXAykhXApY/7K1LFpaAzkza2
QVYNFo0Oi7jBUvDMcXXjTTRDQATPsyKgCUbiBX10u044Xu19gbG6HU7merdU
hvRA1+sdZD6/CziRByusOM8gYcMkrXLvE/hR7ls/aPICAg2bfpfm9gPX2ic/
XjIMcq+jJQP+z2B0l22Rx+gI8OtcdyYdeQ6lu2m+U0rvwOtDl1Qa9xIs1G1W
OhqNw28bq4R5omFYZsPlRTR8AIa0anNMxGsIl3aqSHkTwDZwbBuUvIGTy6Nr
4uWfwD6Le21cPAom1Xa2FfGToD7WYhtV9R4Uh7qlHlun4cr9GjrTbxwCmDse
rHnxBSy1ti3oHP4ARaKsVHvhDBg+Y708FfIRQt1b/cZXzEFxgarv9aAJIFpv
a0wXz0Pk0wOdhqJPwM1+1L9tIw0DLbc4Xk35DCXxv7wRK9JRnmXDf5s0CQ1j
KmPJLXRsD7jicSJnCibWBbx1/ZOB5na68wPZ01Bf3t/WfJyJzdvNCzDjC6ws
5dLsjRUwtyzN/PlfckhYZ/BdHKmIS1evFxwsnAEaXWNr2ENF7KAT0Ro3Z8HE
5769QZESXieC89qb56C2SCKRnVbG9UtZAn7jPFQbH+nfvZ3AsQuTHOPuBRD4
iVRjVpC4+ty5DUIBDYna7y29XpH4fF9fL1dGwxuFnflORYvQ/lXnl+v+dGwj
cpbIo77BsCBvX7V3dBzFbZ6udirIq0x3UAtlYMHb1yUh2ovx/awgkjnJwJEy
12HuyGLMfnzmb/9gJrJ0GX4rSr9Fua+VR/gME7Mu1j2til2CWnOX3AMjFNCE
EXmNrs/CYbvEB4SCIupomDrHJbPwrl4LrExUxCcSpxzOPAsFRJ7CKlIJ7xgd
Gw3zZGPVH2us7l5Swl9T9I2sW9nYZmHZ6MJWxsd5usf7NqnitCB9l8cFZdyi
Yuh0OkUVm3Zm7VmsRmDHbNO66AVV5Jtb5uenEGihdmrmgBeFfu9aP/enEphi
yh7U9KYwIPuQjWoagdHC3js9RyiMIs8ORWYSeP6MUcIeAYUZPc2aLnkENkUa
L3MKpLA7/Oek2SoCeT9MmVhGUehQExTu3Efg5Vhf/+XpFDr7KzSJBghsT5lz
fpJBoZtuqtrNQQLNusWmqVcp9Em4UaH3kkCdjHuz7BwKY/bR3s+MEhiBOolk
IYW35Of5efMElgT15k9XUthYol3WRyOR7xCaWFlNYQu/bIHFJDHBX0kYUkNh
34OujJPKJB42szQbr6Nw+orm452sr193uUHWQOECr3itSJXEjUP6Bbn3KFRi
Qkgth8QRzduJXk0Uco7y2XoaJGaenXAZ/IdCTe1Ph9w1SVx7RmSW2Uqhbmds
SZIWibVC0+Xu/1JocE59rlGbxP3QMbfsIYWbLAodZ1aRGFeVNtjdQeF/Nmoy
og==
          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1]], 
            Line[CompressedData["
1:eJwVx3081AccwPF74Px+LevcT4QQlQq9UFMZ+n5ZRYm4SkY5nbRLyx15mcds
TR6yTKfk2XrwkI1qlpMiKwqTlYc8JSQuRR6SznGs/fF5vV8fA76Q68eg0WjO
n/tf5v1FTQOWgVsfevJcDxhFbF09XGWtl7IHYpuPSjOkHiC/aXakU8yDWovy
jCNSAQyqC2RlYiH49fsE75SGQteOmAd54mjYYmXZby2NhzaeeE22+FdY4Zer
aSlNA+73Wl1p4lzgRLT+aSEthPOTB0tTxTfgS5aQZi4tB+vaXYvsT1ZDM3hn
unyoB1G4y+FSUR0E+QYuYTi0wIlyvyTGyqegl+KhIgnuhNY3O8kCfiuEeBe+
sFXvg7Nm07SybztgYvDuWO9XAxBoUnexOu8FRL5t701IGwK57/GSnoA+0PZj
vfMZGQZ+pbtr8tFX4MDdffMTaxR8J1qrq+NfwzfezuucNozDL+YSYX7sENzY
/eOB8JoJYFRLNseEvwG9EBuq2uUDqBk7NfWmvQWdl5GVCfIpcMy1vzouHgHe
Qt220oRp0Bxr3BEteQ+mvPQKn69lkPG4gs48Ng4LM5OVqwZmwEbXbmHFkQkw
dPHIcRTOgkkf+3VU8CQ86rM7Mb5cAcWFHMHtoA9QbrpZS1Y8D5EvD7WYxE5B
uldHp505DQNttjjlXPgInlWdo2JlOspzt/HfJU/D3wqf8ZRGOj4VZfj8cOUT
CA4av3W/xkArB8P5nssykFwKa64/wcT67VaFmDUDcaJzdMeNSph3K93q1e9y
yBUMrIknlXHpSlN/7+uz4G173yb0mTI204nTWvfmwMuix9G4iIW3iZP5T+sV
0P/gfqb0lAqaLmX782vnYbHF2p592wkcS5pW3/h8AUKrmpfGLCdxZVycmdCf
hglrmba+gyS+8uzuspfSUNdcVuRctAgdB1tmbgfQUeFuxpZHf4GhQX4CjVE6
RnuO+Lo7LEaXssxdGiEMtIt6VxKsr4rv5/wjmdMM/CNS9MZ+WBUvt//0V8BJ
JqZrVQiW3/gS5QJbn7BZJja0be+TnFmCuorzXoHhSugmMblKX8PGIYfEBkJJ
GQ+ltLnFp7DxoVEj6CUq4/qq/qvq82z0J/KVDEgW7mk3Hw09rIaS31bZPjzP
QnWawYatT9Swydqmlqumgsaa+wK6LTgo88/c65OkgkpRw86nLnCwzjV3v6oG
gVGT+utOL3CQb2VTUHCBQCf39NlDvhQeG33y8UUqgc5g3qvjR6HoMm8bJ51A
17WPH3QepTCa/Lk/MpvAvfKphP3+FGZ11utw8wn0znFd5hxI4fOwA8lzEgJF
QyqWNtEU7qoICnPrJjAlJCRAO5NCtwClutgeAi/yVLkdWRR6GKZq3Osl8JLj
NcvUHAq/O3un1Og1gdnazXNqVyiM8aS9nx0h8FrV+kTyOoVV8nP8/HkCy1mD
BbIyCmtL9G9100i8MxaRWFZOYSP/1gKbSeLdDo4wuILC7obWrAgVEquLcNN4
JYWyDJ12VzaJ9S5ZNdIaChdcilfHckhs3LyxMO8RhSwmBN9VJ7FpRUOibx2F
6sf5akZaJLZMfuL2/kOhjv4Uz0vn83cnbcp+QqFhy5mSZF0S22pWa3v9S6Fx
nKaiVp/EruJ7imXPKLSwvu40a0Bid+re/ufNFP4HyPUvwg==
             "]]}, "Charting`Private`Tag#1"], 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Dashing[{Small, Small}]], 
            Line[CompressedData["
1:eJwVx3k4lAkcwPE5HO/bapvxTiSJVLS0T+UqOX6/ZoVYs1FZpYORMJVxrZCy
icmxlYbVCFla5z54sCGSqSharJByJR0mpSiFxrXtH9/n83xX8YUu3gwajcb7
2v8y6xe1vTANtN67tF6rvJxvvXbklsXK5J8guccho0zmBmf70k1PJXvAVIfI
Q11PAGWT8Ihd4gOHOeX+ocVB8IrjO10pFkKwJLfSShYGvbYxd3LFUaDXfX98
sywOHh0S62eKL0LsgFuPkUwCLsc0eiXiLOANnXAykhXApY/7K1LFpaAzkza2
QVYNFo0Oi7jBUvDMcXXjTTRDQATPsyKgCUbiBX10u044Xu19gbG6HU7merdU
hvRA1+sdZD6/CziRByusOM8gYcMkrXLvE/hR7ls/aPICAg2bfpfm9gPX2ic/
XjIMcq+jJQP+z2B0l22Rx+gI8OtcdyYdeQ6lu2m+U0rvwOtDl1Qa9xIs1G1W
OhqNw28bq4R5omFYZsPlRTR8AIa0anNMxGsIl3aqSHkTwDZwbBuUvIGTy6Nr
4uWfwD6Le21cPAom1Xa2FfGToD7WYhtV9R4Uh7qlHlun4cr9GjrTbxwCmDse
rHnxBSy1ti3oHP4ARaKsVHvhDBg+Y708FfIRQt1b/cZXzEFxgarv9aAJIFpv
a0wXz0Pk0wOdhqJPwM1+1L9tIw0DLbc4Xk35DCXxv7wRK9JRnmXDf5s0CQ1j
KmPJLXRsD7jicSJnCibWBbx1/ZOB5na68wPZ01Bf3t/WfJyJzdvNCzDjC6ws
5dLsjRUwtyzN/PlfckhYZ/BdHKmIS1evFxwsnAEaXWNr2ENF7KAT0Ro3Z8HE
5769QZESXieC89qb56C2SCKRnVbG9UtZAn7jPFQbH+nfvZ3AsQuTHOPuBRD4
iVRjVpC4+ty5DUIBDYna7y29XpH4fF9fL1dGwxuFnflORYvQ/lXnl+v+dGwj
cpbIo77BsCBvX7V3dBzFbZ6udirIq0x3UAtlYMHb1yUh2ovx/awgkjnJwJEy
12HuyGLMfnzmb/9gJrJ0GX4rSr9Fua+VR/gME7Mu1j2til2CWnOX3AMjFNCE
EXmNrs/CYbvEB4SCIupomDrHJbPwrl4LrExUxCcSpxzOPAsFRJ7CKlIJ7xgd
Gw3zZGPVH2us7l5Swl9T9I2sW9nYZmHZ6MJWxsd5usf7NqnitCB9l8cFZdyi
Yuh0OkUVm3Zm7VmsRmDHbNO66AVV5Jtb5uenEGihdmrmgBeFfu9aP/enEphi
yh7U9KYwIPuQjWoagdHC3js9RyiMIs8ORWYSeP6MUcIeAYUZPc2aLnkENkUa
L3MKpLA7/Oek2SoCeT9MmVhGUehQExTu3Efg5Vhf/+XpFDr7KzSJBghsT5lz
fpJBoZtuqtrNQQLNusWmqVcp9Em4UaH3kkCdjHuz7BwKY/bR3s+MEhiBOolk
IYW35Of5efMElgT15k9XUthYol3WRyOR7xCaWFlNYQu/bIHFJDHBX0kYUkNh
34OujJPKJB42szQbr6Nw+orm452sr193uUHWQOECr3itSJXEjUP6Bbn3KFRi
Qkgth8QRzduJXk0Uco7y2XoaJGaenXAZ/IdCTe1Ph9w1SVx7RmSW2Uqhbmds
SZIWibVC0+Xu/1JocE59rlGbxP3QMbfsIYWbLAodZ1aRGFeVNtjdQeF/Nmoy
og==
             "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, Pi}, {0., 4.955897827841649}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Dashing[{Small, Small}]], 
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0, Pi}, {0., 4.955897827841649}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2], 
            Dashing[{Small, Small}]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJwVx3081AccwPF74Px+LevcT4QQlQq9UFMZ+n5ZRYm4SkY5nbRLyx15mcds
TR6yTKfk2XrwkI1qlpMiKwqTlYc8JSQuRR6SznGs/fF5vV8fA76Q68eg0WjO
n/tf5v1FTQOWgVsfevJcDxhFbF09XGWtl7IHYpuPSjOkHiC/aXakU8yDWovy
jCNSAQyqC2RlYiH49fsE75SGQteOmAd54mjYYmXZby2NhzaeeE22+FdY4Zer
aSlNA+73Wl1p4lzgRLT+aSEthPOTB0tTxTfgS5aQZi4tB+vaXYvsT1ZDM3hn
unyoB1G4y+FSUR0E+QYuYTi0wIlyvyTGyqegl+KhIgnuhNY3O8kCfiuEeBe+
sFXvg7Nm07SybztgYvDuWO9XAxBoUnexOu8FRL5t701IGwK57/GSnoA+0PZj
vfMZGQZ+pbtr8tFX4MDdffMTaxR8J1qrq+NfwzfezuucNozDL+YSYX7sENzY
/eOB8JoJYFRLNseEvwG9EBuq2uUDqBk7NfWmvQWdl5GVCfIpcMy1vzouHgHe
Qt220oRp0Bxr3BEteQ+mvPQKn69lkPG4gs48Ng4LM5OVqwZmwEbXbmHFkQkw
dPHIcRTOgkkf+3VU8CQ86rM7Mb5cAcWFHMHtoA9QbrpZS1Y8D5EvD7WYxE5B
uldHp505DQNttjjlXPgInlWdo2JlOspzt/HfJU/D3wqf8ZRGOj4VZfj8cOUT
CA4av3W/xkArB8P5nssykFwKa64/wcT67VaFmDUDcaJzdMeNSph3K93q1e9y
yBUMrIknlXHpSlN/7+uz4G173yb0mTI204nTWvfmwMuix9G4iIW3iZP5T+sV
0P/gfqb0lAqaLmX782vnYbHF2p592wkcS5pW3/h8AUKrmpfGLCdxZVycmdCf
hglrmba+gyS+8uzuspfSUNdcVuRctAgdB1tmbgfQUeFuxpZHf4GhQX4CjVE6
RnuO+Lo7LEaXssxdGiEMtIt6VxKsr4rv5/wjmdMM/CNS9MZ+WBUvt//0V8BJ
JqZrVQiW3/gS5QJbn7BZJja0be+TnFmCuorzXoHhSugmMblKX8PGIYfEBkJJ
GQ+ltLnFp7DxoVEj6CUq4/qq/qvq82z0J/KVDEgW7mk3Hw09rIaS31bZPjzP
QnWawYatT9Swydqmlqumgsaa+wK6LTgo88/c65OkgkpRw86nLnCwzjV3v6oG
gVGT+utOL3CQb2VTUHCBQCf39NlDvhQeG33y8UUqgc5g3qvjR6HoMm8bJ51A
17WPH3QepTCa/Lk/MpvAvfKphP3+FGZ11utw8wn0znFd5hxI4fOwA8lzEgJF
QyqWNtEU7qoICnPrJjAlJCRAO5NCtwClutgeAi/yVLkdWRR6GKZq3Osl8JLj
NcvUHAq/O3un1Og1gdnazXNqVyiM8aS9nx0h8FrV+kTyOoVV8nP8/HkCy1mD
BbIyCmtL9G9100i8MxaRWFZOYSP/1gKbSeLdDo4wuILC7obWrAgVEquLcNN4
JYWyDJ12VzaJ9S5ZNdIaChdcilfHckhs3LyxMO8RhSwmBN9VJ7FpRUOibx2F
6sf5akZaJLZMfuL2/kOhjv4Uz0vn83cnbcp+QqFhy5mSZF0S22pWa3v9S6Fx
nKaiVp/EruJ7imXPKLSwvu40a0Bid+re/ufNFP4HyPUvwg==
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Dashing[{Small, Small}]], 
         Line[CompressedData["
1:eJwVx3k4lAkcwPE5HO/bapvxTiSJVLS0T+UqOX6/ZoVYs1FZpYORMJVxrZCy
icmxlYbVCFla5z54sCGSqSharJByJR0mpSiFxrXtH9/n83xX8YUu3gwajcb7
2v8y6xe1vTANtN67tF6rvJxvvXbklsXK5J8guccho0zmBmf70k1PJXvAVIfI
Q11PAGWT8Ihd4gOHOeX+ocVB8IrjO10pFkKwJLfSShYGvbYxd3LFUaDXfX98
sywOHh0S62eKL0LsgFuPkUwCLsc0eiXiLOANnXAykhXApY/7K1LFpaAzkza2
QVYNFo0Oi7jBUvDMcXXjTTRDQATPsyKgCUbiBX10u044Xu19gbG6HU7merdU
hvRA1+sdZD6/CziRByusOM8gYcMkrXLvE/hR7ls/aPICAg2bfpfm9gPX2ic/
XjIMcq+jJQP+z2B0l22Rx+gI8OtcdyYdeQ6lu2m+U0rvwOtDl1Qa9xIs1G1W
OhqNw28bq4R5omFYZsPlRTR8AIa0anNMxGsIl3aqSHkTwDZwbBuUvIGTy6Nr
4uWfwD6Le21cPAom1Xa2FfGToD7WYhtV9R4Uh7qlHlun4cr9GjrTbxwCmDse
rHnxBSy1ti3oHP4ARaKsVHvhDBg+Y708FfIRQt1b/cZXzEFxgarv9aAJIFpv
a0wXz0Pk0wOdhqJPwM1+1L9tIw0DLbc4Xk35DCXxv7wRK9JRnmXDf5s0CQ1j
KmPJLXRsD7jicSJnCibWBbx1/ZOB5na68wPZ01Bf3t/WfJyJzdvNCzDjC6ws
5dLsjRUwtyzN/PlfckhYZ/BdHKmIS1evFxwsnAEaXWNr2ENF7KAT0Ro3Z8HE
5769QZESXieC89qb56C2SCKRnVbG9UtZAn7jPFQbH+nfvZ3AsQuTHOPuBRD4
iVRjVpC4+ty5DUIBDYna7y29XpH4fF9fL1dGwxuFnflORYvQ/lXnl+v+dGwj
cpbIo77BsCBvX7V3dBzFbZ6udirIq0x3UAtlYMHb1yUh2ovx/awgkjnJwJEy
12HuyGLMfnzmb/9gJrJ0GX4rSr9Fua+VR/gME7Mu1j2til2CWnOX3AMjFNCE
EXmNrs/CYbvEB4SCIupomDrHJbPwrl4LrExUxCcSpxzOPAsFRJ7CKlIJ7xgd
Gw3zZGPVH2us7l5Swl9T9I2sW9nYZmHZ6MJWxsd5usf7NqnitCB9l8cFZdyi
Yuh0OkUVm3Zm7VmsRmDHbNO66AVV5Jtb5uenEGihdmrmgBeFfu9aP/enEphi
yh7U9KYwIPuQjWoagdHC3js9RyiMIs8ORWYSeP6MUcIeAYUZPc2aLnkENkUa
L3MKpLA7/Oek2SoCeT9MmVhGUehQExTu3Efg5Vhf/+XpFDr7KzSJBghsT5lz
fpJBoZtuqtrNQQLNusWmqVcp9Em4UaH3kkCdjHuz7BwKY/bR3s+MEhiBOolk
IYW35Of5efMElgT15k9XUthYol3WRyOR7xCaWFlNYQu/bIHFJDHBX0kYUkNh
34OujJPKJB42szQbr6Nw+orm452sr193uUHWQOECr3itSJXEjUP6Bbn3KFRi
Qkgth8QRzduJXk0Uco7y2XoaJGaenXAZ/IdCTe1Ph9w1SVx7RmSW2Uqhbmds
SZIWibVC0+Xu/1JocE59rlGbxP3QMbfsIYWbLAodZ1aRGFeVNtjdQeF/Nmoy
og==
          "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{0, Pi}, {0., 4.955897827841649}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Dashing[{Small, Small}]], 
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0., 4.955897827841649}}, {{0, 3.141592653589793}, {0., 
     4.955897827841649}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.899197050606642*^9, 3.899197213714921*^9, 
  3.899197265180953*^9, 3.899202048357747*^9, 3.899204803921258*^9, 
  3.899267950475226*^9, 3.8993531868150454`*^9, 3.899366315255604*^9, 
  3.899369035769331*^9, 3.8993861702579117`*^9, 3.89943298474337*^9, 
  3.899439926393331*^9},
 CellLabel->
  "Out[326]=",ExpressionUUID->"faf42ef9-043c-4c93-8d32-57d7d9097ac6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[CapitalUpsilon]\[CurlyPhi]OS", "=", 
  RowBox[{"(", 
   RowBox[{"\[ScriptCapitalJ]", " ", "-", " ", 
    RowBox[{"sp", " ", "\[ScriptCapitalE]"}]}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalUpsilon]\[CurlyPhi]", "[", 
    RowBox[{"pi_", ",", "ei_", ",", "spi_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[CapitalUpsilon]\[CurlyPhi]OS", "/.", "Subs"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "->", "pi"}], ",", 
      RowBox[{"e", "->", "ei"}], ",", 
      RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.89919712833324*^9, 3.8991971760063887`*^9}, {
  3.899197291227721*^9, 3.899197298571714*^9}, {3.899198335523662*^9, 
  3.899198358341875*^9}},
 CellLabel->
  "In[327]:=",ExpressionUUID->"c9f90d26-1d78-476f-96fb-6a694034a203"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "sp"}], " ", "\[ScriptCapitalE]"}], "+", 
  "\[ScriptCapitalJ]"}]], "Output",
 CellChangeTimes->{3.8991983594845343`*^9, 3.89920204876294*^9, 
  3.8992048042768593`*^9, 3.8992679508866568`*^9, 3.899353187188313*^9, 
  3.899366315675071*^9, 3.899369036195568*^9, 3.899386170646751*^9, 
  3.8994329851367483`*^9, 3.89943992646741*^9},
 CellLabel->
  "Out[327]=",ExpressionUUID->"29290ced-dd70-45fd-a350-c2a6094b6f8e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "The ",
 Cell[BoxData[
  FormBox["\[Psi]", TraditionalForm]],
  FormatType->TraditionalForm,ExpressionUUID->
  "eebedba6-1782-4c8a-9d61-44ad7cd7fed1"],
 " integrals"
}], "Subsection",
 CellChangeTimes->{{3.89917965094309*^9, 3.899179674701448*^9}, {
  3.8991797486243477`*^9, 
  3.8991797783874407`*^9}},ExpressionUUID->"3afc80a2-487a-4f16-a406-\
dab8f35ad524"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Psi]integr", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], "\[Psi]dot"}], 
        SqrtBox["Rfunc"]], "/.", "fhRule"}], "/.", "DeTrRule"}], "/.", 
     "Subs"}], "/.", 
    RowBox[{"{", 
     RowBox[{"sp", "->", "0"}], "}"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"N\[Psi]", "[", 
    RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "rf_"}], "]"}], " ", ":=", 
   " ", 
   RowBox[{"NIntegrate", "[", 
    RowBox[{
     RowBox[{"\[Psi]integr", " ", "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", "->", "pi"}], ",", 
        RowBox[{"e", "->", "ei"}], ",", 
        RowBox[{"sp", "->", "spi"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"r", ",", 
       FractionBox["pi", 
        RowBox[{"1", "+", "ei"}]], ",", "rf"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalPsi]tr", "[", 
    RowBox[{"pi_", ",", "ei_", ",", "spi_", ",", "\[Chi]_"}], "]"}], ":=", 
   "  ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]"}], 
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", " ", "-", " ", 
             SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"r1", " ", "-", " ", "r3"}], ")"}], "r2"}]], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ScriptCapitalJ]", "2"], " ", "+", " ", 
           SuperscriptBox["r3", "2"]}], ")"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["r3", "2"], " ", 
          RowBox[{"EllipticF", "[", 
           RowBox[{"\[Chi]", ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], " ", "+",
          " ", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["r2", "2"], " ", "-", " ", 
              SuperscriptBox["r3", "2"]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], " ", "+", " ", 
            SuperscriptBox["r2", "2"]}]], 
          RowBox[{"Re", "[", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"r3", " ", "-", " ", 
                RowBox[{"I", " ", "\[ScriptCapitalJ]"}]}], 
               RowBox[{"r2", " ", "-", " ", 
                RowBox[{"I", " ", "\[ScriptCapitalJ]"}]}]], 
              FractionBox[
               RowBox[{"r1", "-", "r2"}], 
               RowBox[{"r1", "-", "r3"}]]}], ",", "\[Chi]", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "]"}]}], 
         " ", "-", " ", 
         RowBox[{
          FractionBox[
           RowBox[{"\[ScriptCapitalJ]", 
            RowBox[{"(", 
             RowBox[{"r2", "-", "r3"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[ScriptCapitalJ]", "2"], " ", "-", " ", 
              RowBox[{"r2", " ", "r3"}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], " ", "+", " ", 
            SuperscriptBox["r2", "2"]}]], 
          RowBox[{"Im", "[", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"r3", " ", "-", " ", 
                RowBox[{"I", " ", "\[ScriptCapitalJ]"}]}], 
               RowBox[{"r2", " ", "-", " ", 
                RowBox[{"I", " ", "\[ScriptCapitalJ]"}]}]], 
              FractionBox[
               RowBox[{"r1", "-", "r2"}], 
               RowBox[{"r1", "-", "r3"}]]}], ",", "\[Chi]", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "]"}]}]}],
         ")"}]}], " ", ")"}], "/.", "Subs"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "->", "pi"}], ",", 
      RowBox[{"e", "->", "ei"}], ",", 
      RowBox[{"sp", "->", "spi"}]}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalPsi]tr", "[", 
         RowBox[{"10", ",", "0.4", ",", "0.05", ",", 
          RowBox[{"JacobiAmplitude", "[", 
           RowBox[{
            RowBox[{
             FractionBox[
              RowBox[{"EllipticK", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]], "]"}], "\[Pi]"], 
             "qr"}], ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], "]"}], "/.",
         "Subs"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", "->", "10"}], ",", 
         RowBox[{"e", "->", "0.4"}], ",", 
         RowBox[{"sp", "->", "0.05"}]}], "}"}]}], ",", 
      RowBox[{"N\[Psi]", "[", 
       RowBox[{"10", ",", "0.4", ",", "0.05", ",", 
        RowBox[{"rqr", "[", 
         RowBox[{"10", ",", "0.4", ",", "0.05", ",", "qr"}], "]"}]}], "]"}]}],
      "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"qr", ",", "0", ",", "\[Pi]"}], "}"}], ",", 
    RowBox[{"PlotStyle", "->", 
     RowBox[{"{", 
      RowBox[{"Blue", ",", "Dashed"}], "}"}]}]}], "]"}], "//", 
  "Quiet"}]}], "Input",
 CellChangeTimes->{{3.897624139208727*^9, 3.8976243206129208`*^9}, {
   3.8976243540896187`*^9, 3.897624370181075*^9}, {3.897624636252551*^9, 
   3.897624684944442*^9}, {3.8976247460427513`*^9, 3.897624751195285*^9}, {
   3.897632711533084*^9, 3.897632725211171*^9}, {3.89866808551103*^9, 
   3.898668094661172*^9}, {3.8986681401522818`*^9, 3.898668176782159*^9}, 
   3.898668366192877*^9, 3.898669070105049*^9, {3.898669202456049*^9, 
   3.898669232381185*^9}, 3.8991784773442793`*^9, 3.899179828564934*^9, {
   3.899197433129816*^9, 3.89919774540906*^9}, {3.899197987393269*^9, 
   3.899198175342194*^9}, 3.8991982317337303`*^9, 3.899198282261685*^9},
 CellLabel->
  "In[329]:=",ExpressionUUID->"3dd05f46-001d-4205-8bfa-986ea5061dc4"],

Cell[BoxData[
 GraphicsBox[
  InterpretationBox[{
    TagBox[{{{}, {}, 
       TagBox[
        {RGBColor[0, 0, 1], AbsoluteThickness[2], Opacity[1.], 
         LineBox[CompressedData["
1:eJwVxXk41HkcAOAxB79fRV89YuMZkmOf0j62emzE+HyosI6S3VJpMzulJgrD
RGytTWKXckyyrkg5ql1KRFRu2xAeRXKky5EUYRga1+7+8T6vvsDPzYvJYDBc
/vP/rMolLX1mIuuO8WeyyRCxtdGHCkvdSzthNUafPSN1A8Ud08NdEk8YuKlx
5UepAAY0hDMlEj/45uQYH6UB0G0XUZMjCYOits06m6Xh8NxT8vUVSRwYhlZ0
mUkl4HZ8VXeyJBNOME5W2EqvQcLEgaIkyW34eMZ6e5j0LljWOy6xDawCm/hE
ja5LteAfuuPnIn8p0CFTWtVfNcOJ+16xTINW+NNka7rQvA3ah76n8wTtUMmq
K2I5d0K0qZxRsq8TWDlXu4OW9oLIRHq5Kucl7FOPE3G034LikE9Br+8bCO/t
rsTsPhA82uMaf+Qd9IclajSzB+HQeHtV1e/9sKHTetgobQgufFvqlxs5CO2p
+mYU9RGYVaWbI0KHIMu8MdjFZwTU1zm1vE4ehol8yzsdzDFwyLS9Pib5BIlR
4Vo7LcdB63OTXVjpKDC5TcOdcROQ+rhciXVsDF4dUNXVfSMDK67N4urD4yAp
2GgYrzMFJm9I/xnxBLTwbr9uCJRD/o0VwnsBMjD9O8JIt3QaTr/6qc0kchKc
64YtarW+gMjK3CkjcQoIN8PAU6wAReY2wcd4OezR5SfVPZiFVv9UfvC1aWCH
VHOM9efBwn7NQm/WDPAfbHjEFS1Aw3aLG5j+Bco3Nt/NfbgIOYUpFu/+UsDg
c30fz0sMXGmw3vvgzVmQueexgnhK+EyJCl/1cA4WYzzdqWklvEcF5rY2zMNc
JWfAv4CJ61cSb0H9Arxw/bz88n4Wfo6Va2zqWIS2Qa+uI5psNIiKMvXzZiDD
tY9f9w8b3+3v6bZ9z8Ayw4i5ZDEHHQbavtzzVcJWO6+zWzYq46kAL6HmiBJm
iYIeqfUr446SNEfNICY++U5zvCZHBUfnvE+z5EzcWtKzRexBYdaLs8W+gSxc
KR2ydVajUSHk8UNmWRg2ZlKt/JRG7nyChyiUjXq7R8VHopbgoH1MI8XmYHXo
J5c8l6VYa9wEujEclG8yW9tNlqE3lcvWp5XxPm/ag/94GZZeNeTVJiijz8Gd
LwsvqmKLpVW9m7oKjq17VrHWXg1nvNN+4Meq4OpladkW82oodc3crapJ4Yx/
W/ZkzXIUWFjl5SVSGKw62fiER/DYSPPUyyQKt4+G6wiBoH+W57YVKRQ6pBQf
Z9sQDKPPvT19hcJi+RThbSOY3tWg45ZLofeJG/wCR4IdIe7xc6UUKuz/0E5w
J+hYHhCyq4dCEweDwT0igrt82dLIXgrL/Gg7WQDBvWuSNB++pvBpPuTGiQke
jS4rMu6n8IOW5Kg0mGDEfsbo7CcKo50iRyx+JVihuCjIXaAw8OQxNjeGYH2B
XmEPg8YPs9rCsgsEmwSFi4RF4zlb2ZPdsQR7GtvTf1Gh8XG5amJsAsGZVJ0X
roTGDKVrRoxkgos78o0iV9B4apNNdHoKQWUWiB9o0Hg7dGLUPI2gho9A3XgV
jYOy3+6LMgjq6E16eujQuGV2L1ftKsE1becL4rk0JteYh9/KIrguSmu+Xo/G
W8Xc93bXCW6wvOk0q0+jthXHuS+b4L8tVSvn
          "]]},
        Annotation[#, "Charting`Private`Tag#1"]& ], 
       TagBox[
        {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[2], 
         Opacity[1.], Dashing[{Small, Small}], LineBox[CompressedData["
1:eJwVjGs0lHkcgMfM4H1Vu//pMFaKsGmjg9p1Suj3E5XYXCbVko1GF7fGrU3k
ckhyiB2jVCKXMmp3ERZRWWVtSMg9l2okq0Io4262/fCc59PzaPH9eMeYDAbD
7gv/m/WXUtMb44Dtgu6+H4acXbeve1dlqpFiD15RzcM3JDw413vdODzFHWSP
rhgw2zygSAodnIITkLqFpzvt6AtvlT1nykR+4OL4zmm3JBB6dsU8zhVFwr1x
5deWkmjocBOtzxD9Cgb3odhSIgKer1rPVVEmmN0PkeNJciB50rUkVVQIq8Tv
1RIkxWBaa6O0I6gaalTMBgbza8A/1O5IiX8dBBXQs/vgGZy8dyyJqdMC9rGj
Dn87tkH78B46j98O6R0mbT0+3RBvKGWUOXfDybthxaab+iFAv+5ydW4flDVt
ZSkZSWDOw6egX/AalA6fl7d4+Ab4Dw84CI8PgOEnYVL42iHwmGivro4bhNDZ
lCM3K4bholG5nzh2CFyDm8PZGz4As7p8S0zoMFBFkfIZSaPA0bNtenX1PQS2
7ykrUBkH68wdN8dFI+CvmGNpZD8Bqh8bd0WWj8EBlaQnNbcmIe1JpRzLaxyy
vDLSpVOfwGyNhWzt0QkYiDvib7R5CvRfk8HwU5Ng3frUWC9BCvm3V3qWBn4C
zougLLXmaQh7+XObfuxn2HYz+g9bo1kIMNtqe+PSFLSKOwv3J87BXKYV/4NQ
CnrhY4TqmIcW/zT34JxpOD3SYJy1bRFMdmsv9WfPgFNEYFZh/BLU7zS5jemz
ECdfv2DcKYPcomsmA7/PAfc7G1XVLAaq6Gz0PnxnHuyKhMocGzlslaOi1R4s
wIFbLOEvLCaWUkHilvpFMCj+YJBTycSNKsSbX7sEP3po7I86zsKPSVLl7798
jXJ9N89psVHnwgVDP28GRripdU0/Z+OAS2/Pjn8ZmOdkXMKPlEfrt22zpQI5
9Ljb2RBjpoBnAo95ckflsLLYrrBzVAHtyq7bcE8z0eDzYsVEgSKOLXiHsaRM
jN+wTkAfpTC7K+pPQRALa8a80i24NM55mruHzLPwbHGw/M5uGtcsJh8KCGUj
13xV2ESiEg7tTmig2PLoXnWj/sS+ZVij2wgaCfK4vrnRqlFlOXpTYrYWrYAR
FaPLLj5djuVZ35rXJCugxnPsYiSvwCZTs1oeRxFLDTnW4j1f4Yz39X3uSYp4
8tBq0eDSV1jnkLl/BZfClDMc54qar5FvYpaXd4lC8+6RjkfmBL1Gn031pVJo
6xJr4QoE/bPdrFZeo3DV8/f5UiQYSZ+ThGVQ6OSJcfpWBNNf1KvzxBReEXAt
L9sQ7Aw5KFwop7CqL6LV8yBBm8rAEMdeCkNj7a1IAEFHAbsutp/Cx84+Vb8F
EvxJO5X74BWFTSvatu48RfBEfEWJ7iCFsrfRBqHBBGNcGGPzIxTq751dPRhO
sGoukS9eojBKey/7XjzB2gLNol4GjdNX2dG8iwQb+UUywqIxoaNLNpJIsLeh
Pf2sIo26LZPzWskEZ9LUuxwIjUVpnlMJVwjK7PLXxa6kURNmgnSvEVRgwan7
yjQuu505WZ1GUNmHz9FVo1FGfzM+lUFQXfOz2yF1GrPOvxQIMwlqt50vEK6h
UYf6Z1Qvm6DeBdXFWs0v/dNs39ocgptM79jOa9EYOtv8zu0Wwf8A3l84QA==

          "]]},
        Annotation[#, "Charting`Private`Tag#2"]& ]}, {}},
     {"WolframDynamicHighlight", <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
    DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
      Slot["HighlightElements"], 
      Slot["LayoutOptions"], 
      Slot["Meta"], 
      Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
          Annotation[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1]], 
            Line[CompressedData["
1:eJwVxXk41HkcAOAxB79fRV89YuMZkmOf0j62emzE+HyosI6S3VJpMzulJgrD
RGytTWKXckyyrkg5ql1KRFRu2xAeRXKky5EUYRga1+7+8T6vvsDPzYvJYDBc
/vP/rMolLX1mIuuO8WeyyRCxtdGHCkvdSzthNUafPSN1A8Ud08NdEk8YuKlx
5UepAAY0hDMlEj/45uQYH6UB0G0XUZMjCYOits06m6Xh8NxT8vUVSRwYhlZ0
mUkl4HZ8VXeyJBNOME5W2EqvQcLEgaIkyW34eMZ6e5j0LljWOy6xDawCm/hE
ja5LteAfuuPnIn8p0CFTWtVfNcOJ+16xTINW+NNka7rQvA3ah76n8wTtUMmq
K2I5d0K0qZxRsq8TWDlXu4OW9oLIRHq5Kucl7FOPE3G034LikE9Br+8bCO/t
rsTsPhA82uMaf+Qd9IclajSzB+HQeHtV1e/9sKHTetgobQgufFvqlxs5CO2p
+mYU9RGYVaWbI0KHIMu8MdjFZwTU1zm1vE4ehol8yzsdzDFwyLS9Pib5BIlR
4Vo7LcdB63OTXVjpKDC5TcOdcROQ+rhciXVsDF4dUNXVfSMDK67N4urD4yAp
2GgYrzMFJm9I/xnxBLTwbr9uCJRD/o0VwnsBMjD9O8JIt3QaTr/6qc0kchKc
64YtarW+gMjK3CkjcQoIN8PAU6wAReY2wcd4OezR5SfVPZiFVv9UfvC1aWCH
VHOM9efBwn7NQm/WDPAfbHjEFS1Aw3aLG5j+Bco3Nt/NfbgIOYUpFu/+UsDg
c30fz0sMXGmw3vvgzVmQueexgnhK+EyJCl/1cA4WYzzdqWklvEcF5rY2zMNc
JWfAv4CJ61cSb0H9Arxw/bz88n4Wfo6Va2zqWIS2Qa+uI5psNIiKMvXzZiDD
tY9f9w8b3+3v6bZ9z8Ayw4i5ZDEHHQbavtzzVcJWO6+zWzYq46kAL6HmiBJm
iYIeqfUr446SNEfNICY++U5zvCZHBUfnvE+z5EzcWtKzRexBYdaLs8W+gSxc
KR2ydVajUSHk8UNmWRg2ZlKt/JRG7nyChyiUjXq7R8VHopbgoH1MI8XmYHXo
J5c8l6VYa9wEujEclG8yW9tNlqE3lcvWp5XxPm/ag/94GZZeNeTVJiijz8Gd
LwsvqmKLpVW9m7oKjq17VrHWXg1nvNN+4Meq4OpladkW82oodc3crapJ4Yx/
W/ZkzXIUWFjl5SVSGKw62fiER/DYSPPUyyQKt4+G6wiBoH+W57YVKRQ6pBQf
Z9sQDKPPvT19hcJi+RThbSOY3tWg45ZLofeJG/wCR4IdIe7xc6UUKuz/0E5w
J+hYHhCyq4dCEweDwT0igrt82dLIXgrL/Gg7WQDBvWuSNB++pvBpPuTGiQke
jS4rMu6n8IOW5Kg0mGDEfsbo7CcKo50iRyx+JVihuCjIXaAw8OQxNjeGYH2B
XmEPg8YPs9rCsgsEmwSFi4RF4zlb2ZPdsQR7GtvTf1Gh8XG5amJsAsGZVJ0X
roTGDKVrRoxkgos78o0iV9B4apNNdHoKQWUWiB9o0Hg7dGLUPI2gho9A3XgV
jYOy3+6LMgjq6E16eujQuGV2L1ftKsE1becL4rk0JteYh9/KIrguSmu+Xo/G
W8Xc93bXCW6wvOk0q0+jthXHuS+b4L8tVSvn
             "]]}, "Charting`Private`Tag#1"], 
          Annotation[{
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Dashing[{Small, Small}]], 
            Line[CompressedData["
1:eJwVjGs0lHkcgMfM4H1Vu//pMFaKsGmjg9p1Suj3E5XYXCbVko1GF7fGrU3k
ckhyiB2jVCKXMmp3ERZRWWVtSMg9l2okq0Io4262/fCc59PzaPH9eMeYDAbD
7gv/m/WXUtMb44Dtgu6+H4acXbeve1dlqpFiD15RzcM3JDw413vdODzFHWSP
rhgw2zygSAodnIITkLqFpzvt6AtvlT1nykR+4OL4zmm3JBB6dsU8zhVFwr1x
5deWkmjocBOtzxD9Cgb3odhSIgKer1rPVVEmmN0PkeNJciB50rUkVVQIq8Tv
1RIkxWBaa6O0I6gaalTMBgbza8A/1O5IiX8dBBXQs/vgGZy8dyyJqdMC9rGj
Dn87tkH78B46j98O6R0mbT0+3RBvKGWUOXfDybthxaab+iFAv+5ydW4flDVt
ZSkZSWDOw6egX/AalA6fl7d4+Ab4Dw84CI8PgOEnYVL42iHwmGivro4bhNDZ
lCM3K4bholG5nzh2CFyDm8PZGz4As7p8S0zoMFBFkfIZSaPA0bNtenX1PQS2
7ykrUBkH68wdN8dFI+CvmGNpZD8Bqh8bd0WWj8EBlaQnNbcmIe1JpRzLaxyy
vDLSpVOfwGyNhWzt0QkYiDvib7R5CvRfk8HwU5Ng3frUWC9BCvm3V3qWBn4C
zougLLXmaQh7+XObfuxn2HYz+g9bo1kIMNtqe+PSFLSKOwv3J87BXKYV/4NQ
CnrhY4TqmIcW/zT34JxpOD3SYJy1bRFMdmsv9WfPgFNEYFZh/BLU7zS5jemz
ECdfv2DcKYPcomsmA7/PAfc7G1XVLAaq6Gz0PnxnHuyKhMocGzlslaOi1R4s
wIFbLOEvLCaWUkHilvpFMCj+YJBTycSNKsSbX7sEP3po7I86zsKPSVLl7798
jXJ9N89psVHnwgVDP28GRripdU0/Z+OAS2/Pjn8ZmOdkXMKPlEfrt22zpQI5
9Ljb2RBjpoBnAo95ckflsLLYrrBzVAHtyq7bcE8z0eDzYsVEgSKOLXiHsaRM
jN+wTkAfpTC7K+pPQRALa8a80i24NM55mruHzLPwbHGw/M5uGtcsJh8KCGUj
13xV2ESiEg7tTmig2PLoXnWj/sS+ZVij2wgaCfK4vrnRqlFlOXpTYrYWrYAR
FaPLLj5djuVZ35rXJCugxnPsYiSvwCZTs1oeRxFLDTnW4j1f4Yz39X3uSYp4
8tBq0eDSV1jnkLl/BZfClDMc54qar5FvYpaXd4lC8+6RjkfmBL1Gn031pVJo
6xJr4QoE/bPdrFZeo3DV8/f5UiQYSZ+ThGVQ6OSJcfpWBNNf1KvzxBReEXAt
L9sQ7Aw5KFwop7CqL6LV8yBBm8rAEMdeCkNj7a1IAEFHAbsutp/Cx84+Vb8F
EvxJO5X74BWFTSvatu48RfBEfEWJ7iCFsrfRBqHBBGNcGGPzIxTq751dPRhO
sGoukS9eojBKey/7XjzB2gLNol4GjdNX2dG8iwQb+UUywqIxoaNLNpJIsLeh
Pf2sIo26LZPzWskEZ9LUuxwIjUVpnlMJVwjK7PLXxa6kURNmgnSvEVRgwan7
yjQuu505WZ1GUNmHz9FVo1FGfzM+lUFQXfOz2yF1GrPOvxQIMwlqt50vEK6h
UYf6Z1Qvm6DeBdXFWs0v/dNs39ocgptM79jOa9EYOtv8zu0Wwf8A3l84QA==

             "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{0, Pi}, {0., 4.161023319072251}}, 
          "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0},
           "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
          "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             RGBColor[0.880722, 0.611041, 0.142051], 
             AbsoluteThickness[2], 
             Dashing[{Small, Small}]], 
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             RGBColor[0, 0, 1]]}, 
          "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
              Identity[
               Part[#, 1]], 
              Identity[
               Part[#, 2]]}& ), 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          Plot, "GroupHighlight" -> False|>|>]]& )[<|
      "HighlightElements" -> <|
        "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
       "LayoutOptions" -> <|
        "PlotRange" -> {{0, Pi}, {0., 4.161023319072251}}, 
         "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
         "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
         "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
           Directive[
            Opacity[1.], 
            RGBColor[0.880722, 0.611041, 0.142051], 
            AbsoluteThickness[2], 
            Dashing[{Small, Small}]], 
           Directive[
            Opacity[1.], 
            AbsoluteThickness[2], 
            RGBColor[0, 0, 1]]}, 
         "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
             Identity[
              Part[#, 1]], 
             Identity[
              Part[#, 2]]}& ), 
           "ScalingFunctions" -> {{Identity, Identity}, {
             Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
       "Meta" -> <|
        "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
         Plot, "GroupHighlight" -> False|>|>],
     ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
      4.503599627370496*^15, -4.503599627370496*^15}}]},
   Annotation[{{{{}, {}, 
       Annotation[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1]], 
         Line[CompressedData["
1:eJwVxXk41HkcAOAxB79fRV89YuMZkmOf0j62emzE+HyosI6S3VJpMzulJgrD
RGytTWKXckyyrkg5ql1KRFRu2xAeRXKky5EUYRga1+7+8T6vvsDPzYvJYDBc
/vP/rMolLX1mIuuO8WeyyRCxtdGHCkvdSzthNUafPSN1A8Ud08NdEk8YuKlx
5UepAAY0hDMlEj/45uQYH6UB0G0XUZMjCYOits06m6Xh8NxT8vUVSRwYhlZ0
mUkl4HZ8VXeyJBNOME5W2EqvQcLEgaIkyW34eMZ6e5j0LljWOy6xDawCm/hE
ja5LteAfuuPnIn8p0CFTWtVfNcOJ+16xTINW+NNka7rQvA3ah76n8wTtUMmq
K2I5d0K0qZxRsq8TWDlXu4OW9oLIRHq5Kucl7FOPE3G034LikE9Br+8bCO/t
rsTsPhA82uMaf+Qd9IclajSzB+HQeHtV1e/9sKHTetgobQgufFvqlxs5CO2p
+mYU9RGYVaWbI0KHIMu8MdjFZwTU1zm1vE4ehol8yzsdzDFwyLS9Pib5BIlR
4Vo7LcdB63OTXVjpKDC5TcOdcROQ+rhciXVsDF4dUNXVfSMDK67N4urD4yAp
2GgYrzMFJm9I/xnxBLTwbr9uCJRD/o0VwnsBMjD9O8JIt3QaTr/6qc0kchKc
64YtarW+gMjK3CkjcQoIN8PAU6wAReY2wcd4OezR5SfVPZiFVv9UfvC1aWCH
VHOM9efBwn7NQm/WDPAfbHjEFS1Aw3aLG5j+Bco3Nt/NfbgIOYUpFu/+UsDg
c30fz0sMXGmw3vvgzVmQueexgnhK+EyJCl/1cA4WYzzdqWklvEcF5rY2zMNc
JWfAv4CJ61cSb0H9Arxw/bz88n4Wfo6Va2zqWIS2Qa+uI5psNIiKMvXzZiDD
tY9f9w8b3+3v6bZ9z8Ayw4i5ZDEHHQbavtzzVcJWO6+zWzYq46kAL6HmiBJm
iYIeqfUr446SNEfNICY++U5zvCZHBUfnvE+z5EzcWtKzRexBYdaLs8W+gSxc
KR2ydVajUSHk8UNmWRg2ZlKt/JRG7nyChyiUjXq7R8VHopbgoH1MI8XmYHXo
J5c8l6VYa9wEujEclG8yW9tNlqE3lcvWp5XxPm/ag/94GZZeNeTVJiijz8Gd
LwsvqmKLpVW9m7oKjq17VrHWXg1nvNN+4Meq4OpladkW82oodc3crapJ4Yx/
W/ZkzXIUWFjl5SVSGKw62fiER/DYSPPUyyQKt4+G6wiBoH+W57YVKRQ6pBQf
Z9sQDKPPvT19hcJi+RThbSOY3tWg45ZLofeJG/wCR4IdIe7xc6UUKuz/0E5w
J+hYHhCyq4dCEweDwT0igrt82dLIXgrL/Gg7WQDBvWuSNB++pvBpPuTGiQke
jS4rMu6n8IOW5Kg0mGDEfsbo7CcKo50iRyx+JVihuCjIXaAw8OQxNjeGYH2B
XmEPg8YPs9rCsgsEmwSFi4RF4zlb2ZPdsQR7GtvTf1Gh8XG5amJsAsGZVJ0X
roTGDKVrRoxkgos78o0iV9B4apNNdHoKQWUWiB9o0Hg7dGLUPI2gho9A3XgV
jYOy3+6LMgjq6E16eujQuGV2L1ftKsE1becL4rk0JteYh9/KIrguSmu+Xo/G
W8Xc93bXCW6wvOk0q0+jthXHuS+b4L8tVSvn
          "]]}, "Charting`Private`Tag#1"], 
       Annotation[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Dashing[{Small, Small}]], 
         Line[CompressedData["
1:eJwVjGs0lHkcgMfM4H1Vu//pMFaKsGmjg9p1Suj3E5XYXCbVko1GF7fGrU3k
ckhyiB2jVCKXMmp3ERZRWWVtSMg9l2okq0Io4262/fCc59PzaPH9eMeYDAbD
7gv/m/WXUtMb44Dtgu6+H4acXbeve1dlqpFiD15RzcM3JDw413vdODzFHWSP
rhgw2zygSAodnIITkLqFpzvt6AtvlT1nykR+4OL4zmm3JBB6dsU8zhVFwr1x
5deWkmjocBOtzxD9Cgb3odhSIgKer1rPVVEmmN0PkeNJciB50rUkVVQIq8Tv
1RIkxWBaa6O0I6gaalTMBgbza8A/1O5IiX8dBBXQs/vgGZy8dyyJqdMC9rGj
Dn87tkH78B46j98O6R0mbT0+3RBvKGWUOXfDybthxaab+iFAv+5ydW4flDVt
ZSkZSWDOw6egX/AalA6fl7d4+Ab4Dw84CI8PgOEnYVL42iHwmGivro4bhNDZ
lCM3K4bholG5nzh2CFyDm8PZGz4As7p8S0zoMFBFkfIZSaPA0bNtenX1PQS2
7ykrUBkH68wdN8dFI+CvmGNpZD8Bqh8bd0WWj8EBlaQnNbcmIe1JpRzLaxyy
vDLSpVOfwGyNhWzt0QkYiDvib7R5CvRfk8HwU5Ng3frUWC9BCvm3V3qWBn4C
zougLLXmaQh7+XObfuxn2HYz+g9bo1kIMNtqe+PSFLSKOwv3J87BXKYV/4NQ
CnrhY4TqmIcW/zT34JxpOD3SYJy1bRFMdmsv9WfPgFNEYFZh/BLU7zS5jemz
ECdfv2DcKYPcomsmA7/PAfc7G1XVLAaq6Gz0PnxnHuyKhMocGzlslaOi1R4s
wIFbLOEvLCaWUkHilvpFMCj+YJBTycSNKsSbX7sEP3po7I86zsKPSVLl7798
jXJ9N89psVHnwgVDP28GRripdU0/Z+OAS2/Pjn8ZmOdkXMKPlEfrt22zpQI5
9Ljb2RBjpoBnAo95ckflsLLYrrBzVAHtyq7bcE8z0eDzYsVEgSKOLXiHsaRM
jN+wTkAfpTC7K+pPQRALa8a80i24NM55mruHzLPwbHGw/M5uGtcsJh8KCGUj
13xV2ESiEg7tTmig2PLoXnWj/sS+ZVij2wgaCfK4vrnRqlFlOXpTYrYWrYAR
FaPLLj5djuVZ35rXJCugxnPsYiSvwCZTs1oeRxFLDTnW4j1f4Yz39X3uSYp4
8tBq0eDSV1jnkLl/BZfClDMc54qar5FvYpaXd4lC8+6RjkfmBL1Gn031pVJo
6xJr4QoE/bPdrFZeo3DV8/f5UiQYSZ+ThGVQ6OSJcfpWBNNf1KvzxBReEXAt
L9sQ7Aw5KFwop7CqL6LV8yBBm8rAEMdeCkNj7a1IAEFHAbsutp/Cx84+Vb8F
EvxJO5X74BWFTSvatu48RfBEfEWJ7iCFsrfRBqHBBGNcGGPzIxTq751dPRhO
sGoukS9eojBKey/7XjzB2gLNol4GjdNX2dG8iwQb+UUywqIxoaNLNpJIsLeh
Pf2sIo26LZPzWskEZ9LUuxwIjUVpnlMJVwjK7PLXxa6kURNmgnSvEVRgwan7
yjQuu505WZ1GUNmHz9FVo1FGfzM+lUFQXfOz2yF1GrPOvxQIMwlqt50vEK6h
UYf6Z1Qvm6DeBdXFWs0v/dNs39ocgptM79jOa9EYOtv8zu0Wwf8A3l84QA==

          "]]}, "Charting`Private`Tag#2"]}}, {}}, <|
    "HighlightElements" -> <|
      "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
     "LayoutOptions" -> <|
      "PlotRange" -> {{0, Pi}, {0., 4.161023319072251}}, 
       "Frame" -> {{False, False}, {False, False}}, "AxesOrigin" -> {0, 0}, 
       "ImageSize" -> {360, 360/GoldenRatio}, "Axes" -> {True, True}, 
       "AspectRatio" -> GoldenRatio^(-1), "DefaultStyle" -> {
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[2], 
          Dashing[{Small, Small}]], 
         Directive[
          Opacity[1.], 
          AbsoluteThickness[2], 
          RGBColor[0, 0, 1]]}, 
       "HighlightLabelingFunctions" -> <|"CoordinatesToolOptions" -> ({
           Identity[
            Part[#, 1]], 
           Identity[
            Part[#, 2]]}& ), 
         "ScalingFunctions" -> {{Identity, Identity}, {Identity, Identity}}|>,
        "Primitives" -> {}, "GCFlag" -> False|>, 
     "Meta" -> <|
      "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
       Plot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->
   NCache[{{0, Pi}, {0., 4.161023319072251}}, {{0, 3.141592653589793}, {0., 
     4.161023319072251}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.899198232820978*^9, 3.899198283274415*^9, 
  3.899202049298093*^9, 3.899204804772942*^9, 3.899267951414818*^9, 
  3.899353187710856*^9, 3.8993663162543592`*^9, 3.899369036772415*^9, 
  3.899386171180743*^9, 3.8994329857030354`*^9, 3.89943992704438*^9},
 CellLabel->
  "Out[332]=",ExpressionUUID->"e3484c42-f6d9-4d81-bb9d-e59f7ab12b40"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[CapitalUpsilon]\[Psi]OS", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     FractionBox["\[CapitalUpsilon]rOS", 
      RowBox[{"2", "\[Pi]"}]], 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"2", " ", "\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]"}], 
        RowBox[{
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", " ", "-", " ", 
             SuperscriptBox["\[ScriptCapitalE]", "2"]}], ")"}], 
           RowBox[{"(", 
            RowBox[{"r1", " ", "-", " ", "r3"}], ")"}], "r2"}]], 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ScriptCapitalJ]", "2"], " ", "+", " ", 
           SuperscriptBox["r3", "2"]}], ")"}]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["r3", "2"], " ", 
          RowBox[{"EllipticF", "[", 
           RowBox[{"\[Chi]", ",", 
            FractionBox[
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}]}], " ", "+",
          " ", 
         RowBox[{
          FractionBox[
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["r2", "2"], " ", "-", " ", 
              SuperscriptBox["r3", "2"]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], " ", "+", " ", 
            SuperscriptBox["r2", "2"]}]], 
          RowBox[{"Re", "[", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"r3", " ", "-", " ", 
                RowBox[{"I", " ", "\[ScriptCapitalJ]"}]}], 
               RowBox[{"r2", " ", "-", " ", 
                RowBox[{"I", " ", "\[ScriptCapitalJ]"}]}]], 
              FractionBox[
               RowBox[{"r1", "-", "r2"}], 
               RowBox[{"r1", "-", "r3"}]]}], ",", "\[Chi]", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "]"}]}], 
         " ", "-", " ", 
         RowBox[{
          FractionBox[
           RowBox[{"\[ScriptCapitalJ]", 
            RowBox[{"(", 
             RowBox[{"r2", "-", "r3"}], ")"}], 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[ScriptCapitalJ]", "2"], " ", "-", " ", 
              RowBox[{"r2", " ", "r3"}]}], ")"}]}], 
           RowBox[{
            SuperscriptBox["\[ScriptCapitalJ]", "2"], " ", "+", " ", 
            SuperscriptBox["r2", "2"]}]], 
          RowBox[{"Im", "[", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"r3", " ", "-", " ", 
                RowBox[{"I", " ", "\[ScriptCapitalJ]"}]}], 
               RowBox[{"r2", " ", "-", " ", 
                RowBox[{"I", " ", "\[ScriptCapitalJ]"}]}]], 
              FractionBox[
               RowBox[{"r1", "-", "r2"}], 
               RowBox[{"r1", "-", "r3"}]]}], ",", "\[Chi]", ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "]"}]}]}],
         ")"}]}], " ", ")"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Chi]", "->", "\[Pi]"}], ",", 
      RowBox[{"sp", "->", "0"}]}], "}"}]}], "//", 
   "FullSimplify"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalUpsilon]\[Psi]", "[", 
    RowBox[{"pi_", ",", "ei_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"\[CapitalUpsilon]\[Psi]OS", "/.", "Subs"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"p", "->", "pi"}], ",", 
      RowBox[{"e", "->", "ei"}], ",", 
      RowBox[{"sp", "->", "0"}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.899198208725298*^9, 3.899198217600307*^9}, {
   3.899198252866598*^9, 3.8991982717406473`*^9}, 3.899198303268524*^9, {
   3.899198391339381*^9, 3.899198442209429*^9}, {3.899198525455133*^9, 
   3.8991985359910717`*^9}, {3.899203538606346*^9, 3.899203558190895*^9}, 
   3.899203592245994*^9, 3.899204705543684*^9},
 CellLabel->
  "In[333]:=",ExpressionUUID->"3982f01e-b675-4c5c-9a21-8f49be94466f"],

Cell[BoxData[
 FractionBox[
  RowBox[{"\[ScriptCapitalE]", " ", "\[ScriptCapitalJ]", " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox["r3", "2"], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{"r2", "-", "r3"}], ")"}], " ", "\[ScriptCapitalJ]", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"r2", " ", "r3"}], "-", 
            SuperscriptBox["\[ScriptCapitalJ]", "2"]}], ")"}], " ", 
          RowBox[{"Im", "[", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"r3", "-", 
                 RowBox[{"\[ImaginaryI]", " ", "\[ScriptCapitalJ]"}]}], 
                ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"r2", "-", 
                 RowBox[{"\[ImaginaryI]", " ", "\[ScriptCapitalJ]"}]}], 
                ")"}]}]], ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], " ", "r3"}], 
              RowBox[{"r2", " ", 
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}]}]]}], "]"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r2", "+", "r3"}], ")"}], " ", "\[ScriptCapitalJ]", " ", 
          RowBox[{"Re", "[", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"r3", "-", 
                 RowBox[{"\[ImaginaryI]", " ", "\[ScriptCapitalJ]"}]}], 
                ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"r2", "-", 
                 RowBox[{"\[ImaginaryI]", " ", "\[ScriptCapitalJ]"}]}], 
                ")"}]}]], ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], " ", "r3"}], 
              RowBox[{"r2", " ", 
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}]}]]}], "]"}], "]"}]}]}], 
        ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["r2", "2"], "+", 
         SuperscriptBox["\[ScriptCapitalJ]", "2"]}], ")"}], " ", 
       RowBox[{"EllipticK", "[", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{"r1", "-", "r2"}], ")"}], " ", "r3"}], 
         RowBox[{"r2", " ", 
          RowBox[{"(", 
           RowBox[{"r1", "-", "r3"}], ")"}]}]], "]"}]}]]}], ")"}]}], 
  RowBox[{
   SuperscriptBox["r3", "2"], "+", 
   SuperscriptBox["\[ScriptCapitalJ]", "2"]}]]], "Output",
 CellChangeTimes->{
  3.899197437151677*^9, {3.89919747618398*^9, 3.899197490981579*^9}, {
   3.899198177327763*^9, 3.89919821819551*^9}, {3.899198255026741*^9, 
   3.899198272234742*^9}, {3.899198427314496*^9, 3.899198442968174*^9}, 
   3.899198542404192*^9, 3.899202049724895*^9, {3.8992035417378063`*^9, 
   3.899203551964045*^9}, 3.899203597031961*^9, {3.899204707887553*^9, 
   3.899204736151492*^9}, 3.899204805164123*^9, 3.8992679518293858`*^9, 
   3.899353188109541*^9, 3.899366316705406*^9, 3.89936903684396*^9, 
   3.899386171586513*^9, 3.899432986117814*^9, 3.899439927446848*^9},
 CellLabel->
  "Out[333]=",ExpressionUUID->"28a7ed47-e6d5-4168-904b-890315f7baf6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CapitalUpsilon]\[Psi]0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"\[CapitalUpsilon]\[Psi]", "[", 
         RowBox[{"p", ",", "e"}], "]"}], "//", 
        RowBox[{
         RowBox[{"FullSimplify", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"p", ">", "0"}], ",", 
             RowBox[{"0", "<", "e", "<", "1"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], 
          "]"}], "&"}]}], "//", "FunctionExpand"}], "//", 
      RowBox[{
       RowBox[{"FullSimplify", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", ">", "0"}], ",", 
           RowBox[{"0", "<", "e", "<", "1"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], 
        "]"}], "&"}]}], "//", "PowerExpand"}], "//", "ExpandAll"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.899198208725298*^9, 3.899198217600307*^9}, {
   3.899198252866598*^9, 3.8991982717406473`*^9}, 3.899198303268524*^9, {
   3.899198391339381*^9, 3.899198442209429*^9}, {3.899198525455133*^9, 
   3.8991985359910717`*^9}, {3.899203538606346*^9, 3.899203558190895*^9}, {
   3.899203592245994*^9, 3.899203599253108*^9}, {3.899204695072155*^9, 
   3.8992047285701933`*^9}, {3.8992050519566402`*^9, 
   3.8992050613323803`*^9}, {3.899434329540595*^9, 3.8994343406566763`*^9}},
 CellLabel->
  "In[335]:=",ExpressionUUID->"91b372d3-2661-4498-aff2-72533fb99c45"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"6", "+", 
       RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
     RowBox[{"Im", "[", 
      RowBox[{"EllipticPi", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"2", " ", "e", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p", "+", 
            RowBox[{"2", " ", "\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "3"}], "-", 
               SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "e", "+", 
            RowBox[{"\[ImaginaryI]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "3"}], "-", 
               SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}]], ",", 
        FractionBox[
         RowBox[{"4", " ", "e"}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "]"}]}], "+", 
    RowBox[{
     SqrtBox[
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       SuperscriptBox["e", "2"], "+", "p"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"4", " ", 
        RowBox[{"EllipticK", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "-", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
        RowBox[{"Re", "[", 
         RowBox[{"EllipticPi", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "e", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "4"}], "+", "p", "+", 
               RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "3"}], "-", 
                  SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "+", "e", "+", 
               RowBox[{"\[ImaginaryI]", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "3"}], "-", 
                  SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}]], ",", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "]"}]}]}], 
      ")"}]}]}], 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          SuperscriptBox["e", "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         SuperscriptBox["e", "2"], "+", "p"}], ")"}]}], "p"]], " ", 
    RowBox[{"EllipticK", "[", 
     FractionBox[
      RowBox[{"4", " ", "e"}], 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.899197437151677*^9, {3.89919747618398*^9, 3.899197490981579*^9}, {
   3.899198177327763*^9, 3.89919821819551*^9}, {3.899198255026741*^9, 
   3.899198272234742*^9}, {3.899198427314496*^9, 3.899198442968174*^9}, 
   3.899198542404192*^9, 3.899202049724895*^9, {3.8992035417378063`*^9, 
   3.899203558614684*^9}, {3.899204691822384*^9, 3.899204742111785*^9}, 
   3.899204807144436*^9, 3.899205062861826*^9, 3.899267954200609*^9, 
   3.8993531904221687`*^9, 3.899366319237764*^9, 3.8993690393908987`*^9, 
   3.899386173907138*^9, 3.899432988414619*^9, 3.899439928648569*^9},
 CellLabel->
  "Out[335]=",ExpressionUUID->"e31e0e8a-dbc0-4a12-8698-e720ce27d2be"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Expansion of Mino frequencies in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "||"], TraditionalForm]],ExpressionUUID->
  "dd7620c3-8f98-401d-9544-dc62f496c1dd"]
}], "Subsection",
 CellChangeTimes->{{3.899197397435936*^9, 3.899197411560503*^9}, {
  3.899199331436866*^9, 
  3.899199343290531*^9}},ExpressionUUID->"09c0f43e-a20c-41b0-ac48-\
cc510cfad86b"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"First", " ", "the", " ", "Mino", " ", "frequencies"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.897624139208727*^9, 3.8976243206129208`*^9}, {
   3.8976243540896187`*^9, 3.897624370181075*^9}, {3.897624636252551*^9, 
   3.897624684944442*^9}, {3.8976247460427513`*^9, 3.897624751195285*^9}, {
   3.897632711533084*^9, 3.897632725211171*^9}, {3.89866808551103*^9, 
   3.898668094661172*^9}, {3.8986681401522818`*^9, 3.898668176782159*^9}, 
   3.898668366192877*^9, 3.898669070105049*^9, {3.898669202456049*^9, 
   3.898669232381185*^9}, 3.8991784773442793`*^9},
 CellLabel->
  "In[336]:=",ExpressionUUID->"1d89dffa-e4c2-47fb-a173-aac4663f6d65"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[CapitalUpsilon]r0", " ", "=", "  ", 
  RowBox[{
   RowBox[{
    RowBox[{"\[CapitalUpsilon]r", "[", 
     RowBox[{"p", ",", "e", ",", "0"}], "]"}], "//", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", ">", "0"}], ",", 
         RowBox[{"0", "<", "e", "<", "1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
     "&"}]}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]\[CapitalUpsilon]r", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[CapitalUpsilon]r", "[", 
          RowBox[{"p", ",", "e", ",", "sp"}], "]"}], ",", "sp"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"sp", "->", "0"}], "}"}]}], ")"}], "//", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}],
       "&"}]}], "//", "PowerExpand"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}]}], "Input",
 CellChangeTimes->{{3.897624139208727*^9, 3.8976243206129208`*^9}, {
   3.8976243540896187`*^9, 3.897624370181075*^9}, {3.897624636252551*^9, 
   3.897624684944442*^9}, {3.8976247460427513`*^9, 3.897624751195285*^9}, {
   3.897632711533084*^9, 3.897632725211171*^9}, {3.89866808551103*^9, 
   3.898668094661172*^9}, {3.8986681401522818`*^9, 3.898668176782159*^9}, 
   3.898668366192877*^9, {3.898669070105049*^9, 3.898669080507587*^9}, {
   3.899198589982615*^9, 3.899198615922467*^9}, {3.89919881612962*^9, 
   3.899198825491001*^9}, {3.8991988648158417`*^9, 3.899198885125551*^9}, {
   3.8991990361837683`*^9, 3.899199068609902*^9}, {3.899434035556403*^9, 
   3.899434110389922*^9}, {3.899440205255361*^9, 3.899440206254012*^9}, {
   3.8994403397509747`*^9, 3.8994403442936687`*^9}, {3.8994407573472023`*^9, 
   3.899440773292938*^9}, {3.899440805606682*^9, 3.89944080630068*^9}, {
   3.899440888271371*^9, 3.8994409043809958`*^9}, {3.899440987767943*^9, 
   3.8994409918376627`*^9}, {3.8994410356471786`*^9, 3.899441036452594*^9}, {
   3.899441216344816*^9, 3.899441219850698*^9}, {3.8994435508103724`*^9, 
   3.899443572332511*^9}},
 CellLabel->
  "In[365]:=",ExpressionUUID->"d08af839-55d6-489e-baca-273a167855bb"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    RowBox[{"-", 
     FractionBox[
      RowBox[{"p", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}], 
      RowBox[{"3", "+", 
       SuperscriptBox["e", "2"], "-", "p"}]]}]], " ", "\[Pi]"}], 
  RowBox[{"2", " ", 
   RowBox[{"EllipticK", "[", 
    FractionBox[
     RowBox[{"4", " ", "e"}], 
     RowBox[{
      RowBox[{"-", "6"}], "+", 
      RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}]]], "Output",
 CellChangeTimes->{
  3.898668377296352*^9, 3.898684127276824*^9, 3.8987649701846247`*^9, 
   3.898783644934881*^9, 3.898932493382465*^9, 3.899180289938608*^9, 
   3.899198618669202*^9, 3.899198760463407*^9, 3.89919882660465*^9, 
   3.8991988862422953`*^9, {3.899199075730926*^9, 3.8991990795009108`*^9}, 
   3.899202050435444*^9, 3.899204807869934*^9, 3.8992679549162416`*^9, 
   3.899353191119603*^9, 3.899366319964965*^9, 3.899369040147224*^9, 
   3.899386174613649*^9, 3.899432989111191*^9, 3.8994399287861032`*^9, 
   3.899440210960143*^9, 3.8994403447534943`*^9, {3.8994407657008133`*^9, 
   3.899440775441208*^9}, 3.8994408069924583`*^9, 3.8994409050636806`*^9, 
   3.899440992396481*^9, 3.899441037131962*^9, 3.899441223408514*^9, {
   3.8994435609508877`*^9, 3.899443573318534*^9}},
 CellLabel->
  "Out[365]=",ExpressionUUID->"e5d3eb8f-1ee9-478a-a08f-d400ad53ec2f"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["e", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       SuperscriptBox["e", "2"], "+", "p"}], ")"}]}]], " ", "\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"3", "+", 
        SuperscriptBox["e", "2"], "-", "p"}], ")"}], " ", 
      RowBox[{"EllipticE", "[", 
       FractionBox[
        RowBox[{"4", " ", "e"}], 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "6"}], "-", 
        RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
      RowBox[{"EllipticK", "[", 
       FractionBox[
        RowBox[{"4", " ", "e"}], 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}]}], ")"}]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{"6", "+", 
     RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"3", "+", 
      SuperscriptBox["e", "2"], "-", "p"}], ")"}], "2"], " ", 
   SuperscriptBox[
    RowBox[{"EllipticK", "[", 
     FractionBox[
      RowBox[{"4", " ", "e"}], 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], "2"]}]]], "Output",
 CellChangeTimes->{
  3.898668377296352*^9, 3.898684127276824*^9, 3.8987649701846247`*^9, 
   3.898783644934881*^9, 3.898932493382465*^9, 3.899180289938608*^9, 
   3.899198618669202*^9, 3.899198760463407*^9, 3.89919882660465*^9, 
   3.8991988862422953`*^9, {3.899199075730926*^9, 3.8991990795009108`*^9}, 
   3.899202050435444*^9, 3.899204807869934*^9, 3.8992679549162416`*^9, 
   3.899353191119603*^9, 3.899366319964965*^9, 3.899369040147224*^9, 
   3.899386174613649*^9, 3.899432989111191*^9, 3.8994399287861032`*^9, 
   3.899440210960143*^9, 3.8994403447534943`*^9, {3.8994407657008133`*^9, 
   3.899440775441208*^9}, 3.8994408069924583`*^9, 3.8994409050636806`*^9, 
   3.899440992396481*^9, 3.899441037131962*^9, 3.899441223408514*^9, {
   3.8994435609508877`*^9, 3.89944357356462*^9}},
 CellLabel->
  "Out[366]=",ExpressionUUID->"cf3a4b30-07f6-4562-a568-674b7bc150fd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[CapitalUpsilon]t0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalUpsilon]t", "[", 
        RowBox[{"p", ",", "e", ",", "0"}], "]"}], "//", 
       RowBox[{
        RowBox[{"FullSimplify", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p", ">", "0"}], ",", 
            RowBox[{"0", "<", "e", "<", "1"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], 
         "]"}], "&"}]}], "//", "FunctionExpand"}], "//", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}],
       "&"}]}], "//", "PowerExpand"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]\[CapitalUpsilon]t", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[CapitalUpsilon]t", "[", 
          RowBox[{"p", ",", "e", ",", "sp"}], "]"}], ",", "sp"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"sp", "->", "0"}], "}"}]}], ")"}], "//", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}],
       "&"}]}], "//", "PowerExpand"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}]}], "Input",
 CellChangeTimes->{{3.897624139208727*^9, 3.8976243206129208`*^9}, {
   3.8976243540896187`*^9, 3.897624370181075*^9}, {3.897624636252551*^9, 
   3.897624684944442*^9}, {3.8976247460427513`*^9, 3.897624751195285*^9}, {
   3.897632711533084*^9, 3.897632725211171*^9}, {3.89866808551103*^9, 
   3.898668094661172*^9}, {3.8986681401522818`*^9, 3.898668176782159*^9}, 
   3.898668366192877*^9, {3.898669070105049*^9, 3.898669080507587*^9}, {
   3.899198589982615*^9, 3.899198615922467*^9}, {3.89919881612962*^9, 
   3.899198825491001*^9}, {3.8991988648158417`*^9, 3.899198885125551*^9}, {
   3.8991990361837683`*^9, 3.8991990701385603`*^9}, {3.899434130910666*^9, 
   3.899434145963203*^9}, {3.8994342185238*^9, 3.899434224602088*^9}, {
   3.899440394086903*^9, 3.899440402586462*^9}, {3.899443589804761*^9, 
   3.899443592565796*^9}},
 CellLabel->
  "In[367]:=",ExpressionUUID->"a3fab2c2-5b8d-4bfd-a7cf-2b3915f4b78e"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["e", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", "p"}], 
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      SuperscriptBox["e", "2"], "+", "p"}]]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
        RowBox[{"EllipticE", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}]}]]}], "+", 
     FractionBox[
      RowBox[{"p", " ", 
       RowBox[{"(", 
        RowBox[{"36", "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["e", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "14"}], "+", "p"}], ")"}], " ", "p"}]}], ")"}], " ", 
       
       RowBox[{"EllipticK", "[", 
        FractionBox[
         RowBox[{"4", " ", "e"}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["e", "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "+", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"6", "+", 
        RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "8"}], "+", 
            RowBox[{
             SuperscriptBox["e", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"8", "-", 
               RowBox[{"3", " ", "p"}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "p"}], ")"}], " ", "p"}]}], ")"}], 
          " ", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "e"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "+", 
        FractionBox[
         RowBox[{"EllipticPi", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"16", " ", "e"}], 
            RowBox[{"12", "+", 
             RowBox[{"8", " ", "e"}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["e", "2"]}], "-", 
             RowBox[{"8", " ", "p"}], "+", 
             SuperscriptBox["p", "2"]}]], ",", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], 
         RowBox[{
          RowBox[{"-", "2"}], "-", 
          RowBox[{"2", " ", "e"}], "+", "p"}]]}], ")"}]}]}], ")"}]}], 
  RowBox[{"2", " ", 
   RowBox[{"EllipticK", "[", 
    FractionBox[
     RowBox[{"4", " ", "e"}], 
     RowBox[{
      RowBox[{"-", "6"}], "+", 
      RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}]]], "Output",
 CellChangeTimes->{
  3.8991991742724857`*^9, 3.899202135279169*^9, 3.899204895329852*^9, 
   3.8992680360343*^9, 3.899353271144218*^9, 3.899366367094233*^9, 
   3.8993691300347567`*^9, 3.899386254969943*^9, 3.899433070696069*^9, {
   3.899440377857174*^9, 3.899440404683566*^9}, 3.8994412344116993`*^9, 
   3.899443596624221*^9},
 CellLabel->
  "Out[367]=",ExpressionUUID->"e163c84b-596f-4719-925a-ed23be74cf05"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"4", " ", 
      RowBox[{"(", 
       RowBox[{"1", "+", "e"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{"3", "+", 
        SuperscriptBox["e", "2"], "-", "p"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"], " ", "p", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"EllipticE", "[", 
        FractionBox[
         RowBox[{"4", " ", "e"}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], "2"]}], 
     RowBox[{"6", "+", 
      RowBox[{"2", " ", "e"}], "-", "p"}]], "-", 
    RowBox[{"4", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "2"}], "-", 
       RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
     RowBox[{"EllipticE", "[", 
      FractionBox[
       RowBox[{"4", " ", "e"}], 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", "p", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "28"}], "+", 
          RowBox[{
           SuperscriptBox["e", "4"], " ", 
           RowBox[{"(", 
            RowBox[{"4", "+", "p"}], ")"}]}], "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "+", "p"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"4", "+", "p"}], ")"}]}], "+", 
          RowBox[{"p", " ", 
           RowBox[{"(", 
            RowBox[{"33", "+", 
             RowBox[{"2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "7"}], "+", "p"}], ")"}], " ", "p"}]}], 
            ")"}]}]}], ")"}], " ", 
        RowBox[{"EllipticK", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"3", "+", 
          SuperscriptBox["e", "2"], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"8", "+", "p", "-", 
             SuperscriptBox["p", "2"], "+", 
             RowBox[{
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "8"}], "+", 
                RowBox[{"3", " ", "p"}]}], ")"}]}]}], ")"}], " ", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"2", " ", "e", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", "e"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"], " ", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"16", " ", "e"}], 
              RowBox[{"12", "+", 
               RowBox[{"8", " ", "e"}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["e", "2"]}], "-", 
               RowBox[{"8", " ", "p"}], "+", 
               SuperscriptBox["p", "2"]}]], ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}]}], ")"}]}]}], 
      ")"}]}], "+", 
    RowBox[{
     RowBox[{"EllipticK", "[", 
      FractionBox[
       RowBox[{"4", " ", "e"}], 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "e"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"2", "+", 
            RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", "p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "3072"}], "+", 
            RowBox[{"48", " ", 
             SuperscriptBox["e", "6"], " ", "p"}], "+", 
            RowBox[{
             SuperscriptBox["e", "4"], " ", "p", " ", 
             RowBox[{"(", 
              RowBox[{"112", "+", 
               RowBox[{"p", " ", 
                RowBox[{"(", 
                 RowBox[{"32", "+", 
                  RowBox[{"3", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "12"}], "+", "p"}], ")"}], " ", "p"}]}], 
                 ")"}]}]}], ")"}]}], "+", 
            RowBox[{"p", " ", 
             RowBox[{"(", 
              RowBox[{"4560", "+", 
               RowBox[{"p", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2848"}], "+", 
                  RowBox[{"p", " ", 
                   RowBox[{"(", 
                    RowBox[{"892", "+", 
                    RowBox[{"7", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "19"}], "+", "p"}], ")"}], " ", "p"}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
            RowBox[{
             SuperscriptBox["e", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"3072", "+", 
               RowBox[{"p", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2672"}], "+", 
                  RowBox[{"p", " ", 
                   RowBox[{"(", 
                    RowBox[{"1024", "+", 
                    RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "280"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"50", "-", 
                    RowBox[{"3", " ", "p"}]}], ")"}], " ", "p"}]}], ")"}]}]}],
                     ")"}]}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
          RowBox[{"EllipticK", "[", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], ")"}]}], "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"8", " ", 
           RowBox[{"(", 
            RowBox[{"2", "+", 
             RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "128"}], "+", 
             RowBox[{"3", " ", 
              SuperscriptBox["e", "6"], " ", 
              SuperscriptBox["p", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["e", "4"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "128"}], "+", 
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{"80", "+", 
                   RowBox[{"3", " ", "p"}], "-", 
                   RowBox[{"6", " ", 
                    SuperscriptBox["p", "2"]}]}], ")"}]}]}], ")"}]}], "-", 
             RowBox[{"p", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "144"}], "+", 
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{"55", "+", 
                   RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", "p"}], ")"}], " ", "p"}]}], 
                    ")"}]}]}], ")"}]}]}], ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"256", "+", 
                RowBox[{"p", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "224"}], "+", 
                   RowBox[{"p", " ", 
                    RowBox[{"(", 
                    RowBox[{"113", "-", 
                    RowBox[{"40", " ", "p"}], "+", 
                    RowBox[{"6", " ", 
                    SuperscriptBox["p", "2"]}]}], ")"}]}]}], ")"}]}]}], 
               ")"}]}]}], ")"}], " ", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"2", " ", "e", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", "e"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"], " ", 
           RowBox[{"(", 
            RowBox[{"32", "-", 
             RowBox[{"p", " ", 
              RowBox[{"(", 
               RowBox[{"32", "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "11"}], "+", "p"}], ")"}], " ", "p"}]}], 
               ")"}]}], "+", 
             RowBox[{
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "32"}], "+", 
                SuperscriptBox["p", "2"]}], ")"}]}]}], ")"}], " ", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"16", " ", "e"}], 
              RowBox[{"12", "+", 
               RowBox[{"8", " ", "e"}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["e", "2"]}], "-", 
               RowBox[{"8", " ", "p"}], "+", 
               SuperscriptBox["p", "2"]}]], ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}]}], ")"}]}]}], 
      ")"}]}]}], ")"}], "/", 
  RowBox[{"(", 
   RowBox[{"16", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"4", "-", "p"}], ")"}], "3"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "-", 
      RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       SuperscriptBox["e", "2"], "+", "p"}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", 
    SuperscriptBox[
     RowBox[{"EllipticK", "[", 
      FractionBox[
       RowBox[{"4", " ", "e"}], 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], "2"]}], 
   ")"}]}]], "Output",
 CellChangeTimes->{
  3.8991991742724857`*^9, 3.899202135279169*^9, 3.899204895329852*^9, 
   3.8992680360343*^9, 3.899353271144218*^9, 3.899366367094233*^9, 
   3.8993691300347567`*^9, 3.899386254969943*^9, 3.899433070696069*^9, {
   3.899440377857174*^9, 3.899440404683566*^9}, 3.8994412344116993`*^9, 
   3.899443647649075*^9},
 CellLabel->
  "Out[368]=",ExpressionUUID->"ab65f519-6842-44e7-a54f-a8290d4f319d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[CapitalUpsilon]\[CurlyPhi]0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalUpsilon]\[CurlyPhi]", "[", 
        RowBox[{"p", ",", "e", ",", "0"}], "]"}], "//", 
       RowBox[{
        RowBox[{"FullSimplify", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"p", ">", "0"}], ",", 
            RowBox[{"0", "<", "e", "<", "1"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], 
         "]"}], "&"}]}], "//", "FunctionExpand"}], "//", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}],
       "&"}]}], "//", "PowerExpand"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]\[CapitalUpsilon]\[CurlyPhi]", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"\[CapitalUpsilon]\[CurlyPhi]", "[", 
          RowBox[{"p", ",", "e", ",", "sp"}], "]"}], ",", "sp"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"sp", "->", "0"}], "}"}]}], ")"}], "//", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}],
       "&"}]}], "//", "PowerExpand"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}]}], "Input",
 CellChangeTimes->{{3.897624139208727*^9, 3.8976243206129208`*^9}, {
   3.8976243540896187`*^9, 3.897624370181075*^9}, {3.897624636252551*^9, 
   3.897624684944442*^9}, {3.8976247460427513`*^9, 3.897624751195285*^9}, {
   3.897632711533084*^9, 3.897632725211171*^9}, {3.89866808551103*^9, 
   3.898668094661172*^9}, {3.8986681401522818`*^9, 3.898668176782159*^9}, 
   3.898668366192877*^9, {3.898669070105049*^9, 3.898669080507587*^9}, {
   3.899198589982615*^9, 3.899198615922467*^9}, {3.89919881612962*^9, 
   3.899198825491001*^9}, {3.8991988648158417`*^9, 3.899198885125551*^9}, {
   3.8991990361837683`*^9, 3.8991990701385603`*^9}, {3.8994341564276114`*^9, 
   3.899434209006289*^9}, {3.899440463718198*^9, 3.899440471072489*^9}, {
   3.899443601067389*^9, 3.899443605428957*^9}},
 CellLabel->
  "In[369]:=",ExpressionUUID->"f90c1bdc-e2f1-4816-b3e1-ca944e1bc2d5"],

Cell[BoxData[
 FractionBox["p", 
  SqrtBox[
   RowBox[{
    RowBox[{"-", "3"}], "-", 
    SuperscriptBox["e", "2"], "+", "p"}]]]], "Output",
 CellChangeTimes->{3.898668377296352*^9, 3.898684127276824*^9, 
  3.8987649701846247`*^9, 3.898783644934881*^9, 3.898932493382465*^9, 
  3.899180289938608*^9, 3.899198618669202*^9, 3.899198760463407*^9, 
  3.89919882660465*^9, 3.8991988862422953`*^9, 3.8991990439665613`*^9, 
  3.899199082524543*^9, 3.899202135693894*^9, 3.89920489565431*^9, 
  3.8992680363867283`*^9, 3.899353271457457*^9, 3.899369130429131*^9, 
  3.899386255286551*^9, 3.89943307127102*^9, 3.899443647730377*^9},
 CellLabel->
  "Out[369]=",ExpressionUUID->"693776a2-55c9-404f-a2cd-e5e4239eb4f6"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "+", 
      SuperscriptBox["e", "2"]}], ")"}], " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"-", "4"}], "+", 
      FractionBox[
       RowBox[{"4", "-", 
        RowBox[{"4", " ", 
         SuperscriptBox["e", "2"]}]}], "p"], "+", "p"}]]}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       SuperscriptBox["e", "2"], "+", "p"}], ")"}], 
     RowBox[{"3", "/", "2"}]]}]]}]], "Output",
 CellChangeTimes->{3.898668377296352*^9, 3.898684127276824*^9, 
  3.8987649701846247`*^9, 3.898783644934881*^9, 3.898932493382465*^9, 
  3.899180289938608*^9, 3.899198618669202*^9, 3.899198760463407*^9, 
  3.89919882660465*^9, 3.8991988862422953`*^9, 3.8991990439665613`*^9, 
  3.899199082524543*^9, 3.899202135693894*^9, 3.89920489565431*^9, 
  3.8992680363867283`*^9, 3.899353271457457*^9, 3.899369130429131*^9, 
  3.899386255286551*^9, 3.89943307127102*^9, 3.899443647885045*^9},
 CellLabel->
  "Out[370]=",ExpressionUUID->"ba43d233-ccb7-4cee-b9ad-7c53477e45fb"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Expansion of orbital evolution in ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["s", "||"], TraditionalForm]],ExpressionUUID->
  "fea059e4-ddfb-42c2-84cf-a3a510094382"]
}], "Subsection",
 CellChangeTimes->{{3.8992679727847567`*^9, 
  3.899268023250846*^9}},ExpressionUUID->"59fed317-787c-465b-8c66-\
a121e1c39007"],

Cell[CellGroupData[{

Cell[TextData[{
 "Expansion of ",
 Cell[BoxData[
  FormBox["r", TraditionalForm]],ExpressionUUID->
  "5ec72595-0a3a-4de6-a954-f6da17ecf12c"]
}], "Subsubsection",
 CellChangeTimes->{{3.899268136332432*^9, 3.899268138424508*^9}, {
  3.899269721660411*^9, 3.899269732092808*^9}, {3.89928090213975*^9, 
  3.899280903457981*^9}},ExpressionUUID->"6d2f0cd9-af40-4b89-90bd-\
8434bd8ecca1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"r0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"rqr", "[", 
     RowBox[{"p", ",", "e", ",", "0", ",", "qr"}], "]"}], "//", 
    "FunctionExpand"}], "//", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"\[Delta]r", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"rqr", "[", 
          RowBox[{"p", ",", "e", ",", "sp", ",", "qr"}], "]"}], ",", "sp"}], 
        "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"sp", "->", "0"}], "}"}]}], ")"}], "//", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
          RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
          RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
      "&"}]}], "//", "PowerExpand"}], "//", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
        RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
        RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
    "&"}]}]}]}], "Input",
 CellChangeTimes->{{3.899268136332432*^9, 3.899268138424508*^9}, {
   3.899269721660411*^9, 3.899269797574901*^9}, {3.899269857375218*^9, 
   3.8992699331604843`*^9}, 3.89927014626867*^9, 3.899270240696227*^9, {
   3.8992718483750362`*^9, 3.899271896867297*^9}, {3.899434422432383*^9, 
   3.899434447314266*^9}, {3.8994436223713303`*^9, 3.899443641226231*^9}, {
   3.899443726693408*^9, 3.899443749999462*^9}, {3.8994441004586773`*^9, 
   3.899444103650485*^9}},
 CellLabel->
  "In[373]:=",ExpressionUUID->"9e79571a-cc83-48e6-89fb-3e35696f8d9f"],

Cell[BoxData[
 FractionBox[
  RowBox[{"p", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "6"}], "+", 
     RowBox[{"2", " ", "e"}], "+", "p", "-", 
     RowBox[{"4", " ", "e", " ", 
      SuperscriptBox[
       RowBox[{"JacobiSN", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"qr", " ", 
           RowBox[{"EllipticK", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "2"]}]}], ")"}]}], 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "e"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "6"}], "+", 
      RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}], "-", 
   RowBox[{"2", " ", "e", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"JacobiSN", "[", 
      RowBox[{
       FractionBox[
        RowBox[{"qr", " ", 
         RowBox[{"EllipticK", "[", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
       FractionBox[
        RowBox[{"4", " ", "e"}], 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "2"]}]}]]], "Output",
 CellChangeTimes->{{3.899271860844266*^9, 3.8992718971912947`*^9}, 
   3.899353271504437*^9, 3.8993691304904633`*^9, 3.899386255343081*^9, 
   3.8994330714661713`*^9, 3.8994437903582897`*^9, 3.899444104094619*^9},
 CellLabel->
  "Out[373]=",ExpressionUUID->"c8e65263-248f-4ce2-9d99-15c5391d5aaa"],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"2", " ", "e", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["e", "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
        "p"}]], " ", 
      RowBox[{"JacobiSN", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"qr", " ", 
          RowBox[{"EllipticK", "[", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
        FractionBox[
         RowBox[{"4", " ", "e"}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"JacobiCN", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"qr", " ", 
             RowBox[{"EllipticK", "[", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
           
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", 
         RowBox[{"JacobiDN", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"qr", " ", 
             RowBox[{"EllipticK", "[", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
           
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", "qr", " ", 
            RowBox[{"EllipticE", "[", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", "\[Pi]", " ", 
            RowBox[{"JacobiEpsilon", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"qr", " ", 
                RowBox[{"EllipticK", "[", 
                 FractionBox[
                  RowBox[{"4", " ", "e"}], 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], 
              ",", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
           RowBox[{"4", " ", "e", " ", "\[Pi]", " ", 
            RowBox[{"JacobiCD", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"qr", " ", 
                RowBox[{"EllipticK", "[", 
                 FractionBox[
                  RowBox[{"4", " ", "e"}], 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], 
              ",", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", 
            RowBox[{"JacobiSN", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"qr", " ", 
                RowBox[{"EllipticK", "[", 
                 FractionBox[
                  RowBox[{"4", " ", "e"}], 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], 
              ",", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}]}], ")"}]}], 
        "+", 
        RowBox[{"4", " ", "e", " ", "\[Pi]", " ", 
         RowBox[{"JacobiSN", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"qr", " ", 
             RowBox[{"EllipticK", "[", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
           
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox[
            RowBox[{"JacobiSN", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"qr", " ", 
                RowBox[{"EllipticK", "[", 
                 FractionBox[
                  RowBox[{"4", " ", "e"}], 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], 
              ",", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "2"]}], 
          ")"}]}]}], ")"}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"\[Pi]", " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "e"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}], "-", 
         RowBox[{"2", " ", "e", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
          SuperscriptBox[
           RowBox[{"JacobiSN", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"qr", " ", 
               RowBox[{"EllipticK", "[", 
                FractionBox[
                 RowBox[{"4", " ", "e"}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], 
             ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "2"]}]}], ")"}],
        "2"]}], ")"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.899271860844266*^9, 3.8992718971912947`*^9}, 
   3.899353271504437*^9, 3.8993691304904633`*^9, 3.899386255343081*^9, 
   3.8994330714661713`*^9, 3.8994437903582897`*^9, 3.8994441041883163`*^9},
 CellLabel->
  "Out[374]=",ExpressionUUID->"792fd8bb-56c3-4557-94ce-62b431043013"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Expression", " ", "in", " ", 
    RowBox[{"paper", ":"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"rqr0", " ", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{"JacobiCN", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"qr", " ", 
           RowBox[{"EllipticK", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", "->", " ", 
       RowBox[{"Cos", "[", "\[Chi]0", "]"}]}], ",", 
      RowBox[{
       RowBox[{"JacobiSN", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"qr", " ", 
           RowBox[{"EllipticK", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", " ", 
       RowBox[{"Sin", "[", "\[Chi]0", "]"}]}], ",", 
      RowBox[{
       RowBox[{"JacobiDN", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"qr", " ", 
           RowBox[{"EllipticK", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", " ", 
       SqrtBox[
        RowBox[{"1", "-", 
         RowBox[{
          SuperscriptBox[
           SubscriptBox["k", "0"], "2"], 
          SuperscriptBox[
           RowBox[{"Sin", "[", "\[Chi]0", "]"}], "2"]}]}]]}], " ", ",", 
      RowBox[{
       RowBox[{"JacobiEpsilon", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"qr", " ", 
           RowBox[{"EllipticK", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", " ", 
       RowBox[{"\[CapitalEpsilon]", "[", 
        RowBox[{"\[Chi]0", ",", "k"}], "]"}]}], ",", 
      RowBox[{
       RowBox[{"EllipticE", "[", 
        FractionBox[
         RowBox[{"4", " ", "e"}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], "->", 
       RowBox[{"\[CapitalEpsilon]", "[", "k", "]"}]}]}], "}"}]}], " ", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Delta]rqr", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"JacobiCN", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"qr", " ", 
            RowBox[{"EllipticK", "[", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", "->", " ", 
        RowBox[{"Cos", "[", "\[Chi]0", "]"}]}], ",", 
       RowBox[{
        RowBox[{"JacobiSN", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"qr", " ", 
            RowBox[{"EllipticK", "[", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", " ", 
        RowBox[{"Sin", "[", "\[Chi]0", "]"}]}], ",", 
       RowBox[{
        RowBox[{"JacobiDN", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"qr", " ", 
            RowBox[{"EllipticK", "[", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{
           SuperscriptBox[
            SubscriptBox["k", "0"], "2"], 
           SuperscriptBox[
            RowBox[{"Sin", "[", "\[Chi]0", "]"}], "2"]}]}]]}], " ", ",", 
       RowBox[{
        RowBox[{"JacobiEpsilon", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"qr", " ", 
            RowBox[{"EllipticK", "[", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", 
        RowBox[{"\[CapitalEpsilon]", "[", 
         RowBox[{"\[Chi]0", ",", "k"}], "]"}]}], ",", 
       RowBox[{
        RowBox[{"EllipticE", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], "->", 
        RowBox[{"\[CapitalEpsilon]", "[", "k", "]"}]}]}], "}"}]}], " ", "//", 
    "Simplify", 
    RowBox[{"(*", 
     RowBox[{"/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"JacobiCN", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"qr", " ", 
             RowBox[{"EllipticK", "[", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
           
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", "->", " ", 
         RowBox[{"cn", "[", 
          RowBox[{
           SubscriptBox["\[Lambda]", "r"], ",", 
           SubscriptBox["k", "0"]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"JacobiSN", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"qr", " ", 
             RowBox[{"EllipticK", "[", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
           
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", " ", 
         RowBox[{"sn", "[", 
          RowBox[{
           SubscriptBox["\[Lambda]", "r"], ",", 
           SubscriptBox["k", "0"]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"JacobiDN", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"qr", " ", 
             RowBox[{"EllipticK", "[", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
           
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", " ", 
         RowBox[{"dn", "[", 
          RowBox[{
           SubscriptBox["\[Lambda]", "r"], ",", 
           SubscriptBox["k", "0"]}], "]"}]}], " ", ",", 
        RowBox[{
         RowBox[{"JacobiEpsilon", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"qr", " ", 
             RowBox[{"EllipticK", "[", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
           
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "->", " ", 
         RowBox[{"\[CurlyEpsilon]", "[", 
          RowBox[{
           SubscriptBox["\[Lambda]", "r"], ",", 
           SubscriptBox["k", "0"]}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"EllipticE", "[", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], "->", 
         RowBox[{"\[CapitalEpsilon]", "[", "k", "]"}]}]}], "}"}]}], " ", 
     "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.899268136332432*^9, 3.899268138424508*^9}, {
   3.899269721660411*^9, 3.899269797574901*^9}, {3.899269857375218*^9, 
   3.899269946959866*^9}, {3.8992700337769213`*^9, 3.899270039930195*^9}, {
   3.899270127701619*^9, 3.899270159601452*^9}, 3.899270244829719*^9, {
   3.899270285152102*^9, 3.8992703016065397`*^9}, {3.899270351090786*^9, 
   3.8992703608387403`*^9}, {3.899270426241242*^9, 3.8992704273889227`*^9}, {
   3.899270468436282*^9, 3.899270470816204*^9}, {3.899270656463332*^9, 
   3.899270733856134*^9}, {3.8992707717770967`*^9, 3.899270823035584*^9}, {
   3.899270898303154*^9, 3.899270969475088*^9}, {3.899271024618572*^9, 
   3.899271081132071*^9}, {3.8992711171210833`*^9, 3.899271225582735*^9}, {
   3.899271906585499*^9, 3.8992719222596703`*^9}, {3.8992721074814777`*^9, 
   3.899272219440323*^9}, {3.899272345860293*^9, 3.899272351873911*^9}, {
   3.8992726958553057`*^9, 3.899272717916882*^9}, {3.899272989782043*^9, 
   3.89927301366494*^9}, {3.899273205130351*^9, 3.899273213690199*^9}, {
   3.899273734929414*^9, 3.899273754570863*^9}, {3.899274220711665*^9, 
   3.8992742643512383`*^9}, {3.899274762184877*^9, 3.8992747664084253`*^9}},
 CellLabel->
  "In[375]:=",ExpressionUUID->"bd170ad8-5e30-43da-969f-d42b5d4d729d"],

Cell[BoxData[
 FractionBox[
  RowBox[{"p", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "6"}], "+", 
     RowBox[{"2", " ", "e"}], "+", "p", "-", 
     RowBox[{"4", " ", "e", " ", 
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Chi]0", "]"}], "2"]}]}], ")"}]}], 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "+", "e"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "6"}], "+", 
      RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}], "-", 
   RowBox[{"2", " ", "e", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"Sin", "[", "\[Chi]0", "]"}], "2"]}]}]]], "Output",
 CellChangeTimes->{
  3.8992710585853157`*^9, 3.899271228802672*^9, {3.899271916540246*^9, 
   3.899271949877232*^9}, {3.899272118360976*^9, 3.8992721301576147`*^9}, {
   3.899272175199708*^9, 3.899272231037032*^9}, {3.899272346502228*^9, 
   3.8992723522216253`*^9}, 3.8992732140298243`*^9, 3.899273757832443*^9, 
   3.899274269006666*^9, 3.899274769463007*^9, 3.899353271895083*^9, 
   3.899369130812014*^9, 3.899386255748786*^9, 3.899433072087779*^9, 
   3.899444111372684*^9},
 CellLabel->
  "Out[375]=",ExpressionUUID->"33e9c609-1472-4b67-bdd9-336e00a809db"],

Cell[BoxData[
 FractionBox[
  RowBox[{"e", " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["e", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", "p"}]], 
   " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "6"}], "+", 
     RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "\[Chi]0"}], "]"}], " ", 
   SqrtBox[
    RowBox[{"1", "-", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"Sin", "[", "\[Chi]0", "]"}], "2"], " ", 
      SubsuperscriptBox["k", "0", "2"]}]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "qr"}], " ", 
      RowBox[{"\[CapitalEpsilon]", "[", "k", "]"}]}], "+", 
     RowBox[{"\[Pi]", " ", 
      RowBox[{"\[CapitalEpsilon]", "[", 
       RowBox[{"\[Chi]0", ",", "k"}], "]"}]}]}], ")"}]}], 
  RowBox[{"\[Pi]", " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "6"}], "+", 
      RowBox[{"2", " ", 
       SuperscriptBox["e", "2"]}], "+", "p", "+", 
      RowBox[{"e", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}], "2"]}]]], "Output",
 CellChangeTimes->{
  3.8992710585853157`*^9, 3.899271228802672*^9, {3.899271916540246*^9, 
   3.899271949877232*^9}, {3.899272118360976*^9, 3.8992721301576147`*^9}, {
   3.899272175199708*^9, 3.899272231037032*^9}, {3.899272346502228*^9, 
   3.8992723522216253`*^9}, 3.8992732140298243`*^9, 3.899273757832443*^9, 
   3.899274269006666*^9, 3.899274769463007*^9, 3.899353271895083*^9, 
   3.899369130812014*^9, 3.899386255748786*^9, 3.899433072087779*^9, 
   3.899444111501687*^9},
 CellLabel->
  "Out[376]=",ExpressionUUID->"6af39845-506e-4d5d-a28e-4a0961dcdbe0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Non", "-", 
    RowBox[{"expanded", " ", "expressions"}]}], "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.8992679727847567`*^9, 3.8992680242172613`*^9}, {
  3.8992680755750933`*^9, 3.899268107362215*^9}},
 CellLabel->
  "In[170]:=",ExpressionUUID->"26ecacdb-0fbd-484c-b028-37441d252041"]
}, Closed]],

Cell[CellGroupData[{

Cell["Expansion of t", "Subsubsection",
 CellChangeTimes->{{3.899274178984274*^9, 3.899274194307083*^9}, 
   3.899278967362389*^9},ExpressionUUID->"6a283803-2a17-45dc-90d3-\
737ceca56f83"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"\[Chi]0qr", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"JacobiAmplitude", "[", 
      RowBox[{
       RowBox[{
        FractionBox["qr", "\[Pi]"], 
        RowBox[{"EllipticK", "[", 
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]], "]"}]}], ",", 
       FractionBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "/.", "Subs"}], 
    "/.", 
    RowBox[{"sp", "->", "0"}]}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
        RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
        RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
    "&"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]\[Chi]", " ", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Coefficient", "[", " ", 
       RowBox[{
        RowBox[{"Series", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"JacobiAmplitude", "[", 
            RowBox[{
             RowBox[{
              FractionBox["qr", "\[Pi]"], 
              RowBox[{"EllipticK", "[", 
               FractionBox[
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]], "]"}]}], ",", 
             FractionBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r2"}], ")"}], "r3"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"r1", "-", "r3"}], ")"}], "r2"}]]}], "]"}], "/.", 
           "Subs"}], ",", 
          RowBox[{"{", 
           RowBox[{"sp", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", "sp"}], 
       "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"JacobiCN", "[", 
          RowBox[{"_", ",", "_"}], "]"}], " ", "->", " ", 
         RowBox[{"Cos", "[", "\[Chi]0", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"JacobiSN", "[", 
          RowBox[{"_", ",", "_"}], "]"}], "->", " ", 
         RowBox[{"Sin", "[", "\[Chi]0", "]"}]}], ",", " ", 
        RowBox[{
         RowBox[{"JacobiDN", "[", 
          RowBox[{"_", ",", "_"}], "]"}], "->", " ", 
         SqrtBox[
          RowBox[{"1", "-", 
           RowBox[{
            SuperscriptBox["k0", "2"], 
            SuperscriptBox[
             RowBox[{"Sin", "[", "\[Chi]0", "]"}], "2"]}]}]]}], " ", ",", 
        RowBox[{
         RowBox[{"JacobiEpsilon", "[", 
          RowBox[{"_", ",", "_"}], "]"}], "->", 
         RowBox[{"EllipticE", "[", 
          RowBox[{"\[Chi]0", ",", "k0"}], "]"}]}], ",", 
        RowBox[{
         RowBox[{"EllipticE", "[", "_", "]"}], "->", 
         RowBox[{"EllipticE", "[", "k0", "]"}]}]}], "}"}]}], "/.", 
     RowBox[{"{", 
      RowBox[{"k0", "->", 
       FractionBox[
        RowBox[{"4", " ", "e"}], 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}]]}], "}"}]}], " ", "//", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", ">", "0"}], ",", 
         RowBox[{"0", "<", "e", "<", "1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
         RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
         RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
     "&"}]}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Consistency", " ", "check"}], ",", " ", 
    RowBox[{
     RowBox[{
     "\[Delta]\[Chi]", " ", "does", " ", "not", " ", "change", " ", "value", 
      " ", "at", " ", "\[Chi]"}], "=", 
     RowBox[{"\[Pi]", ":"}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Delta]\[Chi]", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\[Chi]0", "->", "\[Pi]"}], ",", 
       RowBox[{"qr", "->", 
        RowBox[{"2", "\[Pi]"}]}]}], "}"}]}], "//", 
    RowBox[{
     RowBox[{"FullSimplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", ">", "0"}], ",", 
         RowBox[{"0", "<", "e", "<", "1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
         RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
         RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
     "&"}]}], "//", "PowerExpand"}], "//", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"#", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", ">", "0"}], ",", 
       RowBox[{"0", "<", "e", "<", "1"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
       RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
       RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
   "&"}]}]}], "Input",
 CellChangeTimes->{{3.899274178984274*^9, 3.899274210344358*^9}, {
   3.899274284701354*^9, 3.899274300777927*^9}, {3.899274571712615*^9, 
   3.899274624427346*^9}, {3.899274672303115*^9, 3.899274710255665*^9}, {
   3.8992747892258463`*^9, 3.899274822037112*^9}, {3.899274863594657*^9, 
   3.899274880162703*^9}, {3.899274916876217*^9, 3.899274930338702*^9}, {
   3.8992749670895977`*^9, 3.899274976487914*^9}, {3.8992750335068197`*^9, 
   3.899275117060338*^9}, {3.8993656719193907`*^9, 3.8993656742135057`*^9}, {
   3.8993657428233347`*^9, 3.899365759955123*^9}, {3.899377024688048*^9, 
   3.899377084103606*^9}, {3.899386362837863*^9, 3.899386397788867*^9}, 
   3.899434768819655*^9, 3.899443765078315*^9, {3.899449032013289*^9, 
   3.899449056402939*^9}},
 CellLabel->
  "In[410]:=",ExpressionUUID->"3eb853d1-ce94-4b8a-bb2a-1d9e9aaabf49"],

Cell[BoxData[
 RowBox[{"JacobiAmplitude", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"qr", " ", 
     RowBox[{"EllipticK", "[", 
      FractionBox[
       RowBox[{"4", " ", "e"}], 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "\[Pi]"], ",", 
   FractionBox[
    RowBox[{"4", " ", "e"}], 
    RowBox[{
     RowBox[{"-", "6"}], "+", 
     RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]], "Output",
 CellChangeTimes->{
  3.8992749788750467`*^9, {3.899275034525622*^9, 3.899275050851321*^9}, 
   3.8992750891973143`*^9, 3.899275119967067*^9, 3.8993532743138933`*^9, 
   3.899365786519226*^9, 3.899369133559369*^9, {3.89937704684129*^9, 
   3.899377087511318*^9}, 3.899386258271264*^9, 3.899433074730723*^9, 
   3.899444133053692*^9, 3.899444187046567*^9, 3.899449057436626*^9},
 CellLabel->
  "Out[410]=",ExpressionUUID->"0dcc5cfc-4b47-4fa4-8623-8e112ba34eda"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["e", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", "p"}]], 
   " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "qr"}], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["e", "2"]}], "+", 
        RowBox[{"4", " ", "e", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["e", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
      RowBox[{"EllipticE", "[", 
       FractionBox[
        RowBox[{"4", " ", "e"}], 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
     RowBox[{"\[Pi]", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["e", "2"]}], "+", 
        RowBox[{"4", " ", "e", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
        RowBox[{"8", " ", 
         SuperscriptBox["e", "2"], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
      RowBox[{"EllipticE", "[", 
       RowBox[{"\[Chi]0", ",", 
        FractionBox[
         RowBox[{"4", " ", "e"}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "-", 
     RowBox[{"2", " ", "e", " ", "\[Pi]", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], 
  RowBox[{"2", " ", "p", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "6"}], "-", 
     RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "6"}], "+", 
     RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{
  3.8992749788750467`*^9, {3.899275034525622*^9, 3.899275050851321*^9}, 
   3.8992750891973143`*^9, 3.899275119967067*^9, 3.8993532743138933`*^9, 
   3.899365786519226*^9, 3.899369133559369*^9, {3.89937704684129*^9, 
   3.899377087511318*^9}, 3.899386258271264*^9, 3.899433074730723*^9, 
   3.899444133053692*^9, 3.899444187046567*^9, 3.899449058614501*^9},
 CellLabel->
  "Out[411]=",ExpressionUUID->"56d0179f-e92a-4ea0-8b6f-ea390fc60923"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.8992749788750467`*^9, {3.899275034525622*^9, 3.899275050851321*^9}, 
   3.8992750891973143`*^9, 3.899275119967067*^9, 3.8993532743138933`*^9, 
   3.899365786519226*^9, 3.899369133559369*^9, {3.89937704684129*^9, 
   3.899377087511318*^9}, 3.899386258271264*^9, 3.899433074730723*^9, 
   3.899444133053692*^9, 3.899444187046567*^9, 3.899449058636614*^9},
 CellLabel->
  "Out[412]=",ExpressionUUID->"b3ecc818-8c0e-46ce-8c8a-ad04cc5afa27"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"qt", "+", 
        RowBox[{"Ttr", "[", 
         RowBox[{"p", ",", "e", ",", "sp", ",", 
          RowBox[{"\[Chi]0", "+", 
           RowBox[{"sp", " ", "\[Delta]\[Chi]"}]}]}], "]"}], " ", "-", " ", 
        RowBox[{
         RowBox[{"Ttr", "[", 
          RowBox[{"p", ",", "e", ",", "sp", ",", "\[Pi]"}], "]"}], 
         FractionBox["qr", 
          RowBox[{"2", "\[Pi]"}]]}]}], ")"}], "/.", 
      RowBox[{"{", 
       RowBox[{"sp", "->", "0"}], "}"}]}], "//", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
          RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
          RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
      "&"}]}], "//", "PowerExpand"}], "//", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
        RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
        RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.899274178984274*^9, 3.899274210344358*^9}, {
   3.899274284701354*^9, 3.899274300777927*^9}, {3.899274571712615*^9, 
   3.899274624427346*^9}, {3.899274672303115*^9, 3.899274710255665*^9}, {
   3.8992747892258463`*^9, 3.899274822037112*^9}, {3.899274863594657*^9, 
   3.899274880162703*^9}, {3.899274916876217*^9, 3.899274930338702*^9}, {
   3.8992749670895977`*^9, 3.899274976487914*^9}, {3.89927517478126*^9, 
   3.8992753218157377`*^9}, {3.899275590868038*^9, 3.899275618571969*^9}, {
   3.899275649480719*^9, 3.8992756560373983`*^9}, 3.899434700868531*^9, 
   3.899443774775524*^9, {3.899444158782606*^9, 3.899444163253364*^9}},
 CellLabel->
  "In[383]:=",ExpressionUUID->"b8271b5d-86c7-4736-8422-b41f136ae3f6"],

Cell[BoxData[
 RowBox[{"qt", "-", 
  FractionBox[
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["e", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", "qr", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
         RowBox[{"EllipticE", "[", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}]}]]}], "+", 
      FractionBox[
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{"36", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
          RowBox[{"14", " ", "p"}], "+", 
          SuperscriptBox["p", "2"]}], ")"}], " ", 
        RowBox[{"EllipticK", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"8", "+", "p", "-", 
          SuperscriptBox["p", "2"], "+", 
          RowBox[{
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8"}], "+", 
             RowBox[{"3", " ", "p"}]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"16", " ", "e"}], 
           RowBox[{"12", "+", 
            RowBox[{"8", " ", "e"}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["e", "2"]}], "-", 
            RowBox[{"8", " ", "p"}], "+", 
            SuperscriptBox["p", "2"]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", "e"}], "-", "p"}]]}], ")"}]}], "\[Pi]"], "+", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SuperscriptBox["e", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], 
     RowBox[{
      RowBox[{"-", "6"}], "+", 
      RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"p", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
        RowBox[{"EllipticE", "[", 
         RowBox[{"\[Chi]0", ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}]}]]}], "+", 
     FractionBox[
      RowBox[{"p", " ", 
       RowBox[{"(", 
        RowBox[{"36", "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["e", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
         RowBox[{"14", " ", "p"}], "+", 
         SuperscriptBox["p", "2"]}], ")"}], " ", 
       RowBox[{"EllipticF", "[", 
        RowBox[{"\[Chi]0", ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["e", "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", 
         RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"8", "+", "p", "-", 
         SuperscriptBox["p", "2"], "+", 
         RowBox[{
          SuperscriptBox["e", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "8"}], "+", 
            RowBox[{"3", " ", "p"}]}], ")"}]}]}], ")"}], " ", 
       RowBox[{"EllipticPi", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "e", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "e"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", "\[Chi]0", 
         ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
     FractionBox[
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", 
         RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
       RowBox[{"EllipticPi", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"16", " ", "e"}], 
          RowBox[{"12", "+", 
           RowBox[{"8", " ", "e"}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["e", "2"]}], "-", 
           RowBox[{"8", " ", "p"}], "+", 
           SuperscriptBox["p", "2"]}]], ",", "\[Chi]0", ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{"2", "+", 
       RowBox[{"2", " ", "e"}], "-", "p"}]], "+", 
     FractionBox[
      RowBox[{"e", " ", "p", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", "p", "+", 
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "\[Chi]0"}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["e", "2"]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["e", "2"]}], "+", "p", "+", 
         RowBox[{"e", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.899275664817563*^9, {3.899281268163931*^9, 3.899281287289523*^9}, 
   3.8993532816368856`*^9, 3.899365802643055*^9, 3.8993691418438663`*^9, 
   3.899386265565439*^9, 3.899433082519106*^9, {3.8994441544857616`*^9, 
   3.899444190717729*^9}},
 CellLabel->
  "Out[383]=",ExpressionUUID->"8b1fdd0a-d826-42b6-96c3-0abe6df38976"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]t", " ", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{"qt", "+", 
        RowBox[{"Ttr", "[", 
         RowBox[{"p", ",", "e", ",", "sp", ",", 
          RowBox[{"\[Chi]0", "+", 
           RowBox[{"sp", " ", "\[Delta]\[Chi]"}]}]}], "]"}], " ", "-", " ", 
        RowBox[{
         RowBox[{"Ttr", "[", 
          RowBox[{"p", ",", "e", ",", "sp", ",", "\[Pi]"}], "]"}], 
         FractionBox["qr", 
          RowBox[{"2", "\[Pi]"}]]}]}], ",", "sp"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{"sp", "->", "0"}], "}"}]}], ")"}], "//", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
        RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
        RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.899274178984274*^9, 3.899274210344358*^9}, {
   3.899274284701354*^9, 3.899274300777927*^9}, {3.899274571712615*^9, 
   3.899274624427346*^9}, {3.899274672303115*^9, 3.899274710255665*^9}, {
   3.8992747892258463`*^9, 3.899274822037112*^9}, {3.899274863594657*^9, 
   3.899274880162703*^9}, {3.899274916876217*^9, 3.899274930338702*^9}, {
   3.8992749670895977`*^9, 3.899274976487914*^9}, {3.89927517478126*^9, 
   3.8992753218157377`*^9}, {3.899275590868038*^9, 3.899275618571969*^9}, {
   3.899275649480719*^9, 3.8992756560373983`*^9}, 3.899275902310341*^9, 
   3.8992801520907173`*^9, {3.899284272734099*^9, 3.899284274626625*^9}, {
   3.899289399620935*^9, 3.899289402025523*^9}, {3.899354513736864*^9, 
   3.899354517936694*^9}, {3.8993764982586527`*^9, 3.899376518022221*^9}, 
   3.899376683230275*^9, {3.8993861654709263`*^9, 3.899386213591216*^9}, {
   3.899386334882468*^9, 3.8993863461223783`*^9}, {3.899387831486333*^9, 
   3.899387836275669*^9}, {3.8994328714646273`*^9, 3.89943287998838*^9}, 
   3.899434476654894*^9, {3.899434509391919*^9, 3.899434513735517*^9}, {
   3.899434669906691*^9, 3.8994346870514793`*^9}, {3.8994398334919367`*^9, 
   3.8994398473513203`*^9}, 3.89944366257434*^9, {3.8994438303628187`*^9, 
   3.899443839024707*^9}},
 CellLabel->
  "In[384]:=",ExpressionUUID->"80777af7-9869-473e-a998-d47404f86a66"],

Cell[BoxData[
 TemplateBox[{
  "Simplify", "time", 
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"300.`\\\"}]\\) seconds, and the transformation was \
aborted. Increasing the value of the TimeConstraint option may improve the \
result of simplification.\"", 2, 384, 9, 28424279798172912607, "Local 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.899444490929563*^9},
 CellLabel->
  "During evaluation of \
In[384]:=",ExpressionUUID->"d792301f-aec7-4228-a467-c30b095fd73b"],

Cell[BoxData[
 TemplateBox[{
  "Simplify", "time", 
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"300.`\\\"}]\\) seconds, and the transformation was \
aborted. Increasing the value of the TimeConstraint option may improve the \
result of simplification.\"", 2, 384, 10, 28424279798172912607, "Local 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.89944577621294*^9},
 CellLabel->
  "During evaluation of \
In[384]:=",ExpressionUUID->"d5fa9111-0b4b-48eb-965d-771720f7275c"],

Cell[BoxData[
 TemplateBox[{
  "Simplify", "time", 
   "\"Time spent on a transformation exceeded \
\\!\\(\\*RowBox[{\\\"300.`\\\"}]\\) seconds, and the transformation was \
aborted. Increasing the value of the TimeConstraint option may improve the \
result of simplification.\"", 2, 384, 11, 28424279798172912607, "Local 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.899446462101638*^9},
 CellLabel->
  "During evaluation of \
In[384]:=",ExpressionUUID->"2ddf193e-ebec-4a57-b12f-380d3fcf3b26"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Simplify\\\", \
\\\"::\\\", \\\"time\\\"}], \\\"MessageName\\\"]\\) will be suppressed during \
this calculation.\"", 2, 384, 12, 28424279798172912607, "Local 2"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.899446462370463*^9},
 CellLabel->
  "During evaluation of \
In[384]:=",ExpressionUUID->"d86f7f05-5426-4c61-9644-eae420c336a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          SuperscriptBox["e", "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", "p", 
       " ", "qr", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", 
          FractionBox[
           RowBox[{"p", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
            RowBox[{"EllipticE", "[", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}]}]]}], "+", 
         FractionBox[
          RowBox[{"p", " ", 
           RowBox[{"(", 
            RowBox[{"36", "+", 
             RowBox[{"2", " ", 
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
             RowBox[{"14", " ", "p"}], "+", 
             SuperscriptBox["p", "2"]}], ")"}], " ", 
           RowBox[{"EllipticK", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             SuperscriptBox["e", "2"]}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"6", "+", 
             RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"8", "+", "p", "-", 
             SuperscriptBox["p", "2"], "+", 
             RowBox[{
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "8"}], "+", 
                RowBox[{"3", " ", "p"}]}], ")"}]}]}], ")"}], " ", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"2", " ", "e", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "+", "e"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
         FractionBox[
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{"6", "+", 
             RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"16", " ", "e"}], 
              RowBox[{"12", "+", 
               RowBox[{"8", " ", "e"}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["e", "2"]}], "-", 
               RowBox[{"8", " ", "p"}], "+", 
               SuperscriptBox["p", "2"]}]], ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
          RowBox[{"2", "+", 
           RowBox[{"2", " ", "e"}], "-", "p"}]]}], ")"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", 
          FractionBox[
           RowBox[{"p", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}], 
           RowBox[{"3", "+", 
            SuperscriptBox["e", "2"], "-", "p"}]]}], ")"}], 
        RowBox[{"3", "/", "2"}]], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "3"}], "-", 
          SuperscriptBox["e", "2"], "+", "p"}], ")"}], 
        RowBox[{"5", "/", "2"}]], " ", "\[Pi]"}], ")"}]}], ")"}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["e", "2"]}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       SuperscriptBox["e", "2"], "+", "p"}], ")"}], " ", "qr", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"EllipticE", "[", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "e"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p"}], ")"}]}]]}], "+", 
       FractionBox[
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{"36", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["e", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
           RowBox[{"14", " ", "p"}], "+", 
           SuperscriptBox["p", "2"]}], ")"}], " ", 
         RowBox[{"EllipticK", "[", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["e", "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"6", "+", 
           RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"8", "+", "p", "-", 
           SuperscriptBox["p", "2"], "+", 
           RowBox[{
            SuperscriptBox["e", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "8"}], "+", 
              RowBox[{"3", " ", "p"}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"EllipticPi", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "e", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "e"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"6", "+", 
           RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
         RowBox[{"EllipticPi", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"16", " ", "e"}], 
            RowBox[{"12", "+", 
             RowBox[{"8", " ", "e"}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["e", "2"]}], "-", 
             RowBox[{"8", " ", "p"}], "+", 
             SuperscriptBox["p", "2"]}]], ",", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
        RowBox[{"2", "+", 
         RowBox[{"2", " ", "e"}], "-", "p"}]]}], ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", "+", 
        SuperscriptBox["e", "2"], "-", "p"}], ")"}], "2"], " ", 
     SqrtBox[
      RowBox[{"p", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], " ", "\[Pi]"}], 
    ")"}]}], "-", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"2", " ", "\[Pi]"}]], 
   RowBox[{
    SqrtBox[
     FractionBox[
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["e", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], 
      RowBox[{
       SuperscriptBox["p", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]]], " ", "qr", " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"4", " ", "p", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"EllipticE", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "+", 
      FractionBox[
       RowBox[{"p", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"EllipticE", "[", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], "-", 
          RowBox[{"EllipticK", "[", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["p", "2"], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{"36", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
          RowBox[{"14", " ", "p"}], "+", 
          SuperscriptBox["p", "2"]}], ")"}], " ", 
        RowBox[{"EllipticK", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"]}]], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["p", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{"128", "-", 
          RowBox[{"144", " ", "p"}], "-", 
          RowBox[{"32", " ", 
           SuperscriptBox["p", "2"]}], "+", 
          RowBox[{"64", " ", 
           SuperscriptBox["p", "3"]}], "-", 
          RowBox[{"17", " ", 
           SuperscriptBox["p", "4"]}], "+", 
          SuperscriptBox["p", "5"], "-", 
          RowBox[{"16", " ", 
           SuperscriptBox["e", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8"}], "+", 
             RowBox[{"5", " ", "p"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "256"}], "-", 
             RowBox[{"32", " ", "p"}], "+", 
             RowBox[{"32", " ", 
              SuperscriptBox["p", "2"]}], "+", 
             SuperscriptBox["p", "4"]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"EllipticK", "[", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["e", "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"]}]], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"p", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
           "p"}]], " ", 
         RowBox[{"(", 
          RowBox[{"36", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["e", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
           RowBox[{"14", " ", "p"}], "+", 
           SuperscriptBox["p", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
            RowBox[{"EllipticE", "[", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"6", "+", 
              RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
            RowBox[{"EllipticK", "[", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}]}], ")"}]}], 
        ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"1", "+", "e"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"6", "+", 
           RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}], ")"}]}], "-", 
      FractionBox[
       RowBox[{"4", " ", "p", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "-", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"]}]], "-", 
      FractionBox[
       RowBox[{"8", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "8"}], "+", 
          RowBox[{
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{"8", "-", 
             RowBox[{"3", " ", "p"}]}], ")"}]}], "-", "p", "+", 
          SuperscriptBox["p", "2"]}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"]}]], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"4", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
           "p"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "8"}], "+", 
           RowBox[{
            SuperscriptBox["e", "2"], " ", 
            RowBox[{"(", 
             RowBox[{"8", "-", 
              RowBox[{"3", " ", "p"}]}], ")"}]}], "-", "p", "+", 
           SuperscriptBox["p", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
            RowBox[{"EllipticK", "[", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "-", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["e", "2"]}], "+", 
              RowBox[{"3", " ", "e", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "p"}], ")"}]}], "+", "p"}], ")"}], 
            " ", 
            RowBox[{"EllipticPi", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"2", " ", "e", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", "e"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
              FractionBox[
               RowBox[{"4", " ", "e"}], 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}]}], ")"}]}], 
        ")"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}], ")"}]}], "-", 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"16", " ", "e"}], 
           RowBox[{"12", "+", 
            RowBox[{"8", " ", "e"}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["e", "2"]}], "-", 
            RowBox[{"8", " ", "p"}], "+", 
            SuperscriptBox["p", "2"]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "-", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["p", 
         RowBox[{"5", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "-", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"16", " ", "e"}], 
           RowBox[{"12", "+", 
            RowBox[{"8", " ", "e"}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["e", "2"]}], "-", 
            RowBox[{"8", " ", "p"}], "+", 
            SuperscriptBox["p", "2"]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{"2", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["e", "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "-", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], "-", 
      FractionBox[
       RowBox[{"p", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "-", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
        RowBox[{"EllipticPi", "[", 
         RowBox[{
          FractionBox[
           RowBox[{"16", " ", "e"}], 
           RowBox[{"12", "+", 
            RowBox[{"8", " ", "e"}], "-", 
            RowBox[{"4", " ", 
             SuperscriptBox["e", "2"]}], "-", 
            RowBox[{"8", " ", "p"}], "+", 
            SuperscriptBox["p", "2"]}]], ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "-", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], "+", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"2", "+", 
           RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], 
       RowBox[{
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"12", "+", 
             RowBox[{"8", " ", "e"}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["e", "2"]}], "-", 
             RowBox[{"8", " ", "p"}], "+", 
             SuperscriptBox["p", "2"]}], ")"}], " ", 
           RowBox[{"EllipticK", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "12"}], "-", 
             RowBox[{"24", " ", "e"}], "+", 
             RowBox[{"4", " ", 
              SuperscriptBox["e", "2"]}], "+", 
             RowBox[{"8", " ", "p"}], "-", 
             SuperscriptBox["p", "2"]}], ")"}], " ", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"16", " ", "e"}], 
              RowBox[{"12", "+", 
               RowBox[{"8", " ", "e"}], "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["e", "2"]}], "-", 
               RowBox[{"8", " ", "p"}], "+", 
               SuperscriptBox["p", "2"]}]], ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}]}], ")"}]}]}]}],
      ")"}]}]}], "+", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"3", "+", "e"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "4"}], " ", 
        SuperscriptBox["e", "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", "p", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"EllipticE", "[", 
           RowBox[{"\[Chi]0", ",", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "e"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p"}], ")"}]}]]}], "+", 
       FractionBox[
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{"36", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["e", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
           RowBox[{"14", " ", "p"}], "+", 
           SuperscriptBox["p", "2"]}], ")"}], " ", 
         RowBox[{"EllipticF", "[", 
          RowBox[{"\[Chi]0", ",", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["e", "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"6", "+", 
           RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"8", "+", "p", "-", 
           SuperscriptBox["p", "2"], "+", 
           RowBox[{
            SuperscriptBox["e", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "8"}], "+", 
              RowBox[{"3", " ", "p"}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"EllipticPi", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "e", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "e"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", "\[Chi]0", 
           ",", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"6", "+", 
           RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
         RowBox[{"EllipticPi", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"16", " ", "e"}], 
            RowBox[{"12", "+", 
             RowBox[{"8", " ", "e"}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["e", "2"]}], "-", 
             RowBox[{"8", " ", "p"}], "+", 
             SuperscriptBox["p", "2"]}]], ",", "\[Chi]0", ",", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
        RowBox[{"2", "+", 
         RowBox[{"2", " ", "e"}], "-", "p"}]], "+", 
       FractionBox[
        RowBox[{"e", " ", "p", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", "p", "+", 
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Chi]0"}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["e", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["e", "2"]}], "+", "p", "+", 
           RowBox[{"e", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]]}], ")"}]}], 
    ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", 
        FractionBox[
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}], 
         RowBox[{"3", "+", 
          SuperscriptBox["e", "2"], "-", "p"}]]}], ")"}], 
      RowBox[{"3", "/", "2"}]], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "-", 
        SuperscriptBox["e", "2"], "+", "p"}], ")"}], 
      RowBox[{"5", "/", "2"}]]}], ")"}]}], "-", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["e", "2"]}], ")"}], "2"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "3"}], "-", 
       SuperscriptBox["e", "2"], "+", "p"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"p", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"EllipticE", "[", 
           RowBox[{"\[Chi]0", ",", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"1", "+", "e"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p"}], ")"}]}]]}], "+", 
       FractionBox[
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{"36", "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["e", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
           RowBox[{"14", " ", "p"}], "+", 
           SuperscriptBox["p", "2"]}], ")"}], " ", 
         RowBox[{"EllipticF", "[", 
          RowBox[{"\[Chi]0", ",", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["e", "2"]}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"6", "+", 
           RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"8", "+", "p", "-", 
           SuperscriptBox["p", "2"], "+", 
           RowBox[{
            SuperscriptBox["e", "2"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "8"}], "+", 
              RowBox[{"3", " ", "p"}]}], ")"}]}]}], ")"}], " ", 
         RowBox[{"EllipticPi", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"2", " ", "e", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "e"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", "\[Chi]0", 
           ",", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "+", "e"}], ")"}], "2"], " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "-", 
       FractionBox[
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"6", "+", 
           RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
         RowBox[{"EllipticPi", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"16", " ", "e"}], 
            RowBox[{"12", "+", 
             RowBox[{"8", " ", "e"}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["e", "2"]}], "-", 
             RowBox[{"8", " ", "p"}], "+", 
             SuperscriptBox["p", "2"]}]], ",", "\[Chi]0", ",", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
        RowBox[{"2", "+", 
         RowBox[{"2", " ", "e"}], "-", "p"}]], "+", 
       FractionBox[
        RowBox[{"e", " ", "p", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", "p", "+", 
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "\[Chi]0"}], "]"}]}], 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           SuperscriptBox["e", "2"]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["e", "2"]}], "+", "p", "+", 
           RowBox[{"e", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]]}], ")"}]}], 
    ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"2", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"3", "+", 
        SuperscriptBox["e", "2"], "-", "p"}], ")"}], "2"], " ", 
     SqrtBox[
      RowBox[{"p", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]]}], ")"}]}], "+", 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       SuperscriptBox["e", "2"]}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], 
     RowBox[{
      SuperscriptBox["p", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]]], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"2", " ", "p", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         "p"}]], " ", 
       RowBox[{"EllipticE", "[", 
        RowBox[{"\[Chi]0", ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "e"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", "2"], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         "p"}]], " ", 
       RowBox[{"(", 
        RowBox[{"36", "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["e", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
         RowBox[{"14", " ", "p"}], "+", 
         SuperscriptBox["p", "2"]}], ")"}], " ", 
       RowBox[{"EllipticF", "[", 
        RowBox[{"\[Chi]0", ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["e", "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"]}]], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["p", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"(", 
         RowBox[{"128", "-", 
          RowBox[{"144", " ", "p"}], "-", 
          RowBox[{"32", " ", 
           SuperscriptBox["p", "2"]}], "+", 
          RowBox[{"64", " ", 
           SuperscriptBox["p", "3"]}], "-", 
          RowBox[{"17", " ", 
           SuperscriptBox["p", "4"]}], "+", 
          SuperscriptBox["p", "5"], "-", 
          RowBox[{"16", " ", 
           SuperscriptBox["e", "4"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "8"}], "+", 
             RowBox[{"5", " ", "p"}]}], ")"}]}], "+", 
          RowBox[{
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "256"}], "-", 
             RowBox[{"32", " ", "p"}], "+", 
             RowBox[{"32", " ", 
              SuperscriptBox["p", "2"]}], "+", 
             SuperscriptBox["p", "4"]}], ")"}]}]}], ")"}], " ", 
        RowBox[{"EllipticF", "[", 
         RowBox[{"\[Chi]0", ",", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           SuperscriptBox["e", "2"]}], "+", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"p", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{"36", "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["e", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "-", 
          RowBox[{"14", " ", "p"}], "+", 
          SuperscriptBox["p", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"qr", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             RowBox[{"4", " ", "e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
           RowBox[{"EllipticE", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "6"}], " ", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "6"}], "+", "p", "+", 
                 RowBox[{"2", " ", "e", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]]]}], "+", 
             RowBox[{"2", " ", "e", " ", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "6"}], "+", "p", "+", 
                 RowBox[{"2", " ", "e", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]]]}], "+", 
             RowBox[{"p", " ", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "6"}], "+", "p", "+", 
                 RowBox[{"2", " ", "e", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]]]}], "-", 
             SqrtBox[
              RowBox[{
               RowBox[{
                RowBox[{"-", "4"}], " ", 
                SuperscriptBox["e", "2"]}], "+", 
               RowBox[{"4", " ", "e", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
               SuperscriptBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
               RowBox[{"8", " ", 
                SuperscriptBox["e", "2"], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]]}], ")"}], " ", 
           RowBox[{"EllipticE", "[", 
            RowBox[{"\[Chi]0", ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"6", "+", 
             RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", "\[Pi]", " ", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "6"}], "+", "p", "+", 
              RowBox[{"2", " ", "e", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
           RowBox[{"EllipticF", "[", 
            RowBox[{"\[Chi]0", ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}]}], ")"}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"], " ", "\[Pi]", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", "p", "+", 
            RowBox[{"2", " ", "e", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]]}], ")"}]}], 
     "-", 
     FractionBox[
      RowBox[{"2", " ", "p", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         "p"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "-", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
       RowBox[{"EllipticPi", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "e", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "e"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", "\[Chi]0", 
         ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "e"}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"]}]], "-", 
     FractionBox[
      RowBox[{"4", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         "p"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "8"}], "+", 
         RowBox[{
          SuperscriptBox["e", "2"], " ", 
          RowBox[{"(", 
           RowBox[{"8", "-", 
            RowBox[{"3", " ", "p"}]}], ")"}]}], "-", "p", "+", 
         SuperscriptBox["p", "2"]}], ")"}], " ", 
       RowBox[{"EllipticPi", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "e", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "e"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", "\[Chi]0", 
         ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["e", "2"]}], ")"}], " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"]}]], "-", 
     FractionBox[
      RowBox[{"4", " ", 
       RowBox[{"(", 
        RowBox[{"1", "+", "e"}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         "p"}]], " ", 
       RowBox[{"EllipticPi", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"16", " ", "e"}], 
          RowBox[{"12", "+", 
           RowBox[{"8", " ", "e"}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["e", "2"]}], "-", 
           RowBox[{"8", " ", "p"}], "+", 
           SuperscriptBox["p", "2"]}]], ",", "\[Chi]0", ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["p", 
        RowBox[{"5", "/", "2"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "-", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
       RowBox[{"EllipticPi", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"16", " ", "e"}], 
          RowBox[{"12", "+", 
           RowBox[{"8", " ", "e"}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["e", "2"]}], "-", 
           RowBox[{"8", " ", "p"}], "+", 
           SuperscriptBox["p", "2"]}]], ",", "\[Chi]0", ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{"4", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          SuperscriptBox["e", "2"]}], "+", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], "-", 
     FractionBox[
      RowBox[{"p", " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         "p"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "6"}], "-", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
       RowBox[{"EllipticPi", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"16", " ", "e"}], 
          RowBox[{"12", "+", 
           RowBox[{"8", " ", "e"}], "-", 
           RowBox[{"4", " ", 
            SuperscriptBox["e", "2"]}], "-", 
           RowBox[{"8", " ", "p"}], "+", 
           SuperscriptBox["p", "2"]}]], ",", "\[Chi]0", ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "-", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"e", " ", 
        SuperscriptBox["p", 
         RowBox[{"3", "/", "2"}]], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "\[Chi]0"}], "]"}], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", "p", "+", 
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"qr", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             RowBox[{"4", " ", "e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
           RowBox[{"EllipticE", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "-", 
          RowBox[{"\[Pi]", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             RowBox[{"4", " ", "e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
           RowBox[{"EllipticE", "[", 
            RowBox[{"\[Chi]0", ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
          RowBox[{"2", " ", "e", " ", "\[Pi]", " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", "\[Pi]", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["e", "2"]}], "+", "p", "+", 
          RowBox[{"e", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"p", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"qr", " ", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"-", "6"}], "+", "p", "+", 
              RowBox[{"2", " ", "e", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             RowBox[{"4", " ", "e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
           RowBox[{"EllipticE", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "+", 
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "-", 
                RowBox[{"2", " ", "e"}], "+", "p", "-", 
                RowBox[{
                 SqrtBox[
                  FractionBox[
                   RowBox[{
                    RowBox[{"-", "6"}], "+", "p", "+", 
                    RowBox[{"2", " ", "e", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", 
                    SuperscriptBox["e", "2"]}], "+", 
                   RowBox[{"4", " ", "e", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
                   SuperscriptBox[
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
                   RowBox[{"8", " ", 
                    SuperscriptBox["e", "2"], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]]}]}], ")"}], " ", 
              RowBox[{"EllipticE", "[", 
               RowBox[{"\[Chi]0", ",", 
                FractionBox[
                 RowBox[{"4", " ", "e"}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"6", "+", 
                RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
              RowBox[{"EllipticF", "[", 
               RowBox[{"\[Chi]0", ",", 
                FractionBox[
                 RowBox[{"4", " ", "e"}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
             RowBox[{"2", " ", "e", " ", 
              SqrtBox[
               FractionBox[
                RowBox[{
                 RowBox[{"-", "6"}], "+", "p", "+", 
                 RowBox[{"2", " ", "e", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", "\[Pi]"}], ")"}]}], "-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"4", " ", 
        RowBox[{"(", 
         RowBox[{"2", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", "e"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         FractionBox["1", 
          RowBox[{"1", "+", "e"}]], "-", 
         FractionBox["2", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "p"}]]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         "p"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", "p", "+", 
                    RowBox[{"2", " ", "e", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]]}], " ", 
               RowBox[{"EllipticE", "[", 
                RowBox[{"\[Chi]0", ",", 
                 FractionBox[
                  RowBox[{"4", " ", "e"}], 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"6", "+", 
                 RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "6"}], "+", "p", "+", 
                  RowBox[{"2", " ", "e", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
               RowBox[{"EllipticPi", "[", 
                RowBox[{
                 FractionBox[
                  RowBox[{"16", " ", "e"}], 
                  RowBox[{"12", "+", 
                   RowBox[{"8", " ", "e"}], "-", 
                   RowBox[{"4", " ", 
                    SuperscriptBox["e", "2"]}], "-", 
                   RowBox[{"8", " ", "p"}], "+", 
                   SuperscriptBox["p", "2"]}]], ",", "\[Chi]0", ",", 
                 FractionBox[
                  RowBox[{"4", " ", "e"}], 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
              RowBox[{"2", " ", "e", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "-", 
               RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], "2"], " ", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "6"}], "+", "p", "+", 
               RowBox[{"2", " ", "e", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]]}], ")"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"4", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], 
             RowBox[{"3", "/", "2"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"qr", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", 
                  SuperscriptBox["e", "2"]}], "+", 
                 RowBox[{"4", " ", "e", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["e", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
               RowBox[{"EllipticE", "[", 
                FractionBox[
                 RowBox[{"4", " ", "e"}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "-", 
              RowBox[{"\[Pi]", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "4"}], " ", 
                  SuperscriptBox["e", "2"]}], "+", 
                 RowBox[{"4", " ", "e", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
                 SuperscriptBox[
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
                 RowBox[{"8", " ", 
                  SuperscriptBox["e", "2"], " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
               RowBox[{"EllipticE", "[", 
                RowBox[{"\[Chi]0", ",", 
                 FractionBox[
                  RowBox[{"4", " ", "e"}], 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
              RowBox[{"2", " ", "e", " ", "\[Pi]", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"6", "+", 
              RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", "\[Pi]", " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "6"}], "+", "p", "+", 
              RowBox[{"2", " ", "e", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
            RowBox[{"(", 
             RowBox[{"12", "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["e", "2"]}], "-", 
              RowBox[{"8", " ", "p"}], "+", 
              SuperscriptBox["p", "2"], "+", 
              RowBox[{"8", " ", "e", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], ")"}]}], 
         "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"4", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", 
               RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "12"}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["e", "2"]}], "+", 
               RowBox[{"8", " ", "p"}], "-", 
               SuperscriptBox["p", "2"], "-", 
               RowBox[{"8", " ", "e", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}], " ", 
             RowBox[{"EllipticE", "[", 
              RowBox[{"\[Chi]0", ",", 
               FractionBox[
                RowBox[{"4", " ", "e"}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"2", "+", 
               RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"6", "+", 
               RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "12"}], "+", 
               RowBox[{"4", " ", 
                SuperscriptBox["e", "2"]}], "+", 
               RowBox[{"8", " ", "p"}], "-", 
               SuperscriptBox["p", "2"], "-", 
               RowBox[{"8", " ", "e", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}], " ", 
             RowBox[{"EllipticF", "[", 
              RowBox[{"\[Chi]0", ",", 
               FractionBox[
                RowBox[{"4", " ", "e"}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"64", " ", "e"}], "-", 
               RowBox[{
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], "-", 
                   RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]}], ")"}], " ", 
             
             RowBox[{"(", 
              RowBox[{"12", "-", 
               RowBox[{"4", " ", 
                SuperscriptBox["e", "2"]}], "-", 
               RowBox[{"8", " ", "p"}], "+", 
               SuperscriptBox["p", "2"], "+", 
               RowBox[{"8", " ", "e", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}], " ", 
             RowBox[{"EllipticPi", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"16", " ", "e"}], 
                RowBox[{"12", "+", 
                 RowBox[{"8", " ", "e"}], "-", 
                 RowBox[{"4", " ", 
                  SuperscriptBox["e", "2"]}], "-", 
                 RowBox[{"8", " ", "p"}], "+", 
                 SuperscriptBox["p", "2"]}]], ",", "\[Chi]0", ",", 
               FractionBox[
                RowBox[{"4", " ", "e"}], 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
            RowBox[{"32", " ", "e", " ", 
             RowBox[{"(", 
              RowBox[{"2", "+", 
               RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", "p", "+", 
                 RowBox[{"2", " ", "e", " ", 
                  RowBox[{"Cos", "[", 
                   RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "-", 
               RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], "2"], " ", 
            RowBox[{"(", 
             RowBox[{"12", "-", 
              RowBox[{"4", " ", 
               SuperscriptBox["e", "2"]}], "-", 
              RowBox[{"8", " ", "p"}], "+", 
              SuperscriptBox["p", "2"], "+", 
              RowBox[{"8", " ", "e", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], ")"}]}]}], 
        ")"}]}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          FractionBox["1", 
           RowBox[{"1", "+", "e"}]], "-", 
          FractionBox["2", 
           RowBox[{
            RowBox[{"-", "4"}], "+", "p"}]]}], ")"}], " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"(", 
         RowBox[{"4", "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["1", 
              RowBox[{"1", "-", "e"}]], "+", 
             FractionBox["1", 
              RowBox[{"1", "+", "e"}]], "+", 
             FractionBox["2", 
              RowBox[{
               RowBox[{"-", "4"}], "+", "p"}]]}], ")"}], " ", "p"}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           FractionBox["1", 
            SqrtBox[
             FractionBox[
              RowBox[{
               RowBox[{"-", "6"}], "+", "p", "+", 
               RowBox[{"2", " ", "e", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]]], 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{"1", "+", "e"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", "p", "+", 
                    RowBox[{"2", " ", "e", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]]}], " ", 
               RowBox[{"EllipticE", "[", 
                RowBox[{"\[Chi]0", ",", 
                 FractionBox[
                  RowBox[{"4", " ", "e"}], 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"6", "+", 
                 RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
               SqrtBox[
                FractionBox[
                 RowBox[{
                  RowBox[{"-", "6"}], "+", "p", "+", 
                  RowBox[{"2", " ", "e", " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
               RowBox[{"EllipticPi", "[", 
                RowBox[{
                 FractionBox[
                  RowBox[{"2", " ", "e", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"1", "+", "e"}], ")"}], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
                 "\[Chi]0", ",", 
                 FractionBox[
                  RowBox[{"4", " ", "e"}], 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
              RowBox[{"2", " ", "e", " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "+", "e"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{"6", "+", 
               RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], 
              RowBox[{"3", "/", "2"}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"qr", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["e", "2"]}], "+", 
                  RowBox[{"4", " ", "e", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
                  RowBox[{"8", " ", 
                   SuperscriptBox["e", "2"], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
                RowBox[{"EllipticE", "[", 
                 FractionBox[
                  RowBox[{"4", " ", "e"}], 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", 
                   RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "-", 
               RowBox[{"\[Pi]", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "4"}], " ", 
                   SuperscriptBox["e", "2"]}], "+", 
                  RowBox[{"4", " ", "e", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
                  SuperscriptBox[
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
                  RowBox[{"8", " ", 
                   SuperscriptBox["e", "2"], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
                RowBox[{"EllipticE", "[", 
                 RowBox[{"\[Chi]0", ",", 
                  FractionBox[
                   RowBox[{"4", " ", "e"}], 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
               RowBox[{"2", " ", "e", " ", "\[Pi]", " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], ")"}], 
           "/", 
           RowBox[{"(", 
            RowBox[{"\[Pi]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "6"}], "+", "p", "+", 
               RowBox[{"2", " ", "e", " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["e", "2"]}], "+", "p", "+", 
               RowBox[{"e", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], ")"}]}], 
          "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", "e"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"1", "+", "e"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"2", " ", 
                    SuperscriptBox["e", "2"]}], "+", "p", "+", 
                    RowBox[{"e", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}], " ", 
                  RowBox[{"EllipticE", "[", 
                   RowBox[{"\[Chi]0", ",", 
                    FractionBox[
                    RowBox[{"4", " ", "e"}], 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], ")"}]}], 
               "-", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"1", "+", "e"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{"6", "+", 
                  RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["e", "2"]}], "+", "p", "+", 
                  RowBox[{"e", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}], " ", 
                RowBox[{"EllipticF", "[", 
                 RowBox[{"\[Chi]0", ",", 
                  FractionBox[
                   RowBox[{"4", " ", "e"}], 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
               RowBox[{"2", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["e", "3"]}], "+", 
                  RowBox[{
                   SuperscriptBox["e", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", "p"}], ")"}]}], "+", "p", "-", 
                  RowBox[{"e", " ", 
                   RowBox[{"(", 
                    RowBox[{"26", "-", 
                    RowBox[{"10", " ", "p"}], "+", 
                    SuperscriptBox["p", "2"]}], ")"}]}]}], ")"}], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", 
                   SuperscriptBox["e", "2"]}], "+", "p", "+", 
                  RowBox[{"e", " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
                   RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}], " ", 
                RowBox[{"EllipticPi", "[", 
                 RowBox[{
                  FractionBox[
                   RowBox[{"2", " ", "e", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", "e"}], ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
                  "\[Chi]0", ",", 
                  FractionBox[
                   RowBox[{"4", " ", "e"}], 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
               RowBox[{"e", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", "e"}], ")"}], " ", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"], " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", 
                    RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "6"}], "+", "p", "+", 
                    RowBox[{"2", " ", "e", " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]], " ", 
                RowBox[{"Sin", "[", 
                 RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], ")"}], 
           "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["e", "2"]}], "+", "p", "+", 
               RowBox[{"e", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
                RowBox[{"Cos", "[", 
                 RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], ")"}]}]}],
          ")"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "-", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"e", " ", "p", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
          "p"}]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Chi]0"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "e"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", "qr", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             RowBox[{"4", " ", "e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
           RowBox[{"EllipticE", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Chi]0"}], "]"}]}], "+", 
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "72"}], "+", 
             RowBox[{"24", " ", "e"}], "+", 
             RowBox[{"20", " ", 
              SuperscriptBox["e", "2"]}], "+", 
             RowBox[{"24", " ", "p"}], "-", 
             RowBox[{"10", " ", "e", " ", "p"}], "-", 
             RowBox[{"3", " ", 
              SuperscriptBox["e", "2"], " ", "p"}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["p", "2"]}], "+", 
             RowBox[{"e", " ", 
              SuperscriptBox["p", "2"]}], "-", 
             RowBox[{"e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "48"}], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["e", "2"]}], "-", 
                RowBox[{"2", " ", "e", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "4"}], "+", "p"}], ")"}]}], "+", 
                RowBox[{"14", " ", "p"}], "-", 
                SuperscriptBox["p", "2"]}], ")"}], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}], "-", 
             RowBox[{"4", " ", 
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Chi]0"}], "]"}]}], "+", 
             RowBox[{
              SuperscriptBox["e", "2"], " ", "p", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Chi]0"}], "]"}]}], "+", 
             RowBox[{"e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox["e", "2"]}], "+", 
                RowBox[{"4", " ", "e", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["e", "2"], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
              RowBox[{"EllipticE", "[", 
               RowBox[{"\[Chi]0", ",", 
                FractionBox[
                 RowBox[{"4", " ", "e"}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"1", "+", "e"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", "\[Pi]", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", "p", "+", 
            RowBox[{"2", " ", "e", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", 
           SuperscriptBox["e", "2"]}], "+", "p", "+", 
          RowBox[{"e", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], ")"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"e", " ", 
        SuperscriptBox["p", 
         RowBox[{"3", "/", "2"}]], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", "p", "+", 
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "\[Chi]0"}], "]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "e"}], " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"], " ", "qr", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             RowBox[{"4", " ", "e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
             RowBox[{"8", " ", 
              SuperscriptBox["e", "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
           RowBox[{"EllipticE", "[", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"2", " ", "\[Chi]0"}], "]"}]}], "+", 
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "72"}], "+", 
             RowBox[{"64", " ", 
              SuperscriptBox["e", "2"]}], "-", 
             RowBox[{"8", " ", 
              SuperscriptBox["e", "4"]}], "+", 
             RowBox[{"24", " ", "p"}], "-", 
             RowBox[{"16", " ", 
              SuperscriptBox["e", "2"], " ", "p"}], "-", 
             RowBox[{"2", " ", 
              SuperscriptBox["p", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["e", "2"], " ", 
              SuperscriptBox["p", "2"]}], "+", 
             RowBox[{
              SuperscriptBox["e", "2"], " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"], " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"4", " ", "\[Chi]0"}], "]"}]}], "+", 
             RowBox[{"e", " ", 
              SuperscriptBox[
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"], " ", 
              SqrtBox[
               RowBox[{
                RowBox[{
                 RowBox[{"-", "4"}], " ", 
                 SuperscriptBox["e", "2"]}], "+", 
                RowBox[{"4", " ", "e", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
                RowBox[{"8", " ", 
                 SuperscriptBox["e", "2"], " ", 
                 RowBox[{"Cos", "[", 
                  RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
              RowBox[{"EllipticE", "[", 
               RowBox[{"\[Chi]0", ",", 
                FractionBox[
                 RowBox[{"4", " ", "e"}], 
                 RowBox[{
                  RowBox[{"-", "6"}], "+", 
                  RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
       ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{"6", "+", 
          RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", "\[Pi]", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["e", "2"]}], "+", "p", "+", 
           RowBox[{"e", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}], "2"]}], 
       ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.899448048812243*^9},
 CellLabel->
  "Out[384]=",ExpressionUUID->"1611f1fc-b9ec-4233-9d0d-13e708eadc51"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "expression", " ", "will", " ", "take", " ", "a", " ", "long",
     " ", "time", " ", "to", " ", "evaluate", " ", "since", " ", "\[Delta]t", 
    " ", "is", " ", "complicated", " ", "and", " ", "long"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"\[Delta]t", " ", "=", " ", 
    RowBox[{
     RowBox[{"\[Delta]t", "//", "PowerExpand"}], "//", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
          RowBox[{"qr", " ", "\[Element]", "Reals"}], ",", 
          RowBox[{"\[Chi]0", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
      "&"}]}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.899274178984274*^9, 3.899274210344358*^9}, {
   3.899274284701354*^9, 3.899274300777927*^9}, {3.899274571712615*^9, 
   3.899274624427346*^9}, {3.899274672303115*^9, 3.899274710255665*^9}, {
   3.8992747892258463`*^9, 3.899274822037112*^9}, {3.899274863594657*^9, 
   3.899274880162703*^9}, {3.899274916876217*^9, 3.899274930338702*^9}, {
   3.8992749670895977`*^9, 3.899274976487914*^9}, {3.89927517478126*^9, 
   3.8992753218157377`*^9}, {3.899275590868038*^9, 3.899275618571969*^9}, {
   3.899275649480719*^9, 3.8992756560373983`*^9}, 3.899275902310341*^9, 
   3.8992801520907173`*^9, {3.899284272734099*^9, 3.899284274626625*^9}, {
   3.899289399620935*^9, 3.899289402025523*^9}, {3.899354513736864*^9, 
   3.899354517936694*^9}, {3.8993764982586527`*^9, 3.899376518022221*^9}, 
   3.899376683230275*^9, {3.8993861654709263`*^9, 3.899386213591216*^9}, {
   3.899386334882468*^9, 3.8993863461223783`*^9}, {3.899387831486333*^9, 
   3.899387836275669*^9}, {3.8994328714646273`*^9, 3.89943287998838*^9}, 
   3.899434476654894*^9, {3.899434509391919*^9, 3.899434513735517*^9}, {
   3.899434669906691*^9, 3.8994346870514793`*^9}, {3.8994398334919367`*^9, 
   3.899439863806715*^9}, {3.8994399191053*^9, 3.899439946218668*^9}, 
   3.8994399971127243`*^9, 3.8994436722829657`*^9, 3.899443781184352*^9, {
   3.89944423587964*^9, 3.899444238938963*^9}, {3.8995352864963217`*^9, 
   3.899535308484816*^9}},ExpressionUUID->"76933426-38ab-417f-9cd2-\
42836b97e854"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"avg", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Coefficient", "[", 
       RowBox[{
        RowBox[{"Series", "[", " ", 
         RowBox[{
          RowBox[{"Ttr", "[", 
           RowBox[{"p", ",", "e", ",", "sp", ",", "\[Pi]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"sp", ",", "0", ",", "1"}], "}"}]}], "]"}], ",", "sp"}], 
       "]"}], "//", "FunctionExpand"}], " ", "//", 
     RowBox[{
      RowBox[{"FullSimplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}],
       "&"}]}], "//", "PowerExpand"}], "//", 
   RowBox[{
    RowBox[{"FullSimplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.899274178984274*^9, 3.899274210344358*^9}, {
   3.899274284701354*^9, 3.899274300777927*^9}, {3.899274571712615*^9, 
   3.899274624427346*^9}, {3.899274672303115*^9, 3.899274710255665*^9}, {
   3.8992747892258463`*^9, 3.899274822037112*^9}, {3.899274863594657*^9, 
   3.899274880162703*^9}, {3.899274916876217*^9, 3.899274930338702*^9}, {
   3.8992749670895977`*^9, 3.899274976487914*^9}, {3.89927517478126*^9, 
   3.8992753218157377`*^9}, {3.899275590868038*^9, 3.899275618571969*^9}, {
   3.899275649480719*^9, 3.8992756560373983`*^9}, 3.899275902310341*^9, 
   3.8992801520907173`*^9, {3.899284272734099*^9, 3.899284274626625*^9}, {
   3.899289399620935*^9, 3.899289402025523*^9}, {3.899354513736864*^9, 
   3.899354517936694*^9}, {3.8993764982586527`*^9, 3.899376571223753*^9}, {
   3.899376661737412*^9, 3.899376720797057*^9}, {3.899376865255763*^9, 
   3.899376873412784*^9}, {3.899377149938737*^9, 3.899377189811414*^9}, 
   3.899377272517448*^9, {3.8994346146488457`*^9, 3.899434656517358*^9}},
 CellLabel->
  "In[385]:=",ExpressionUUID->"dcaa8063-301b-496c-84eb-66b1d8a0a484"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "4"}], "+", "p"}], ")"}], "3"], " ", 
    SqrtBox[
     RowBox[{"p", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]]}]], 
  RowBox[{"p", " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "p"}], ")"}], " ", "p", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "44"}], "+", 
         RowBox[{"12", " ", 
          SuperscriptBox["e", "2"]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"20", "-", 
            RowBox[{"3", " ", "p"}]}], ")"}], " ", "p"}]}], ")"}], " ", 
       RowBox[{"EllipticE", "[", 
        FractionBox[
         RowBox[{"4", " ", "e"}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], 
      RowBox[{
       RowBox[{"-", "6"}], "-", 
       RowBox[{"2", " ", "e"}], "+", "p"}]], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "128"}], "+", 
        RowBox[{"p", " ", 
         RowBox[{"(", 
          RowBox[{"148", "+", 
           RowBox[{"12", " ", 
            SuperscriptBox["e", "2"]}], "+", 
           RowBox[{"p", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "44"}], "+", 
              RowBox[{"3", " ", "p"}]}], ")"}]}]}], ")"}]}]}], ")"}], " ", 
      RowBox[{"EllipticK", "[", 
       FractionBox[
        RowBox[{"4", " ", "e"}], 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "-", 
     FractionBox[
      RowBox[{"6", " ", 
       RowBox[{"(", 
        RowBox[{"6", "+", 
         RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{"3", "+", 
         SuperscriptBox["e", "2"], "-", "p"}], ")"}], " ", "p", " ", 
       RowBox[{"EllipticPi", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"2", " ", "e", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "4"}], "+", "p"}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "e"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], ",", 
         FractionBox[
          RowBox[{"4", " ", "e"}], 
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], 
      RowBox[{"1", "+", "e"}]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.899376655727021*^9, 3.899376711830956*^9, 3.8993767487790623`*^9, 
   3.899376903274508*^9, {3.8993782027728453`*^9, 3.8993782218772173`*^9}, 
   3.899448080510148*^9},
 CellLabel->
  "Out[385]=",ExpressionUUID->"b561876a-7f0f-4116-8e8a-a72cb91078aa"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Expansion of \[CurlyPhi]", "Subsubsection",
 CellChangeTimes->{{3.899278975671378*^9, 
  3.899278985388134*^9}},ExpressionUUID->"7a67ed8a-7902-4b13-9742-\
cd1b77e6d977"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[CurlyPhi]0", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"q\[CurlyPhi]", "+", 
      RowBox[{"\[CapitalPhi]tr", "[", 
       RowBox[{"p", ",", "e", ",", "sp", ",", 
        RowBox[{"\[Chi]0", "+", 
         RowBox[{"sp", " ", "\[Delta]\[Chi]"}]}]}], "]"}], " ", "-", " ", 
      RowBox[{
       RowBox[{"\[CapitalPhi]tr", "[", 
        RowBox[{"p", ",", "e", ",", "sp", ",", "\[Pi]"}], "]"}], 
       FractionBox["qr", 
        RowBox[{"2", "\[Pi]"}]]}]}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{"sp", "->", "0"}], "}"}]}], "//", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.899275853890662*^9, 3.899275878564245*^9}, 
   3.899275916637971*^9},
 CellLabel->
  "In[386]:=",ExpressionUUID->"6a4a6fbc-ebff-4a39-a594-1e33fab8fd08"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{
    SqrtBox[
     RowBox[{"p", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], " ", "\[Pi]", " ", 
    "q\[CurlyPhi]"}], "+", 
   RowBox[{"2", " ", "p", " ", "\[Pi]", " ", 
    RowBox[{"EllipticF", "[", 
     RowBox[{"\[Chi]0", ",", 
      FractionBox[
       RowBox[{"4", " ", "e"}], 
       RowBox[{
        RowBox[{"-", "6"}], "+", 
        RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "-", 
   RowBox[{"2", " ", "p", " ", "qr", " ", 
    RowBox[{"EllipticK", "[", 
     FractionBox[
      RowBox[{"4", " ", "e"}], 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}]}], 
  RowBox[{
   SqrtBox[
    RowBox[{"p", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{"2", " ", "e"}], "+", "p"}], ")"}]}]], " ", 
   "\[Pi]"}]]], "Output",
 CellChangeTimes->{3.8992786014574127`*^9, 3.8992838511246443`*^9, 
  3.8992875091331463`*^9, 3.899353281710112*^9, 3.899374237783011*^9, 
  3.899386265649325*^9, 3.8994480805931873`*^9},
 CellLabel->
  "Out[386]=",ExpressionUUID->"0b6063c5-24f9-4d81-a9ff-750f64a261d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Delta]\[CurlyPhi]", " ", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", " ", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"q\[CurlyPhi]", "+", 
          RowBox[{"\[CapitalPhi]tr", "[", 
           RowBox[{"p", ",", "e", ",", "sp", ",", 
            RowBox[{"\[Chi]0", "+", 
             RowBox[{"sp", " ", "\[Delta]\[Chi]"}]}]}], "]"}], " ", "-", " ", 
          
          RowBox[{
           RowBox[{"\[CapitalPhi]tr", "[", 
            RowBox[{"p", ",", "e", ",", "sp", ",", "\[Pi]"}], "]"}], 
           FractionBox["qr", 
            RowBox[{"2", "\[Pi]"}]]}]}], ",", "sp"}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{"sp", "->", "0"}], "}"}]}], ")"}], "//", 
     RowBox[{
      RowBox[{"Simplify", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", ">", "0"}], ",", 
          RowBox[{"0", "<", "e", "<", "1"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
          RowBox[{"\[Chi]0", " ", "\[Element]", "Reals"}], ",", 
          RowBox[{"qr", "\[Element]", "Reals"}]}], "}"}]}], "]"}], "&"}]}], "//",
     "PowerExpand"}], "//", 
   RowBox[{
    RowBox[{"Simplify", "[", 
     RowBox[{"#", ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"p", ">", "0"}], ",", 
        RowBox[{"0", "<", "e", "<", "1"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}], ",", 
        RowBox[{"\[Chi]0", " ", "\[Element]", "Reals"}], ",", 
        RowBox[{"qr", "\[Element]", "Reals"}]}], "}"}]}], "]"}], 
    "&"}]}]}]], "Input",
 CellChangeTimes->{{3.899275853890662*^9, 3.899275878564245*^9}, {
  3.899275916637971*^9, 3.899275937661915*^9}, {3.8992843318446074`*^9, 
  3.8992843345596027`*^9}, {3.899386905706167*^9, 3.89938701364953*^9}, {
  3.899387064459003*^9, 3.899387077730443*^9}, {3.899387201078966*^9, 
  3.8993872059661207`*^9}, {3.899387642518684*^9, 3.899387654722311*^9}, {
  3.899434586544013*^9, 3.899434591336834*^9}, {3.8994436781961527`*^9, 
  3.899443689405795*^9}, {3.8994446507571774`*^9, 3.8994446552546263`*^9}},
 CellLabel->
  "In[392]:=",ExpressionUUID->"ba244e93-e662-461a-8a12-f2652f7716b2"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"6", "+", 
      RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", "p", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], 
     RowBox[{"3", "/", "2"}]], " ", "\[Pi]", " ", 
    SqrtBox[
     RowBox[{
      RowBox[{"-", "6"}], "+", "p", "+", 
      RowBox[{"2", " ", "e", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]]}]], 
  RowBox[{"\[ImaginaryI]", " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"4", " ", 
      SuperscriptBox["e", "2"]}], "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"p", " ", "qr", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "6"}], "+", "p", "+", 
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]]}], "+", 
        RowBox[{"2", " ", "e", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "6"}], "+", "p", "+", 
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]]}], "+", 
        RowBox[{"p", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "6"}], "+", "p", "+", 
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]]}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            RowBox[{"4", " ", "e", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["e", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]]}], ")"}], 
      " ", 
      RowBox[{"EllipticE", "[", 
       FractionBox[
        RowBox[{"4", " ", "e"}], 
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "-", 
     RowBox[{"p", " ", "\[Pi]", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "6"}], "+", "p", "+", 
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]]}], "+", 
        RowBox[{"2", " ", "e", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "6"}], "+", "p", "+", 
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]]}], "+", 
        RowBox[{"p", " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "6"}], "+", "p", "+", 
           RowBox[{"2", " ", "e", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]]}], "-", 
        SqrtBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "4"}], " ", 
             SuperscriptBox["e", "2"]}], "+", 
            RowBox[{"4", " ", "e", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", "p"}], ")"}]}], "+", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"], "+", 
            RowBox[{"8", " ", 
             SuperscriptBox["e", "2"], " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}], ")"}]}]]}], ")"}], 
      " ", 
      RowBox[{"EllipticE", "[", 
       RowBox[{"\[Chi]0", ",", 
        FractionBox[
         RowBox[{"4", " ", "e"}], 
         RowBox[{
          RowBox[{"-", "6"}], "+", 
          RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["e", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "6"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
      SqrtBox[
       RowBox[{
        RowBox[{"-", "6"}], "+", "p", "+", 
        RowBox[{"2", " ", "e", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "\[Chi]0"}], "]"}]}]}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"\[Pi]", " ", 
         RowBox[{"EllipticF", "[", 
          RowBox[{"\[Chi]0", ",", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "-", 
        RowBox[{"qr", " ", 
         RowBox[{"EllipticK", "[", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}]}], ")"}]}]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{3.899278604828828*^9, 3.8992838561099443`*^9, 
  3.8992875090400143`*^9, 3.899353288145679*^9, 3.899374243548379*^9, 
  3.8993862718594427`*^9, 3.899387003067526*^9, 3.899387035867552*^9, 
  3.899387108190748*^9, 3.8993872651202583`*^9, 3.8993877165369873`*^9, 
  3.8994484183111143`*^9},
 CellLabel->
  "Out[392]=",ExpressionUUID->"568ca9b1-7805-46c2-ad49-9311cbab65b0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Non-expansion of \[Psi], spin vector, \[Delta]\[CurlyTheta]", \
"Subsubsection",
 CellChangeTimes->{{3.8992888849199657`*^9, 3.899288900813917*^9}, {
  3.899435428963496*^9, 
  3.8994354408478127`*^9}},ExpressionUUID->"fe4432e8-a283-4dfe-b87d-\
9a0f59da01e7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Only", " ", "the", " ", "leading"}], "-", 
    RowBox[{"order", " ", "has", " ", "been", " ", "solved", " ", "for"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"\[Psi]0", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"q\[Psi]", " ", "+", " ", 
          RowBox[{"\[CapitalPsi]tr", "[", 
           RowBox[{"p", ",", "e", ",", "0", ",", "\[Chi]0"}], "]"}], " ", "-",
           " ", 
          RowBox[{
           RowBox[{"\[CapitalPsi]tr", "[", 
            RowBox[{"p", ",", "e", ",", "0", ",", "\[Pi]"}], "]"}], 
           FractionBox["qr", 
            RowBox[{"2", "\[Pi]"}]]}]}], ")"}], "/.", 
        RowBox[{"{", 
         RowBox[{"sp", "->", "0"}], "}"}]}], "//", "FunctionExpand"}], "//", 
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", ">", "0"}], ",", 
           RowBox[{"0", "<", "e", "<", "1"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], 
        "]"}], "&"}]}], "//", "PowerExpand"}], "//", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", ">", "0"}], ",", 
         RowBox[{"0", "<", "e", "<", "1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
     "&"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8992888849199657`*^9, 3.899288990141185*^9}, {
   3.899289079107188*^9, 3.899289093219624*^9}, {3.899289249515822*^9, 
   3.899289267374215*^9}, {3.8992893530794992`*^9, 3.899289357407675*^9}, {
   3.899289821832959*^9, 3.8992898283248653`*^9}, {3.899365831182411*^9, 
   3.899365842580142*^9}, {3.899434817754155*^9, 3.899434832200491*^9}, 
   3.899434993275691*^9, 3.899435033219718*^9},
 CellLabel->
  "In[401]:=",ExpressionUUID->"430d522e-6614-49b1-8ebd-2a997a9fc3c6"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox["e", "2"]}], "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "2"}], "+", 
      RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", "\[Pi]"}]], 
  RowBox[{
   SqrtBox[
    FractionBox[
     RowBox[{
      RowBox[{"-", "3"}], "-", 
      SuperscriptBox["e", "2"], "+", "p"}], 
     RowBox[{
      RowBox[{"-", "6"}], "+", 
      RowBox[{"2", " ", "e"}], "+", "p"}]]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"2", "+", 
        RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], "2"], " ", 
      SqrtBox[
       FractionBox[
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}], 
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         SuperscriptBox["e", "2"], "+", "p"}]]], " ", "\[Pi]", " ", 
      "q\[Psi]"}], "+", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["e", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}]], " ", "qr", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
         RowBox[{"EllipticK", "[", 
          FractionBox[
           RowBox[{"4", " ", "e"}], 
           RowBox[{
            RowBox[{"-", "6"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}]], "]"}]}], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"6", "+", 
            RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"Im", "[", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"2", " ", "e", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "p", "+", 
                 RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", "3"}], "-", 
                    SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "e", "+", 
                 RowBox[{"\[ImaginaryI]", " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", "3"}], "-", 
                    SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}]], ",", 
             
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "]"}]}], 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "3"}], "-", 
           SuperscriptBox["e", "2"], "+", "p"}]]], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "e"}], ")"}], "2"]}], "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         RowBox[{"Re", "[", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", "p", "+", 
                RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "3"}], "-", 
                   SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "e", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "3"}], "-", 
                   SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}]], ",", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "]"}]}]}], 
       ")"}]}], "-", 
     RowBox[{"2", " ", 
      SqrtBox[
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         SuperscriptBox["e", "2"]}], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}]], " ", "\[Pi]", " ", 
      
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "2"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
         RowBox[{"EllipticF", "[", 
          RowBox[{"\[Chi]0", ",", 
           FractionBox[
            RowBox[{"4", " ", "e"}], 
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}]}], "-", 
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "e"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{"6", "+", 
            RowBox[{"2", " ", "e"}], "-", "p"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", 
            RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
          RowBox[{"Im", "[", 
           RowBox[{"EllipticPi", "[", 
            RowBox[{
             FractionBox[
              RowBox[{"2", " ", "e", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "4"}], "+", "p", "+", 
                 RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", "3"}], "-", 
                    SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "6"}], "+", 
                 RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
               RowBox[{"(", 
                RowBox[{"1", "+", "e", "+", 
                 RowBox[{"\[ImaginaryI]", " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", "3"}], "-", 
                    SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}]], ",", 
             "\[Chi]0", ",", 
             FractionBox[
              RowBox[{"4", " ", "e"}], 
              RowBox[{
               RowBox[{"-", "6"}], "+", 
               RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "]"}]}], 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "3"}], "-", 
           SuperscriptBox["e", "2"], "+", "p"}]]], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"4", " ", 
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{"1", "+", "e"}], ")"}], "2"]}], "-", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "4"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
         RowBox[{"Re", "[", 
          RowBox[{"EllipticPi", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"2", " ", "e", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "4"}], "+", "p", "+", 
                RowBox[{"2", " ", "\[ImaginaryI]", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "3"}], "-", 
                   SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "6"}], "+", 
                RowBox[{"2", " ", "e"}], "+", "p"}], ")"}], " ", 
              RowBox[{"(", 
               RowBox[{"1", "+", "e", "+", 
                RowBox[{"\[ImaginaryI]", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "3"}], "-", 
                   SuperscriptBox["e", "2"], "+", "p"}]]}]}], ")"}]}]], ",", 
            "\[Chi]0", ",", 
            FractionBox[
             RowBox[{"4", " ", "e"}], 
             RowBox[{
              RowBox[{"-", "6"}], "+", 
              RowBox[{"2", " ", "e"}], "+", "p"}]]}], "]"}], "]"}]}]}], 
       ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.899448081364316*^9, 3.899448520668591*^9},
 CellLabel->
  "Out[401]=",ExpressionUUID->"eec05909-8977-4e91-90f3-b3c48df37efb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "allows", " ", "to", " ", "express", " ", "the", " ", "spin", 
    " ", "vector", " ", "parametrized", " ", "by", " ", "the", " ", "q", " ", 
    "angles"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"SvecSol", "/.", "fhRule"}], "/.", "DeTrRule"}], "/.", 
     RowBox[{"(", 
      RowBox[{"Subs", "/.", 
       RowBox[{"{", 
        RowBox[{"sp", "->", "0"}], "}"}]}], ")"}]}], "//", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", ">", "0"}], ",", 
         RowBox[{"0", "<", "e", "<", "1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
     "&"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Sv0", " ", "=", " ", 
     RowBox[{
      RowBox[{"%", "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"r", "->", "r0"}], ",", 
         RowBox[{"\[Psi]", "->", "\[Psi]0"}]}], "}"}]}], " ", "//", 
      RowBox[{
       RowBox[{"Simplify", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", ">", "0"}], ",", 
           RowBox[{"0", "<", "e", "<", "1"}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"-", "6"}], "+", 
             RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], 
        "]"}], "&"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8992888849199657`*^9, 3.899288990141185*^9}, {
   3.899289079107188*^9, 3.899289093219624*^9}, {3.899289249515822*^9, 
   3.899289267374215*^9}, {3.8992893530794992`*^9, 3.899289357407675*^9}, {
   3.899289821832959*^9, 3.8992898283248653`*^9}, {3.899365831182411*^9, 
   3.899365842580142*^9}, {3.899434817754155*^9, 3.899434832200491*^9}, 
   3.899434993275691*^9, {3.899435033219718*^9, 3.899435120446004*^9}, {
   3.8994351511575603`*^9, 3.899435229284954*^9}, {3.899435294054521*^9, 
   3.899435317859683*^9}},
 CellLabel->
  "In[402]:=",ExpressionUUID->"1ee0b63c-55a0-4ef7-acad-43015ae19d85"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    SqrtBox[
     RowBox[{
      SuperscriptBox["s", "2"], "-", 
      SuperscriptBox["sp", "2"]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"r", " ", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
        SqrtBox[
         FractionBox[
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "3"}], "-", 
             SuperscriptBox["e", "2"], "+", "p"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p", "2"], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"3", "+", 
                SuperscriptBox["e", "2"]}], ")"}], " ", 
              SuperscriptBox["r", "2"]}], "+", 
             RowBox[{"p", " ", 
              SuperscriptBox["r", "2"]}]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "4"}], " ", 
              SuperscriptBox["e", "2"]}], "+", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}], ")"}], " ", 
           "p"}]]]}]], "+", 
      FractionBox[
       RowBox[{"r", " ", 
        SqrtBox[
         RowBox[{"-", 
          FractionBox[
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"p", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], "+", "r"}], ")"}]}], "-", 
              RowBox[{"4", " ", "r"}]}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["p", "2"], "-", 
              RowBox[{"2", " ", "p", " ", "r"}], "-", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 SuperscriptBox["e", "2"]}], ")"}], " ", 
               SuperscriptBox["r", "2"]}]}], ")"}]}], 
           RowBox[{"p", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "3"}], "-", 
              SuperscriptBox["e", "2"], "+", "p"}], ")"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
            SuperscriptBox["r", "2"]}]]}]], " ", 
        RowBox[{"Sin", "[", "\[Psi]", "]"}]}], 
       SqrtBox[
        FractionBox[
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "2"}], "+", "r"}], ")"}], " ", 
          RowBox[{"(", 
           RowBox[{
            FractionBox[
             SuperscriptBox["p", "2"], 
             RowBox[{
              RowBox[{"-", "3"}], "-", 
              SuperscriptBox["e", "2"], "+", "p"}]], "+", 
            SuperscriptBox["r", "2"]}], ")"}]}], "r"]]]}], ")"}]}], ",", 
   FractionBox[
    RowBox[{
     SqrtBox[
      RowBox[{
       FractionBox[
        SuperscriptBox["p", "2"], 
        RowBox[{
         RowBox[{"-", "3"}], "-", 
         SuperscriptBox["e", "2"], "+", "p"}]], "+", 
       SuperscriptBox["r", "2"]}]], " ", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["s", "2"], "-", 
       SuperscriptBox["sp", "2"]}]], " ", 
     RowBox[{"Cos", "[", "\[Psi]", "]"}]}], 
    SuperscriptBox["r", "2"]], ",", 
   FractionBox[
    RowBox[{
     SqrtBox[
      RowBox[{
       SuperscriptBox["s", "2"], "-", 
       SuperscriptBox["sp", "2"]}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SqrtBox[
         FractionBox[
          RowBox[{"p", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"p", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "2"}], "+", "r"}], ")"}]}], "-", 
             RowBox[{"4", " ", "r"}]}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p", "2"], "-", 
             RowBox[{"2", " ", "p", " ", "r"}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["e", "2"]}], ")"}], " ", 
              SuperscriptBox["r", "2"]}]}], ")"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3", "+", 
             SuperscriptBox["e", "2"], "-", "p"}], ")"}], " ", "r", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p", "2"], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"3", "+", 
                SuperscriptBox["e", "2"]}], ")"}], " ", 
              SuperscriptBox["r", "2"]}], "+", 
             RowBox[{"p", " ", 
              SuperscriptBox["r", "2"]}]}], ")"}]}]]], " ", 
        RowBox[{"Cos", "[", "\[Psi]", "]"}]}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["r", "2"], " ", 
         RowBox[{"Sin", "[", "\[Psi]", "]"}]}], 
        SqrtBox[
         FractionBox[
          RowBox[{"p", " ", 
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["p", "2"], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"3", "+", 
                SuperscriptBox["e", "2"]}], ")"}], " ", 
              SuperscriptBox["r", "2"]}], "+", 
             RowBox[{"p", " ", 
              SuperscriptBox["r", "2"]}]}], ")"}]}], 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", 
            SuperscriptBox["e", "2"]}], "+", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", "p"}], ")"}], "2"]}]]]]}], ")"}]}], 
    "r"], ",", 
   FractionBox["sp", "r"]}], "}"}]], "Output",
 CellChangeTimes->{3.8994480836971693`*^9, 3.899448523023609*^9},
 CellLabel->
  "Out[402]=",ExpressionUUID->"a68821d9-4f5e-48ff-ab9c-9c149eed1d2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"(*", 
       RowBox[{
       "Also", " ", "we", " ", "get", " ", "\[Delta]\[Theta]", " ", "at", " ",
         "leading", " ", "order"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"(", 
          RowBox[{"s", "-", "sp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{"s", "+", "sp"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ScriptCapitalJ]", "2"], "+", 
           SuperscriptBox[
            RowBox[{"rt", "[", "\[Tau]", "]"}], "2"]}], ")"}]}]], " ", 
       RowBox[{"Sin", "[", "\[Psi]", "]"}]}]}], 
     RowBox[{"\[ScriptCapitalJ]", " ", 
      RowBox[{"rt", "[", "\[Tau]", "]"}]}]], "/.", "DeTrRule"}], "/.", 
   RowBox[{"(", 
    RowBox[{"Subs", "/.", 
     RowBox[{"{", 
      RowBox[{"sp", "->", "0"}], "}"}]}], ")"}]}], "//", 
  RowBox[{
   RowBox[{"Simplify", "[", 
    RowBox[{"#", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"p", ">", "0"}], ",", 
       RowBox[{"0", "<", "e", "<", "1"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "6"}], "+", 
         RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
   "&"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]\[CurlyTheta]", " ", "=", " ", 
   RowBox[{
    RowBox[{"%", "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"r", "->", "r0"}], ",", 
       RowBox[{"\[Psi]", "->", "\[Psi]0"}]}], "}"}]}], " ", "//", 
    RowBox[{
     RowBox[{"Simplify", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p", ">", "0"}], ",", 
         RowBox[{"0", "<", "e", "<", "1"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "6"}], "+", 
           RowBox[{"2", " ", "e"}], "+", "p"}], ">", "0"}]}], "}"}]}], "]"}], 
     "&"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.8992888849199657`*^9, 3.899288990141185*^9}, {
   3.899289079107188*^9, 3.899289093219624*^9}, {3.899289249515822*^9, 
   3.899289267374215*^9}, {3.8992893530794992`*^9, 3.899289357407675*^9}, {
   3.899289821832959*^9, 3.8992898283248653`*^9}, {3.899365831182411*^9, 
   3.899365842580142*^9}, {3.899434817754155*^9, 3.899434832200491*^9}, 
   3.899434993275691*^9, {3.899435033219718*^9, 3.899435120446004*^9}, {
   3.8994351511575603`*^9, 3.899435229284954*^9}, {3.899435363918149*^9, 
   3.899435416705388*^9}, {3.8994354903896646`*^9, 3.899435492932228*^9}, 
   3.899448542541812*^9},
 CellLabel->
  "In[404]:=",ExpressionUUID->"7bcec286-7d55-4d1d-a964-e70ffe0131f5"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SqrtBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["p", "2"], "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"3", "+", 
          SuperscriptBox["e", "2"]}], ")"}], " ", 
        SuperscriptBox["r", "2"]}], "+", 
       RowBox[{"p", " ", 
        SuperscriptBox["r", "2"]}]}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"s", "-", "sp"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{"s", "+", "sp"}], ")"}]}]], " ", 
   RowBox[{"Sin", "[", "\[Psi]", "]"}]}], 
  RowBox[{"p", " ", "r"}]]], "Output",
 CellChangeTimes->{
  3.899288969389471*^9, {3.899289252023264*^9, 3.899289271917204*^9}, 
   3.899353288608382*^9, 3.899374244021853*^9, 3.899386272300329*^9, 
   3.89944841108286*^9, 3.899448802771639*^9},
 CellLabel->
  "Out[404]=",ExpressionUUID->"3f5bbe75-d676-4302-a58e-75abc85f7167"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Save outputs", "Section",
 CellChangeTimes->{{3.899433413815439*^9, 
  3.899433423877832*^9}},ExpressionUUID->"fc671ac7-867e-4161-a6c4-\
7f8a920cbac5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"OutputPath", "=", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
      "\"\<SchwarzschildSpinExact.mx\>\""}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Back", " ", "up", " ", "in", " ", "case", " ", "you", " ", "are", " ", 
     "overwriting", " ", "a", " ", "previous", " ", 
     RowBox[{"run", ":"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"FileExistsQ", "[", "OutputPath", "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"BackupPath", " ", "=", " ", 
        RowBox[{
         RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
         "\"\<SchwarzschildSpinExact_Backup.mx\>\""}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"DeleteFile", "[", "BackupPath", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"CopyFile", "[", 
        RowBox[{"OutputPath", ",", "BackupPath"}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"DeleteFile", "[", "OutputPath", "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<Output file existed, backup of old file copied into \>\"", "<>", 
         "BackupPath"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
      "Print", "[", "\"\<No old file existed, proceeding.\>\"", "]"}]}], 
     "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"List", " ", "of", " ", "variables", " ", "to", " ", 
     RowBox[{"export", ":"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"VarList", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "\[CapitalUpsilon]t0", ",", "\[CapitalUpsilon]r0", ",", 
       "\[CapitalUpsilon]\[CurlyPhi]0", ",", "\[CapitalUpsilon]\[Psi]0", ",", 
       "\[Delta]\[CapitalUpsilon]t", ",", "\[Delta]\[CapitalUpsilon]r", ",", 
       "\[Delta]\[CapitalUpsilon]\[CurlyPhi]", ",", "t0", ",", "r0", ",", 
       "\[CurlyPhi]0", ",", "\[Psi]0", ",", "\[Chi]0qr", ",", "Sv0", ",", 
       "\[Delta]t", ",", "\[Delta]r", ",", "\[Delta]\[CurlyPhi]", ",", 
       "\[Delta]\[CurlyTheta]"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DumpSave", "[", 
     RowBox[{"OutputPath", ",", "VarList"}], "]"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.899433413815439*^9, 3.8994334299848824`*^9}, {
   3.8994335862777*^9, 3.899433594466855*^9}, {3.899433626192594*^9, 
   3.899433673014151*^9}, {3.8994337620243*^9, 3.899433870004656*^9}, {
   3.899433904717161*^9, 3.899433990645525*^9}, {3.899434264267116*^9, 
   3.899434286992187*^9}, {3.899434353275921*^9, 3.899434403099597*^9}, 
   3.899434805404847*^9, {3.899434915088112*^9, 3.899434946496665*^9}, {
   3.899435461723168*^9, 3.899435475228251*^9}, {3.899435515026349*^9, 
   3.899435516354335*^9}, {3.89943566359306*^9, 3.8994357124408283`*^9}, {
   3.8994486465132933`*^9, 3.8994487147335777`*^9}, {3.899449002424405*^9, 
   3.899449011805605*^9}, {3.899449138030278*^9, 3.899449292606143*^9}, {
   3.899449834183333*^9, 3.8994499219529543`*^9}},
 CellLabel->
  "In[454]:=",ExpressionUUID->"013276b9-499b-4ad3-ad83-19405bd3ba7e"],

Cell[BoxData["\<\"Output file existed, backup of old file copied into \
/Users/vojtechwitzany/Documents/GitHub/Exact-Solution-Spinning-particle-\
Schwarzschild/SchwarzschildSpinExact_Backup.mx\"\>"], "Print",
 CellChangeTimes->{
  3.899449296465726*^9, 3.899449817000956*^9, {3.899449873690322*^9, 
   3.8994499247806273`*^9}},
 CellLabel->
  "During evaluation of \
In[454]:=",ExpressionUUID->"e5e17fea-1c31-48e4-a6ce-58973e56431a"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Example plots", "Section",
 CellChangeTimes->{{3.899449947060467*^9, 
  3.8994499494462843`*^9}},ExpressionUUID->"2534492e-ad85-40a1-8028-\
3572ae7e291e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Here", " ", "you", " ", "can", " ", "find", " ", "some", " ", "example", 
    " ", "plots", " ", "as", " ", "well", " ", "as", " ", "a", " ", 
    "practical", " ", "example", " ", "of", " ", "the", " ", "application", 
    " ", "of", " ", "the", " ", "formulas", " ", "in", " ", "this", " ", 
    "notebook"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PlotCyc", " ", "=", " ", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pp", " ", "=", " ", "7"}], ";", " ", 
    RowBox[{"ep", " ", "=", "0.3"}], ";", " ", 
    RowBox[{"spp", " ", "=", " ", "0"}], ";", " ", 
    RowBox[{"smp", " ", "=", " ", "0.3"}], ";"}], " "}]}]], "Input",
 CellChangeTimes->{{3.899450898886588*^9, 3.89945095614196*^9}, {
   3.899451114989605*^9, 3.899451117399693*^9}, {3.8994511490999823`*^9, 
   3.899451166196763*^9}, {3.899451257235427*^9, 3.89945128810594*^9}, {
   3.8994513392422132`*^9, 3.899451357872766*^9}, {3.899451398126931*^9, 
   3.899451428798518*^9}, {3.899451492316065*^9, 3.89945149346975*^9}, {
   3.899451589628129*^9, 3.899451602447603*^9}, {3.899451635195657*^9, 
   3.89945164741083*^9}, 3.8994517911248283`*^9, {3.899451938181057*^9, 
   3.8994519601127567`*^9}, {3.899452102208276*^9, 3.89945214798314*^9}, {
   3.8994523320452023`*^9, 3.899452336970687*^9}, 3.899452410177084*^9, {
   3.899452621968149*^9, 
   3.899452945365446*^9}},ExpressionUUID->"96196bcf-8d24-4b38-b165-\
a786f4099e94"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"BirdsEye", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"r", " ", 
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}]}], ",", 
             RowBox[{"r", " ", 
              RowBox[{"Cos", "[", "\[CurlyPhi]", "]"}]}]}], "}"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"t", "->", 
              RowBox[{"t0", "+", 
               RowBox[{"sp", " ", "\[Delta]t"}]}]}], ",", 
             RowBox[{"r", "->", 
              RowBox[{"r0", "+", 
               RowBox[{"sp", " ", "\[Delta]r"}]}]}], ",", 
             RowBox[{"\[CurlyPhi]", " ", "->", " ", 
              RowBox[{"\[CurlyPhi]0", " ", "+", " ", 
               RowBox[{"sp", " ", "\[Delta]\[CurlyPhi]"}]}]}], ",", 
             RowBox[{"\[CurlyTheta]", "->", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "2"}], "+", 
               "\[Delta]\[CurlyTheta]"}]}]}], "}"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Chi]0", "->", "\[Chi]0qr"}], "}"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"qr", "->", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "\[CapitalUpsilon]r0", "+", "\[Delta]\[CapitalUpsilon]r"}], 
              ")"}], " ", "\[Lambda]"}]}], ",", 
           RowBox[{"q\[CurlyPhi]", " ", "->", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "\[CapitalUpsilon]\[CurlyPhi]0", "+", 
               "\[Delta]\[CapitalUpsilon]\[CurlyPhi]"}], ")"}], " ", 
             "\[Lambda]"}]}], ",", 
           RowBox[{"q\[Psi]", "->", 
            RowBox[{"\[CapitalUpsilon]\[Psi]0", " ", "\[Lambda]"}]}]}], 
          "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", "->", "pp"}], ",", 
          RowBox[{"e", "->", "ep"}], ",", 
          RowBox[{"s", "->", "smp"}], ",", 
          RowBox[{"sp", "->", "spp"}]}], "}"}]}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "0", ",", 
        RowBox[{
         RowBox[{"PlotCyc", " ", 
          FractionBox[
           RowBox[{"2", "\[Pi]"}], 
           RowBox[{"(", 
            RowBox[{
            "\[CapitalUpsilon]\[CurlyPhi]0", "+", 
             "\[Delta]\[CapitalUpsilon]\[CurlyPhi]"}], ")"}]]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "->", "pp"}], ",", 
           RowBox[{"e", "->", "ep"}], ",", 
           RowBox[{"s", "->", "smp"}], ",", 
           RowBox[{"sp", "->", "spp"}]}], "}"}]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", "Purple"}], ",", 
      RowBox[{"Axes", "->", "False"}], ",", 
      RowBox[{"Frame", "->", 
       RowBox[{"{", 
        RowBox[{"True", ",", "True", ",", "False", ",", "False"}], "}"}]}], 
      ",", 
      RowBox[{"FrameLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*StyleBox[\"r\",FontSlant->\"Italic\"]\)\[ThinSpace]sin\
\[ThinSpace]\[CurlyPhi][\!\(\*StyleBox[\"M\",FontSlant->\"Italic\"]\)]\>\"", 
         ",", "\"\<\!\(\*StyleBox[\"r\",FontSlant->\"Italic\"]\)\[ThinSpace]\
cos\[ThinSpace]\[CurlyPhi][\!\(\*StyleBox[\"M\",FontSlant->\"Italic\"]\)]\>\"\
", ",", "\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
      RowBox[{"FrameTicks", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "0", ",", "10"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "10"}], ",", "0", ",", "10"}], "}"}], ",", "None", 
         ",", "None"}], "}"}]}], ",", 
      RowBox[{"LabelStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FontSize", "->", "20"}], ",", 
         RowBox[{"FontFamily", "->", "\"\<Times\>\""}], ",", "Black"}], 
        "}"}]}], ",", 
      RowBox[{"Method", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<ShrinkWrap\>\"", "->", "True"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}]}], "}"}], "]"}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<SpSchwBirdsEye.pdf\>\""}], ",", "BirdsEye"}], "]"}]}], "Input",
 CellChangeTimes->{{3.899450898886588*^9, 3.89945095614196*^9}, {
   3.899451114989605*^9, 3.899451117399693*^9}, {3.8994511490999823`*^9, 
   3.899451166196763*^9}, {3.899451257235427*^9, 3.89945128810594*^9}, {
   3.8994513392422132`*^9, 3.899451357872766*^9}, {3.899451398126931*^9, 
   3.899451428798518*^9}, {3.899451492316065*^9, 3.89945149346975*^9}, {
   3.899451589628129*^9, 3.899451602447603*^9}, {3.899451635195657*^9, 
   3.89945164741083*^9}, 3.8994517911248283`*^9, {3.899451938181057*^9, 
   3.8994519601127567`*^9}, {3.899452102208276*^9, 3.89945214798314*^9}, {
   3.8994523320452023`*^9, 3.899452336970687*^9}, 3.899452410177084*^9, {
   3.899452621968149*^9, 3.899452945365446*^9}, {3.8994533576163673`*^9, 
   3.899453408875462*^9}, {3.899453443414155*^9, 3.899453444042992*^9}, {
   3.8994535462253532`*^9, 3.899453547184207*^9}, {3.8994545681602297`*^9, 
   3.899454586585773*^9}, {3.899455869195612*^9, 3.899455923470439*^9}, {
   3.8994559886798286`*^9, 3.899456016444933*^9}, {3.899456126537117*^9, 
   3.899456170908524*^9}, {3.89945623842774*^9, 3.899456250597925*^9}, {
   3.89945629630548*^9, 3.899456311320573*^9}, {3.8994566446951437`*^9, 
   3.899456703844702*^9}, {3.899459104648568*^9, 3.899459105213772*^9}, {
   3.899531487743353*^9, 3.8995315385842237`*^9}, {3.899531641613394*^9, 
   3.899531649900412*^9}},
 CellLabel->
  "In[626]:=",ExpressionUUID->"5e3dfbf0-5d77-4c7a-9cce-ec132fed21a9"],

Cell[BoxData[
 GraphicsBox[{
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.5, 0, 0.5], AbsoluteThickness[2], Opacity[1.], FaceForm[
          Opacity[0.3]], LineBox[CompressedData["
1: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
VoP7ut9Y8FT5d9ycwnbyzNv6icXvWGAzHNMpqf+HbGkIOedylwV0+Zj4tTe7
SeaS8wFfBd/bzidm4Z3pf6QZexEzdD8L5t/Z9Wx8UT9ZdaLtpdc6FnzcNBYs
XjdAwsHF99SmmLD365ZXLpojZJNj/FhbDRPuLl22KbxwlBw29ds5/pQJrtKO
PgtdxsmaCSU2dycT7ItFyaS4KfJu63Gq4SImeH2cKTbWmiFTVeRtMqYZoBlK
6gm/miU3Dqfmf7rJgHefLipaugijqOngEj83BsiF/c1N0hRBc3LTwYv6DCgS
Irxq2kQwx9LxnFohHeY+Hg/5sFsMk9rjZ5fW0oDH+sndLfAVe2UljlRdpUGk
/Q/rKz8l8dbyzfGidjSgvTObsI+SwoDgnRoGlVS4LmNrt6tJGkc19NHkPyp8
T9uhfOasDNZ87I8fMaUCq+3VaVktWVTmJZodzqSAtJ3SU2UXOdz/8aS0oQcF
yKj5Z6Km5XBqd2tlvrogfqRMaWW8PB62ObbOVkoRTomqLGXlKmDCTbTNCZWD
AqGNP/18KRhefCon8LssuL7tWE57RcElX0tkGEtk4WDwIrn5wxQMDZz/WrZO
Gs6IR19J86aiM/vt1TPzpYFT9GExPY2KVgu8nSQDBP2y7RWz9RcVL9Hy13gp
SILYArV7j21paFEf//vwDgk4q7nh340LNLzG2HLvaZI4BFcFV//KpaFtpnSb
znwx4GvN+3pCnY7uts+GIj1E4cQO673vLen4ujp1hVOqCPz9m3RwcyAdB2t0
kjLnC8Nw5z4hi3I6ngrw8Uq2FQJFi3D/vlE6VrhxnekzM4T+PcXwSC4DU476
ZI5bC3i+YeA3zZyBLfxvwmq3J4lfOdnHww8x8ED2w4zk7nHi2p5mk9aLDIzv
2OiQsXyM+PUWjs15xsBHnlPak3lDRMzVu4mb/jCQvnsgMExikBD6r4FcLMLE
zxpPuToW/UStqeW9biUmtoczVxlTeonE4qn1Z3WZ+HM/qT4e1U14dvVUDJgw
UZ1e59ko8YfYbGAWt9KWieazV38YhLQTR74fl7NxYWKBXp613WAz4XD0QCsI
/N9H1kyKfPl3wrLI+7dQEBPTelcv1c34SszzvsqIPcvEW7wbCbt5n4guY9+4
wQtM3Pal4dm13FeE60WLTM1oJiqavVF4tvommes2NqB5iYkg9EiKmv6B7Dg1
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
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[0.5, 0, 0.5]], 
             Line[CompressedData["
1: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
VoP7ut9Y8FT5d9ycwnbyzNv6icXvWGAzHNMpqf+HbGkIOedylwV0+Zj4tTe7
SeaS8wFfBd/bzidm4Z3pf6QZexEzdD8L5t/Z9Wx8UT9ZdaLtpdc6FnzcNBYs
XjdAwsHF99SmmLD365ZXLpojZJNj/FhbDRPuLl22KbxwlBw29ds5/pQJrtKO
PgtdxsmaCSU2dycT7ItFyaS4KfJu63Gq4SImeH2cKTbWmiFTVeRtMqYZoBlK
6gm/miU3Dqfmf7rJgHefLipaugijqOngEj83BsiF/c1N0hRBc3LTwYv6DCgS
Irxq2kQwx9LxnFohHeY+Hg/5sFsMk9rjZ5fW0oDH+sndLfAVe2UljlRdpUGk
/Q/rKz8l8dbyzfGidjSgvTObsI+SwoDgnRoGlVS4LmNrt6tJGkc19NHkPyp8
T9uhfOasDNZ87I8fMaUCq+3VaVktWVTmJZodzqSAtJ3SU2UXOdz/8aS0oQcF
yKj5Z6Km5XBqd2tlvrogfqRMaWW8PB62ObbOVkoRTomqLGXlKmDCTbTNCZWD
AqGNP/18KRhefCon8LssuL7tWE57RcElX0tkGEtk4WDwIrn5wxQMDZz/WrZO
Gs6IR19J86aiM/vt1TPzpYFT9GExPY2KVgu8nSQDBP2y7RWz9RcVL9Hy13gp
SILYArV7j21paFEf//vwDgk4q7nh340LNLzG2HLvaZI4BFcFV//KpaFtpnSb
znwx4GvN+3pCnY7uts+GIj1E4cQO673vLen4ujp1hVOqCPz9m3RwcyAdB2t0
kjLnC8Nw5z4hi3I6ngrw8Uq2FQJFi3D/vlE6VrhxnekzM4T+PcXwSC4DU476
ZI5bC3i+YeA3zZyBLfxvwmq3J4lfOdnHww8x8ED2w4zk7nHi2p5mk9aLDIzv
2OiQsXyM+PUWjs15xsBHnlPak3lDRMzVu4mb/jCQvnsgMExikBD6r4FcLMLE
zxpPuToW/UStqeW9biUmtoczVxlTeonE4qn1Z3WZ+HM/qT4e1U14dvVUDJgw
UZ1e59ko8YfYbGAWt9KWieazV38YhLQTR74fl7NxYWKBXp613WAz4XD0QCsI
/N9H1kyKfPl3wrLI+7dQEBPTelcv1c34SszzvsqIPcvEW7wbCbt5n4guY9+4
wQtM3Pal4dm13FeE60WLTM1oJiqavVF4tvommes2NqB5iYkg9EiKmv6B7Dg1
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
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{-9.841780325753316, 
            9.971109624439986}, {-9.740929728392354, 9.919210399096507}}, 
           "Frame" -> {{True, False}, {True, False}}, "AxesOrigin" -> {0, 0}, 
           "ImageSize" -> {360, 432}, "Axes" -> {False, False}, "AspectRatio" -> 
           Automatic, "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[0.5, 0, 0.5]]}, 
           "HighlightLabelingFunctions" -> <|
            "CoordinatesToolOptions" -> Identity, 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ParametricPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{-9.841780325753316, 
           9.971109624439986}, {-9.740929728392354, 9.919210399096507}}, 
          "Frame" -> {{True, False}, {True, False}}, "AxesOrigin" -> {0, 0}, 
          "ImageSize" -> {360, 432}, "Axes" -> {False, False}, "AspectRatio" -> 
          Automatic, "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.5, 0, 0.5]]}, 
          "HighlightLabelingFunctions" -> <|
           "CoordinatesToolOptions" -> Identity, 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ParametricPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.5, 0, 0.5]], 
          Line[CompressedData["
1:eJw0V3k0Ve/3Ns/Dne8133uTSoVSSdLZSahIRdIkQ2UoESKRUqJ8RJE0UWlS
FJUoqbMzRIZQiESmEpJ5nr7398fvrrPWXc/a79nvcPaz3+fhOXttOyAiJCRE
kxES+r////8l1l0QPEzQl7DI7IrJITICcnR/nWeCxUah0L/RJcQ+n8MjMuFM
6L9X/GSw8ysxWzrN2xjKhJV+qX2Dkd8Jhpeo6L0TTAgJT1aeutJMpIcby7B8
mLCjm9IKbW2E09KI4nuuTGj6e09eWq+D+HDtwz/L3Uy4qnbjBDOoi+DtzbGi
WQnyyx1YMK+gh9gRIl87tJoJ3hzLu6fO9RFfHohcG9Zmwjfpjovp8waIvH8H
8plsJkRuWKseVjxI3NLZ88hOmAm7Q7yXNLkOE4s+LX3xppMB6w+ZFCSJjxIP
VRYehUoGeA6lzXwzmiBkTPrqyQQG6I/6bqBXTxLMFz0rco8z4MDcfIdVHtPE
xabfT9t2MCAlkuXTaS4Ekg6x13IpDKiX43PDFIXh1Gxemk8XHapDLtytqxGG
zXtNVfbm0eFIZD7dz0EU9sy7f6b+MB3abB5jIlcMvCXqZrwJOpQaTOaYtYiB
jqpJgzlFgGsWmTbulYCKOJNfZBoN1EYPCseaSMON1T3EsioqdNbNPtMelYZT
H+OFeFep8CNSW/frYxk4ac3iuO2kwr1mWWd1aTnY2+sfy2iggJ3entKHr+Rg
cqy+MvQ6BcKj447JOMpD5ROq6k47CviuV43We6YARY7s0bSritATdqihfqsi
dGsUz5ORVIQvNZ7zFw0qQtpuq9N7/RTgwROHOKsECthAtqOMmTw4yWpGpOZT
4UlR0rOQjzKQckfjy0lZGvCmxn9c1JCB6axqkZGtNLjh5qjedEwaAqw+r837
ToPLDxcmuytLAcHvS5BVo0M6USz3xk0S4pOdXX7tpcPK9el1RzMlYN/f3Lzl
DXSoO4njFqbiMKt5wSiZzYBwYb5R8HkxKOQqDUZuY8A8nnamSYkoaBKuOe/y
GVBbGy2XaSYCd4pems2MM+DReVqQX6gwxIG9TIoOExKXPzYefCMEG45Wj2rG
CfDGo8vSLWaIz1bTA80fmZAlvVqz/MIU0UFT2P14TID3XdSV/DhB+FTtvrrB
jgV9a9qy1uqNEkv/Gr5gnWHB/utfrwY5DBMRqxpLvqeyoCLzuJ3p+UGiS+OW
i/44C67sZCj1JPYS8TkrS9+psuF0Z/GjZXXdhPjR3intNWxYU+Cw/KzMH+LN
sets/71s0Pysc4W+vJ0oP/tsw40TbAh3VCvm2jcTb7q3VcbGs2FuhoVcWUcd
MVrkMLLrGRvOnCxzM6ZWESU/HOj/Ctgw39YsVWlXHoEvYiLN6wX59nr+p/42
jnhy/usn52426IoaBXpKvyW1iu9ZGE2yoWGOLH/99XJSN2smvEyKA9WaPaVP
WmvJvAXb5GgMDsw/9+jZhOhPMpK//6CkGge8SvcskLvWRlYvXDU/ZQ4Hxg47
3jF92UFeiRTq7J3HAR0zyaXuX7vJDRsGTL4v4MDNX5tmjMZ6Se6GdV+cBbjs
VokLSRkgN12VX3ZOiwN5/w37Bc4bIo/arhM35nHg+taklEUwQrKfP2w5p8QB
9cX2Bm92jZEVzp+cdytyoLX8BGvWf4K8Y8/UeCPCgduFRf2NV6bIlzuaU24M
smF35nnN5ZkzZO/+qIuTLWww16DWH/UQwtjhLNtv5Wz4LC2nsT9IGOeLBZ5a
kM2G4XlkaHOUCBqZ50T0JLKhw63rV02SKC79e/2n+hk2+F+7P7D0uRiO7ert
e+3Chik9Hbnf+eL4Mv2XarYJGxbe9tvcWCuB6edPqJaPsWDDn4V61tNSeCp0
5bmGChaYvBF3u0+RwbGo0aVG91ngUGPwd2COLO5WKNJqMGXBaWHpd4s2yqO4
39t3VCoL7C+k7e7do4AdXrLG4d+Z4Hqk7ftOL0V8v0LGhnmACff+nSddP1FQ
Im0xRUuLCcvDg+prt1LxY7yKhFM7AxZ/D+v8W0/F7o9Wf9faM+CtodnBxj80
zP/yhNokz4CbIvxHSV50nPSkNl9COozrGQRXD9MxO3O/0zwBHytOLFFxFWJi
n1zmG+EiGrwqVt7/KIyJumKyis2eNHj9ImzZHCkWfkk7tCrhBRVeFK5UjJFj
Y0LiFfoptqDP9H74uF9aCT0XzHf/5agIVxg8g1MnlbBaJcPgwEUFMHpiOHis
TwkHM0tUNWrlQNnvPZH1RRlfnrZh2wzIQtqatpDGtSrIzvY9R5eWheCXos63
0lWwsfHxp+Va0tDXknj5argqrjPo/JmwSArmBjsap/aq4s6gcMWIxZIwMLJu
g8wONTy5XiuZoyEOQ6ezuLZcdTxSkN9694MQfMk7QM+4oYGiNRpmM4azxME8
lHw1qIGtD96WW/yeIj5pdmTMm8vFVcGRtuLcMYLrdne8N4CLzRuD7+Q+HSYC
nXd6bb3NxRTWnZ7oJYPESx7YbCzkYumdyOETK/8SX6OE+srkeDj3vw+2opId
hPLD0vNGOjzcv6l7gXN+C0FkErtlN/MwOby7TPdHHRHmoX1R5zAP3fctOPVO
vYwAqpZ+wnkeHs96l9Ui+5j4k+ljb3CPh2Z71+xoyCBJV3k3SeFcHva6tIi6
cL6S7qtObfv9hYf3potZN5yaSEuDgb31HTwcXSRntbCtncyI6XEvm+Ah/czR
0pPJXWTFUevG57J8zMw+wx5e0Ueuyu7ZEqzMx8BP25TX8wfJso5dN9Xn8ZGn
sKTmFW2E7LrCbfxvCR99nZ+tLpYcJ8/kulzMNuSjk3WRw6jQFKmz8Hd4PMHH
sUXK/q+nZ0iWuh1TeR0fm7NdzrybEcLbGQ0iq0z5aBN0P6j6lAiKj1c96DIR
jD+Frl+FxdBb/do/nuB9DSnlv+5h4iitf+BY7Uo+zraf11svKYlFRlLnZ3X5
eEsrQ5gSKYV68cEG8Zp81Pr6YNRHTgZ3fTM8cInFxyO/2u4womVRLmJuZZc4
H4szvZ5fV5DHyyZyvNsDPLQ9prziwUUFfFAQMZLyg4fqu+sPHBanYJGoQZ9Y
AQ/1escPd+VR0GRo8ZuMFB4WNUy4qZ6iIk6doaZG8vDSs87sKkMaxlNaagfd
eTi+4uap+gEaTl6TkIsy42FX5rIqkSd0jGpS/nmMy8Mwz8Jy1X0M/BFW+Cxz
lIsPDN+UjlCZ+LJmWN6qjIslP/4EO+YxsZux8aNpEhfHi6SZ2t4sbP0qXZ/s
ycVZh9XemipsbF/xOMRrFRc9ho8Z8vLZyN3yWTNTjIsLQnalewp45hx8zzB5
jgYabHF4tv2+En6j71gynKqO8r7nFLONlPFF8ZnxYl11XD86Ibllnwo+FLX+
flBbDa8twPPQrYIfzjrf8rqril/ig3xVfVVRttPE1p+his1JJ2NV/NXwScYH
lO9Vxro/lUoS/Wpo1rfRuMtOGeefe1zt4aqOavtWi+55q4T7Nq08t7ReHfsC
hrSiVJXwDjNVwcJMA8OWtRbfP8HBo4snTl57poHF8g8HK2vYGFkhfV5amosR
CQ8CV+uwccjDY8O8A1xcSlk1evYbExP4CqeDY7g4NhuxNmc+E3tPtqzdks3F
vfUB5u0BDCyO2vbw9g8unpd8lKNbSMe5TxKr3Wa5eEJW2ryEQked0r0zTzR4
+Kjji0/LLhqm26nsPGgs4JFQ2Knke1TMuP2Xdcueh+JKyyxXdVOQ3LnaYfNR
Hm6p3GBYs4SC8ltK4XQED18qHlVZ06uAOnaiL5bf5GHcGnx7LlAe7eqfB/um
8fBdtMWfGhE53JYIK4m3PLSG6/6h/8mgxpyzxreLeFh/2297PV0aK3/p3LxR
xUPfZyNui25JopcKQ8awnod7Dp/yKNKUQMOBhS1nmnjo8sOxbOipGC53vyQd
2iKoy70b7k4ZiGLlT++B1a08DJzaHaGZL4xO9sxz2CyYj9F6Nd1aCJ/oCSux
GgV1Gjyakvt2mvxSYOpm8Y2Hlx32WTU2TJB7lOTCnCt4WMr0TDQQGiM5JgGf
vAp5WElkFq9eMEzm1BbVBr0R7Pdx0GP7HQMkzaHndGwqD/2Co2LamL2kgUHg
J1Kw/226f/O+nO8kOTrCNYoCXsht3fZvhVQ7yb850hLtz8O8tVnHghY0kifT
RogNTjz8bpdmznT4QgZuSDDftJGHsTCz9s279+T2I8te7WDz8E9K6YEjD0uI
BTMuWScmuXj77/NA3QffiM3LXkaymrj4sHq1/+LuZsLWJXzmj4Anrd3CyqGd
XUTA9/IAg5NcXDelfjj0cy+h9P7VEZ1dXEwuPPShYssAMd9wXeU6ChdjLzJm
wqVGCcbp22H9XzSw6MqtRUfsxglPdR9/ibMaOFfPpb3lxiTRO3yBH/FDHS06
NP5FiArBW6E8SX6AGkZeEnJat1wMhDWuKihT1VBlzLuqbqM4ZFb9pFIfqyIz
S55xdZcEdK6um2/3VQXnskXHgtyk4G2t3tOKAyr4Y4Tpe/egNLgfHqfdHlFG
7dAJ0z8OMmCQFXk8hq6M3/ItfZqM5aBlv2Jv7W0lVHzQpxyrKQ/PTwcafdBW
wiNuadFe4grgbeX9u2A1B4drkxuzXykCXaU20N6GhTmD13efc6NCtMbOl5G1
TLzpumlbSQEVZkzyTv20Z+L3gCaxVeo0+KfbVT1vNwNTj/THPCqmwefYwz8F
+hqNzuy8kaZEB5veTxdu7qLj8ZgXuV2udPhTqoZJO2i46br6Dt6UQIe/JCZt
aqiY5a3iyTNhQJ+hs/GlbVR0E/pa5X6OAcoF10c/baJgdNC84VZRJvyncf35
mxhF/Kux77AKwYTe6wYr1kUooE3owzupAUyIOyFD/eInhy3HP95qbWaCV6D4
4xkPWXT/sU76skAHEfN2XWl0lEHh9rYTDwkW3F++MTrUThr9UmeytQ6xoNAg
QHh6kxSeb0wKZV5hweV5z+Sd10pivaNvnH8OCw4d9biYt0ICP25svWfVxAK9
zHZmLk8MZQpnTx9WZ8NBxZcPA9iiGONjk/x2FRvcc40LfOVFsCfY63CMLRuy
ox0MPogKo+lRw9Pdh9jQUvPFuGVolow+8zvo62k2KDy7/luzbZos0cuY3BjH
BtNjv+hHvkySBq4JN7bfY0NgfaFeY944Kbx22eBIBhuk1m47Eps5SuZ9uHRn
aS4bfIpmi58+GiZVOuQIuUI2GL0Ik7e+NUjqxG30jChlw+FGy8b42H6y/bdG
+aMKNriKiR9YJ+DhuzfRYker2ND4b2/RHOlucsEA+f53JRuaI3usZIU7yM0J
wk/lPrNhy8HOBSunW8n74R8jfhezgRH3I61yspH8WPZQ8fgHNrBiLxq+lKgl
jTL2KRQKdLCeIdVRy6CMDIn5sqMqlQ2TulHk0+7X5IE84dI7Al286JJLXELa
dWL5exkbg4uCOHKu8UvyCL0S1T/XBD5l75/LTJ85VYT17UOXPh1gA//Bs8U+
NXWE+241p/LNbNjV85+KpXEzUbhK/1TKcsF5rPGIjCluI17H3NtoIvBFXxeZ
O1RbdRCfrS/UCguzYWe5xu3Osi6if82rJ11tLNh1Ndgvaf0/Yo9pyF6hQhYU
0QPpLQ19REep9RUzga5ulhigxF4eIOby9MU+hLLg+2hUmvfAMNFvcTLTyYAF
dbufs44kjhK9HlefxyiyoNc8hXhiOk5IfKc5C/9mwpd1UvtORUwRya/tlPAi
E/668Jv+8GcIuVMXDjP3MWETmau3NGeWiFmbKUcKfGRrndMW0SPC0LMs5A73
EwPSt0vdWqIvAvmD6sEtcQzQDFxtxRsRAYMb5sek9jLAAOhz2MfE4JBJhvfN
LjrEhY7clFgiDs61NrOUdDqI3ZGaG9klDp68uwWzR+ngK6YvybOThAKF0aE9
gzQYHS7wVJeSguvzva/WPKfBdZc3wmHZUmCTcKuh4QgN9PdXDO1RkIElvszU
h+1UsHFPdefdlIMb4rToCpICVs9F21cZyEO3/PP2zb4U0CtTJDwq5aHkk1L+
+bkU+PfWfqZtXAHqgWZ8Xk4R6r9v91eJVISc2bSH99wV4F/QgeC7shS4vlJn
Zn+BPCSx54hoXKGA6T8RjpyvHNy8zh2ZraHA/ZVZ0bJFsmDvut/anEUFF+2h
Xe0cWfCP+e/82GUqbI+8IbkjSxryMjalHztGg6p8Pbvcegn4WhJbovSEBk47
m2SE1SUgTLLFT7yRBh/UXTujHMVB6XL20ANjOgTfto9/2SwKlM0vrWwP0cGS
+cXtkLooDFC9jY0T6AL/v9f7/i4REM3PUHvZSYdjzzxdaz4LwVORAr9VFAYc
X7wBuiWEIE/vsF7/Mga8GbtoFBw0Q5RrVZRX72CA06jvwRyBD4gd1f/TepwB
q7wogvt1klBxtjZUusaApz6U/05kjRMZMlHXj71igLHwS91VKmPEzp3Lwq51
MUD2480B+s8h4mJJQoWJGBNWq4TIHFcZJGjR/93LVhH0QQ2ri7J2/YTF9aWK
w3pMCF+g5tqj1kvorv9rNb6OCSfnSr/Kj+omXrMuFeXZMqFAtU6oe6yDmB6/
S9niwoRPR11DM53biemWkK7bXkx4lmV/52hJM2GDoeueBzLh/cTn9g7H78R0
CdfgbCgTovDwPmXtr8RHCVEFZgQTvknuyFjdWkTkUxXWHIxkwu063RMO318Q
wfMPe/j/x4R13WGL0rXukwn7I13WC+JSUBEuF5pPlixTnPc1nAkZLyou1UxW
kjmUTz81BPm1hJ+Ma6yoI38ejv+1UDB/krhZxYcjP8nNw8S70SNMuJVQX/rf
tjYyj72LE+bMhExKiALx9zep/0empsqGCTSfOWsWhHWR+Ye/TbeYCOb74aE8
rvSPHNjn8umVLhP6FN+UP6vtIxcEad/YrMyEOwoJUyK3B8iqPUtnnoowwcVz
R33lgSHSTuPVs5o/DHgW+2Bjn/YIeTynIKaojAGxGXVOhv9GSXfzjvRzzxiw
oszTISx9nLQ0SzOnRTNgi67P88dHJklhEaM3XocY0GPZKHRm4TRptPx7zB0z
BhzuqdP+/WuG7KYdPfVIgwF3tgXd/7ZZCGsZ6mvXldIhdEe58CEREWwptF3b
lEgHxg6pqMF6EfwccePV7iN0CDqnK9uaLool0R4TstJ0cKP5/3tgJ455s/rz
zL7SYM4ytoHdPAmcjl926uhNGkCWLvBHJNDilmNf6lwaKGZyNAsvSiHbJzok
v4MKRlp7lh0X3IOhx4O5jY+okLKQ6jOrKoNPlML65vOpYDW185vpPVlsFPm2
2WZWEb693OT7OVYB/wXffpC+XxE0QxbWmVoo4mic+eF9HxXA2bKaJz2piJJf
mbPtIfIQWjZ3Ri2Ngvphm7hVNXJgtPXm0/XCVDzzl2NvvEAO3C8Wqg3bUrG/
y+BJQaEMqA97Ly4fpeI/K4WTo4L+U/hfo1iHGQ03umhX19tKw80PWXKHrtDw
emm5dlOtJKxRVTWK16bjm9fw0fSVGFR3fAzLMGGgVXZv5JxOUXh+vWHuwrMM
nHQQ5S1VFgWHJ18duj4wcPmd8DKKnzBkfLsfp76KiaovK9QnbglBiCX5IcKX
iZdP/PH9L3yWuD2yrFstlYlzVX3hCGWKoG5K885hsFBMRCO8x2qC0NL6evOV
GQsbFKdeXwsfI3KkLfYV+bNwUqH0WUPnEFFHa5dTqmJhxIUHvBTGIPFp4K7V
5klBvCPxp7RRP3HQYfWXsDlsvJw2P713uItQ9BTpb/ZkY4iIg4Xvgg7i/bVt
1lMxbHS4pZ03attGmC7tDhDLYGOiUpvfwf4mQp4sch0qF/i6rSuprxd8Izq5
bZpFnQLcQptJfviZWLtH/12AKAdl18mcDs15R/gG3FkvrMLBE3MCJ+6fPE32
q47WOehx0HZVcnWl5AfyXfa3q/+t42Cj2OTc1kuVpMmX5OQzthwc1Noe5PGk
jjx9yYVPuHDwtONWbym3ZrJD941xrhcHG7LFZF6cbievRKLqcCBHUF8iEuNJ
f8iS9Jnf7aEczAuQH7yX95cMyLbKC4/gIDzv9cs91kdaKZZX1URycOyn7Yek
qAHS80rtsvL/OLh9XsX+hgdD5FTHuLibIB5EMbpu+2GEPHtudufdcMF60gLW
/20aI1uNh9f4neZgYqnqyNmZCfJQ7fq3DQEc3Hzufs2UxjTZltJY9uUwB0v3
id03WDdLNq51cLPdx0GrRfV2MplC+FfJ5fhuaw5q60i3GBYJ4+3H9T9aBbr4
of99hnKDCFqs8vL4NY+Dq0ayLW/0iuL3SVbXXgoHXfzj4x+LiWOATCrHfISN
olvKHq5QlsB0w9SHN+vZWPWh4oeuniQmJ6mutMthoyxv49KzZlJoOBu1/+g1
Ntrsl6H/85XBtckB6S8t2Zi7mebxM1IWFT2oHyr4bFzzxMet6a4chnvzt68Y
YaHhI3ublxUKuGkNLbDsCgs1Re0+OfxWxIzs+md9+1iobvLW1ymEgovNhl9Z
zGehB+Nh2KIrVCxZmbz5ZAYT9ZdqX3+qTkPtg1s8Nnsz8VJGj2pDCg2LTo97
r17MxPD/Fi+QzKXjDj3pi/ZJDHQfu/9S5QcTZbdOuQ/voaPM0GhE4E4WxqXW
NdBk6Zhz3ip3QS0LjfOe1EZk0dBYkfZog6AOTbMif7qJ03DP36CDt8wF53zx
xNXyFCr2sp9fkvzAQYuG4/pBG6iCdZRUd2QoYWr2ys/3z1Bw/zmPKaN5yrjW
psFKRYWCNz6fuH/wljL+erP1v9tOiujHzng8ekYF1WbaHWofyaPk/L2PBtao
oVvdz5OJ/dL4+MM18s9jNZwWNTiycEQKg3VfsNh0dbz79cKwzrAkxjzdF5v3
Ux2fHa24lNIqjqa00F3UdRp4y/OA2MIqMXTaPvHU6L4GuhaYTRrliKLbUX3d
Zl0uOhineusHC2NEogJnaA8X27yzrPW3C+Ftx11r889zsd1np2nn1hmycWvo
NocfXDyTxd8keWacjHG1XqMoxkO7iHiLYZlR8ibfP3i9Ng/Vamvey0YOkQ76
WptlfHgo9vHZbvq3fyTXsbciOI6HQmqPA7/c6iSTrsjErH7Jw/MnZU7mb2kn
FaeNXYwEfv8w1bGo73cjue5mudahHh7OBr6cVZH9Sn7RzSLfSfJRQkwIM9SR
DHnot2Aul49+LwNYt3ekEAm220/FreAjxq66lRBWRmzrNpWc3MjH0wGHXVXi
6wm5CBXjzXv5mJ2fVtRwupUYyrFvOuXJxyK5rHGddX+IgY71I2eC+Lj14Jyo
G5R/hMM1n66NEXxce8tTgz7UT1BETkaUXuLjAefTBq7tQ4QosBXGE/g4x/UI
P69ulLi0eSUU3+Ljz/sbx65WThC/9h48onObj4k1zCCb0mniT4bEOZ4Al1lY
8PX2C8GVqUSla4LxLI5wyKU2Ydig3h1wQZDvfLzoxhMuotCnUPisJ4aPn18u
K77RJgbn9O/feneOjw6d4wsSXSQg8cH7yYHjfBSXp7zVbpOEyLdJnufd+XjD
ezml20kaohVVwgN38PHohbOGYT9loPVEQk2eCR+/l24cu7FbDkxn/AecFvJx
w1nDsS818uCz+1HodiofbeqiZCusFIEBemsSh3i4rUno1TUngf41eT5rWMPD
GCel8XJlKjy+95ZcLPh+q26fXWH/hQo5u4Xa5rkK4pdri9ON6CB56dBkjCEP
vRukj05N0mHa6dfIPykebsrLuuP7hgE+wZv6NtdwUfvG1rwGXybYnA65/jaJ
i/UUtX1T2iygnhBabnKAi3+9bG2SBH407pvNxf75XNygLSQcFc2GTWtfSShv
0cD06BVfgls5YJ8q3W5UpI6mgWfE1cOV4Fzv2BoTQ3XkUj64ms9VhjfSaw/Y
P1RD5eMDj8pJZZBv7h1JVVBDzsoFExHbVWDJTEbOYR9VLNbPXLHltwoEZJ/z
KqtSwT9bdg6L+KiCXqzv3pVhyigb2XkzJVANki67LMn4poSqrU8XugwL8Nya
/MR5Sri5UvNhwiF10A/Jem3ox8FIZcrBJT/UwW55p/+7d2y89W5Tpbq5BmzI
3TToLMZGs81OW7emaYDvI+/g/RYsXGQQldokzgWPqrKTBz4x0GPDmhWX93DB
4lPDxXoJBt49Xxxw4SwX1t1TDY41oSNPcvGP+Edc6KffCfgUTMOTur+fZhdz
QaUkoS/rFRWDDoad7v/NBfGBpKOxPRQ8bpvINxfhQXZKdVCsJgXfPsfod8o8
2JdfVlr3SgHFdt9o2KXHg1uDa4JTePJYvdx9odY6HvwMYO4bj5JF/pv+G/Ns
eLBWbnv14jFpvPyVqufmyIMSzwuqD1yk8Lm7cnG/Bw8MeEeXv62QQOkGikSF
Dw/6k27lFq8WR+m/YyB7nAdV/Jpv/FRRfD9/vc+LEzygr2XOUVERQV2XC5pV
Arw4s/rebJQQljucd/YTjI8Nyj+zXGSG/M1++fCxLw8ku8fOHuydIA94Li4N
OcyDOwVF1zito6TJJvcJYRce3BsXaSj5PkQeqj94Z+0OHtyfylk3XN9POqU+
2GO5gQfNyIykYg/5O6RySM+QB9tyDKubvneQw8XaFjNaPPioc2ycI95K2s4r
XJdPE+A9YuRASB15tCjoW/QUFy45PTryQruEbJwku73auRAguvTfrq5bAnG1
yP5YCReOPQ+lzT7KI1oetn5/+owLjpMxJue2VhNiIWmU+Ze5ULor60Lf/J/E
Ub9mz4GjXIh/fatgQq+L+KkhezpDhwthx8TlhZx6iTvXz6ihDBc0OX5Cy9YM
EMlv1W3TSzRA+02lnvKqUaJKnW//aJEGHO2ZSJZNGSccn40L369Xh9tDMocX
yU4R0t5nZ9hh6hCtNCmx1V4IXM0PMYuq1IBzxdx130FhsNjReN09SA1iclrn
JniJAMuyNWreHDXw8Bx38vYVgw8V75cYe6pC3KKEIZkj4vDIujgwW1EVfvkM
/ENBH3q9PcchNkMF9FoDmwIF7seu3d3kSY8yXEmXbgqaJw1v2tytJCKVYfzk
5zUJ0jIgfUiBJizg4+HONwfUSVl4pXzJUm6HErinmL+536sAdXM4tiNpbPCa
Xm52P10R9I28+4oINkSNF067LqfA9//Sz92tYgHr4mv/vZ0U+CNl+/TGABMs
G3nMDwQVhHaMRFQKfNbhuVUf8uKoYKG+aWAVhQnp/wYpj5fRgMx0H6/VZkBV
xphhbCgNavbNz1LNpkOhPfsEv4wGDvOvWJAmdLBp0n2xdhcdRBakPwJ7Gqh7
ZBm+38UANbe3C5ecpECWxDL2nHgGtMxZTNsjToGDj3ysTcoZcHI4/q2tsiL4
piSEv1nBhOqm82+TDeRBcdPHvSw3Jjj6iuT4rpeD9JJswiCBCcZVrVkl22SB
8jM77/M/JrQc2uNsflgauD3VOhvZLPCKmeyLPC4Fgc6TRnHGLDjtoLv+Upgk
iIvWbEpzYoH/rpNtBy5JQKF++/uEsyyA1NULlW+JwyG96qEd91ggFHZx59tH
YvB8pNayF1kgPDg3asdLUaj+JdmcNsyCz2tudrwuEYa3r3QbvsmxISjhfeH1
WiFYknwgsI3Hhg0pLjq7CmeJc6si1L8sY8Ok6YCwcNM0sYKQWvJwPRsu/tm8
aN3oJFFdGKPsbMuG8Xydl0bUCcL30A0LKSc2bPUSOiW+aIx4+o67+OYhNmh7
Vu59az5CjNDWEmp+bLDr7BQ/vn+IcKH9nbx0gg2KX5dz7M4MEBdXxf0eC2HD
8PxdfO+7fUTWu7oLO0LZcGy5wdoPZ3sINzYcTxfgziyJ2bNFnYTDxyZL0dNs
YLhcXbVX4TfBviuXtj2YDSf95lwNtW8lgkzopo/92bBwo4vBJstGQoH1o1zI
iw2HrOHk5L8a4kvTIo8rB9hgWnNNKSO4nNisyKet38WGn5XzrrjZvSd0JzGA
acWGkjUPH0hvOEk8ijffKbWGDQmPZMqSInNIc9/3odzFbEhNtb332bmU/Hg9
4pOjMhusk54Vvs6qJn0bO1ll4mxYcxHMV71oIMUuX3M40MsCjoaRauHWFvLk
VoP7ut9Y8FT5d9ycwnbyzNv6icXvWGAzHNMpqf+HbGkIOedylwV0+Zj4tTe7
SeaS8wFfBd/bzidm4Z3pf6QZexEzdD8L5t/Z9Wx8UT9ZdaLtpdc6FnzcNBYs
XjdAwsHF99SmmLD365ZXLpojZJNj/FhbDRPuLl22KbxwlBw29ds5/pQJrtKO
PgtdxsmaCSU2dycT7ItFyaS4KfJu63Gq4SImeH2cKTbWmiFTVeRtMqYZoBlK
6gm/miU3Dqfmf7rJgHefLipaugijqOngEj83BsiF/c1N0hRBc3LTwYv6DCgS
Irxq2kQwx9LxnFohHeY+Hg/5sFsMk9rjZ5fW0oDH+sndLfAVe2UljlRdpUGk
/Q/rKz8l8dbyzfGidjSgvTObsI+SwoDgnRoGlVS4LmNrt6tJGkc19NHkPyp8
T9uhfOasDNZ87I8fMaUCq+3VaVktWVTmJZodzqSAtJ3SU2UXOdz/8aS0oQcF
yKj5Z6Km5XBqd2tlvrogfqRMaWW8PB62ObbOVkoRTomqLGXlKmDCTbTNCZWD
AqGNP/18KRhefCon8LssuL7tWE57RcElX0tkGEtk4WDwIrn5wxQMDZz/WrZO
Gs6IR19J86aiM/vt1TPzpYFT9GExPY2KVgu8nSQDBP2y7RWz9RcVL9Hy13gp
SILYArV7j21paFEf//vwDgk4q7nh340LNLzG2HLvaZI4BFcFV//KpaFtpnSb
znwx4GvN+3pCnY7uts+GIj1E4cQO673vLen4ujp1hVOqCPz9m3RwcyAdB2t0
kjLnC8Nw5z4hi3I6ngrw8Uq2FQJFi3D/vlE6VrhxnekzM4T+PcXwSC4DU476
ZI5bC3i+YeA3zZyBLfxvwmq3J4lfOdnHww8x8ED2w4zk7nHi2p5mk9aLDIzv
2OiQsXyM+PUWjs15xsBHnlPak3lDRMzVu4mb/jCQvnsgMExikBD6r4FcLMLE
zxpPuToW/UStqeW9biUmtoczVxlTeonE4qn1Z3WZ+HM/qT4e1U14dvVUDJgw
UZ1e59ko8YfYbGAWt9KWieazV38YhLQTR74fl7NxYWKBXp613WAz4XD0QCsI
/N9H1kyKfPl3wrLI+7dQEBPTelcv1c34SszzvsqIPcvEW7wbCbt5n4guY9+4
wQtM3Pal4dm13FeE60WLTM1oJiqavVF4tvommes2NqB5iYkg9EiKmv6B7Dg1
MTwYw0QbRumP7pEKUnNiQ/TliwJsNOU8ov6NFNa0zJ4+z8TlmeoWnmubyDah
jKsrzzAxZSFFWeN5K3mzyCzYJJCJ1We+nDwIv8lXtjUtKkeYuJ+a/3PN507S
MqnJo9CRiZISG0/u2tVDxgvcBrGViT8mS9uW+/SRP4aem0YRTMy8pvOKtmKA
DMbhJ6kLmShzfNmCxLFB8mq23L7bTCb+Oc3+/uzNMNlwV7XKbZqBrFTOBV7g
KHnl58rr0m0MvNn+gFexYpw8+3va/+xHBt4T9869PDBBnvfQ2lr3iIHbP3kl
r0ubIvW3KS+XiWCg6s86a9Jlhrx0NcBOZT8DtWVPvvWSE8LTS+IVFAgG/qIe
uZj7ThiHowadkv/RcfRQ/mXbKyLoH/rJdUM+Hdsq/JyOuYvi7SG3uh/xdNy2
Z3CHtKI4uuz6aFOzjI5Oec5V9j/FcdfEzWYQpmO0xMN3nU8lsPQ7r+FBKQ2r
91bpRK6XwitvtoR77KKhsNiiFQEK0pjOoOdWCXx/0y3hbMcaabT0tnZb20LF
/+7ye37tkcVGyDq+0ZGKVy+993ZUk0Ozy/6b/6pS0cnwjWx8gxyKR+8OfvSN
giVVUuJ/tyjguLxFT5A5BYNdUi7/k1RE5T85f1ePK2Ju00DsoVxFvN5vXlC/
TxELpfXulkZTcO5gdNdavgLe0Vv6PuInFc+UzmR1BMti6wW1Kx+1afhbPXKt
5DcZfBJwRvWNHw3bC853r9GRQSe8EJQsRsf3dzc7K1dLYXbAQXb0Rjq+qDO0
ruRLYfVMaS8rho7hL79dzzsiiYnitCtddAbuc1txNnRGHEWldjzUtmVgsl38
oKOJOFZTtoQOxDLwpBLVJfmsGNY2FheIyTGxOTI68+iMiEB3nxB+0M1EK1lk
PUybJeNuZB6+osHCSOeXzx/IzZDmIY7ubVtZaLdN3E3CbYqkL+5rj3rOQpFV
r38YUcdJq03x7Y1NLOzNV19huG+UXD7471iQDBsHt1b8/JMyTOp60F5e2MPG
pINn3Z/rDpCepnma/WfYODbTlTJ4uI9sHw57EfuIjXamBr3HLHtIz+CNFe4l
bNS+d/bcyuxO8sQ7+cGj3WwM1BDl71T+Tdrulr/xUIaD9flREiL+reSyLCFT
0fkcnA7U3/H2SiP5L5qfxt/LwVPeen8cA8rJ66Wlvj8Efmtpt+Woe1cuyf+W
aZ0WycEOPYM4h14/Yuu/BwUXkzi4Q6RTWCiXJIS2/tkenMFBD1+u7JPFFYTW
gyNhvsjB9Ay/r20bvxFVyjPlRz5zcKbbSOirzE/ig/LONPfvHLS7LKSneaiN
mN15+Mq+dg7udMo84WfXQcQYnhre9JeDBXGO3ovMu4nvnm4rtQcE8+/8/lDN
uJd4Nlz0fniYg5tfNifI3eonqkPMWx+PcjCt/O/H0ZuDhP/B1sG1Aqy08rPt
yqRhYv+1FUZvhjh4Xiuk9VXyKKFz/+ewTB8HnyzTzt7xeJz46dtot7STg8oC
iS32YpI4Nl8qXLuZg8cmpF3v5U4TSi9jb/+r5uClM98/K32aJap/Jr4MLOLg
J3Hn/IfdAn0X31j4MZuDrRk9VZcHhaFOf1t55QMO0teH2sOUCKTJcDJjLwvW
czBx231xMUib2LxDMoiD5kbvD6crikN2sGrEAmcOij+Vnt2mLAHvtpRIDJlx
cOEXUvL0XEnwtxC76LSAgxNrPefOWyIFYQ8MCg5Lc7A/5eellcbSMP2KtYnS
wUZ22Q/W/Q0yYOC87pVZHhulqm5Rd9rJQsO5OVEyN9k48ETK2cxFDu7F3z6u
uZ6NpjHfZ86cVIALqtKUgzQ2ZlSHXTW7qwi/126vT/vBwjtPnzcGOlNAbUIz
fLEbC1fv0hioOkeFEe+iRTsXsNCQ5XVjJZsG7vKUOM8OJjZ4J21wSKFBWUdl
yLJdTPxqNe9I6ic6PF5mw6tXYOJw/oOalzsZkP6pv3gjMlAnwFnFuJMBQROW
KSeUGGhhcsj7ogQLArqW1u29T8M7a75kqq3kwI65zGVv19DwzIX3uQvyOGAs
vjU+q4aKr7Pm5ipvUoKCrpur/ccpmG72ean1TmVoXCMzTz+cgtGq5vucm5RB
/PjqE6cUKcjdceH3uJMKLNW46RSsq4AVDrckLferwreWGzF7Fsvj0k9TfhWt
qnDbwjVxm6Ycctx029z2qcFHscUJF6alMTPJ6uuBbeqg+Hm5SPVPKXwibWT4
X7E6eFey4szfSqJL+luvjas1oHnN64c1e8Xxy5t756QUuKDaGm4oN1cMI8Xm
DnSu48KYcuve+79EcPHGBwU2x7lwOSLSe4uNEJau2b3p+A8umIjWOOoKz5Db
WyQ0FOR4YFnM/77ZepKkOZ5NaRX468mFi93ti4ZJJeL388kYHkg974hu7h8g
RbcrfVR6zYNrXyPXraD2ke5bL1QtaOJB0qNNUQGbusjBi0WhHBE+DB5nZWft
ayeVK4tiv8zhw/BA8Gc1/EFueZnVZLqODwsX9yl336gkCyteH9njyId/s3Mf
hps/J5Ptz0VJBPGhAHxV7y5BYuXH0mq9OD50HNrV25BcTTzu3LLxUwofgn2C
0jvuNxPmZ9Lc37/lg8dXmlWUeAeho33ReLaUDx/8ljiI+PQQlw0O+AbV86H2
6Nw13kP9RB3b0XtOOx8sjse32C0bJlReBx/8080HpZJFS/oDxohn9Q/dc/v4
MGfdV02/95OEc+HDsNgBPjwvDh2Tl5wlDr3PLXfo54PQWNtmX4E+8+l9e4LV
w4cDv3erXSoXgWH7gKH0X3zY/1/v90M+YlB2d1snv4EPgeD6KJYlAeeiix3c
yvlQ6mR6N/qNJBS4v/lwIpcPJu3njP/skobyj7bD2wX7k2s+dV9rQgYuNfg6
jl4S4FPXJzfGyIFjiXBniz8f4hJ/3wzhKUD19EJOxk4+zP196ZVVhiJIjHcP
uRjy4SnnvENyIgUKDl1QEGbxQUyD5zrmSAX/Qw2nonp5YH9qsVQfjwYyp0/3
yX3kgfzxRdrtN+lwzblOS9GDB8bJtTq+tgzQKtzZ+cCAB+oppss+STNh4VDY
td0iPEiLCih78ZYJd3YX7F9TwoXaA6TOjDsLDsPT33tjuOCjv9g5iMGGx/pf
qaVbuVB4NeLAVA4bPBKL516jckE/4c6FPZMcUKnTNzSha8D5pNPvuq4oQeAd
2huFMHXwk8nlNSxQhsFX0YtN+9SAt7LmuGyOMqQvdm2i2qtBVhpbe896FXgS
xMpJeasK1qJPtmaUqoDJ8mAtIxVVKLiWU9ZjqQpfdx+vnPJXAaVwkbklhBo0
PxAub5mjDK3zp1+bPFcDy8wE3tFjSnBALlrWXk0dqoQztksWcOBCpnHv9Fl1
WOGeea1BkQOWcZb92r/UAeRcjefuZMO561GWdaAB2hobolTusOB3mmm9cIIG
mL5JTRhuZ0LWdqECZyUuvHiyRlPXnQEi+ko/lqzmwmTDi00TKXR4bXZTZN0e
Lrzu99M/3UGDk8bG0jcCuXBjT0z8kCYNTvwQLja6IjhX7WLVSCcqJJXuU9BJ
48J7s5ANPoLv6l89HhfwgQu37157kfNcEVrnSHVqVHNhMfW389A8BVicf/mg
bjsX6Iby1/4mysF0bZx6ej8XDL+kWE/SZWGp/dKylCku5La0HjsWKQ0bxeQK
tMQFvL//piJNWApuUT+168sK6iDEqKs3UALW0iciGhR4EFV0WiFyUExQT7t8
F1B4EBs3d1X+EVG4yjpXskCRB3ffzao0dwtD+yM94U7B+/cjShj8Q0Lg7D5U
7ivBA519U/7R9dPEzq2pat9muGDdTClhtE4QY7n+ktxhLni36DuY9Y0Snze4
f9jdyQUdMlAlSmyYWNbXGJ/QwIXVItVZFhoDRKx6SH1zKRcmGjc8fR76j4gS
HWsxzeHCh7I9/lpf/xAnSvdPVz7kQpjs/erL+m1Ej9Vej9jLXLDvDDrONG8g
8FzOlqsnBPklPtSuMq8kVi+eyel04kJVxNYQh+RXxN9Jh0vXzbkQzs2OuGT9
isww8415sZALvierc7O+V5ARc/02rBX03Qg6a6Goy3fSQPOFV2uiBtBKFhhI
eneQ748Pnx5z0IDnLc8PGqr9Jcetnhm+VNOARzdcb7fs6SMtby7rcLyiDhFb
M9Vkm4fITe0WlOOW6rDVlfidzxglTYeH1geLqMP6YP3HlTBO3r5rIXHJTQ1e
3dO5+jBkmnxuZpWOHDXYn2JdYntpllS88eQut0gVdg/qu14qE8Lu0eRdaeqq
kLY0y3e0SAQ3v7d+FiPgzwFqwsiP8xJIsw4Yq9+rDO8G2U8qPSXxrAS9snBW
cM/Z9MbBZin8z58Rl0koQY9rdWS8sAxu3077VdHIAb2OQ0VB1TK4fPv9q+9O
cKB+v9j55mRZjN3mEWX8nA1eHiW7Fy6Vx643/dW/NrLhTIHsAGNQHodiRP6L
amNBYt8i8bB0BXxZmOk8Q2WB2JLofyflKfjfzdmT4fsZEEIbjrByoCLjlMvn
FaN0CGNRhyYF/ntbYcH0kgt0CG6ungwYp6LXwEqfhak0eKsRpvbzPxpGjCz8
b5URDUxm+QfKq2j4YbWvblYJFXyScu7GMOm4u/CbFv0PBeJurA+5epWOF273
LBbzpwDjysCBpq90bBbdsShUlAJTboOVQooMDLoed+TEKgVw1BoubwhhoBHf
ewnLRh5WffqbnvCSgWvkg43FD8nB6J4vmct+M1BEwjCZdV0G3vspl3LWMzH7
cc327enSkBJorOtylIm5bSYK3EIpIN4p7om/yUSHor3tl3olgHI7ITe7k4n1
/QUe28Qk4CymbEiVZ2GhOqesliMOl6tLtl3UFWDjXVN714pC5YKYO3M8Waiw
2TMqaLsIZDNSrBvOs9C+zPLkZXdhOD/nxZbzySzcXsuVeXpSCCzKfzstyhH4
As3y/Kw5s4SvqLTZpwoWRsve2mpjOU2YfRoocGxj4YrooYENxyYJ189aaUND
LFyuuKEsM2mcCHc/UBEuxsZQZbPBp8WjxOQ6U2klgY6rSfUSTi4dJlZ9+vj0
kjobh9Qq15ysGCQ81wwVv5jPRuctPh8dq/sJobVxdaF6bNTr3GvdkNlLTM44
ugqtYCOxwaHiQn43EXh8Sn6JIRt/dJmJK9Z0EE9+VPqyVrFxUnR/fVpnG+G8
Ycb65Uo2Xs5ePfeBcDNBWQMeMsvZqKX52s13VR2xWqPqprquwNeELrlgH1hJ
dOlvrBzQYuObltPsidMfiNRLpyQiVdno0nR4yTqJy0Sg546tHYps3DcxfOzt
zhzS5citOnlhNiYOW24cOFhG8r1K6oX6WAIf4v7J4GMN+dejJiVfoFMv5H5W
nr+5kZzP78rYWcRC42ua5S4HWslYrfnHPqazcN7yB7Of1H6T52dtL8tfZaHM
SZPb4pWd5B+V8zlLT7BwW++D4pqgHpJqU0Ea7mGh03Xnn8GX+sgHr0ojtVaz
ED1iA67tGyArg8y400ospL47+qV7YJg0zey0OF7BRMicDW3LGiVtHxn4zH3E
xDqJc0/b/cdJp+41ceXBTLzYm/AirGuK5CVqLOTxmbh/t2tEe+IMaakZo1nb
z8CQF+u6XLWEMPFYtMp1koH8c2vsDn4Wxtp/u3bu3c7AJ6Wi1pVJIujIrVJy
V2NgTVyVZ95hUYxUiSpNaKPjfy6Gr0WExfGsS8xWPw867jl/YnZpkThSPfNu
LV5Ix4n7Lo/SIyXwzMaFRdwuGh4IGymzkZbCrdaGEuXONDy65sJZhwIplGks
vBSrSsMNzUOKwcHSeDVr0e8n1VSMjL/Xmt0mg5pRRwz/EVSUvvZz4lWUPGpt
St4UIkrBXGHnz/U6CjisX6Kj56SIo0cXkA/KFfBc0ciH468VsCrhxOozQhTU
enFe/JyDPNaKGl4gN1Iwjtu7y/WpHOZ5Xc9aGUfBDYY6QzfHZfFj2+GqInUq
Or6Qv2sUKYM7FkYkfnGiYpKcFq3oszSGuk5Iid6jYs5kyalfFGlU0N3+h9Sg
YVl1GahHS6IYWW5uspuGh38cDN/1SQL9PMU0aq/QsH7w0BNPEQn857k0XkOE
jg1Hjb0cjoihL/fJJ4+ldGwV/iXMThdFucmkilFHOgaeemCi/U8ELzuVS5S8
pmOCW/HTm67C+KBtc6NUKx0d6g1j2MlCyD54tjJYmoFVnQTTJmuWrB87fm9s
GwMbVnx+dy12irxyeofKpB8Dlw3U+I9OTZCbLzxqnhfPwO3+YZ5T+8fJpDdB
F4MFfetdhkXsx5JRMkvnTMNIBQO/vns85aczQtYfWXH/ShcDJ08V/dG6NESO
v1RosRFlYlZxTeZk7wC5+/z91KXKTBQ5GttE29xP3kipM9bVZeL42iPCnO29
5A/+QL+5CRNXFH6+Iy/7lxRKe20SZMPE+1oGy83e/yF5cyJLi5yZ2PyVdlbY
6xe5gjhkscibift0mH6n1FrJUkf61UdBTJSdJ60pdKWRrD43+HzlOSbaOEiJ
RnTWkll7VuY0RTHxxKLccfrqSrLpWFHPtVgm3mIaGVlz8skXcQZpB68KeKKz
sobx5SFpqVxwzPwaE8nX+q+/FD8j7O8ada8SYK+SjokfyoUEpnaWg2A8a4Y1
z9Ckimi4EDRrL8j3dqH4q/GRb8S/Q82hZwXztT6kP9BNbSLy0jQDMIyJNyj9
VovTW4mzuy14FMF63/89aDAt+ZswoVBbfbwEfb6o/WrRvk6imf5tVaeTYP+7
oq5aZv0lUjqtyny3MXFHTM66h+J9RO56Czv6WiYq7lg2uC69n/ANDcguXszE
n5pmGT93DBK/bmj1XOEwUWXXZPfO2SFi5GsfLVCYicmbOMviHowQK4X8nP3/
MHDcwnr54Y1jROO1maXR5Qy0u+v+rrBnnAh6bDj+IYOBwRr7352OmSQ2Pv1s
Ro9l4MXNIZtCdAV9P0C65OxRBmrkGT24XT5DPDD0t2JaM/DHqVRO2zIhWFYe
lP1Jm4GMS1+wU1gYzlpkOd37QceF4lZlV66JwCaTlSNlL+go3G2+XMVZFAys
pJX4EXRsyrOV36ktBhk/XlbYa9Mxd0xhEWaJw4ELrHPEOA0dfgWYlZ2QgNV5
TTJ7PtKQzCg6vt1YEgJLW76sFfBpqXCJ8MN3UlDUpj1EmUPDxuVqlK1B0rDK
qyOZ10nFxSvvPgQDGWhYLG7P8KZiYWLi/KzHsvD52+TBW+4U/Ns/djokQAFE
F2x5/FeNgvwwt/INyxRh3dWC08l3FPHaujeaF/8pQsbyzUSNgwK6Zvq5JT6l
QNuKXT7bXsvj9bcjoXkSVFAq/HZJQ0Eeb7l1hpx1oILQjVWJX57J4uWcv0Nv
pGnA7On1Lh+XQelaR3nuXho88bowtnatDC74cMFcNJ0GGlssvfMLpfDxc/8N
czbTYS+X3rX3oThmzufITR9ngCfVevPuWjH0av+Pf4pkgFnIbqFFomK4bbnp
E1MxJnA17sv624jgnItfokLOMyFnt9OkRIAw+inu2/yriAkfktftv5EghM53
Bi39xFnQnnR/f//taXLZalG3vhMs0LzlfDe7YpJcVzm7vfIFCyKbXr5sGx8n
Ay4K89//YcEAraGxwniE3NC08sDjzWz4zFS4+mHHEDkS4TZ2PYQN2iOeB4IP
D5AqZwxvh6Sxwe7+fo/98j3k7kmnmzIiHOhaaToXOZ3kfMaHJQ8WcKBDbXdk
oPIv8ssng93K1hyYw2faF9BaSOWtiW9cfDgQMfnP6bHod1K+89ffE3Ec+EMs
X/++oopkOBdc3vmCA2E157OcGfmk1g8LGP/MAc7h1m/1K+LIdYMnI206OaCQ
WfLmbGUukZ0mPukkrAQ3pLeCsn0FsSw+m67OVgKrf9lxf/TrCO7ttZah2kpg
NMew6O6BZuKlVznlnJESfFwe4137up1I60lF/kYlUOUXt9nTOwlhKemnNnZK
UH8yv/WfXw/xuuoxm+qoBDpfdO48+9dH9BpkL7F1VQLuaeHf+lqDhHl+gjLr
sBIkPWxN/OM4TEjPfG+yPqIEg0d9I58mjRIrrQ0DJjyVwCTN/ZPzz3EicE1q
kcIhJTA/aPyxgz9FvLa9mXTugBI45oguUnGfIXB8eeaOvUpwJszwUI+9EFxt
+f745DYliHGUaAkNEYZTzS+l+0yVYMOcV9MrH4iAxvxjZo+WKcECmxozoXJR
yFyy6e1NnmB/PbPZBcP/o+C846l+vwBu73Un9xqXeyOVhkpZ+ZyUlhUVaZEm
7fTVoCFJpAgpZVMkERFKfU5IZkUqKTNk7z1/9/fXfZ3XeZ7PPc9Zz3m/Xvd+
ROBn1eTzj9IskAxenHuWIwaJK/XNVIeUoMgrgj66WRxOJBhEPvqpBNVbN3Yb
/CcBcPx2pl4u379felK1YyXhqNrC820P+PEztupKmZSG+dsWbj1qoQTn9ye+
u8+VhTqmVP4wVwnyFA5PFG+RgyNW1VrBo/x8KV634IelAqQNCdMaQxXh3OYb
/9GbFeCd0fGMa46KEPiBe2i9OwXuHm32oM5XhMG0P5NEFBUmLnd+70hhwrLT
Xx736NLgoV5bIucYEwT/FBZv/UiDy00xuvO1mLDiYln/cCcduk1LOgKCGXDp
jFc19TIDHjqW6P5Zx4BOsQqJGDkmbLsqcq5hgA4rHaqt3yxVhIsywXZt6+iw
bc+GU2ok3w7J6vo//2jwvDKtJ9pSCU52PDQ7cYsG8/YvWxfDj7NaQa2LGcnn
b8vUiL5BFuSmB83z3kGF+pojtjOebPA6Ple5oZ0CbquNNnYFKEPl72w5W2EK
/HDLk7hPVYH9+y9ZhN5WgIv69xYEhanA9OricRsFBeh+bFIgHK4K4VlaazzU
5GAm6uxTE0U1mNetWvKLKgsVE5cLrUPUIEdGOnmlgAx8P7Jo+ekbHLhUe6Zs
6qMkvBp0X280wYEAUaahZ5QE6DFv0pP11EFYpSZe47Q4+Dp6XzsVrw5F73+Y
aMyJQJzamkfCNeoQtGtF8ZM8Ydi2Q61nWEoDPNcPrUtwEwI55tLPccc04E9W
RKFc5BzhVWP7Vj9cA3zqT//c3zpN3G9Rya4v1AC9Iysb8zQmifJvlSZevRpw
4H78+vO2Y8TmJ3rVMkwuFN/O1+4/P0zsIZ7InDTiAoytCbsbPEAsXEmJvbeP
C5uGRAy8zXoI8zMVVw5e5cKfpRGVArb/iFcPtH59i+SC1nXR56HmTcRsVrJR
RS4XOPIa+PjwD8JYWSHS5BsXePPiEpYuKCSGO2PPMju5oLjGTUmpJY7s1FIs
XDfLhQ0p9WdcqytI/gOI1/I8OH/ftqTh3m9y3uU4q31qPPhWXu3hrN1CLlyh
t2DxQh5EUm49EQnuJE8vWNlFX8GDV2oVSxZf7ye/hhUlShjw4HcmTaTn/RA5
sWzSc9qIB5qbbkS6z46S7Q1pT1v5skm08ddxYpIs7isMeqPPg4uDOhMR12fI
Z3mW7WeX82DbB8uCAmcBdCWyn4sv4MH70MsbuoWFULThiYGbCg/ODC1bYZcg
jBWXXPaly/DAc3Xr4rvrRHHSoGOv2hQX1KRqbp36yOdzMTWJwjYuVKa5dXuZ
SeDIs3avuC9caFhZnHWoQBKlb/uov83iwo8DzYvemkijX0XbcYVwLvzkFhdx
s2Uwb/CF5tOLXLDdaHd+jY4cHs57S3jZc8FNya8vJVIe7y7b2pq4nAuOnbtG
/HwUUOpXtpuGNBcOp0cYShtSMCn05vnRRg0IswtiLe6moH7ygcRlmRpwdSDR
tuAxFVOUTtbV3tAA3307X8dtouG/I+vkBbdpQEf6RbPYQRqmbH29/qWaBjz4
YbA1LJyOm3IODzenqsOW1TLbi+sYaPIy55yPmzoQO7MuvOXz0dK9Bp29/Hxu
mxGLpdAV0e/prkN5RzkweX9N6GEjJQyc+adPa1ID32y1ngUlSvjN75TC3R1q
kKEX4P3LloWO180CQ1aoQkalx+MIBzZ+sFY5dzZSBTZsEOu88YONy46Y3VMV
UYE/etdZwtbK+JKc+IBHlEFl4nu1WIEyapg3bbtVzAbxx+1NXstVkBj2b4nR
YgNKvFE9GqmCu19EEKuvs6D3vrF7mrAqepx5+iRouRLsKVppty5fFfujSOkX
vorwjDeT68NWQ+G3L19P1DJhvrrOL/pJNXzQS16P02GC+7PY7f15apjt+/tT
lScDpBoj7rHEOYgmvLVZZXSQGyxJDLHgoHPp0lE3Fh38s9dbHbjDwRlCU0v/
MA0Kr7/5dLeEg0NbH65cmEGFipudbXcF1FHiyJaHZ2Yo8OaZ9HsZtjpyX+SV
rdxEAcfuBaobdNWR5x1GhAcrwF7mmW+wQR1jPr2MvJkrDxc+7wZhB3W0TI1z
SbGUA+3T+ZtCXdRRJSZUsr1JBqJUps2nzqtjbObLDR7u0pDyUJ0FN9Tx/eyt
60+kpaCMuNDielcdH7J70uJjJeCdgtaaG2Hq+KImwuqlvjhYBDKF70eoY/ii
Fy7ClaJg1me892mMOqb9PPuwylUEVLO1Xn6IU8cAk4+CNmLCIFDZHdrPl2Wq
XPenxQuCbrXvV+NYdbRtuSavsk4ALs0PMH8ZqY6UUifazZIZwiTERmrHQ3W8
/1t4+jFlinCruqWpd49vn+Tm1OJ948TxfCjYdUsdIydHQ+zSR4iLI7sVvl5W
x6WUkOLbkkNEbqS7YfQZdfR3iNVPPtJPMKnGrlUH1DFsn5BPw4Muoshn4Xu3
7eoY1W+UrnOijaBN5ZvdWaeO48/3bk6ybiIMx7kz2nz/YhVr1+mnPwmhL6e3
hSrz/a8t5f4tooTYrOHeZyeijnsEzXNLMIbfpmbXTP7goAGV+/D4GJJfns0K
acVx8MyUXeKW7irSvZiU2OzKwX5efuiEfh3pKJZBXlrKQY0kvSXzMtrJDW19
Xw6lq+GJU4/zemJ6yPsCVaXm/Pxa9dDRe7fJAGn24cercG01PBJ84BsxM0KK
mipYfLivinmHl3fSrMbJYLv49wWbVLEx9ckuhfuTZNn08SdXJ1TweVNazXrR
OdK81bPn1HYVrJe7+1CXP18m5OvPL5lVRsvuJMbbp4K4N3WLn2aiMj4tMnmb
8loY8+raN+oMsvHdwtwAuWwRzN/gWTAWysbamE9NezNE0Vxb8bnEKjZabb8o
TYaL42h9C+i7sVBz90rFLz4SmO3k8eKcPAsjfU9PFx+XRFG9b5LLk5Xwu4zW
Ko9F0sgQDvl3+Lci2ieL+Pcfk8MXC77eWrCEiXvibHIPLJXHkevlbo0kA1cq
hZ0r6ZFH7p3KkCtb+VzV2WL25oUClrZpL4k6Sef3h2GmoygFb5tP9+lN03DV
J+XTXrso6Dmd4tl0i8/ZZRf/WzdDwU8GkwZR0VSsSfx1r3ULFZvD5RULF1Dx
c8x2ulQYFSMeyajNf0XBFxEvjjTMo+Fa+7dEeYEC7tJz+Bp8lIZRPqYVGuYK
/Dm/rKLiGQ2F0/QbXsfLY32S7K+GeXRcrSWktPatLDo1NIfl7qOjj+Nhrcsf
ZTB1V9Rm9TA67rla9LjsszS6h7+SezRDxw47V9X2ekncgzs60/h8OGFtJlLb
KoHv69Za7dzNwKtN6+S0usUxul367OE0Pg9X5MrSxkTRyGWnxpfvDDz75IPs
zykRzF6rZvB1goHFL/aaGwmIYHiPmOkxZSbepEyq24gIo+bB2vJYQyZ2mY3+
XiAhhPLPzN3+s2fiY/mY9z+kBVH7QnnNvzNMvFs8J+giL4Arvh9+PunHxK3B
val/NWdJiSOPE9KimVgxz6VaZPE06cUoTqxKZ6Kl2O3BLzsmyRnD04HtH5iY
157s0HxlnLT9K988+IWJCme/dNgnjZKL8i7pDv1mop3jh6sWVcOk8pVryl2t
TKyWFxn9PT1I2ovc2/Knh4kC0pGaXO0BMvS+o3vxEBPl7jlU/JfUS+6duHEw
fYyJq21fadwQ6iLv9HA6Hk4wkXVZbezpvn+kZIzbv2t82XSB1jTj3V/yU6W3
7TH++seaTfUSao2kk2Xq4l3858VZjj08KfyLZBxee8ea/33Spzoa079WkinL
5R9Y8u2RCLD6fH/TR5JtOnPdjm9vlOZ/zzaOPCet/IIeH+efp3+yNEtzNoX4
Zv2fSTD/vKVPLGtVT3wkev4K1ZXw/eE+k3Jvw8dKIrTlzTQjhon7i05He5bV
EDcGClZfDGCi6nOdJfnFDQTroeOaUXcmThd+Ntq+7y+htn13VaAjE1+sSD7p
9K2NaOP8WzRvERPfpBnr/3vRQwStv9oxT46Jlz4dqbno108cWmi2wKqPgY2L
uF5qBoNEzMMO9fkpDDx/MylnR+AIccB6/Z06XwbW506Vp+uNEWZUu9aS/Qy0
Tq3fQ9aMEx1v5n+2VWDgerVSBW/6NLHvSsvP0RY6LssuDRR+MUOcu51JNmTT
8f6LgvWla+cIHFiuG7STjvbcMZPGpYIQ3u4z66hFR3/GUN7eYUFwf3lU14c/
F9wZVvha8loIplsbXJp8aLjtQYuKoZ4I3Po5ck3DkoYzkZ+K5g2IQHBXnHoJ
lYZfJB61lyaLQpqjl75zOBUFdM+FKyqKg1LPfLVNoRT09i123F0lCQHFckpb
rSn4cnnIh5JLUpDa/iKtXYKCQl+NqoPVpaFz6pB683kFTFJQMhQ/KAN3Rqpc
rRYrYJ6Kr2iEoCwUpBCuhfnyuI+VeG5fhCy4vRQ/suy2HPK+5A5BiRzIKs9f
cqdLFu83u5SZ75aHkv6H6S6bZdG4+nqNQ6c8BFiFRlXPSGN3ekbA86sK4OKt
f6R+iyTGDMRhsxcFmq0Xb1sQIYF1r+ryiHcU8KmoWXG2SxyFx+mfJcYocI4/
IC2/IYYW4oqcL4eoUO3vaF9YIYrJ87+EFT6iQuBowXk/hijGZnBCmZ+pQHyn
t/6NFkbm0RvpH5bSYNbobVlosxD21W6up+2jQRDXl/aSJ4QLzNKSM/1pcCxa
ZMm+WAGM/XTi+Pd6GoiYyHWy8+ZItaFbltZidFCwXieOy2fJukCrp9I6dBCP
31ViozRFnjgn+g3O0kHotEHRBd8JUlRX51JmMB10l6XM7BoeIx8OVRBO6XTo
FdowzXAcJb+oX/+59jMdVnRInvn0aZgcoXyk2nfwn+8sv+jOkiEySEClKVKI
AXu28hR9QgbIcxErt9LZDDBdVX7pUU8fecZEICBnKQM+rfp8WTy9m5TLKa2/
xee7q+qXn94500FWp1uke+9gQGaxeYDL0jZyWWSuf+IhBtxZxun82dlMNumU
KAy5MSDRYmr5ok0N5E/7PPFD1xhwLvqKMvm6huxq2Gs77c+A3NZrUa0aVaSN
4+xAdggD5jT21urSP5GetcfEHjxiwBWBsyaW5Csys6al4mE0A17rXDGX+/SI
OC0q/iQvjgFH+rNSzoYi0bc3V0wogQFHE/2cFasqiBV9lICj8QxYZav98sSt
74TTwtXdfTEMCP7zQrN1/h9C+bvx9IMIBrx8WyrkeaCJ2Bg9neoUxoDLEo2r
wjJaiMqDnfQtdxlgUn3HXkSwnUic37J7+w0GGD/Sf+5n1UV8KZ35fPUCAzS2
3XrU8aiXuBK56Ue5KwNijtjVDg32E4EfwkaNdjOACP30K/7BIHHLw7CyYjMD
buuPkYeNhgnOtQ8871V8Xk589UitfoT4tiXl0x4NBqgtme4b4UwQApORQ9f4
/Oyxp4JZ+36SaOuNzq74QYfSwSN3jffw+4Do1vXr3tBhYCbFUDx4jiiLu7Ut
1YMOYTEVD9n3BUAh8WTLUwc6rPkZcG2VkyAkXBl1+KxHB5u/7zPXDQlB99g7
bno7DXbtBF+lt8KQd9Zyy2mSBr+DvLfleomADkHMHgqlwT+bv01a0mKQSWhm
zujT4Ejm65afFWIwUHPCNEGCBg33Sw6oBorDv4rP5/x/UKH0vcCJpbKSsHC9
ZinnBBUqeZNfv/6ShCFdswo5XSrE5lvG+CRIwdvULc8nBykgOBNt2LZCBkZ+
7zrw8zQFErUFP5welwGf0r0ZX3QooDUovLD8jSxM1CUWfmtTgI0f/iMz9eVB
JDqdK79DAcLuPvulMSwPHk5kpJWkAmyZN1gTaKcAHRWmZ7eflwdln6E7n6Qp
4K2Rr3lXTw4Y7j7kxsNUsNvQ6qp9UxpEpWUprrlUmMy2k3CulAJvg2Q1JWka
3B7WvKPCkgKiJfzo5DMaXDlnPmPI5/3PcS2b1cdowF314UbGb3EYuSyzLMuU
DpOqXguqGOIQcjpjVP47Hc4kP2AsvyYKXY/sez8pM8B+PPjtzZci4OEdpfjN
iQHuJa6GKXXCoC2TlvqplQEteXdcQ5YIwatZgzvxmkwwU/ql4WorCKV2Qpez
DzAhuEH1nZGbAHCv+Zce5/OM2Ni2uWH7GeKbFVEtQFOE7oTigEnfKcLmev36
jM2KEF+828kiY4IQ1j3z2zZdEVx7DwksHh0hJG0/F65sVoTfG+3M2uWHCe7D
A+EsihJY/T5ZuGneIFFasupy5VEl8Ncn/JMudRObM+nEg3tKoP9d0G7XjXYi
sivdyixHCTK72CvlbrQQd03tR6r/KMFEuJDK0MVG4vflg27EnBJI+3uKnCmv
If5Kds5e5rBAyS6qUCX4K7E03TTfbw0L5pJ7tO77IyFWmlq724EFOpy5m6vj
HcgVxwbtes6yYJjh9fse/QM5sXtcb7U/CypiVh9fK1NJGod5HFoezYLUsTdT
mtG/yAM7cvFnOgvep+opbtRoInO/L5ZXz2eBMJOoE/doJZfI7RMW+cqCizza
gug/HeSTPy8NPH+z4MSEWd53s15y08Zdq71aWPAyti/UYPcAmRm/20W6iwXb
8pvr1R4MkeeTH/NofSwoytmke/nHCDmexIoJ6mfBV7tG01WscXLDGmLWg69P
DebMLHScJEONt5tW8Pdv/hN93ChpmuwLV9rh2cqCzI7UlxuGZ8kQp1vCXn9Y
cCxT4L/7/HvAQvzzbBXfvo9TpqHOpYI48fTIHxe+/eXRi1IuDAsht5grdTGD
BXXz8kzfSYvgqexvI0oxLMj6o3JaYJ4oLhTL8DO9zQKhzCiR5WvEUHGIFtnr
xoImsUbTtfbiONh5dISxi78+4/5PlbMSeOefy8Z0vv91ouQrM+5IIu2Kp5PW
jBLo3vpXn18kjUZVjuYDNUrQ800midEig36CzzyoGUqwEut1qgXlMMv92X2D
PUrQcOTTUzWOAu5fbnZ82WIlOKAooLo3VQEPZt076jilCM2FMdnxayg4WqBb
vTFQESyj1O4y91CxV8rUeXC7IvyDl+raXVTc0dqzJ1tRETYnN12SuUTDI4qU
ArdQJnzy3rGa+oCO02fLmHutmOA5EOJJ12Rg2GqvzPWiTPhPsMTseQYDtfb7
PRp2YcC63032NuVMPK/1yvmlIv8eszQ7b7xTEaUucn1s8ungTAsn3f4q4l2J
nJVL5OigNhDY5z6mhNMX41y+XqUC6fsq7QJNGZcnhhqupFPBuE3h29kHyqjk
G9O+9wkFZMMehoixVfC0m7no7DsFOBRXnRHCVsW5Ht02NzMFcMSUBPuHqtj8
SmXj3hB5WHhMzGkLXQ1fsHL+jgTJgn7CoeebxTj4tuSrgtZNGTDhBW5T9uSg
v5aF2eQ5aXgr0Sv8tI+vXyljj4QkZOifl886oo66c4JNX5UlwE0yTzyDz9uq
YXcECwbE4NbdFUyLKnXcnpB948ltETiwkUxlrNbAg4c/+pdYC8O8dWtGeUc0
sP9w4uNVckJQnOnYGHBfA9v/Pvgq+0kA+OP1fSJfA0uPd0W2Dc8SP0ObDRf1
aCDtzZ2XKjbThKxvy7QJk4s71/ilUeMnCEvBd8qua7h4x+tOR/qCYUL2ib9K
oQ8XqWN5ipqOA8TxnYttq55yUW3Xns01ij3Et9V7El9/5GLcK8XYcad/xIMT
4V77m7l4RjQ2Ou5REwFPLz4vmObiOvO/fzJv/yS+f/E78JnOQ4Zp91T+3U9E
ylrnY24LeTj48GrczKUdZP7IV+aTNTxUrJKvU6UUk1lSwrvtrHh41l5tmS31
F2nfNWMesJeHLeERRQylv+THo5c+ZLrwUCZ36fKjaR1k90y0av5ZHkocKa55
rdVP7pTdMpJ4gYerStSfrbgwREZqL5u324OHV5/Ie5mVjZIRLlMNlZd4uPwU
xUWIM0k6/adUKnyeh3q2VtqeZ2fIQS1Fgc5TPLzyzuSKk7MAdoy4Lrx6iIc7
VXIWn5QSwpa+/X6kPQ/xhVd910thfBq0SODZBh4+Oi/1eu8OUdRsLlc1Ws7D
ybvXUjeOiWH58F/eeTYPFQbFRZaESeBGca600xwXVVcz4u/rSiHtkIvPZCMX
Q0wpD0RKpJEnd33GguTifMHDF4T2yKJm2r5Qx0dcLOuh/1LqlMOi2gFl47Nc
VF7m+dPFQAHNDR/J927gYsnzY3WNkwo4Vr/c/7oSF/XXv/vPMJeCGft/G0j8
00CfwNm9a89R0Sv8nk1ghgY6zr2bvN1Aw7h7FTkdoIFk42q/U4F0jNyg4dIi
rIHuT3sPgBED645bsZYWquPBZbVXq5sZuKGLdqnRSx3LLsIpkZtMTFrANlNY
o47fBFUvPJ+niDeqPDamdnFQ68/2p4nvFVG0d/XCyJ0c3JAZ+kWzRQldnkue
O6Ophrvcn2ifPcVCjd8vbQp8VPFop6Fr0ggL7zmG/rBqVkEDu8mpTHc2vvtV
bGBhpIKr38Zo+A6ycf8/Sc5wkDLajBsOKLgo46ZW+sGrf9nYria8YWOtMia+
fdantYKNnLj7+x+lqODwYyv/F6VKuEXstlKqrCqer/YZm6Yq4ZXAI+J7XFSR
57WGsdlBEW9a/XrzhFRFyZCFB4sjmUjZrjt7V0ENdXRsLrxsZKDUwPb3qnvU
cHRz8i89LgMPbLrb5RCnhtbuhf9uO9NxtYz3Lsu/apiOB7AllobHDO4nCHM4
qGSmtuBMIxX9dvWK++/goNDbLg8nNSpGip/d2HeTg79dH4Y17qagrMxX/3Wv
OBidKFahGq6AddxOk4e1HPR22JLnkyKPzJC80blpDjYZTfwY0JLDnyKXtDbK
qmNT8OG2z7EyqKuz6O9zljr2xhc9PKoqjQ9dAmtzePy+strIXPyRJLrpZsld
XKSOButbpPoV+Xl46FDF2DJ1FKY/Dz/4QAxNVfzjYaU6jvq5u8crieJZCUMb
Rz119L96vv3fY2E8LHTyvSNfn/jKWNZVQwhTThzst9Tl7z9LdOx7JoD7rmTO
6emo43d1g5H+I7Pk0RaK/DxNdZQ1dHxcdn2K1BFXSrFVUUdf7Yr7wunjpK7t
s/yXFHXscT3pYNs6Qu4efvBus6g6nn9W4SSoPkTeX+zfadPLwZqtd/ft2N9P
jkUf3P7qMwe31ayuVdnWRYo+WSPw+TkH34XaXfk60EqeE7EbyvbhoHDO2diV
0Y3k3YMT7Tf3cFD5SZ+TU/YP8gw1z3zrMg4eyxp85xdVTBLhsUsXCHIw7ejl
LL1VMaT9UY6l1hc1XJTj9bPPFAmZ+N7p3Y/U8F9nVFeTdhUxf37MynpnNTwV
s8qrV+4P8bK/1Ru11TD2eNXaoI5mws+uJWogRRXhdp+CMn++ms1fcPnQMVU8
Me9NDT20n4COujDv+aro5t8kYto8SAQVpsuJhKvgvXnva/MPjBFtRg2Lb1mp
oMSthlcjYRPEeE2JzKSgCj7csfS6zIcpoiDphWqbszI2F863ej0xR+Q+rW+8
oqCM/f6e59gigpDDSPY3zWNjxmfzNdliQvBvk26Mtxwbr+Vf3Do1Iwx9V7ZM
H41Wwv/E8wsOZYrDGZFD+T8JJSzat0vVLEwC5q3QHqutV0QL99fNp90koY7Z
XlShpIillCTD5xxpCF4zbl79iom2yhLs3F5p0HJTZEdaMvFX1rdBSq4MhJoc
/B1zmYEJhoKiTwg5sLqj39dPYyB30WxZw5QcNGlvC1n8jI6Z00nRh1/JwzVr
LAr9SkMTu0XbFvsrAKek/80iOhUF5YPbxj5T4FPv1JXBOArWjZQPW7GpQJvx
vTW4jIKLju5lWh+ggs22czfztyjgdOituxa9VKjqXxSz6YU82t1Z1btlGQ3O
6u1ULiqQw+RUY7fhUzTQsb7ps7JHBj9fbNM15/NRo1uo+CYBGdx/WPjRhDod
lBZJRe2iSqPemekbO+zpEKVuM//DCkl8eXHSU+kdHRY2ak+vWieBzIj0tmvd
dNDwP57aZyOO5i65d8JZDNj/Lbj2+AlRLJvYE11/nAHHD26pTfcXQZWUPv87
QQzYKTQXdztRGBfHXD1snMEAbr49ihcKoePmm91dlXxe/bTl7YpGQdw2LNQY
0ccAh3viyqrTAphsIya7VZoJKgnFhyoVBbAsGjaL8TkieCt7Xd7hWdKl6945
NGbC1FL3Z7GR06RNy+OLV22ZsHDjDtmT1ZOkZfF2q/WHmRDZseqasfQE+b73
0bD8BSZs/KKtqG06RmbfLL7015cJ0Lqny/ziCPlbeeM0eZ8JjMgwdsHLIXKN
FzfuaSwTNCTOfEpqHyAtCx/FP/z/e8r1r7KUNPrJ6fLMDQ9eMcHoduClnZnd
JHNvSWN8LhOMNxoWC2h3kNHK1J/kOybc8kv0dYxsJVmHV0bzV4HrZKrOc3oz
WR1TQi5CJlzr8T64UqWO7Cpu+XrlPRPUTq1cXkT7QXLE73v+e8MEnlj2wwH1
z2Sa3KGrR7KYkOKQ7H1WE0km9WeSQCoTqizi5m9Ju0eeVan7nZnABBuFHnqM
QzZxIM5S/mY4E46Y/tzf4FVCfOZst3IPYIKm1QkXvYRvhOrjuhzfy0yIaCK2
lF+tJbI7BW7kHWdC/LfkgvhnjcTWcOdJ5i4m2BJhBqryLcRyy1DPcDMmzEyE
m6qc/kf8DjnltWEpExo2r3npWt5JXJg6FqauyIRR7tYTVbxe4pljv+PCGQZc
HP2Acm/7CdrO6PDDTQxQUr8ndXv/IOGcFcWsKWDA6NApw3Wiw8S2yV8fvBIY
UIEt/ipPR4j9n4iow94MuLE/wWJ63RjRpzlZ5MfnzIkK5eaD7pOEr++xlgcM
BhiFVNXkSE0TVJqtv18PHRIaVW4/ezxDePjoNxQV0OGFpPR+TwcBcNz8WWrF
MTo8PaCXc09FEIQWFu1yMabDof/kwz/UCcK03RmLSWk6bP13fm7NLmH4R3NW
NX5Kg49xamvPMERgafdiGDlNg9H7QzcDPouAqkbGbZYhDTTP/k7cbCgG06/L
DbI+UcEzhSX9rVsMSjVePtMLoIKJrI4PLVIcMgKz9qywpoIP6xzFf1QCrCaE
cnO/UiBN9nNEUrQkBHY7rLIIpIDZQv8V1hukoHHgYdQpCwqEptd3igVIQwVT
5+/lfAVobeo50jEmC2nL+hIjjOXBpaDd5+xDOTCtVLk5ESYHWwVS36ToyUPR
YLGqY68sVAfJ7RNYwe8zn3Wyr4XKwJn9aU+veSqAk5nrsd1/pSFs4TuAQgXI
f9Jh5LlUGmjbX9w7ZEWBIolI8a+kJCw11k0ngyjQWvHffzwRSaBYpA2vraRA
vMvK5hkzCTgvlWPwzIIKb8UefffPFwOKR/V7b18qZGi/Peg4IwrUdp3TZ5AK
0kWkwJyeKIRoFY2f1aFB/RLjo60xwtCUdeTaZUcaeDxPjrP+JgRCBsP3bwXR
wGoqrbBMWAhWu2VdCuymgWqsjrWpowBMnOvW81akg40L5VU+fY4o9yqzPwJ0
4GxPUcw+MkNQf609MnibDm8KxzV3ikwSSWMCt4JT6bDyeLj0Vqtx4p2svjvj
Cx3+nqhKD70/SrDe/lhxgZ833gPPV1vUDhOUrpbubEkGdP3a0BGhMkRkHXg2
VsljwNOfK41f7Bkg9rYXVxcYMYC549GDjXp9RETz3qW3bRhQ+Wo22epFF9F6
R6JO8xADRvQ2u77TaCfKwsfq7rkzYMdwXH5TcAtx0axjT4UPA8y8t36RFGwi
PnbPS/sRzACL3tcJ4r9qiQzJE9tTIvl5/v7GLuPn34imlI5Ri6cMSKQWHo4c
LCZKTkofy05hgH6GBvWUfBaR0Xw4rfMlAz6tzw0d3hhNPgy+1d3K77OXAlcG
bdmXT2oHfjiXxJdno99RLx7jRzS2u0CXv/5Uad2juqSfZMZCnatezxlQeD93
NKutnswpjzn3gF+H/zr2ZS+n/iXNG5Ueuz3m1+F9t4+JL9tIRkMOhcnv68e/
DMsft+okq79GcK5eZ4BAjkyqblcP6VV7dkXaWX7da4n8t6Ogn7wtK//3Kb9u
b4sW8MyCBkm/sPHOwxYMWKBHrl+7Z5jccqZ/cb8eA76+pezhzR8lZwvPZK5T
ZUBr/Rbax/4xMp2mk+IsxICxf3rGArkTpPrx80esWumwaODGt9SrU6TH82nN
4AQ6uF8f1PwiPkdufTV6tecaHeIKv/y9dFAAeWcLNqvspkPXxtfV0+sE8WWz
+9ZpCTr0uV2Juz4nhGcnqvrT/9DgcaJGxf7fwhiw/lbRulQaaHzV0WvLEsGv
H3uXiZnToM5kdVLYYTG0PiOV+YVFg4PP3lidWiKO192XiX1s49f1zLmAP8Pi
ODhkSRp7UOFmYkyJ0WVJfC+ruLjQlM/j3Q2+FEIKk+6fdveSoMKc4Jnd6+ak
UKPv+eWkuxTA8sYm70syeDzs+y9Fawos6PqndV5PFmXXzloUy1Kgi4x6Etgr
iz+c150e91EAlxO/H07ukkeb9bWvfhXIwerMFRLxshQ0ia/ffH6BHFRy0uTH
nSn40OPIaMltWThQP89yUTYF34CPRPIGGWja5sal7aGigaTTAbNoaThELFjx
NoWKeXtOv0sfloItST9dtaepKJ6dtJEdJglezr6vDR7Q8HNSHUOzWQIcwnLD
KptpWP+4UVVtkQTkza3TYy6mo+X+8ebxV2KwXsrw6Z13dLyr9nXR/Dhh2KB4
O+duBQM/kkorLv4QAud7tc9bZZmYFd62dExcCCz8XozkWjDx2Q9V6gNnAbhq
v2FxwUcmbv7OWR+sOEe0/1p2qnuOif86qJN3D84QiTlqqR76ihiiv083tHeC
iLoiXpKZoIh9EQtl3i8aJ+S3JQza1ihiS3nt8oIDo0TtUv8MQkoJkziTqfGF
g0TrSdkDPUeV0PTxw3uxPf2E0dGJS3H3lfBLzifyKv/+cjie+N9dVMJ38um4
+UEb4dXbKjqkwMLZhbt2cAqaiUc/N19yXMXC2/MSDwWU1RHqlOaATgcWhp4T
2Ppp9juxNC5R9q4HC7XkT21yh3Kib5vY+3WPWXht/oq13zCHGHD4ZC2ay0JF
xWrFn/KRZK2UwMHyahb6UXvmFIsKyCPTov7BvSy8/mDb6yeiVaTRkIuJjRgb
65YdrzivX0suWDzVIajCRsnCY3Vha5rI+OfVjZFL2eim2nkz53ArWUm471db
y8abLWMJ5x50kEmru0I8t7IxzTq1IfJLD/kqRcAvfS8bVX0Na66LD5BHQu8Y
vD7KxoO5LZrvFw6RQ1WffbzPsNF3qGX9UZsR8ljur5XUC2w8YH+zwP30GMnZ
3SRi7snGZzenO2OCJ8iGbK1wyyts9Nhx5VBF9hSJ7O2/qXzZuahQurlhhnxZ
VRER4sFG3r3irv2iAqhS9yasmM+57wW+ui5SEcSKvGWuyafYeGz6hjSxUgh9
3HxidA+z8ewDyco7lsIok1v63G4XG3fW6elKHBXBkef//aNYsLF86oxMlLco
3rBeFb7biI3yIhZPTGLEcNBOaHCRNhtr+8oe1LwTR6FiO3kPKp8Tbtz66vBH
Ant1MqdhkoV5Sde806YkMUDZIeu/BhaGXHzHLVKWxpwmEy1KPguXH/6w3c9Y
BuWd9iyTjmNhn3Np59+9sni6f/nz3VdZGNDf/YO8Koe1Hs+OTPLjH+YvzxWL
k0e9FIMVDbosDJxsO23trIAGjm6/BcVZKFOq9SBnSAE3b6zV3fVLCc2dxQJ0
fSjYH6Wh0JikhD5G4jYqSVRM5c5T2M7nFAgdOX3GgIZSF94bLBdTQu+TBiMR
pTRcOWUsplaqiGFaBrqru+lYu1VycG6TIlLe3d1+w5OBqvXfV/0TVsQn68nk
gzJMtDm588L7t/zP0L2uoQsV0aH59lcNLhPbumsq83IUUXl9k2LsVwbqCcg4
L9yghGP7Sr+MejBwE4pKXd3HwsLHRlSFEjpSBy23GnSwsEo8Q7DUlY49IaLs
hrNs/LK5fO1GSTp+23zq0O3ryriarnzxijENdRbd5TlKqGClitDxFZVU1FV2
aMoJUMFR6kKMdaaiw4uE30FBqsgoWB+d5EHBFd9vslO9OBjVvcNBVFYenz3a
di54nIMDmmoGpkJyONO96uytVeroHiv3kT0ggyKafVmLE9XRYh+s+fNWCiPc
s1ludeq44VWaRucDSTyiOLxxPVUDfecyqupOSOCSH2laG89roL3RzLJ6cTHU
9l9gbJ+ogeu011dqlovgX8Etk2nfNXC7X+fGEn9hPHUz4z4IcTGnWtS7Z50Q
6gwv2zmuw8XTaqE33owJ4LOotpSiHVw8cGJlzWuLOXKtU5/OY08uukkXTU5H
T5NtQ3abmIVcDHsv1TF/4Rh5075MbtM/LkZ7bj7XMm+Y1FrSXVsrzsOEc/IK
nYwB8pGV0+hbTR6WKXzqSJvqIj2czu//BTz8pu/i8vxNKyla1tGu4cBD3s4I
EYvqetKw9LyRz0kebhzwCFZVrCIX9hnPDV3j4XjDYL2acBbpVne7zTGIh045
OXS31PfEG1XNwrcRPHz8usnyT3I1ceHM46ipJzxkydjpff/TSGxakZNPT+Hh
XbfDAzau/4hU2VfVM6k8rEwa99Ge7iGUkimNqXzZVOoqZcumQYI7InpY4zkP
41+1zm8JHiFidea5bk3goWVA4/yJP+PEIMfysv4jvr7Y1zxSc5ooKU8p+hnA
Q4H2AK2/x+aITd/TpZZ48nDHs9OrTtoLwlHJf2nGR3lIzcnYVzEqBFfcIj+I
2fDwSGzg6ochIlBevas/aBUP2ddfp+1cLAZUQiyoSYmHM8yvDeEF4nD6QFWI
wDgXh0/qnW7fIQkx87t8x75xkeFWNF31Vwru9Q/cqkzhYsVjZffO4zLwqtfB
4PF1Lvat3H41v18Wppe/zXTmx/NDRfmngZPykBOk77Vak4tfD0kt83NTgN2a
rKsLBzXw+nCByH4dCmRkvPlhmaeBTXQBqGyiQO2SQK1zmzTwVv9ldslaGoSc
faARK6WB0QqxPjNdNHhkzbC2LVXHcZFP6vOC6bDpjoBwtK86mmn9O8layYC5
NbLbo03VMX/V4xt5fD7eGEQXqxnl4MfwQlqfKxN+jGsXGh/ky5UubvfnmLDn
VMh/q1eo4YcSc+s/bCWgnoiPW3VfFfs1i4tsY5XgduPZdd+GVPCHGnW6ncuC
JNFXn02tVdBQfcWFoGgWHNqYg28SlVHzh671GkU2CIj0nj49w8Zt9RRKmx8b
pM7v7njIvzfe2+zJ8R5jQ5jNzDCtXwkvY92aOwXK4AtGFRXGSpiyW+zYqIYK
iMakZhf7KmLJSesuKw8V8Ao0WbqqkoncGmXvR19UYOW6/NgNLCbevlFVVa+m
Cg6nNzoscGJgWoOOEc9FFRKfCh+VeUrHV5HiH06nqoKXwxs7n6U0PKF4N992
oRokLCh+ddqNioHWdp4C+9VA+kONuTh/rtmVYvmgI1gN6Edubjg9qYBfmlzi
VVENtCZyrCvXKKDVkvM6L9rVQDJ9n3akkDxauWdHP5PhwEHxjqsMf1ksy962
XFOHA63WRjOWVBls+JVdvHwjByyW7Jn0eSyFbQ3d9a17OWDcvvbQsIkk/qDZ
WOqf4kCcok5owl9xVGwpu9bsyYEcIVelAj8xvJBx3XLkJgcCIufvu6QrioGi
0u+87nCAnheXPVgrjE6+QYLhQRyIb/Bxsb0phP//x74FX25rMM15t0IQPSND
d7wI4ECtzb3uF0Vz5PF3KYsqfDiw9Xmz5uWFM+QT8xzrdx4cgG/y27VCJklt
i6OswJMc+PPrzvy/AuOksd3K8m37OPA88FBnh9sIGSD7LVDFnAPNw66xJ7oH
yT8zB1wmV3KgZqpwcZRrP9l2e73erDIHTu/Srdta10Xq6vnF6gtwIMNk98fj
A23kpAx9wZsmNciTKg+ppzSTWgvXyofw/dvRHcNquFxLqt/U2PMtQg2yoo+P
fBr4ShqRxr/83dWgBuPP/J57R5prVMmVWKpBCLvQsvFMJMHad29tJFcNyOrz
oxStIoLnVnCaOaIKr+b/66xcXUe8p53ctzxEFeax7Rxm5P8S7Tfcswb2qQLL
Plnr03//CI09AgaB2qqw19+vdliqn7jmVF/9KEsFwuDpJQHtQaJ341qCd1EF
vnAy1Z6sGSYubzri8d5QBYj3Aik+tuNEvmHd9L4cZVgju9M52WaSSExRcvQ8
pwxfHisEGmyeJgxUg778WaIMf8z3B+QqCMD4kXSD0Cg2BB0eeiYmKAjdWb7r
BbezwTao7+uFHkFgeV32rhNnwwuRLUXkG2GQyni+VPYYCwYSCmQCH4tA2Yxr
7Tk2CySzfeDCBVH4fMZe/1yxEhg0TfYHaolDxN5vVk7qSiA0W8aJ3yYFgxMn
fP//nr78Ftc6OYY0XH4W9UfxMBPGolUKfaukYV4Nq5cjxQSe1TaxyLWyQByS
OtFvxYA6x+GQ1UOyYNsizinpo4OYTFLy7xg56KIps+MC6eCapPdgTb88xBu9
gHPlNLCft4Uys0kBQg0+/PJ0oYHJXPWX+gcKoLnh1KMEURqoXTiQ9nwpBYzz
Jm+cMqJCw82b9Qc3UsHEa0sjRipA/GIJlew7VPihd10sY5ECzErLtaZXUiHr
lsFOPCMPxiXxoTG2NPBz7GpeEicLJ5cXbwkNpME3yYsdB3NkoH3ASWdZKQ1W
ffh1fU+FNDS8KXdx0qeD8LrNNj+HJOEE/WjN8DE6aL1l118WlYRoF7Nw3Ug+
v1flp+swJUBW8O2zhHE63Pgh9KhjpRg4WHc4/+Yy4MBuhQb2OlGolJJd93YL
A155Snx5tFUEruw8WX8+hAHfhTMUK1yEIErE4eyOTAbIOZikxP0nCHFxaxvr
qhhwa+GeQ7JeAhAV9/sdpY8Bn026fq1RmiO4qf0ZAxJMcL8o3Fa5eIYQ2bDm
0hV1JowqC++ZNJ0ibPUtm3P0mOBTkPO61n6CUF5r/zl2ExMOrdO/GnZ8jLir
o7ja0IEJ7xSYljZeI8RAz5NF3keYoFZ2uGhJ2BCRJ2ddddmNCa7lPtG2zweI
iGlnl0WXmfCqf6PeB68+QitVdNOdG0yYUV0nN/Giizi4dKI+wY8JnzkuXqG/
/xHH4w/kugUwATl5e35LtRAJO4MuT/FllUNO1xnGjYR2wPOeNbeZIGoeUcZo
qCG23bzQbuzLBDNTB4q4eSVhlSfoOnmNCXpyx+pULxYQz5NNAy5cYMK4wW3b
7thYYkCjzDf3BBPWJHx856aXRa7+uDuTdGJC9qBpslNgCXnpsoffHRsm/Mk5
56djWE1uShGN1gQmmP+au7E24Te5ouvlC38dJqR1LX+Zdr2J9Fl0N5BkMoHh
57nUY0kreV/mGnyaZUC/419Po+/t5Fmz5PqEFgbs/HZ9JMm9m8wQ+JW8u5gB
K45dkDOR7CdXyjVK9D1jgJ9NYuWq6gFyrHLgqrMfA65Hop5yxBCZrJx4a3wt
X44P0Gdxx8jltzX+cJUZYCAhaNfdME7+PPWp3HiQDtuHA5TUHk2SZy+vfbT1
ER0irx4kqMKz5J+CrXu38fPP0zX7TGA6vw+bLPO3N6SD1WZF9/4XAhjmVOB9
vooG/V0JNnk2Qnh2ZHZv5GMafC4/83qNujBqjoi8q3Hmy3U1Xw51C+P32au5
T7qoYGX5mHv0sigmn6ed1/9HgSSL4NJT1yTwJO8/O9unFBiVurBfa4kk3nrV
ubzjAAW4GRkM51+SmGp6hhdfqwBbJ8T+W60tjes+qLEqQxTgzaaJrzll0pii
cePzPXMFUDqxNfXucRlEbdXkwhPy//8dGF3yqSymn/d6MlUtBxFfxqLCTOQw
VIVRedNADu4GnEjdUi2HTro5V0onZYBq8NZucpR/T7Zuzz7sKAVtFwLV5stQ
sDI0Zn9khiSk5uK9sxYU9PlzYu9dYX5dvhT7NP82BYeDfb2/R4kDr1QmKU+Y
ihPnduhs7BCDy2F6uiFrqOho5qmRrCsGsa0U/Q//UVFdUN/bM08ETMoZr6hN
VGyLtw+UmBOGTRzXzsV0GlqG3JlHEsKwxvK8VpAZDakaubfb3grCi/XpHux4
GnI2lI+fGxOAny1+m4y+0PDJ1iyui64A+OROeoVO0PBgEZVzZe0MUX8GR5s3
0XHJweHrV1KmiG/rc+orT9DRnnZKsZA+SbRf6AvoDqLjVPSJtycujRMCYpz5
yzLoGJb4779HdaMEXUNyKLySjv9mTdxcTEaIZyce2s3vo2Ov3SOhyYghwp03
+fO7FAMTjVrT67b1E3pxab0BxgwsGF0s07izhzB3sVp+z5aBAc0C0TfEOonS
4UP9Lw4z0H99eFH7yzZClGNm03SBgeUKs7YWO/8SXnapkQv8+PtHTF3qJxqI
gNQKE58HDPTjmPZyTX4Rdz4ueD8Yz8CYYOULbZerCN2rgR9PpzLw8MzID1u3
T8SDB+Nqs68ZSOisoKR/ekXIME5khr9j4G+W9EbxO5Hk6YiGQNN8Bt66duOQ
ksUHMjxD5PdYIQOHu8z/BnR+Jn8NzGvI+chAafyXN2v2g7xMdIr48PXO4VVv
MhXrSBkZ7erdHxi4994f9vBwE3ngRdSQcR4DLTckB8vsayXLG3O1tbMYeG3z
1O+/Re3k8Rtb7FVTGFhcU7jYcGk3mRlp5KUSyz//rqV/v4T1kUvfmRZphjIw
5Hs/mXFlgKz8cfuAgQ8D+98r1u7VHSINnzq9sj/HwOQ3oS83/x0mr74u0/Ha
z8BU9w2f7UJHSZNFqw+8tmDgX8fNtYfWj5MWzuJi43oMtL2j2POvc4K87mIW
8kmVga2rA90Ng6bImyJH7uQIM7Bb2ccMVs6QSZdftJb9oyNFfNXmPz9myebv
EU+ESukYd3BHybiRABaxAnv3JtPR1UXkebq0IPqUrZ+ov0VHhwSBjnNJQhiU
YP7MHui44+jjH87/CWOIjbSuLYuOJcJf5m1YK4I98pdMLvTT8IjtTGPmd1FM
mnZ6ZBlOQ5Mrw17zosTwb1Sxm8AxGhbmL+y0OSSOM0bv/rUa0lDWuGZ/Wp8E
Bvx09d/6nYrW1wq2FmZI4tKggD+/oqlof161yOmcFNqUCslHHaXi4qXKo5OD
0ihoB+zGYQq2P2asrU+TweCh7VHOORQ8LC6ygn5MFt9VWO5ccImCQscfqK7/
I4efrykfvzOugHOjHdvnBcuj4apr7UuzFHAgaeQnhaeAtn5t9eqnFfA3JyNc
q1oBfX4vUx/8II+Zn4UzRxdQMdM2cDJ2rywWzd8qn+nJr2OLd2WueTK4tXjt
NuvPfD31uvGsogwe26PlJH6Sho/bbjhEfpRC2/RkjlIeDadufnPKUpRCHqPx
Va8EHe1ORea9PCyJ+RFWN79H0dHiTUmD6xR/zh6IbP3Fj1Pv8kifVWvFccv1
U7sClvLj7kA3nvMWw0bNlPa/b/h5ESRjEicgiv7oG5iDTOzL9fHp/CGI+n+b
L96aZWL5Xh3DXaKCeG+BzPqfhoo4LnBy08wyAXSW00n/laqI2Y4BnkNz0+Tk
yUhnrzZFXHclvS9/wxTZVFYkF6SihCYrX+5ffmuC/Be/m1PqrYTmDdardKZG
yPmP1Kw7MpVQ9RF4VesMk5WxLDn7FiU8eaY3dqfDIBn0YNpc1ISFp5SphQc3
9JARLhuWGRxlYd7LUU1rrw4yc9vW43FBLDzyTyHgVEYrWbxKRHDqNwtLPdOp
L/p+k/ICqkffCrJRdk8Zdp74Ru4u9ggETTY+WlWiXprykaR+/f3ZawMbexqK
dHPNY8kQDNjnfoiNVs1hS8Sc3xAX903vYFxnY/dzj/lb6j8T7lG2yTsi2Bis
F1SmsKuGmL+Pt3hJJht5m7UDT6U0EjNrDG7fL2FjZ1HvkxC9ViLB4bL59T9s
PO3cF2JS3EEY/Jqr6OxmY6KLh6v+wV7C+LGm+cdJNhrqz0TF3xgg5l+aqxIX
U8brlu+uPvg9RKwZ+WKRJKeMVfdYyTWrRol7FoXuEXRl/NZ6MWtD2Dih4NrW
+ktRGR/Gkf/IiUnCXM9SzE5JGadXtatq7J8hJlbfUxZjKuNLocRXZuVzxNvy
22sbFJSx0HA601tVEAzXHDnxQ0IZV8/bpRVtJwQfHomdauTzbDAz2NzpnjDs
Mi4fHOhjo7tKtXl6hQiEaRR5z9WzsbDCYLOHtBhkRW68O1PKxsu+2TZPt4jD
l8Ex58ZXbCw6kGTNui0BDUF7DSPC2SgQOzuRWy4J2NWjr+nJxlUbeYXH5aVh
uOSZ26ndbDxPDa6gb5MBaUWrkZOr2TjQQlSGPJCFbrZGoaICGxf4/aGX/pGD
Z/0H2ve2sjCSKqhjTlGAzJmbvsE+LPT5RO9Ot6cAS8rRyWUrC2/6PF0qO0WB
sPkn9qQqsnD4U0HK0SgqRIqOc3c8VsIaizXpZS000OrOfx1jr4TM+cJXn/rS
IVo0WGmJghLu3Cotqr2QAd7LL15t/U8RWZK+j9/w5zh58QLjaa4ivmRJZoXJ
KQKbYW+/pJyJhgXXAtNSFWFAW9+8kMrEZ1yduxrdShDntDGX9ZKBc4c3dxn7
sWD5PJtvJzYz8P1W74ssTTZ4NAr5zp6iY40hYX13pzJ8/dbWvGKGhmQPpaOh
Txl2eq8Kd7hJw2h7jvMhHxVIVrjufi6Aih1jR4fOJquCgZruguOSVMzrOkxL
MVCDptkHFx2uUzA2Zp6hR5EavDRzTVx4VAFFLO+2rKjhwNuIKE2jZHmUvH+i
+sASdVh1+2b+Jk9+P5OfL887pQ6vW7j9hKQM3jiUcC+pSx2yvqmThwqlsMBl
qGHtfA3gujZTdS5IItreTR910oDCkELW2lIx1KHsZO/8rAHWtLuamddEsc4+
puHirAZ83hJ+Yo+uCFqknVybpMOF+MjVC1z+CKHibkOTyp1c2L9LXEr2uiBe
Mxmi/73OhWeJdsZXuAK4PcN0e3kyF95FKH/q9pgh23Xnd3p85ULQ41VX2irG
yLEzZbLddB4MjHQcHO8YJncaDv0NWMEDQwWPNu3ZAfJ9R9mHTGseeHskpCsx
e8mkYyecd7jwQNcxzugSt508eG877L/Gg5CnDm9fc5vJesufCWWhPJiyL2xc
vqyG7FCel33rKQ+mP1JdGuSLycChVP87WTxI+mA+Im59lFi0p1fn6wceLB0N
5lr1FBOaz80zNpbxwGiyzt7iUw3htHOhaXclDyyrYsK+BjYTL/y6NLK/86DT
z8Df7n07ce5m9fu4Hzz4yyS7X/f0En9e4Ovkah6Y1h89seruIEEU+DWUfeHB
7XUL9l9IGCEC+2iWIsU8UP7R9eFPzjihFd+zY9s7HrCqfcujSqeI1/fcw3LT
eOBoTeVM1swS1iY3BvWjeZD+QSLx/oAALBi7fL/6Ng8kzj801j8nBJdie/qD
/uPBtsWGfSLDwvBhw81ctz08mPP8Ty/ytChkdSY0ewMPyluGeQn8eVQ+Y9vD
Eg0e0Ht60t/vk4CttbWrrQR4kDbeNBnyvwquOx7r74vb6zGebTwe60lWiqKB
fI4RISmjrIz2t0SlhJKRKGQklWipUKRQlOhzsyJZJTKyR/ZeWb/n9+d9nde9
99xzzn2f9/v1uq9bKwhLMGYi3aYAVY0WAdW6BIi0v/kf9l4Bnh9vtBN/Jgwi
xtEHSiMV4JJbsY8cL5s/O2FVH1wVIElXtfWBuxi4fMwMUNNUgAd54y1MZyJ4
G2mKbuBQgK6WfbanX7L5/MXUYMl78qDx6MS+9RZkeFxplaHiKg/h9Z+unx0k
Q3BxhYyoojwETwXbGDGoEHiY6PX0lRz4V4ZsScyiwiHmISvfU3JQGfi2T0Kf
BnW3OA55K8tBa6KAiQlbf/U7H1ix0ZeFhU/Bm+sb6MAHHiD3VgYOc8ofA1tx
OP1aur5dRgbOxfPdTjKRgFnJDrWOaWmouFile+GjBOgnzy/6OEqDht9ebyFl
SVjfutqT+ZkBjqUb450XJGGBv5OWHCQFhobjahRHKbjTHpKb3i4JBaSGuCv5
UqDK8214UUcSIsmiK4lEBsCfq7/zEyRgYLSJ5HmMAe6P8TrBcXF4fOVk9fJ7
BiTGF9nTTcXhqGPUeQsuaWgT06dwP6KD6kj/KaNoth9JHQuiZjRIVrKolv8p
DU4VkfzkGCq8EpM1UqEwYVWhrPB0AwVoF2MMTuxlwueRjDO7JCnQfMnJYSiU
CRtzX42XHyIDk6zNKM5jwppPQTw9ha2zMkaXV3uYsCeokOXQT4TK3JtYjrAM
iC2VdmWrEqFLxrpxVIMdJ2V38vV2UdBMnttbuk8GQqU/pxw4KQIhAbUFuz1k
4OHL5h7aNAFs680To6/JgF9b5L6Vq0LwtDSq5OVdGehktF4xFhYEdefdDlkv
ZIAo9lpRLokfRqp/ZL1l50VH3tawWI0PXmw+p1eWz97veb6442ceEOdsj+b4
JAPiw017qDbc8KKBc8elAhnYnHeegzHECUI7mst35slAmEVsR8I1DoDXgdkn
s2RAJSnCzxZbxS41HbAVfiYD1ouTVnNXljDxaqxH744MHFzkE7FBC5hXQKu7
aIgMWKXNHUgXnMO2JJYn3WGfh/RSqnOTwzTGaC1l9tjIgG+x/z3ZNxOYhm7t
JpHtMnDLoCLbRnwEi3dZqFWUlIEF4eLtS3/6seFgqSxsngk/OcvMbuV0YfNK
hspnfjBh5PHX/DzVZqx2rMIUsXE+TQwrLpWqwUoVqbh5EBMKx55bv9z6DhvI
sS82ZzFB626Odod6NW5XIjrTNSENSls9Wgd0fuP9Qjsrpj9JQy+5PDO/oxOf
lFUtLjeXhm0J4xn2WkP40aapolRRaegwlht2LR/DzciRQlgdA0oc3Vmczydx
r38+N37sYdffkuGDcuE5vE5gvnuQnwHPnMZMkrQW8K+Zdb2TSApaClxoqzb/
cF/T0e8C6lJQVRqeq+O3ig9nn+p4NyYBBjaik2obudHQ3kD7vAcScPXNLN8b
WR706RnfXsIuCbC9U/itVpgXqa6ru9Z2RxzK9sYebG1m89P5xNeeOuLwibxD
Hv/Ij763RWwIaqcDg54aszlBAO18tJ3TQoEOnQOemoX6QkjJe+MfiWIaNP+3
+OK7MAFVZQvJxbjR4Gbwqo57IwHtUJJzT06kwt3dOwOFnUXQ3oX9G3avkOHC
rXC1OxJENEZgrdgnkMH+8Go5twcRVc7JUk9uIEOxDc3CoIiI8rWMvj1j8wzt
EY89Cg4k9CSn8nnXMBGInyeWSp6RULORGwaBREhPLF7YNEJCf7btC+U2FYOK
RzbxR3zYer7/DAyfFIV7u0RSVD6Q0ZKVqoP9TREQ4y3rzJsno9tTbhJ85QQ4
EfJ587qzFLSwpHD2ZLcQmF9W4+R+SUEc0v0R8SuC0PNH9FJqBwVNuaKj4RoC
oLwj32yHCVtv7x5rOrebH37XfS1S8qGi6b5F35OufDD2zUyw+RkVqemobrxy
kRdSSiRb9tRS0WXaw96iCB5IC6ePhixQkb6Zcpz+Y26wONwjelmWhvhKpTTF
crlgj/FraW1jGuInX/Hs/c0BY827K8bCaMhFjtOD3riGKa+o+Y89p6ENWbci
oxZXsNUfXwzeIhp6VmmWaCm9jJ3mSXXUaqEhPadl/iv6/zBOt2za5Ukayk27
5KrjtoCNb0DNoXx09Izd/zOC57Cz3j7rrCXpqIAZYTWZMoOdfMMZ2aNCR8UN
7w9tKp3CSm43FezYTkelAW76N/omMAm3c/52xnTUFzb+fqfoGBZ2hfvVtr10
5L3D1mmD9RBm1q5h3GVHR2pzm4IU7vVjIhwFLjZOdFSuWWhz/E83lsenpBbj
QkcBWUO6V8zbMf/vHvMJrnT0oUzHt/NPI5Z5K2rjf2z7ZOSwt/BwDXZtUt1B
iD2fo8JxeoaFsHStLTKX2esXHKZY7fYLw4Z1TI2KLOlILoDXeTauAO+zPfb6
hxEdxZW0XH40UoW733R0L9pGRw7fJU7IGPzCWVshNJB9PuqIfOuh0DZcuHPc
icE+f/2lEDfU0YWbip61imfHJ74mUGvFtw8PIDoODLLjZzveo/ZYZBBfi95e
I99KQ2faeFXcHo7gxfXtdTuLaei5tajUCmUC13n8oR3SaCjl7lMU3ziJn39O
FtoYQUPuT/fo7r87jevYOd0QOE1DV2awZrLNLP5ts3POTzZP/XPptJNEyQIe
NZsgY85JQ5oRB8LFff7hjMQvpcvNVCRz8oJHnOIyzij92p71lop6u9YVn/Fb
w4uSZr7I21PRJ5Moz/JoDhS7mSI2rExFGmkOfHUunGjl7FJT6TwFWaYMasQs
cCFNvahzhTEUZOLcxZv5jhuJ2KwbfurM1vOJiFjjyYM4RVuz/ipRUGxYcOFo
Gy/izv03/OojGfXOVDyqj+VDMpYdlE1BZPQoQkov3JAfKU+FdSvuIiPS9IEA
7ccCaLbn0HTANxJqL29woZkLol9e0nl/I0go5Eu5b8KUIHI5ZizXbEZC0zz/
7Ez0CEhC/hiPawkRmVV4klnZImhf+xlrBQsxdG5tSabQVBQFaqyTv/heFInN
3j2W2CqKgi+8ua/MFEWzltUls//EUN917FVHrzA6cTlyfJMREd3Vyi3/ZyyM
4tfXyZwPJyLd/5RiXqQQUFCE0PBNAgl1Ke5abjkghHKipyvtLEiIxPH0/NXX
gmj7qy1WSTdJSCP68tYeTkHUXSbyN4iTjHRt9rKJGT/qXLpxULedjNafC9kz
WcuDDA9Of7InUdB4OktOhM6DVnbyvq82pKBj4aXHbR250bKa28k3TyjI95DP
5+Q/nGjmR9owtZqCDomSaz5KcyK1Nt67Jey8CC6dsdBx5EBKZk81xk2piOJY
uWfn0xX8zXjoj2NnqKjjDm+8PmUZN9eSXJOIo6Jg5bUyv5B/+OfNGs28uVTk
1XqcKjy+gCtynH6q8pOKpD48/kF2mMfjLPflBU9SUaurpW8GmsUT9rrcIYjS
kJh/18NpxRn8koqIVoYBDZFFf7kKDk3gGu3toYX2NISHy/ko3h7DPW/tLJo7
Q0PKWUIyYXuG8YEbPeMHg2moLnOg/yz3X3ybUYRl+20ayky7vk4hvxd/2Nmy
7kYKDVl7bzRvPNGFv1lx6LZh67Go2IKqeLU2nPhhLxEKaehl0eJW75BfuMv8
8wMW5TQ0r1kadONlNW7CWeV/oYaGNqW9buQwQXiLY4RrQQMNlXLVZVNb7uJf
uNt4pJvZuOYoKHlV7T2mTf4Qfp99D2WIo11E4QqMUNgpv6mNhn7lwF/Xkh+Y
UnO6SgcbB7cqKHl7hDRj0SPvSelNNGQ1G+joKN+JjZQWnbz5g4YswgcKOoJ7
sKs2JcMN32jowS4pDk+1ASxyPX69m42rR577ebU0DGEG8p8pOe9oSL1/w6bf
AWNYSFnzPaNUGrpl9cZchDKJ6VHebb+XQEM+Pc13X/VPYXpio/A6hIYyzu/u
ePhxBnuueFsmjB1Po0mq0pfIOSwvOfywwgEa2r6SGT/mvIBJ7xrBQ/Ro6K2S
vBeH+j/MJfsSIV2OhoLs7FTrl5YwB8WfOvFcNDTymeSqW7mC6d0YPbKrm4oq
iqbqJRPWsMwk80Icp6Ir6oyCZ284ILbC8j53Ehs3uHNzauM54fPFxuJRcyoK
koutZzpwg7L1kOU9WSoyjI6LY+jwgB+u10CcoiDE//x1nyQv6LZ4Xr4cS0Hh
F1fN7v3igzdHSrLPsnEida5HyymbH4LTXwrrr6cgdbHI/c8jBUDDXfzkqVwy
qlF3kQnSFQLRxmc7a9h92NfalDRBJID2sGYnZTsZeZXJfXrcS4DKShU5q3ck
tBxs1e4XJgKOtLqKn/FENGgeul/OgQhcN3xex5sQ0UGzmONDn4ggZ6Fcfn9M
DFXGzBjGMUlA7rCb+e+FKJpc80q2/UOCgU75vMZ/IsjYqf6Xmy4Z9hXq0Kz2
iKC2fRmWKvfJgH+B0oAeAqJaTpTVWLL59zWhNgMVAgr2KfiUlEqByzr6suqn
hVBDTMVvnlUK/DL8nZnQI4BUx2seRaZT4ViypMLlNF7EcWaratQwDdqciXrG
bBxomA0RcNpOh1/erEyvaW6UdpR/Q9g1OvgYTn4U1uRCOjbmnPVUcfB/x6sc
bc6JJizP+3c6ikNkxaGYODcO9CbeuVTtsTgEGihRr/Ks4M9XLb/bKkhAYtnW
2GnGEr700q1b3l0Cslwzc95sWMTTrr2/KPhIAoRsR2MMdGZxm7D9g7xkSQjY
sm9QZ9s07raD20/QTBKuiJdpFatP4lHvhbt4rkrCInMTIUpsCLf/reCBd0lC
/tkH5gsy/fiz8CXCUREpwHmuG7xmdePUvQ8k1m2TAq1ub5lE3Tbc61ds/7yL
FESGp/pPSjXgQiq8WU2hUpDks2JuV/UVJ7gH3PyULgXpMTzBnp2ZuBtX/oWk
b+z1qIP4v2PfsCcugxUbBRiwrfIvtTr/F1b6p+F6PYsBAWkqUu+t2jHL0qiF
vTsZsP9C//FNAT1YqVyh9yNbBlxlXZX50DqA7YmuUsz/jwEz5fj0LqMRbNe0
lUTsFQYILovJNThMYLpVDzbJ3WLA3ZE3qgfuTmH1wV6qLkkMkOxzey3aNIO1
xXQ9hTT2fgFO1G7GPJai7yr4+S0D6iuuxeUeXcQsWKNZ3/MZ4DFcKHAsewmr
SLj76XAhA8YcApcaOVex25HiWj5sfTld1bJjRpWDLWNKF5eL2PalKZ9PBzhh
v/T7qpECBqT+Oii/KZQLFNK27tZl60ZJ3R+mernckKAdOfYnkwF9EaVitT08
QB34J/ftKQPOx/K8/EHjg31n9JRm4xnwn7iPgaYZP3DY6GjaXmOA2j3PhZ8B
AuDnpePY5sUAXf3h+pRcQSgXOpMZ4sCATIHnL0OHhOCW+uA6PWDAmwL+9a4K
wvAwlvFhhR3fr0PqGXQnEZiOfX2gkIcBsbPVltF3RGGn3eCUR7cUWHwxL0+r
EYMJwydhPEVScDtxKvtpKBGWrtyX9L3Dzv8WKoecAgnoi9crCk9KQZCFtV8R
ToJAvfjvX3dIgVFiONdJtm5N8gi4Fv3/9wW3S37eu08B5eVgD8VEdj3GKdfP
aFMh68D2w13OkmCxNxYT/UkFu72nUzWYkjDoQHeUFqZD3uBZgaPxEmAs+ALv
SqNDPEXt0VYzCejvTeHmNRKHtdMnIv2WxIFr5PLtZR8JyD/3t22znThEqVib
PBCTBO2P6zmSl+kgMR2aoZwmCccSnOhOT+gwiNqtn/yQgojtJ+5UtNFAqHsY
tzjOzlNW2W+vizSQNm/a6bHAAKW614MuQjSwdrH3Chdngu+Z8T6iChXMo6pf
73zOBK7o33UNORSgK/gpdW6UgRLPT+nd2ymwbN+k7rBTFrQ5e98N7yDDyuee
iT4kCx+966Sn3pHgcvSZz31yctDdMTVvv4EEb9ctK4c+lAPWXbF8TyIRZDbM
qrj+lgOCZ0itMYcYGF5x2PiKJA+8W57EijaLgO+TamHTQHnYcYHkbXSJAA3f
1Y5fyJWH5Kawmmk9IViRd2+t6JOHhDZ58bhlAbAe3fTisbECeKTfuGhwig/+
u+retXpWAfzF0vzeSfCC/VPO9ViSAjS922DS8IUbrlQrV1mVKMBZ7aEtzce4
YMz01mO5QQXgdpEdWOXhBC/G7/mnwiwoVv0aLICtYdH500Wl6iyIDMu4f+D0
MvaXSzfIfw8LhtSFrc7HLGJm1Z5B70+y4Nt61brhjDns/NyB4pMhLODZJTFv
/2UaazGckbyRyIKfXEt8dnUTWB+utEMgiwVVOWJ5HLnDWGnXu8J2nAVn9osy
OT71YVwCodu5almQm4BfmPPuwIwnCEanWllgoa80mXj4J7aztjJQrI8F/1x2
1ReQi7AyyE4fHmaBisNPr+HIXFyOL/Du4jgLYjN128NJ9Xh/Yqup9iQLSAuz
o1TjP3jytN5AEtv+rVyZ3vapF9/v5lerxp4f/V4q40vDEP5TiiOmt4cF6/5y
+D29OIFLa70ZLG9mQWnOUNX01Wl8w1mD5obvLOjxdFZKvj6Hf2vaH0UqYvuP
L0x03FjEs8ZnjwS/YoFpWw2L78YyviNnalwlgQVxsZpNB0PWcO0b8YOkABa4
f7F1j9XlRIuh6uoGh1mgKEHraMrhQsE05xxkzIKDlD+PMtbzoItc/NcerGMB
YWt/T95dXhSlZ5zdzMkCE5tvm9O4+JGPuOqeiDYF2H/MIWzDKQFkkJNu8/Gd
AqyW1AUtfhdE+oshGRciFCDadktiiSoBdYoFi1QdUoCc5Chjo2vCSEd8/l/V
RgVgdE5KaTWKoLzFT6/DV+Rh5qfsgi1LDGUezxQQ+yYPEFlD0NImouEtJzW+
OsvDT+ufH/HzJFShGhIkzZIHpthiV5QwGXHGrLmEDcjBSPpBi8EUMiqUThPp
OyUHS4E3lxZLKejlOX4lTlU5SFo/2h2+j4rOBJ8I5aiVBdU49d32v6noXOg+
GP8kA7vt3TLC2bzu9BJFSIN9/3Rq0pJr7OnorGe2StNDJty7odOpVE9HT5u3
7J2/KA0FRkpfpt+Lo/t7u4c+tzNA9gJfmJOCBCK1rHTd3MUAKwPbOjxCAh3y
c4r9wu57U/GnL/taSSJeBw3TWXdJEOYji/jkSiKuF1/Ohr6TgLKgO3WfyFII
TDsmknglwHqHocXeM1KowLEm+AQbh7Az625sKZFC+6XaXpCe09k4W7tynspA
oR67k0omaTDcu/sCzZ2BCEj6+J8IKvhqzgZmjjBQ1dU2WlwjBR5meNh9UJNG
4/XGhr3yFEhwa/C3Oy6NbP+tnlr0IIPX3/MNccnSiMP/atZkPgla9F/yXKmR
Rn2aUDXCRYLKA9N2rGVpJCt5TkGQTbGDbzW9uKfIRMU6+Ze+bhaDaEL9vkFz
JnpCn0/Q+CYCVTz6sioeTOSyoHEq5LAw8J6133LyJhOpZMVpjC8JgdRHvYX8
FCb61no1NfWuIHCZcpBVPzCR2ZcYRuNmAcjb3LS3rpKJzu3PupZexwcDP0wS
C5uYyLJKPcLkLC8EYO7DHN1M5C6W/qKRxANe+3mM3vxlIhGPixsC3nNBfBzt
XvMwE+nPJfzn7MQJmy7kVsexxyf0BrLvcHNAm7VN7uAAE8E+vukbzitYEKFk
aqqTiTRWrH8Q8/9hI//xiOKNTJQ3oT4wR1/AbMwXDrqy/bF87v7rzJVZ7Pdi
zVgv218hvTblFwNTWMP2LfluL5jon+yvq5X2E5jxZkX7nmgmMnXc5Sz4ZBiz
KfDfFnCRiXRfGv1ZetCPndb556PvwETLTipruSld2OoA79RWHbb/zyK3jHo2
Y4d4qnV9JNjnx8wTicdrsdc6iw8JM9KIPPZIuWL3B2zhfI04X7U0qr35vUrh
YyXOUSLdfPSSNOJcGPXKVmnEqWuV6X27pdGnZa2HSo4d+KVgh6c8EtJoo63f
+Y7sv3hSzI4p6zcMtONC8zM5mVH8Xf/gzeRLDES/o9KfVzSB73lA+v5hJwM5
LdZOWfPM4gXNX1sesOuvfVjeQEV6Hpc6pfPN95oUEtneIGbK5ouU1cXXDgZS
7HrzeMnSXsFTt9xc3J8viZKbF50r1ddwZ5HfaYFeksj+orWCYQwHYlUz2toU
JVHF9l8/+C5woSzPyyr7bkmgI0G9j4+4caMv+gVz/vrscTedmbebB+lE8uWv
joqjo4fc3FVE+FCL0bv07bvFkVTvzpHqo4JI8PKTxGtDNKT7p8G+U0EILW0p
3vyCrZMECh5/3PdHCPWmHhm8h9GQQeohacxUGImJhbWKxFKRJm+qUv6cMJLx
rQ57vJWK9otv2x6cIoK+B7RoyrZRUCbluATHuCharH3fwrOOggTGxtzexIih
K341f33LyejFBok6azoRceDJkvMnyKhg/WbDrNdEZNIwm6meTkIT5xpfN5aR
0Kul/BVjGSJ65N9VtJ6fjODhA9973mLoeFzU1VgTMvKwlr2l9FIUSTg6Fmbi
ZHRocs2NjyiC0scy1h1aJKO62KW7Zw2Eke+xH1SWJgVZ6i3Z3DlHQO8HH34f
fkBBicXzl7EaQSSVllYz8p2C1gn6hXT/E0DuBlY1a8sU5C7yabfPegHk3GJd
YH+QivRM1B+n+fMhN251eBhMRdMfKAT3Z7yIUJc/P/GSipplNccNq3hQR1VM
WckMFV0/YWL8QYIbhUZV9hmI09Df1J9dJ/S5kHJxxp7qbTRk5qax3/cIJyJR
ylOPsfUmlW+xZD6cA327F5Qt5E1DS+fyRv8eXMPV2l/qFt6iITlX5pHFRyv4
SAX3en+2vh1TuXxrZ98S3kGoPWJcREN+2h+Vfqj+w9uHbJek2Pq50W6As8Fr
Ab8u7MW32svGadcsDrd3c7gkSSR3dJaGDF+9kI5fmMFn3+cbDfHQ0bBelHuE
3jR+aA+JOEOiI4Fnx0cPB03ij/fZXCcw6cjNjqfD+8Y4rjxQsV5zPR1tEf28
14E4guOSJtHH1OkoTof769v7f/Gjj5I8Xm6mo4/yDhzv5ftwax7+iBVtOnpp
JPD9SUYXriL9uPzwNjpa1+al4HKmDdf0LZRq2UpHQQjFa4f9wkO6Dt07qsW2
W9qtXjauxjue3jjOrUFHcg/sDfL4cVzr+vOqfBU6yj8+dGtffhTOuvSTdU2e
jhZLvC/Ef83HvqYY9x8Xp6MEF+M7MzcqMdZqyPOjBDqyDLwQEBP3EytXw4Wu
rtCQZ2mnfpZ9Cyb9mNr5bpSGWPWvtd9GdWKxU5V8BHZf61HNXr032IMFuUZd
CamgIfmbZRE/DQewk+apjsxcGlrn8IRT+f4QxtOk0fgniYbu3vyZ6jg4itX7
A5SH0FASr4qXRNIERtp1ceb+URoa335BZtRrClM0I8wrGrPzNbawo8hgBivY
1blyVp6GZrZ0OLoR57DpbvJwwDIVhd2vMcxqnccGjeWr9/2iInUreufVZ4sY
MWelfTSDipZv/Nn/6sQSxtl51Pm+NRUZXxDd6d27it3sNJV+o0BFRsdD+N33
coC33613KRMU9MokYtsJZTau01+taoVR0M/CrPziX1yAhTUdb7ekIEdFw++T
6dxQWvSK4k+hICV/gnauHw+IZD8Lf3yfjM7pljmlUPigdSDMTduejCbjF3dk
tPHBUYvGJ79oZOQfSMheTuEHw4b/9lhFklCbDeGXppIgpByNltxqREKS8yPY
VK8gtF7vJRouEhHBNaTk3WMhSNx7abXPlYgkRZ6QlwnCUDXLdy+KSESnzB/5
uhYJg7HOYZ3hq2Jolrt/U8hpEVCxc89x0hBFK7cKH5QVicL9RyfjN3oQkE3O
+1WzZCJ4j56ad8sVQtfW3nTIDhAhQrFz+cG8INKIjGdIapDAV61ih8clAWQT
GLrfsZDN/+XtNyrl8qPbdvX8CWskyH7Qo6M5wofs577c/g1kaE2RvXblAC+y
CCo75V5EhtWTH7V7wnlQ8MC2sgcLZFgTUBnqyeNGImYCxLL//xtfO+3MIcqF
OgXeeTc+pICZywNho62cSGtr4b+cOgp0HglJPuPMgbS+a1qd5vz/O1K/ufhd
K/iCwPVNzs5USFbc3W8atoQ/Ib9PiAyjgmiE/WaPkkVcbuTI1dAsKpgNnH2u
sjKPnzV2/2bYQIU3T9jMY8scvluH42bxPBWsE4nbqSdm8NMPNyysSfz/P0HP
ufh7U/iRBz6h89tocEuik2BdNoFX1FArX9jS4POdLUcmOkfxyM9tMfxeNIiJ
eRTutnkIb32hWS8ZToPB1BH/3YH9uHHmYG5zMg0mBmVPLn/txr0vqdwyfkuD
3qkxy6eS7biqytbOg19o0PTV8cSW5EZcqHanC6mOBmZR25PeatTgITb0fk+2
3isgn/+vT+czvmll6ppnPw3e3Q+n2B8wLDp0h3hOdIwG/wPYhnAs
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{-9.841780325753316, 
         9.971109624439986}, {-9.740929728392354, 9.919210399096507}}, 
        "Frame" -> {{True, False}, {True, False}}, "AxesOrigin" -> {0, 0}, 
        "ImageSize" -> {360, 432}, "Axes" -> {False, False}, "AspectRatio" -> 
        Automatic, "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.5, 0, 0.5]]}, 
        "HighlightLabelingFunctions" -> <|
         "CoordinatesToolOptions" -> Identity, 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ParametricPlot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
   {GrayLevel[0], DiskBox[{0, 0}, 2]}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, False}, {True, False}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"\\!\\(\\*StyleBox[\\\"r\\\",FontSlant->\\\"Italic\\\"]\\)\[ThinSpace]\
cos\[ThinSpace]\[CurlyPhi][\\!\\(\\*StyleBox[\\\"M\\\",FontSlant->\\\"Italic\\\
\"]\\)]\"", HoldForm], TraditionalForm], 
     FormBox[
      TagBox["\"\"", HoldForm], TraditionalForm]}, {
     FormBox[
      TagBox[
      "\"\\!\\(\\*StyleBox[\\\"r\\\",FontSlant->\\\"Italic\\\"]\\)\[ThinSpace]\
sin\[ThinSpace]\[CurlyPhi][\\!\\(\\*StyleBox[\\\"M\\\",FontSlant->\\\"Italic\\\
\"]\\)]\"", HoldForm], TraditionalForm], 
     FormBox[
      TagBox["\"\"", HoldForm], TraditionalForm]}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontSize -> 20, FontFamily -> "Times", 
    GrayLevel[0]},
  Method->{
   "ShrinkWrap" -> True, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{-9.841780325753316, 9.971109624439986}, {-9.740929728392354, 
   9.919210399096507}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.89945298291638*^9, 3.8994534220271606`*^9, 3.899453471838519*^9, 
   3.899453583843626*^9, 3.899455960399063*^9, {3.899456286607139*^9, 
   3.899456315851968*^9}, 3.8994563546320667`*^9, 3.899456814853009*^9, 
   3.899459164530191*^9, 3.899531578505414*^9, 3.8995316904168787`*^9},
 CellLabel->
  "Out[626]=",ExpressionUUID->"53134288-4c19-40c2-90e6-bc7aca70262d"],

Cell[BoxData["\<\"/Users/vojtechwitzany/Documents/GitHub/Exact-Solution-\
Spinning-particle-Schwarzschild/SpSchwBirdsEye.pdf\"\>"], "Output",
 CellChangeTimes->{
  3.89945298291638*^9, 3.8994534220271606`*^9, 3.899453471838519*^9, 
   3.899453583843626*^9, 3.899455960399063*^9, {3.899456286607139*^9, 
   3.899456315851968*^9}, 3.8994563546320667`*^9, 3.899456814853009*^9, 
   3.899459164530191*^9, 3.899531578505414*^9, 3.899531691010581*^9},
 CellLabel->
  "Out[627]=",ExpressionUUID->"2fbebfeb-76af-4ced-836e-d89af05ae330"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Meridional", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ParametricPlot", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"r", " ", 
              RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}]}], ",", 
             RowBox[{"r", " ", 
              RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}]}]}], "}"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"t", "->", 
              RowBox[{"t0", "+", 
               RowBox[{"sp", " ", "\[Delta]t"}]}]}], ",", 
             RowBox[{"r", "->", 
              RowBox[{"r0", "+", 
               RowBox[{"sp", " ", "\[Delta]r"}]}]}], ",", 
             RowBox[{"\[CurlyPhi]", " ", "->", " ", 
              RowBox[{"\[CurlyPhi]0", " ", "+", " ", 
               RowBox[{"sp", " ", "\[Delta]\[CurlyPhi]"}]}]}], ",", 
             RowBox[{"\[CurlyTheta]", "->", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "2"}], "+", 
               "\[Delta]\[CurlyTheta]"}]}]}], "}"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Chi]0", "->", "\[Chi]0qr"}], "}"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"qr", "->", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "\[CapitalUpsilon]r0", "+", "\[Delta]\[CapitalUpsilon]r"}], 
              ")"}], " ", "\[Lambda]"}]}], ",", 
           RowBox[{"q\[CurlyPhi]", " ", "->", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "\[CapitalUpsilon]\[CurlyPhi]0", "+", 
               "\[Delta]\[CapitalUpsilon]\[CurlyPhi]"}], ")"}], " ", 
             "\[Lambda]"}]}], ",", 
           RowBox[{"q\[Psi]", "->", 
            RowBox[{"\[CapitalUpsilon]\[Psi]0", " ", "\[Lambda]"}]}]}], 
          "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", "->", "pp"}], ",", 
          RowBox[{"e", "->", "ep"}], ",", 
          RowBox[{"s", "->", "smp"}], ",", 
          RowBox[{"sp", "->", "spp"}]}], "}"}]}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "0", ",", 
        RowBox[{
         RowBox[{"PlotCyc", " ", 
          FractionBox[
           RowBox[{"2", "\[Pi]"}], 
           RowBox[{"(", 
            RowBox[{
            "\[CapitalUpsilon]\[CurlyPhi]0", "+", 
             "\[Delta]\[CapitalUpsilon]\[CurlyPhi]"}], ")"}]]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "->", "pp"}], ",", 
           RowBox[{"e", "->", "ep"}], ",", 
           RowBox[{"s", "->", "smp"}], ",", 
           RowBox[{"sp", "->", "spp"}]}], "}"}]}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "->", "Purple"}], ",", 
      RowBox[{"Ticks", "->", "None"}], ",", 
      RowBox[{"Axes", "->", "False"}], ",", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"FrameLabel", "->", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*StyleBox[\"r\",FontSlant->\"Italic\"]\)\[ThinSpace]sin\
\[ThinSpace]\[CurlyTheta][\!\(\*StyleBox[\"M\",FontSlant->\"Italic\"]\)]\>\"",
          ",", "\"\<\!\(\*StyleBox[\"r\",FontSlant->\"Italic\"]\)\[ThinSpace]\
cos\[ThinSpace]\[CurlyTheta][\!\(\*StyleBox[\"M\",FontSlant->\"Italic\"]\)]\>\
\"", ",", "\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
      RowBox[{"FrameTicks", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "0.5"}], ",", "0", ",", "0.5"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", "10"}], "}"}], ",", "None", ",", "None"}], 
        "}"}]}], ",", 
      RowBox[{"LabelStyle", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FontSize", "->", "16"}], ",", 
         RowBox[{"FontFamily", "->", "\"\<Times\>\""}], ",", "Black"}], 
        "}"}]}], ",", 
      RowBox[{"Method", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<ShrinkWrap\>\"", "->", "True"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Black", ",", 
       RowBox[{"Disk", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], ",", "2"}], "]"}]}], "}"}], "]"}]}],
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<SpSchwMeridional.pdf\>\""}], ",", "Meridional"}], "]"}]}], "Input",
 CellChangeTimes->{{3.899450898886588*^9, 3.89945095614196*^9}, {
   3.899451114989605*^9, 3.899451117399693*^9}, {3.8994511490999823`*^9, 
   3.899451166196763*^9}, {3.899451257235427*^9, 3.89945128810594*^9}, {
   3.8994513392422132`*^9, 3.899451357872766*^9}, {3.899451398126931*^9, 
   3.899451428798518*^9}, {3.899451492316065*^9, 3.89945149346975*^9}, {
   3.899451589628129*^9, 3.899451602447603*^9}, {3.899451635195657*^9, 
   3.89945164741083*^9}, 3.8994517911248283`*^9, {3.899451938181057*^9, 
   3.8994519601127567`*^9}, {3.899452102208276*^9, 3.89945214798314*^9}, {
   3.8994523320452023`*^9, 3.899452336970687*^9}, 3.899452410177084*^9, {
   3.899452621968149*^9, 3.89945294924721*^9}, {3.899453557533823*^9, 
   3.8994535578971567`*^9}, {3.8994537518970327`*^9, 3.899453805941009*^9}, {
   3.8994542278580103`*^9, 3.899454228935339*^9}, {3.899456329147429*^9, 
   3.8994564141344748`*^9}, {3.899456461179799*^9, 3.8994564684721327`*^9}, {
   3.899456522900098*^9, 3.899456523074984*^9}, {3.89945657968962*^9, 
   3.899456579839505*^9}, {3.89945666091086*^9, 3.8994566638578663`*^9}, {
   3.899456709922123*^9, 3.899456720804551*^9}, {3.8994590936646767`*^9, 
   3.89945909457543*^9}},
 CellLabel->
  "In[620]:=",ExpressionUUID->"2f724e66-74ec-4c86-8362-005aaab8b52d"],

Cell[BoxData[
 GraphicsBox[{
   InterpretationBox[{
     TagBox[{{{}, {}, 
        TagBox[
         {RGBColor[0.5, 0, 0.5], AbsoluteThickness[2], Opacity[1.], FaceForm[
          Opacity[0.3]], LineBox[CompressedData["
1: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
FY/qB9Hd7+uHD0tJAavKsMPaaBAxBtZ3Kd2XAv3Lnj5DqgOocG9LoOgOaeBL
mBCcqO1Fk35GUzn60uAQJNruRu9FteEkU49T0tDvNDoe7NmDsj+a1FvHSIOb
AmvywtpulF8W6q24kgrKrquHKL/bkblILMlbkgq25d4/smjtSG+NLa1MkwqK
NNMDxUZtqGmrro28OxVMtmURnANb0FJNHNobQgW13jl5kWfNSHvn0Krdqdz5
/HOiH+2b0JPgsk9P+6gQrZFNl/GvQ+eEOw14flMhrDdc93hgDfKS/PWXJkyD
7fYO8xfuVKH1lz+989OjQUdW3Pq9FmXIcEJxMD2FBs+u6R1Xpech8aFP64Q+
0+BJvcJCT2w2isjx39DfRoNZC4conj9pyEF/fVXBMg2uql+6/vmPP+Lnebn9
3WY6PLUmuU5uvIur58Irfm+nQ0Th/Z28RfH4gKX+SoPDdKCKmmptScnGkSv9
dqPTdKjqnw+SDs3DFxsu9py6QgfJ9f0tp724/eh75YNJfnQoXvfnU5wrxo/e
8mj8i6CDikwnJ0+pFJcAK8HlOR0sT8TIFb0px2mKB4cGMulQr6T7SVa2Cl88
f73K/BMdHm+RjdJPqcHfR65Hl1dw9y+1/WAuXY/PaR0fv91Eh9Ha6XK5S424
wsKv51A3HS42WX8aP9GMN/fxi8oN02HdVa8bfX4teNVZiVbhUTqstnrJQ0lt
xaFb6/77N0mH0J2M0mNVbVg9+9u9qWk6ZFP8bsJIOz4q1Epi/6JDma+fW9iK
Tiw/qGHfNU8HPr61b6bFuvC+rdWD1Yt0COIJPSyp0o2fBrJe5v+hw9XZhY81
+3twi8moWhIXf3473JBu3osFh0vTQ7j27FSsetO+D7fen464zF2PcO9E0E/H
fnxYrGXFce5+DPPXCc1nB/B5F6vHe7j+XPJuSGo7M4hLmxVPU7n++mpJOn62
HcKlD5X+rB2hw+zL2l2yMsM4ln7kCs8Q/f8oOO94qr8/jvsmlYyU7rDvaFuR
QuK8k8hICVktI4lKlIwiJYmyKikiNO0QknTMyN573Huti4okMqrf5/fn63E+
53ze79d5n/M5z/u4jwP/yVaT0uNYeKbwr+G/dibkLXU+ObSWjZPdePyF6plQ
WpjxbO4GGz+5U31JsZwJkj6PM0In2fj0zQu/zhYw4UrW2LIlKw6Wq5baVUrM
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
b4k0S3rBJ8H/AUNtdnE=
           "]]},
         Annotation[#, "Charting`Private`Tag#1"]& ]}, {}},
      {"WolframDynamicHighlight", <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>}], 
     DynamicBox[(Charting`HighlightActionBox["DynamicHighlight", {}, 
       Slot["HighlightElements"], 
       Slot["LayoutOptions"], 
       Slot["Meta"], 
       Charting`HighlightActionFunction["DynamicHighlight", {{{{}, {}, 
           Annotation[{
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[0.5, 0, 0.5]], 
             Line[CompressedData["
1:eJwsWglUzN/7LkplTczWPjNI0U6LlvuStBFJWoUUJRERKSEpLUqLyjcJbZSU
lKS47fu+7zVbaUEpWkT/+Z3znzPnzHnOfe+97/vc976f95nzoTpcOuq0goeH
J12Qh+d/vwndQdwvAXj+/2N7dy1tnIvJK5Sbry94I1GRh+8kgwkw11F7Snsh
BPFd/WXmycVp89eXXi5Gozvm1HXTXOyu9D3BdD4efe0bnAoLIcBvBiej5OYL
JPLlx/ojoQT4UFSau3EhGX2+u/rWrocE0KwWChS8/gqFUfuPaYcR4GeFr07s
bAYymxbKPRdOgE+rsn68vZyFvBtViz48IgC2ybeSvv4O2fz3O1I2kgBHnLfX
SO5+j9L+fj9dHEWAN5GhpnU/c9Hma0XHvR8TQL4xylUy+wO6mcqXZBNLAI1N
3xOF3T4imYhm8cB4Anh3ntfO5RSigoPDJe0JBEi0mo04/uIzWnIIyTR4ToAe
e1a3lx1GQsfarz5LIUDvPc7lSOcSNJ/d9dXvFQGyFe3yTfVLUYzcwfaHGQQw
E+PXLqKWIUX+ve7kHAKEPd2eFt9Tjs6Q3vTG5RHAUy6okz+vAu1yPK+0t4AA
8wIWnRsfVSKbmlxYU0IAg+7V6cv7q5HR9mjbiFYCZJxN213+ug4lOwy7nOji
xndLNa7xbj3Kd/gratFPAOtbl5ZtrBtQ0K+tMTUjBAjfGu45tqoJfewZvGcw
SQDnlhpdVn8TqjzRbjszTYAKeqqOjHUz8s/o3d/1lwAbbtTuzJVvQd+b2c+E
+YigvM5RJTC2BXkrK127uZoIR65xbFbztqKNFzecYJKIcHqsUYvc1oq2dJ2K
I+0mQlFdT6WIRzv64x2gPKZNBLPMlMcyve3Isfy1+fR+IqzakynSCx3o2KFj
ca8siHCLGaS+fl0n2hVid9PanghPFlQ7gq90oh3hHo77zxGBI5G0Jr6rE0kk
FArWexGh/Hv6W9fnXej31V8Z5+8RIezKv+xtfN2o7rqtrMFDIrSs0PQ8f64b
Wed9/PL5BRGePQ/tvrOzB9159KrlSwMRJukC9o+zexGP0st1zr1EMJB25DEi
96ENDXTkOEqErlB/TfPbfajUdsMD2xUkeCJL7bU26UefXC/lWguTQPXHKZlD
2f3o7T5lnneSJHjYV93mv3kAvdZxvXRZmwQNB4xiMnsH0GSAJ2PAhATLAnlX
orUH0aX7QxvSbUnw4f1h9YyEQfSo9UCIsw8JNPWcNY6eGEI/c9a0ZJWSQEcp
nnfKeRiJabKrTTpIcEP8Y9SRmGHU6lz82+IrCQ4cMzVXKhtGP46VPC/aQIYq
pU8cezEG+n7o1LL4FjI85/OSTz3AQJauRlYzGmTYGsYMOnGZgfgUnkwKOZLB
4GfoxJoKBhpoPShnepMM3qJihovfGMh+93cn4QgyLNYKORkQmejb5k2/icVk
8L892TzuyERz8nV3nbZQwGo40rBqgYmEzNe/bNWlwPp1vjESEix0yrLlb4M1
BWxd3jWnIRZaWx9jdz2CAgaPZPt1/VhIcHbCRPYtBVZNkoN0X7KQ0u9Nhy7X
UWAF9VinZQkLJYsV8NcJiAKTNun5aYmFKHz9DsPbREFo5Wo8S2aj4GPSolEH
ROGGYc1DuV1sZB+T2c8+Kwpaq598NDdlo/ajCiZdgaKw3Vyj+dw5NnK5tTjj
+loU3oOJlP1tNjrQsM0suU4UQpJXvJaPYSO+Ms1EfhEx8Pvrsla1mI0e3f29
RllNDJKSHHws2thoyxURaX5bMZgmxprJcdiItaDf5HdHDHZJalLSfrER8fn8
eHqqGJzQ0txUwsdBQVbeUr4NYoAOdii7iXDQUAl1emlWDLJ4bSjPJTloz6Jm
gYyEOLADxaVNZTnoYwvz5T99cShdk2PqqsJB8UbFaXcvicM9suupCU0OsvQN
C81+Ig7yFEp5CeKgXYeiBoLLxaEjdksCQ4+D+Pf+GN8wJQ5V0n/KdQ5w0NeI
xnJdcQnYu9BXX83Fq0281YlGEjArsYbnmj4HcebNqqI9JYBP58rZXfs4SCXu
vzcfkyVgIja/al6bgyhPGFqnmyWg/3WiO1LjoMvXDsvELEmAcIjH3ffyHHQx
4fouC1lJMMsaGTakc1DsU11m/HFJsF+dbDZD5KDayJdO5/wlYdbqrGeqIAfJ
2dxKzc2RhNDLvp0W82y02kJP+w5DEm6n1jNnuXweUis9XyksBbo0lT+eLWyk
doEleQ+k4N4P36tNn9gob7fnxDt3KailMZ5Nv2Cj25X8q0xfSMHS/p765gA2
4t1brHe0VQp+F+XbnHJho9JuzZB+XmlQvZ36IcqIjQpN2vZ/EZUGxc97Xexl
2EgslJG/fFAapts/ZD/oY6F5CeJlq7PS8NfIWqn5HQtpquZdb7ktDSHF56d9
77PQi0m95U3vpeGyfTuZs4WFplq98tvrpWHtk10DAVNMJLr2rFzyiDTET+V+
dCxgIoLOepqtKBU6puqev93HRCndKis0dlFB9l0bSWglEzGvqh9bb0qFl1Oq
cT7FDESsyvYKv0uF5ng+lSgVBgpdxW6Vj6fCXGbjY7nRYSSz+0fGm1wqFNju
yC+LG0YOd+ZDlUapQEjQ0+rnDKE7I0fcZHho8E2qgm9ObQitPWByj0mmQQw5
YdUqv0Hkn2q3JtCIBuu61uxbs2oAdY9ILZ46TYNUp8gD61A/Ssnvkhq+QQNK
SsMRsSt96HOxTkFmKg2uxb74E1HZg5x6AhsmimjgXIdPSXztRlGHux3fttIg
N1j01uLKbuTtRfuZuESD+TfAL7KjE90z/Wz9RZgOlothbx6odSCbx+O7YAsd
nIxORNVot6PC9149h4zoMBurtspgTyuypy58rLGhg8+K/w73KrcgbQLBIMiV
DrsebzjA2dKMThvnLvl704G+NadXTaYR9WnohOYF00FgXJhxdqkO7ZIRH9v0
hA7Rf9PIjTU1yGhi1+EnqXTIFPw1xgmvQtb1KsboPR0W9npdkj9cgTwLXxUt
f6HDROOMoqxgGYpaNTvSXkMHnQBSs0NhMXr7uc2toI0OJ9auvtHSWoQSIe3U
q346JBg0RcRv/YjUOg+gBDYdjgSZPTNzf4/USlyWoybosKFj1dwR50xUxB+2
MWiaDjFMiYQP7CS0uHjcyes3HYz+mzZOz45G8w1Wbg6LdBjxpryu+mCF5reH
6an9pUOJk8u+bojANXdEMoSW6bBVN2XXK4GXeJua8Kc+LmYEXW4KdcvA0n11
Am+4+MTo+R3t53KwUcDWzJv/6JCfZmVdQcjHl4N89hsu0SGQ9C3hDC7EzjW/
vhIW6KCgd+H1Z+VifMRi227OLB3udH1Xv3inFFdqbN378QcdivUFC+XrynFs
t+DziDE6OIiukHPZWIWjz3fYXWXSYa9h0fNHR2swwYj1+0wvHbxHYqtJYXXY
90/5CccWrr97u7Q8yxrwpaq8Sa8qOniEs5gyP5uw863/nF4Xcc/rkk9K59oW
vOvns4m5bDrQVnMWK8RbsZyS99/zyXSw8Ro+kra9DX9iu14SjKXDdwPDin1K
7Rgxxxw7H9BhW9v0kTOqHZjxeadxnxcdmKd5hzuVO/HB5/4NEue5fN9SOntx
Rxc2N4rtTramg2q/wI+/Ut34ipvKzgQ1OniuVJlxXOjBH5jyqhLcfNyh+/X4
7EAv3k1VUV7m5muq7PaoiaI+XJ4W3yEwRoOJZM1LyS4DuMbv+irddm5+i/BZ
qqsP4oorlWq/vtDgjL1uRPu/QZxhltTDH0WD606JAgs6w3gg9EXfRR8aqBFp
LZlxwzj0zMXp6040wLadf49MDePnzgn5D9RocDp937BNDAOXH8w/lihJg0q+
jOliNgPPXBbo8lhFAwHOGO9mJSZW/OA5caWDCoJmU09CPzNxc5S2QUYRFRTt
jW9+WmbisjwK8XMSFfZOrJnk6LJwZU5SasBlKtSqV506ksvCq4NY+cZWVDA5
W9T2bJyFxx6d7uZBVFj7IvWJkCQb54tQXlqvpULhxJsQGx82vmrkMrVqRhoW
N1rZWqSx8Zq1u2MLe6Rh7tPq14+b2PhGN9vep1gaVutv/rXtFxsbrX7QfShN
GlidwlQCmYNn6zbZ7wqTBl8P3zMXNDg47kWDyK5r0vBOuUtL8zgHqzYOsI7Y
SUPZ+K5zDy5z8K+v/EFhetIw43O342wwB7esu3F/Sk4a1J7tTmQ852D33XXb
b4pIw6hq2h/+PA5OKBKRPjErBexdo+qMSg5Oz3p1iFouBYJ7Fd7e6eRgf2Nt
swPRUmBt0/l5msXBfxXZei2OUpBxa6hs7w8OLm6PZVXuloJD+kubfOc5WCVh
9vEOASm4r0P/+X6Zg5UTt5lLdUjC1cdDJ0z4R/Ae8xyTxCRJKPz3YvK54Ai+
+vZGW9YVSSj5oihdITSCJ0Sb2o/tkwTh/tQD1dxx36Mz7REiktD20+fqJ+58
yx6feReWBHhf2n47g2cEK6lVCQznSoCOput8+gIHb4044vE7QAJ+1eyWq57i
4EmmoFWWtQR05VE2iYxw8IxV2L218hKgWrjvTGwPB59cdezGBl4J8Ir55nW2
joM/OmRfLugQB5VVx848LOTgY74t59ZkiANvKn8XJZ2Dt+18vGnVXXEIfJCi
Ronl4IJ8vZ+vLcXhSinfwzg/DmYJ7TSaUxCHmrORD5MvcDDvWWnZ76vEQbOK
Em1kwcF3Zdouhw2JwROp6uQobQ4+TtvU0fVRDPR3eFwIo3GwlPdoT02kGCx6
ie7VF+BgwmLw0Bk3br/zLoFWNs7GpJUG0imGYqC492WhSAMbP9YsiKLwisGc
p4zYkTA2bp5H/xkPisKlFG6D5cbG1+xsHkgWiUJzt7zGQRM2vnJCP+W1lyjs
Hzk0doSPjauKFFgnrEXBw+bgngtDLBzk1iSXpSkKe+zadicVsPDGUx+VaUsU
qNdihd5zZWHhp6k3YZAC09VVE1p6LKzY+Jk1W0yBb1Zvl+VFWVhrju8t+QEF
btZfvtVbwcRUra/6/hco8MJ06OuL/5h4U12Lm68ZBegB2sKfLzJxphRvHFGC
Ahvqn1NWEZi451RsSvZKCpSs+qeORhn4hU+Bbcs4GXZsfBnG/MjA0nklxc8+
keFXnLmKjw0D/2rqOqN8igxDv1Ndb8cO40q081O1MRky1j6rDncaxjm29dWd
u8kQPqp2T0F1GMs8s9l7eB0ZZgy/nTv43xCeS2GOe5eQIGHjuGXp/AAWHP6o
EZVFAru/JwwfhQ3gYpWLoiLPSHDNOGj1O/oA9tq/wQ1x9YVHyM8+3oP9+Nx0
6g0ZHRJU1nmf9Hzci+OSYu7pK5LgsIRj7aB8L05j+029o5KAsufpQltFD753
mlHhLkCCxbZTIh6z3fhSVuGZM51EiL/Y18M62IUvGHnYt9QSQaVdt0OE2YkF
H1rP3MNEeD3lSR7z7MRa9f2Xcl4TQa5+q3psYgeWdM/xJ97l6rHLWf6G39qw
QAvtT/B1IlRTUqZ57rThpxbJL7UuEoG1/eFjT5E2rN76Ov+QHRHEnsveTFJr
xSk2+Q/EtIhwlNO33cCnGc8pJU5ZqhLBIdmZKL+uGVut2e9Vs4MILtOfD1Zq
NeFs394qQwkihPfI8UTcasB7+vWvJq0ggtSXlS3Of2twd3JDl8cSAfpIfP1Z
4jU4IXLXY4/fBCArslQLtKpxtsKKuH/jBNCg/xGge1ViReFnqQ84BHiMvoSF
xFZgjR73F2iYAMo2j25U5pXjzHEtmkonAUqcX2uXTZfiA9/EYy+0EGBN/tmJ
0A2lWPfZbEdLPQEarvGlaciX4GvuoyWi5QTY0tXoHNL8Be/Yx1P6JJcAkDAX
sa8wH08d9++QeEeAby/Yhg2/8nDpaRHDmkwCjFxoFLZWysW588e/RqcRIP2A
9EBESjZ+KNtyKTeZAK/Q5o/xxZk4m6dZaPEFAYItc8rM1NJxkFaS5e+nBJjp
aEh9T0vCQpckA9/8RwAdl4iARZVELOd+ujgwjgAFDV+n71Dj8LrYjLrAGALQ
hOz2kTdG4Lxf9tfeRBPAfaOhSdFKfyxAWnr4K5IAOQ9U5f0Sz2F1AclxhwgC
OC2m95g6uCPbVE+H2XAChKElM2mDAOStX9f2Oow7ny3qNrozEp0vXCly4X//
90RGvhSue4IOH/phaBVKgMJBmyN33z9HNVc6bS+GEKC+w6nN5E4y2tceofo2
mABifz/PtZu8QnrBgV9IXAyWRV1CxDeIp+fVVHoQAfzkicFdg1mowNm97BwX
Z5/+7xGh7R0aXxzebcrF+00PdMznvUeVT/0P2nPxeNwCcW1cHoo+fmFjHBdn
tN/o1PfKR7ZWStF/uJjULxTx1LoA+SVNjT3g7vc4jly8SrMQmSkflweufzZp
3d03SZ8R83G0L5Xr/3VFlsmP2S8oQOrCSnlufALKzvsynYvRx8s7Rx248ast
c65aHy9Bd+Pzbcq4/Jhsi3S7rleK7F/djzbl8rfGy8V6hVIZome8auaLIoD6
7eXTv8TK0de9LUdGuPxHNmtlmghUIGqkud0M93wKLm06wfOzAhUU7oSdTwhw
q18nfH1/JWKNGTJozwiwap95L/1tNdoatNqC8ZwA1jnRRGpMDeoyUljfkESA
r+3iYo63alHYRsm/8ukEaPzs4J9mVI9E3MtIydx8+003709QaEChEuF7jbj5
2OHNx6wQaUTd2foNtAIC+NzSC47pbkK3FHz0rD4TYBMxwl30RDNaKPOf/lJC
ALvBhG03GppR7CnLU7Q6Ajxdp/Cu/U0LitPffla6mQBSvdLqjWKtSBJNyR/t
IMAKw67XJsGtaFWgRKs59365yZ/0qHJqQ7V7P27dOkKAGlkLg+LWNrRLpVFW
/n//Zyle5VVB7ciTnnqDPU8AT/al2qvEDtR9MI0gSCDCc/+iTdu+dCJDs9bk
VHEiKIy05ERv60IHn9j88dtChJmr1BuOYV2IMRi3emEXEQbsbueL2nWjW5Of
eqN1uPVNHbIWS7rRPe0dL64cIEIvaUOVgkwPumt9+OG8FRF6rK6k3P/Rg265
C6xMciCC8Ozrcy+O9qKEiB0boi8Q4YOdDVqZ14t+N0n3mnLrX/OFarPg631o
dCnxpMlbbr3rOUnVnOlHV223ZBI+EcGnNMLfxXQAxSmkaShUEuHAtj1dVa8G
UKUKb9ThISIkzoHuX5tB1Fqapm47SYThZf97dTmD6OFzZsWnBSLUIzvSB6Eh
VLgi6bE3gQTBomMKDblDSLvEgDVEJ8F86rfv1/mGEX0ySeWZCglyghxj1ykM
oxLDOHVFMxK8m3qlVnh7GPVOK39tjiRBhlnAo2ZxBmIPb6apJpMg37i9NW8f
A1FOnC9dyiOBUwJtQMCZgTbeF7Zq6CVB1seH2exsBjo4vmWi6xsJUo/dPevc
zkABu99JmfGSQenpUqHxHANFdY32xciSgZkBLWJaTFR+5feWc7pksBLWvb/C
jokcXIMjMs3JsC+m44u6DxMtvJjyTr7NtU/wkvP5xEScdSvbrGLIsNcvX8Wv
m4me3iMtB2eSIYt+9Xz5LyZ6Qj8R6z5Ahm/sTyfG5FmIT9yKLfObO34g+XWJ
IQvdLw+qdNxAAee9u/VKHFioe8p5h6wsBeSd7/oxvVmo7HHHX089CgibXXwk
Fc1CanEaW4/YU+BAiLPTlQwWOscT7f/Bi2vPEq1uL2Ghb1dlbFVyKPCMd+rI
2wkWCn0v6GXSRIErBcY85GUWihLpoyxMUiAq8vQhz41s5LVBfVF7jShUe96d
KaGx0VzknjqynCis8F6+OqPCRom8BOUwI1HgEZcTXbmPjc6uuFXyzEUUvLyM
p74eZqNkiQ0rDgaLgs1SfvVTOzYSs44+G5shClN8vBpEZzZKmVc87NcgCosX
dzw+eIWN7jzyWLV+ShRKvm9YUPNmo38JVlhrkxik327TqfdjI3WWZNRadTHI
Pub3b0UQGx1tWn/7rq0Y3P7VFNPykI1OGEs5xN8RA0E3HrpCBBtRTH0XbVLF
wC3j3+31UWwUUPWHWVwvBkY3k02cudjK8vijhhkxOJGowVGKZKOVL1xM74qJ
g4vQ9osnwtkoaEFHp19PHJwklmuZwWwke37h0OAFcRC++So5z5+NxrbkoMAY
cSjHv11qfdio9wPtaWexOERuvW1G8GCjjdcht25CHC511toGn2OjFRO5T51I
ErBNn2MhYcNGZR0kVjJIAH+Tb1ePCRt5nDvjdPm8BKz2W/w+oMVG9X+rKmqi
JeBhjrKJlBwbvdMvdnuDJaDqv/O+UUQ2ylzSCSFNSMCcbjKvEi8bTa+pXSdE
koSJQg2N8TEWsjOO/3DNXRKcPn6bD81joQF7b5eJBEk4JGW88lQcC3XqpUX3
13H1BNjWbfVioROCp5ToslKgbDcfYL+LhRrcEsrcrbh6pdN1fdF6Fjqs9GK9
3AMpaJ7JfMAYYaI1mwKP1n+VgsCwt4E2j5jIM0/FvGOtNNxlbQ56cpqJfuw7
/u7SVmnQPJIQeF2JiX4+22BMsZSG3sstX8cqGUjAYGUy1V0aPmSrlLiGMZCr
dM9FgyBpaDcdizlnzkDvHluY9BVKA1+slMWbjmE0Ej3UAB3SsNB0eZ4TOYz6
KGte5nyXhkmDyW3eh4aRk/n2ojQqV0+2tCaja0Po7srN3/cFcvVoSJHvs6/9
SGL0avn151R4+DIjoUi9H3E29h8MLaDChv5nAlZ3+9Ahx9w9eyaoYM/opa3l
60WUzaHrKlfSYO0b0T87dXoQb5DQFaI4V09r8z7vc+9G6sYji6MmNNjdlorX
VnciwcxjJjZnaDDUO9CbPtGBYOFPqMdNGoh9ElJYv7oDPQz9sconjQYdAhdS
vNTb0KNg7Re2n2mwoJ9z5/2BVlTGaV8sbeWud4giTjRrQXx9aw8LLdEgQcix
LCerES39U/Lr3kAHgerDrFWv6xHv76npDXQ6NBQdlG59UotOOw0nxBnQYRC1
uO0+U4kKwwLf9FrRwYzH/Ve4djkybXBKP+tChxte7cdG1pei66NWI+gBHXaV
t8VHQSGathc+fzuGDo2rfsaGFH9A20iSnt+S6LA31XB6t1oOGpjJ7L6XTYfW
XfFrd+lnIJuygGztIjpEnLVeDF/3Ej18cMVDpIoOlJxPV0+FR6DWSMfZ5WY6
SC9puXrpm+FwFTMXnl460N0Msi/WReFc2Qz3DUw6XIvynX5imIQ7FD8Q8sfo
cFLt9ewH70zcssGzTHOKDit9rgvVdL/Hxaz2jKhfdPD47JQUMPMRP/M2SC9Z
oIPWy4+Wfmu/4H53E8OSJTq43f16YnNECX7rNFv86B/X3xvflT0o5bhrznel
4jIdHCsOZEU/q8QHvJm58dzxuLR9Vu+kanDZ7hNKXdz5SV57R1Y+rcPXwhcC
mNz1b/q/XlEr0ojXu63zxdz9h7+8uvVybzOOf5kf6s71z/DxTY0Tni24V9Sh
e57rf3660u09aa2YPGCmZMeNz58Z6spsa8N//I4IJvbQQfyXnALPUjtmj/tc
qWyig/LlNPN9Up2YMnWU3F1Oh2DevyttdbqwZc4fld6PdBiSydfiOd6NLS8v
+LVl0GF7d8a/CecevFdBz6AugQ6dLjz+/dd6sbwcR7UmjA47Lcxso3368L5v
Ws4dvnT4pDQa3OvTj/V7jvNq2dEh5uEvxn6XQdw1//J0qhEd9OmqxPUWQxhL
lEzoqdGB+caJ3SU+jGPJCjoSNDpon9+6yT9kGJfq+ktrr6NDstTzJZ/fw1h1
4/576XM0yJwOPvThBAO/y+x2vcKgwXrtmh9bSxg4d8O8nPp7GtxYoL4P9mHi
3mK/3YbxNNi4eMrOs52Jje9cEO/zo8F2Xhe9+9tZ+FTaUveCCw0Iqz3j82+w
cNMDM6O3R2jQP2jiuqGChTuFbWRXqNMgdpet56N1bPzG1GrtMvc+WlJ5t8JR
Nm7v/6xJ+UqFvrg1uYbNbPzkov8bwwYq4Duv8XshDv7m0OWin0MFA9wUeRlx
cPNDqwlSLBXUdipbh13m4H2qnmervalQnXH4EOk5B8tlp9fYn6KCUFZromgd
B5v/VP/E3E+F9SPWJ9N+cvCp3daRtrJUEH7/9VQDcQRTeDgnm9dR4ZrNStkE
9RGs8teKZfBTGtqORXXIWIxgmVVG4dWd0qBamyx4+9IIhgC5B1bc+jY/s6Y9
N2AEp+tfS/6bKA21G/6l9P03gs1TRNw++0vDgbepaqvejGDimc2SCS7S0OiB
PQ0+jWAN8pu0F6bSUDQtfzunYgTPNthlNalKg+3Sq7s2jSOYpHkqYgdFGr71
O3462j6CJzuulF/5KwXZP8sc3naN4DrK4PBCtRT0Fgmk3OkewVdWN4XOREuB
DGfpUX/nCHa4VGZ19rQUjObGb+xoHcFBlastrBSkIN76McunfgSbfFtLbPoj
CcOhFaEjZSP43aa3H5tqJKH5we1jWwq4/l3ecCYpXhJum+8/rJo5gv+Gffv8
200SDtBMpr0TR/D6gP7JepAErdo257WPRnCP2lzF9s2S0GEfnfTTdwSHGVA6
1n6VgC0Pmky0L4zgeyWbTnoXSYDx9/aK35YjuOvMi9TlsxIQpnD1+E85Lr+z
i6lkHQlQ3F9ceVBkBCv5d2SWbpIAqP9cYDzPwat/2fU1lIqDRcfbiFPFHOww
QghUiheHOYlDLuEvObjo55yhzFVxsN6V/Cr8Hgdvy3IVb5URB8bTrZMK+zjY
7MgO04AV4rDFT8+TKcXBtcct+xoHxIBYq3vt0RIb1wanFojFiMEZz01Ped+z
MU/T/c1SHmLgUWg11RnKxuu+3WbmHhGDKu2YzXVObPxH+U1h9DoxeJB7X0SZ
wMabfaP+9k+KwuNDtcycCRY+sxhEz60XhZntaz08SljYWzfv9eowUZgwix5v
OM/CJbriv3eTRIHvhbVJah4TW/VQddsWKXBD0YJvMICJCeY9Qr8GKbBza0bE
A0sm/nCQva34FQUCuhaFD84x8PRmnV7DfRQYo69BYsoMfHpIhj3I7S+1TjZn
ef0bxrcPtbRObqTAh5dL85frhnHo1Os6FxYZFh10HMFxGH8nCy8XhJBB+8G0
yy36EIZgjgjDkwzU2yK6bz8OYvV6O+YVBzKcsDNqOnhoEPurCe9u3kOGewFl
lyeuDuDXhxur909x+/U7nT8OfunDlgvzddGDJKCtJIWGHO7D/aVb+/c1kEAK
pPaeGe7Faz+6bnqfQYLYq1d0p3h6Mc/AdbdPF0jAX6uuPa/TjZXcT8aI2ZPg
h9jX6tzGLnwoY+N83WESpNn94VU4ycVURz3CLu7857jyzO1OPJpkLy3DQ4JA
h8u+uz63Y7qA9uahGSIEbR8XVjzYji/+ULzdP0qEyN3hz/71tuHFZzStpGYi
bFFot5GZb8WCh4Nm96YQQemsesaIUgve2vt7q0A8EcT85CaavzRjxZ77lkIR
RDDb38uTfLAZx1nsZRbfIsKLrQYmYs2NOCxUrZppTQSvnvrm49p12GDeWNDT
jAiGDHEvFctazPZ8J4aMiPDFXqiU90oNvseXd/+SJhFulnN1RFoVbu6FRVWu
Xjy87Lf0XqQcpyvc1j/F1ZPn7v3jxMmX4QN9iteK1hPhcWZaf7hhKf71HHF4
VxBhzMb9WqlvMT5uP8kc+0MAlwPu4at3YdyVGI2WfxHg8FuZjS3nP2O3t4Ol
WeMEKA2oHtHuKcC/v5nUGXEIIKdyT3dK+CMendD8vZ6rf39oVfjwGH3Ajcc3
vyJ3EuCCidVx8085OEBcTkq8nADhLNUT/Ppp2I23G/MWE6DJMsq0sDAJuw4e
619fRAAKr6BfnOpz7LNqhP9ZLgEIBwTC/h6KxB6CHFsprp63kHl8KiQ4AG9N
uYkruXqf+GWLA/WvO2Y93nIxII0Ael2vJBUe3EPvfr6mPUsmwLrWiEN6JY8Q
fTk+v/cFAYaZrieNCmPRRPztuyVPCfCwmJVT2PoS9U2+Qq7/EWB1qVtFrnEq
en42eUojjgDKlobT7OLX6OmWa84omgCb7Hyse82zkbFj/pejkQQom6An31LO
QZcE/kSHPyJAMOyJmFmXi4Tydhb/CiPADl0XX9WxPERr9RO9/5AA0k3OlbvK
8lHy8o17OqEE0G3LKf4eX4DGBOuHJEMIkBeqUWLlUYjy9TwpssFcfj6RyeeN
PqMVDm+k7IIIQF9xfKOoJEZNeb0j+Q8IYBd5YDHrRjGqHX3prM3FyVss/J6c
LkGe0r1JY4FcPn0bUYVRKXJKDnyKufikEn+TgnIZusdi2X7h4gI335oWUjky
/GM5xeHiM7erK17/LUdyb265qXHX479y2DKHWYGyS6Qms7h4S7/i+tHKSuT7
bU/wUa4/ejYC1/XSq1D05uXz/3u/SiSuVLQstBoVrm/5sIkbz0CMs+/pizUo
vetgvAo3XpdFJk30cC2iKRuaeHP5uCtQ5v9VoQ7V5HX8+8blS1t2pXj1unqU
bms4E8zlMyml3DZ3oh79dlJ3/R/fjw8J5byqbkAN5X5v93PPI6fTOfB5ciPa
ybRc7RBDgBPpJbqxt5uQYJ9aSzr3/ILOXxEt39mMlmnzNlLxBNC4KHlK/Ukz
So1o5StOIIDCE3Uynb8F3e06rfzwOQFWLv8Z8XdvQVWXFD++TSVAzVeLAy/0
WxFZaODnynQCxA1ErrHMakVnMuQvB3LzTyjh8BEvchuKz7FQE8sjgJH2zvCF
r23IWet30M4CAjwR+xp79Eg78gkf3HPxMwHm2su01+e3I/0kx7X3Kwnw4Duv
ZpJfBzILPnjOto4Al95cunR9tAPJe2yNdmwmgOV16+Ukk06k23+ILNJHABxG
if+zsQtNHfrQnc+9b4vnCo2pV7vQlnNWOlEjBOibe/hfdEcXSt3oJfD9JwFe
mHbwWMd0I06k8apLCwQQrk27nPyrGzVf3tS/nYcIk+ePq6kc60FnotXvGXPr
w/Tbz3OCG3pRWF+8VC63fqQu2c+auPYixhmqrI0EEbL3nterqOxFd4ryTp6U
JwI1XUXf1LsPVacvBxfvJoKRKT3Isr0PjT+ak3LQJcKNqHMQvLMfeby+WHf+
CBGqxP9ct+/tR8PbvX3eXSfCB7KR0Mkdg0itRuOD710ixH3Mkxq4Pogufsye
CwkhwruetyaBZYOo9/Fs3vnnRJBSMig/ajWETCYbzHQziJDvrHbE7cUQaiXc
UT3+gQgs6XcXU8eG0PiPMmTZQISjfZylHK1h1Lqe5/2+HiJ01Wr7XLEfRnb7
nf56coiwuuFPR8GdYbTk+ZPx5R8RrKabaN1lw6hA2/PRd+7zwfT0GlfyfgaK
FP+iq6dHgpljbrb9Dgy0fqd3/7gZCW5GjVcS7zJQKkX0iIY7CZzc36lyChnI
PD10ZPg2CfZaBIpe7WagcorDN0Y4CRyPmx64NMudP3v+389sEri9tXdKlGOi
KkHNSf5SEmhFNb1o3M9EPSZmG6+3kUDCkJZrb89ED98dnfGaI0FuaMxSdDgT
CfHPvVu/mgwPPsTV7EpjogjtyXQBCTKc16+K2/6Fifba97nv3E+GyLfnbP+N
MdF1hYzjtlZkuNorLN7zj4m6bw2kzV4gw2uH+usLIiykdbP818JdMgj9IT2y
3cZCAkkCbRdiycB7y8nljwYLPexEbaaZZKiIPjrebsxCt1aEBr8oI4OR2nAv
y5aFyrPwxcRpMszYSj985M1CRp6mpYeEKNBAwLpbg1lIZ7MixYNKAR/Pg7oD
sSz0YOnDio17KBC1hZj1PpmFeLeGrpE1p0C0o2pEUjYL2dstFhVdoICjbl1x
WiELfSnQedoQQIGVhSd/fapgoTcpJbInXnDn75Qq6WpkochF8+ELRRSwu6/9
aL6ThZI/mOz618Xtd7oOvyINstCxjy8jRWYpUL29WEaRzUJKS7ynMoRFQXdE
nV9zjIXWteK5GnlRUDfYukHxGwud9W1Kv2QiCnOShhOrp7jrFb34kuAiCkNJ
psTKaRY6F/fL1eKBKDi2+7Gsf7KQ66YnA7FponBfJ9gHc8ctRSiKZ6tEIXhZ
k/HjB5evNadcS0ZF4fT6u6OsSRZqnN8Xki4oBhEV57Wiv7LQo41LHjQ5MTgo
qH1ygclCqr2Rv2QPisGAXmbGmn4WyhBXrim5KAbFtXpHytpYKMnFMXw8QgxI
kg3m5FoWOlpn0picJwbGvf+iV2Auv9NVtSu5/eixiP0atu9Y6MnVG2Hr+cVB
LjSA/usFC33f12ZcIS8OBz1Kz1Q8YqE1y9t4t1uKwy7f7PbiWyw0umPfbbW7
4jCiS6H3O7NQh9GC7VSGOMxkBzStOcr19+DkmTMrJeBB/O6bXpIs1NnAeCCq
JAHtR1Z9SuRloWvthPkbJyTguy6w0plMdPVVdvSWTxJw2tr4AHrGRHVJ8S5u
YxLguSzFk32DiQY6djYdo0jC00PFWe1HmGj/mHn9z5uScHZbSqngIgMRLyQp
vnwjCYcl6tOXaxnINX7xHWNQEsaevE/yesJAmiaqxH/7pUAiC6+tUmAgvaRM
y+YbUlAo5St679cw0hPyvSiRKQWTOn3BUQXDyB34SwLWSEPdEamx+5rDqPHc
k59HtkmDc3LyVMr4ENp+4fS00V5pOPdLJ/Kx3RAK3Fr88cN1adgzUduyU3EQ
reb71PeDIw1b2EP3gx72IZmd19pTeamg/fJtHKmzFzmZKb0/LUGFhgvXEx+R
e5EhVWG66hgVok465CiHdKNjOyx+O7pT4fzbP03HC7tQNcNGcSyEChn92UdP
czrR69u6ZoGlVCjp3HhQV6YD9e0/E/VogArM5vP0Lagd7XLMLjk5T4U/rjbn
iWZt6LcOp3GHPFcvlxmvcj3Tggoab968EkmDe+/FHY8G1aKkfa0dyek02Pmw
3e7UyWo0a/BV80gpDV6vT+D32FGJpBtYd8Z+0EDAsPKvUloJSqWXbyzjp8OW
mpNZrllf0MiaSMo3UTr0XD9Uw14uQG4aws9X69Hhv9rHPFoe2ejtYNq9cQs6
qJ0NJ0YppSGj6ryimXN0cF2n2ZhS/h96knJJUMKLDqs0bz72mfZGPh6JF08E
cccr380KcILwjXqdg2/i6JBR++a1+d3nWJj24wRvGh30wv3ZKDYdS34/VHss
lw6pYcmtBLscbBs0sSOxmA6+n+UORLvn4zb9qftpdXSobe6yLr9UhMUNXD4n
ddDB/UHPr4X8Ytw6xncobJAOcwFOJR3qZfiQZK2WwwgdknwPp+Z/qMDhuhV0
sW900D0nrDqsWo0f6a/UyPtJhy8WGqTwt7XY9m69kfwcHUR5rjWv3NaA9YI3
NtxZpMPNTX+tfZ804UaZ5b7MJTp4vn3wXYqvBbP7szTf/6VD+/Nn2RUarfjK
2lnzR1x81ddXx/x8G34+v2O/Ptfefebjnwtx7bjLULmpdYEb79WxvQWlHdhf
5Yjjnt90eD3+Km34aydWbjsq5jvNtX8vaR62uhsPvkt693yCy9fM033uMj04
721YQAqbDs9HiiPUUS/2Gn4d86ifDqWeTwvizPpw6thlz7NtdCC2+NSZ2Pfj
h6oyB3fWcO0PTaesdRrAfFv/VI9+psN9i0p6vNMgJgwkUBPf0WH/5Mf9hSeH
8MB23VXWyXQIfNCf9p/sMB6xXf+feAwdnsqazY0nDmNHu9PnpwPocCjnHTVf
hIE94z2chjzp4D1j+mfsLgPHdM40f3fi5gdnItH9GwOvPH0Sth+jQ5P+e489
FkxMtNMPid5LByG5rVTNAib2zb5Xpq1AB8FJiehTFBYW9+vfeZabj49vLYTz
NbLwhOYF00VuvgqvUOB40Nh454PEHVM9NOgXWvCZvsLG3nsPupqV0SCS7xbH
G7Pxig7ZfJk3NNh0VCJhkyAHm+9OeO8TTYOPkqb/Ph3k6nmHb3PWPjQQebxB
zvMhB3dt/mvQZkyDY71HPsPKEUy718bjp0yDse9R109pjOCPKfaHB0k0WL/v
n3uuywjuZ1/eMv2XCquyRgwNY0fwSWKnbhmLCjeXvrVtLxnB2VpD207UUCG0
h7PCcXQEC1vclat6y60H5uM1gqtH8YEJhrVQNBVy+loEZGRHsYz4Gf8dXlQ4
ZrP5YtP+URyqs0Vttz0VAo8fcNl0YhQ/D5nJk9ejgkDG3tX8V0bx+ZaMleLb
qbCja+PUh3uj2Jr7FFy1jgpfYz+oaEeO4vTum89mp6XBHepNXyWMYt9yw9sT
ndJQoL5NZEPqKN53puTYdKE0dBKdgvwzRvHXmrfZa15Ig5Ra+Hfxt6N405+s
PhQgDd9/ZsVNZo5iCyd2R6SrNAy+uT0pwLXXaGi1FDKThhXnNpveSxnFkHi/
LU1NGurFnmzy4O4X0N557Yq4NCjKCHpNcP0ZruXIuK2QBq1PrGiegFE8duoM
Vb1FCv7xjxyq9BzF7nWp8iueSUF54QuzI06j+PWJ9PDXF6XANDnpBsF8FDN+
+W0oRFJwq+R3vRAaxa4LrE1aG6WgbpPif9pc/raYO2fKsyShNvzCRNHGUTww
cvtJTJ4kJPrEBj6ZH8Hbx87qez2QhDOnid+HB0aw9C1/kY+KktA9eu/F16QR
PDNLi6PwSULbMnIv9x/B4Gf7ZrlbAr6y9grtcxzBZ4Kfnj3tLwExsqwtx6VG
8Na/r84O20gAxzUggf8PB2/03pA1riwB+/861z3o4GCSz7xzCkMclCZW/qcR
yMHa6cfvW34Sh5D3ClHe9hzcIcinHxclDoJGx2a+7OJgy7sEQpWBOPAHBK51
H2TjTy2cq3k0cdjEkXo4/Y6Nlzb7i6n+EwNeoXH+eH821lP1tuj7IAb/OCVr
g2XY+HKZrAx/tBhU3p76OTzHwpdMjxcXXRYDC4V7/n5VLOymPvmkVUEMttm/
3l3hyMJqCzXKd7NEIeIlPZoYx8Renb8OrIgQBa8Gr8TIM0wseHR/hpCHKBz6
+z0pQoGJJef+c07VEIVNbF2aUhkD32k8ce1nDQVe/cwpChwdxgInFbffzaLA
Zctbf/OyhrHk1527Qx5TYGYP3/dH14dx21lpqzVnKGDlWb/FftUwprc6Vz5a
SQE95pEHIXsHcbT3+htNk2Q4tbgZHjcMYFeFTXK3OslwXGPzyd3WA5hntYqh
VAYZnHaM8B+91I+Tff6mHLUmQ/XorR3PY3ux7O/pmAF9MqzNS9mxgtqLRUee
UupUyKAzZ0yTSe/BNf81VlStI0Pi2stu9YXd2LInaKNkNQksZEwfLfV34nYZ
myfKH7j9emLkjkqbTszOJktnJJOgaObfv4vdHXhzeqJIjR8JOPTajktt7TjV
8frRO1x9sD1q5OTz6lZs3JXjFsXVD+pdKaQu/VZ8s76Wf3krCewyzx9fW9aC
Fat53XuESEC7KJp3+3Mzbuwkil/uIIIwddyozKkBPxC+2ydRQ4TMWyVitafq
sYZSjh3pMxGqvX/6/LOtw7nnnh6dSCHCwe/XjfjNa/AjP37XmZtEaOt8sUV0
fwW+Ua1xhulOBNGcwTsSe8uxzuE36pvPESFJMtvBU7cMG+0YWqN9jAjbNNMF
tfaU4Gfv/FffViaCcQ57B8XtE3ZqtrE9J0sEFdmR0ituH/EVuTDXYCoRHLe2
vPt88QP+0LOsc0uECBmlTD6jqzlY6CHH2GQNESbWWM09uZGNzets3hzh4+qr
Qxpli3/eYPVdV4z//SbAuxCqhQY5Ba9cO8OfMkUAiaj8C02yL3BiVPKmO+ME
aClttInz/g9/GiK7NA8SwLR6sKk39z4mn1lQrK4hAHHAhsreHo3yru/2Xy4n
AD+t5fhgXzxi8R00O1tMgG8PAo8Hlr9AHu99bYvzCbDxWoVvjfNr9Pza99c5
7wnwRXxHjblaJhqOqYlqzSLARL3soN2dbPQmJjf+ySsClDRdD5rUz0XXnk3M
oxQCPMvaeVRz2wcU8Lv6kshLArzWPCvezvcRXaazMoUTCZAecmgil1GAwp1s
z+55SoCpvRu+tBUVomMeHWbhTwhw+n1A+PaYzyg28ZLChlgCdEd+s8hwwygq
/ENjWCTXnoXhYUgJIt6P4c16RID24EXdf46lKOTtf2MzYQRgrf19MkanDIkz
cs+eeEiAMwrbjx0llCN5WZbdRAgBNouk1ShMlqO1tjtzE/73vk/uxgvbSyuQ
wdRTq6tBBKjTucHWiq1EvCr791x6QIAgyf09Tq5VyDtb+VBYIAHu1Ep9f6lb
jeQEPYJaAgiwbmCg7IdwDXowu3FCg4tH3E/OGzJrUFW2yJXy+wSo/uS1LSOn
Ft1MvUK7ysXiTr0cEb865Hpehs+Qi40Z47U+R+qRm4Akt5kggK9qzlmORANy
it0TbsfFfJZ5B4zGG5ChnJVdAhc/HOqYTc5rREJ/DF+u4O4XUK0wN3u7Cdn9
7PQJ5WLlV3Oj/21pRoue5Wu0uP6W1D359+5BMzoa0nBlPTeeUn+3JZ3JZmSs
8bpnFTfeCbqCuM7hFhS7f82FLVw+tDVNYjLfcbFGqvU5Ll8be5qeP9zUihoz
5TubQgnwz93wUt/VVvRnzIpiz+V7A3+ayuOOVlRUzrEX4Z5HCGMrpWB3G7rV
FT8yGUGAnpDtpvqP21De78Oz36IIALOii+qzbWhkZrSJEEMAnWbTfeFH25Fa
mn2FYxwBrvB2GRpltyPbvuP7vBK45y+yVnDQpQNdtD/piZ4TwC9Bdya3ogO5
PLaXUEgiwO2OG7yj0p3I7Ji4ScBrAvQ6nys+1tGJxOMbEqfeEGBo74hfqEIX
ShY+t/J+NgHCT8aEkAK7kPBP/lL5jwQo2HnXXkqtG704I7tOr4gA2YEbN8WF
dqOTnb4G/tz7sWt2iWHL7EYW8T+fhHLv07CnpGNRSA/qMVSrONbI5W87pfXY
UA9SmuJfZdL2v/fdTjQpqvSiCeiQKh8gwOjj8efJHb3or9ovRUMWAYoaC35r
butDcyI/y5a+EsD8lOygoGcf2jp+jrw4SwBVvgNCxpv6UeYznt37/xDg+qrG
oPxT/aj5buXDEl4iKN7s3GyR2Y94WhWGrTYQQe2Vz3Hi/gFEGlqyvUokwvsD
Y3O7wgbQrsWT5EoJIogset/w6hpAjC/FoRvkidDhv/u8y7lBpH5/dt1RUyLk
XcMXY32G0D0Bia3zlkS462N0bFvFEDqvGK0ycpoIxNYtqw+tGkY/N3uKJXoS
4ajbX2Hhg8PoWoaY74W7RLj1XJdMuDiMvr2L5ASEEuFL8LWD/uHDyGB2QOpV
EhGsc3zOxTUPo5b59e/fZXH9PW2CNaaGkcxCQ926IiLIGTVv2bOBgaQcHpwo
49ZzRu4uk+MmXP1qs7NZikWEQZfhBVdnBkpNSCpsnyJCs/T1R93+DOT396yu
6ToSbCtQvZdRyEDnV7MEiOIkkPQsUF3byUB8by+/1d5Bgph8e4+PPxjIOzBz
X6YxCc7kRliPSjPRyp3LcYs2JMB6p1+e0WAib4NLCZmuJGgKoH2WPMxEcb9e
VJuEkeBqyronejeZiPDqRfCe5yS4GWOomBrGREobu5RickiwN6YMab5kom+Z
mrGnKkhw3zbj23wuE72IFU6M7yaBS94PHUYlE6HIDAWjSRK8SThE/N7FREv/
Niu78pDhwLPj2mJfmUhmT9HjlQQy/Pt97ZjjHBMFc0hHNsuRIXVxZricn4VO
PkGWiYgMJrLzoLGJhf66+6SkWpBB6FlwVoEUC3kMNanvvEAG/auP9+3fwULh
qu7rVO5x7ftHxlp3s9CQ3B6ZT/+R4eSrXRdPIRYamSAGVuaQwUKJ5j5qwEK5
BRaK1nVkOOprdM7hMAutyJinXmWT4XqT4Ys6CxbqTps5SflHhoTgDpCwZSHG
uN1XYzIFqsc7tM1OshBzT1j+alUK3Mz1O3nagYUoa9QqbUwpcMQtUt/AkYVq
0i0Fdc5TICT90oklLtZK0bzwPoACjJ0+I15cHHtxbw9OooBKksPUR+58A49C
BccSCqhv9LLJ4a4/8zRs38shChQt726z5+4fYt075P2PAtvLPnV94PrXpuhb
8VNCFGZNr73PMWWh3rGgZEFdUbDe03/b+AALKds9lsT2ovCjymCLpzYLebX+
KyPdEYWWH+MW8sos5CC3QWTzS1HYmvgj9twWFqJmrLicVy4KxyMKtMSJLDSW
/kv576goTNqan963ioW2SeWGTq4Rg5fXheabZ5moX9M1wV9JDNRN1PEXBhOp
GWk7VFqIQd9FY4MVDUykRc7+mOMtBiGPeWYiPjDRre2rbY1fioExZs+fecZE
s04qGbemxSDqs5pYmjMTjb/WUrCliENS7k3TSBMmyv99YePQXnFweew+9Gon
E3U/lDbsiRaHJ7b0nUpjDJS8fXWZKRaHVW+is0PLGejES70R53Fx+AOnd0wm
MBCLPvQrYJ8E3N/BaQg2ZqDjy4IyDy5JQPZ51f15Egx0ddUjv+0JErBn4j+r
gu/DqLPAh6q7KAFxz2bXbQ0eRqB8JelioSTwRK8M7jMeQv/J5RWJf5OE5X/Z
FY/qB9Hd7+uHD0tJAavKsMPaaBAxBtZ3Kd2XAv3Lnj5DqgOocG9LoOgOaeBL
mBCcqO1Fk35GUzn60uAQJNruRu9FteEkU49T0tDvNDoe7NmDsj+a1FvHSIOb
AmvywtpulF8W6q24kgrKrquHKL/bkblILMlbkgq25d4/smjtSG+NLa1MkwqK
NNMDxUZtqGmrro28OxVMtmURnANb0FJNHNobQgW13jl5kWfNSHvn0Krdqdz5
/HOiH+2b0JPgsk9P+6gQrZFNl/GvQ+eEOw14flMhrDdc93hgDfKS/PWXJkyD
7fYO8xfuVKH1lz+989OjQUdW3Pq9FmXIcEJxMD2FBs+u6R1Xpech8aFP64Q+
0+BJvcJCT2w2isjx39DfRoNZC4conj9pyEF/fVXBMg2uql+6/vmPP+Lnebn9
3WY6PLUmuU5uvIur58Irfm+nQ0Th/Z28RfH4gKX+SoPDdKCKmmptScnGkSv9
dqPTdKjqnw+SDs3DFxsu9py6QgfJ9f0tp724/eh75YNJfnQoXvfnU5wrxo/e
8mj8i6CDikwnJ0+pFJcAK8HlOR0sT8TIFb0px2mKB4cGMulQr6T7SVa2Cl88
f73K/BMdHm+RjdJPqcHfR65Hl1dw9y+1/WAuXY/PaR0fv91Eh9Ha6XK5S424
wsKv51A3HS42WX8aP9GMN/fxi8oN02HdVa8bfX4teNVZiVbhUTqstnrJQ0lt
xaFb6/77N0mH0J2M0mNVbVg9+9u9qWk6ZFP8bsJIOz4q1Epi/6JDma+fW9iK
Tiw/qGHfNU8HPr61b6bFuvC+rdWD1Yt0COIJPSyp0o2fBrJe5v+hw9XZhY81
+3twi8moWhIXf3473JBu3osFh0vTQ7j27FSsetO+D7fen464zF2PcO9E0E/H
fnxYrGXFce5+DPPXCc1nB/B5F6vHe7j+XPJuSGo7M4hLmxVPU7n++mpJOn62
HcKlD5X+rB2hw+zL2l2yMsM4ln7kCs8Q/f8oOO94qr8/jvsmlYyU7rDvaFuR
QuK8k8hICVktI4lKlIwiJYmyKikiNO0QknTMyN573Huti4okMqrf5/fn63E+
53ze79d5n/M5z/u4jwP/yVaT0uNYeKbwr+G/dibkLXU+ObSWjZPdePyF6plQ
WpjxbO4GGz+5U31JsZwJkj6PM0In2fj0zQu/zhYw4UrW2LIlKw6Wq5baVUrM
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
b4k0S3rBJ8H/AUNtdnE=
              "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
        "HighlightElements" -> <|
          "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
         "LayoutOptions" -> <|
          "PlotRange" -> {{5.362918857714484, 
            9.999723257521577}, {-0.8582829872633684, 0.66489067088677}}, 
           "Frame" -> {{True, True}, {True, True}}, 
           "AxesOrigin" -> {5.362918857714484, 0}, "ImageSize" -> {360, 432}, 
           "Axes" -> {False, False}, "AspectRatio" -> Automatic, 
           "DefaultStyle" -> {
             Directive[
              Opacity[1.], 
              AbsoluteThickness[2], 
              FaceForm[
               Opacity[0.3]], 
              RGBColor[0.5, 0, 0.5]]}, 
           "HighlightLabelingFunctions" -> <|
            "CoordinatesToolOptions" -> Identity, 
             "ScalingFunctions" -> {{Identity, Identity}, {
               Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> 
           False|>, 
         "Meta" -> <|
          "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
           ParametricPlot, "GroupHighlight" -> False|>|>]]& )[<|
       "HighlightElements" -> <|
         "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
        "LayoutOptions" -> <|
         "PlotRange" -> {{5.362918857714484, 
           9.999723257521577}, {-0.8582829872633684, 0.66489067088677}}, 
          "Frame" -> {{True, True}, {True, True}}, 
          "AxesOrigin" -> {5.362918857714484, 0}, "ImageSize" -> {360, 432}, 
          "Axes" -> {False, False}, "AspectRatio" -> Automatic, 
          "DefaultStyle" -> {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[2], 
             FaceForm[
              Opacity[0.3]], 
             RGBColor[0.5, 0, 0.5]]}, 
          "HighlightLabelingFunctions" -> <|
           "CoordinatesToolOptions" -> Identity, 
            "ScalingFunctions" -> {{Identity, Identity}, {
              Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>,
         "Meta" -> <|
         "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
          ParametricPlot, "GroupHighlight" -> False|>|>],
      ImageSizeCache->{{4.503599627370496*^15, -4.503599627370496*^15}, {
       4.503599627370496*^15, -4.503599627370496*^15}}]},
    Annotation[{{{{}, {}, 
        Annotation[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.5, 0, 0.5]], 
          Line[CompressedData["
1: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
FY/qB9Hd7+uHD0tJAavKsMPaaBAxBtZ3Kd2XAv3Lnj5DqgOocG9LoOgOaeBL
mBCcqO1Fk35GUzn60uAQJNruRu9FteEkU49T0tDvNDoe7NmDsj+a1FvHSIOb
AmvywtpulF8W6q24kgrKrquHKL/bkblILMlbkgq25d4/smjtSG+NLa1MkwqK
NNMDxUZtqGmrro28OxVMtmURnANb0FJNHNobQgW13jl5kWfNSHvn0Krdqdz5
/HOiH+2b0JPgsk9P+6gQrZFNl/GvQ+eEOw14flMhrDdc93hgDfKS/PWXJkyD
7fYO8xfuVKH1lz+989OjQUdW3Pq9FmXIcEJxMD2FBs+u6R1Xpech8aFP64Q+
0+BJvcJCT2w2isjx39DfRoNZC4conj9pyEF/fVXBMg2uql+6/vmPP+Lnebn9
3WY6PLUmuU5uvIur58Irfm+nQ0Th/Z28RfH4gKX+SoPDdKCKmmptScnGkSv9
dqPTdKjqnw+SDs3DFxsu9py6QgfJ9f0tp724/eh75YNJfnQoXvfnU5wrxo/e
8mj8i6CDikwnJ0+pFJcAK8HlOR0sT8TIFb0px2mKB4cGMulQr6T7SVa2Cl88
f73K/BMdHm+RjdJPqcHfR65Hl1dw9y+1/WAuXY/PaR0fv91Eh9Ha6XK5S424
wsKv51A3HS42WX8aP9GMN/fxi8oN02HdVa8bfX4teNVZiVbhUTqstnrJQ0lt
xaFb6/77N0mH0J2M0mNVbVg9+9u9qWk6ZFP8bsJIOz4q1Epi/6JDma+fW9iK
Tiw/qGHfNU8HPr61b6bFuvC+rdWD1Yt0COIJPSyp0o2fBrJe5v+hw9XZhY81
+3twi8moWhIXf3473JBu3osFh0vTQ7j27FSsetO+D7fen464zF2PcO9E0E/H
fnxYrGXFce5+DPPXCc1nB/B5F6vHe7j+XPJuSGo7M4hLmxVPU7n++mpJOn62
HcKlD5X+rB2hw+zL2l2yMsM4ln7kCs8Q/f8oOO94qr8/jvsmlYyU7rDvaFuR
QuK8k8hICVktI4lKlIwiJYmyKikiNO0QknTMyN573Huti4okMqrf5/fn63E+
53ze79d5n/M5z/u4jwP/yVaT0uNYeKbwr+G/dibkLXU+ObSWjZPdePyF6plQ
WpjxbO4GGz+5U31JsZwJkj6PM0In2fj0zQu/zhYw4UrW2LIlKw6Wq5baVUrM
R5iS7GOFEg6utjIp10xkwtRpXiXRjYP4rkZiIOcBE0pOdB57EjiIi2Ut3+YF
MiFUTelqNmcQFzY0lBdfYUIXg/3RZM8QPrcm6fbKM0xYz17NPHd/CL9d+fFX
5FHC36I1134PDWHR3hN6Z/YTfpT6n5jcMYx9Rmv1ROhMOFJ3umNl5TBGX3Lk
fgoxYdrt5R6mwAheMx11BC0woDb+RfZTwxHcJC0auTTMgIDjFEWPOyO4ho9W
q9zEgJy1WxUyS0ZwbHL+t7FCBsQtspKM50bwZp4vA1tfMUB/6cGI5dZRPKxx
5vZCOANucO+8brUYxTs2a3+w92ZAybaZ9i83R7GxlMu+83ZE/xcXHu1NGcV3
Djm3Shsy4Ffs6o269aN4pfxrPv8dDEggb6nlfB/FLj83mjyWYADpzJZapiAX
q7yJFXblZYB/t7Q+eRMX5/3rdBWYoIPQ1RjVqj1cnL36nu/lZjoYVyTpHzjM
xXIsi/VZBXRoXP6v5+UpLj46AZzKBDq0fO4bnDrPxaH/XBxwEB02Pp/sVffi
4m2D8sNxF+jw+vCK95HXubg9xsnnrDkdaup1q/lvcbGRy47lW/bQwWrv4sec
QC6O0aqWHWDQYVxwjV8i0f5zoNjuIT8dcgs1lYb9uVjH7ArHaIoGDscW6ZE+
XFx4uTxVqIMGb3ZJ5OW7cbFI7+jtniIaSK5Xs3Vx5OKlbU95C1/QYLBh4PEn
Sy42f+Xk/fYuDeou3fxSdoCLDTTEVhW700D1K9ModBcXM3lOPf5mRQNNufpj
8gwuTraN7d2zlwbcZ8Vr8wS4WE+nyCRrCw0yei1N1X+OYmed7KvawjQQluaN
82ofxaf+tOsJc2WAUxOTcTN/FDu009l872RA15zmcv7RKEb7LYPd/WXg9NdC
E+NLozjey/6W9UEZcDhVeGW3MTGf2ehxmbgMfOH189XdPIp1f66ulM+XBpp7
mbNw6wime1NparelQTjgtdqP1yN4xOUQpd1cGvZMP3m712cEX7Xiq+melQLy
rZ89l8RHcHGehKgZSMHHmZSYeYNhPLuiW9xwvRREzhq0bl0/jK2XS97hciWh
p3My0aB3CLMlfu0UJ76f7/iC46LODmEfPUXh09MSYNFvP//BexD7jgQ5xtVI
QHj5JZs+jUG8aWh7uu9LCRBSF1ln+oeDWeP39XbYSECNpLKGrR8HL0cTUxb1
4tCpWTAu7MPGLwRrN+SliUOc/kvvNlU2Xvnwd1TOXXFoCNJ/uesXC1ewJBYC
DcVB/etS0vAFFt5972G2VbMYrNsZi44X9eMtpptMAnLFYNeH0Cp+lX4s0hW7
X+uJGFg20y8eSunDMY1fPU7ZiYFc2KvFuqheXKiQVCy9SIWVpRWOj8524yDp
GtGnHCrk9K+rFOrvwmcPRHFiqqnwpY0uYX+kC3fObR5f/5QKpsEZS6W7O/Gj
9I24VIcKnxycj6wQaMduo5JGJqkUkDi4dlotownrax4Lk46lgMDCwtvzck34
00IVQ/suBYwn/72oTmnEey63Pbt9jgJK2Z4eIocb8OoxeNavTIGYYzEX3+nX
4L3UwOVqGynwQKPsvx361bho1b3/+igUOHQxKG6r/hd8c8XXuuV/yWBreYYb
blCJVcNj1FP+f59H9T/eLNMyop6PYa1SMjiccKPYWpTiRG3V26R8MpzwGDB/
Y1OCDR4WRwcmkuEuk3Zmfe0nfFCYbGDqTQaZ5+tZP5bnY9NHsdv7XMnweJNZ
vT85F9uXubskOpLhZrrzVfetOfinqKpJmxkZLiwNfJd7nYGVJr4ot+wgQ3fe
kXjaSDz+hZvGKXIEX+WifaY20Xjt1RNnIzaQQYtPGZ6mh+OyafcOMYK/1oWl
3vkjbYQFvcfsrxL85n7LxOZs4VOUUNlIMfxFgsdeYtEfVyWhR0/aD+tPkmAm
Qnxq/9uXKOFl0ZoGgg8Pdt8XfTuTht7EVSxOEXx5anLue8ubXKQ3JPpjYzUJ
FiueexW75qPNpAnbwAoS/Ej1KC5WKUCX92bylxL8GnPjJGv4/UfEuvHSI57g
2wnjBqt/np9Q4dpNlc/fkWDZrvdjIeLFqKWmLXdzOgnmF6PORbaWoIu026kv
CX4GSdbUirelKG4oR9XwFQnM71x3cw0pQ2+alGYECP4Ok9P/LLSnAtF47zzb
RPB56rLTpZqin9GHl9YdZ2JIENQdvNp87DOib1229ngUCe63PEuTv1+FVr/d
y5Ig+P86HL1edeoLqreW+vs3ggS3Il5sM1CoRu9zPfavCCeB9UJnV+ZCNdI/
OvdQKZQENbT5d7MVNchmjNzgf5cEX5zfsiQiatG220LdP4MJHmdq+Ula1aE6
3bZnIXeI/ub2qb9o9ej+pk3C+4NIsIp6+OaL0Xp0YdMlMvM2Cez1I8Q2pTeg
H/mj6RsCif7liyWFao1o+MLpOv1bJFi9RZdrENOIyuZvuN0PIEHJdzU+tNiI
rG0DY/7eJEHsA6enj2yakGu4k1EYoaO2nlI8XNiEqiVbw/YSWvbcQ01n8Wbk
5yhznkro5TxHdQa9mtGp8UOz6wh9vaP0U0F7M1ocp2oqEbooO2/j1x0t6IR1
j8UlQkc8+zDpFdGCjAVfneoi9DfnnxEnvrYgUcVdHvZEPBcWha/G6rWi9QK/
89YS8are2C6lkNSKplatMhwitL51z+D6pVYU9WeHdQ+R39uiXjVj8zaEPi6J
zBH5t83tCOhMb0Pj36KfqRJ+zerOb8rma0cR8tPqcYSf5gr7AruOtSPRs1mU
LYTfwbqrl4xy2tFEoOrlznsk4DoIjKzm70CK+i/DMsJIoCj1JmbtiQ5k5nlH
sO4+CfyEkjOn+TrRr/uU/8jE/K8qbkn7YtmJaky+tAVGk2BsV086J6UTnXFN
75Uk6oWvHuY0ljrRYZNkl56nJDiXo/ulxagLNWdc6y15RoJnLaUn3zztQm8u
f77XmPT/epn8kT/RhWo5OTudiHqNRmvq/YO6kc8j2p8faSRorXp+fldrN7IX
T0x8+ZYED6SKcmRoPUiMK2x4j1gPMy5/EgNze1DDbJxWMbFe1NuPuf/924Pc
9kR+lSkhwYC0gvpzvV70rOXpDQdivUXkVWU7tfei9Wv/eBo0EPXiT7cMlOxD
bZ4n9U60kkBZ52JnhW0fSvZILFo7QPj/THsheawPueoejsoeIkHBviVjfbl+
9Pt5xuuAcRKYNNsP8V7oR8sY+4UKZonnH31oKfnejxrppTnSf0iwpLr3UbH8
AGpLDtLI5yWD62jr2SaXAXSM70dFwFoyuD+ceCYzPIDIB7VRAZUMhUnv+OVE
WMimd3/QBhoZgmd9jxnJs5Bpxo2kZ4pk4D/rKbbekYUcRyiTdmpkWLDZdFrg
FgsFb1Y7d3YvGdQsTS45J7JQhNuOozrE/vdz+kmsZTcLvQ40XyZxggxc8ftL
g79YaMXqhOPqTmQ4PtWW1iDCRrLXdbgmvmSY+Rm9oliHjW6Kn71rfIcMCY2Z
UcXH2eiIoHlF9AMy3HPT0RK7wkYnJ1crkFLJUD39Vbj6BRs1c/P5jIj9m+Ss
kipVSPDq8x8VrWVkkBaAA8WNbHTRuDuG3UeGqZl7H7nzbLT70+VQpwkypIQ+
u3VWiIP+xtlv0JsnQ/z3HnlFGgdlGSz0+62kwCzP+2Wqyhz0aP6/fWvJFLgx
I73bbx8HhZ1M7v23gQKnnn6e/c+Mg4rt3bSMVCiw784NXWzPQba3PMuWm1GA
wWaf7fbnoIDEK9suO1Dg7uylcaUwDmpU6WLpeVBAUOfm0bwYDhIzokffuE2B
P8rtBxxecZDjeXte5mMKOLut2KeWxUEuxyhs+RRivG95aQqFHDScMjj1/CPx
vVTpaN5XzkEf8u1/326ggNP9gZFLtRzkXjRa0smhQKyB0N8PLRy0MkRBMnaW
eN46XoTUzUERV6jdDaupQNEQmvcd4KBIBdNmLxkqZG48eOnHIAd1NP3pj1ah
QsTplZIuoxx0/5dOn4IBFTKsu11HxjhofPlsGjpFheWtMdUnJjgIefNvr71C
BUv/x44NhJY/wTRoD6XCP60Rmx2E9gvlZ518SYUSpdfPAon+ugJrOpyLqDDv
Z8tbMsJBD9mX1s+3UaHli4UKi8NBW9vfXxOcpMIR3/EPfX0cZHJoZPrVKuL8
Ql22kNPBQeffVVhUM8TgQmWAwvFGDpJ6IBjspSkGYxlNF1oqOcio2utUjqUY
VJy0TBH5xEFn53qzr10WAz+SbLJwDgflHZc81B4hBlEX3wpUEn5v9SL9KUkX
g4+BtgY7nnBQnIPPtb01YnBwV1yuUQgHrTd5FHB0TAz4xiI9BH046NXaf0XL
VokDLweFuDgR8VtLaG7WE4du+8yxceCgj6uCHiWdEYf23C3nl7ZxUIGhj37h
HXFIrHyeHy7KQUoRMRura4nzHP+Os5IsNrJL3pLnd0wCSrTm3k+cZqP/rl4/
fP26BLg3DhqH7GejE7UrNoo8l4A5h07R50w2GrKzFxyakADOK/fQTT0sdGEL
jFnekgRXcHZO3sVCgjzvqaxUSWiLvbXfmJ+FtrTa7ZhrkYTWpvuXT78bQJ8K
Pgo1b5QChS3LnNW/9SPfjsXHYo1SYLmTpHdQuQ8NBJmE8CxJwa3ps/tnCnpR
yQ+FCpct0mCuqX3olWYvGl79qKz8pjR8fOfh9UutB5kn7U/aovn///tYXur9
04kED/xIu2RH8MBGu13P81sQduuPjr1Kg4sji6eqF5rRzxK1X30PaeB9+Y+e
q3oz6j8u75hYSYOe6z+/Kic3omWDFg+T5OngXTUW8edlNVJ2tueT0aPDgsar
pw1DVeh8w/c/Yafo4BRIc5wTr0Q8gy+mlR7Q4f0GuWOfzpehiPrnl1tm6fDs
YpFUhV0+OllwUFNzDQOsvvOR/hzPQblzjw46bmbA9e/HGqyiMlCutFVv51EG
ZMVvMrEfj0Xnj5kdEb3AAOlj6+6t+R2IllFYKyZvMUCH9PCSwj0v/MC0/D+X
LAboHQvpF7j8AtOrD99d/MyARI/xFct00rGwpO2QUC8DjM79ENwgmoMZG0xM
Hi9ngh1feoST0EdcnLr7KQ+VCcEbxDZYGxTjympXpZptTHBWsQ35FFGK2Yde
+zkZMyGqZ/l4AbMSaxvfdb97igk/D60IDE74goVCc7Y1uTFBK7OKvkq6Fj/Y
mZWx/SYTzuk7/L0WW49/PPOxTIxkQvay3ijSvUZcNM3uF09ggml3tXDylyYc
5tl/MiqdCWqzdgzKihYsd/m+M/8HJjB4V3YtQStGG+dWXaxgQlZawqlZ7zYc
HEr9UtrAhCeHXpx+9rYdX1euqVjsZMLNl7MXHgx14I2RnzNIbCb4rlqz5wKp
C89LijQKcJmw5PNyQ612N7Yff07t/sYElzM7vA3O9eB/n/VpvtNM8F4VNBgU
2Ys77ILkpv//+4zPy88bsvvwNbMkFdXfTAgU2BVXVtePayVeDxnMM6Fld7Y5
/9AAftpy7pkcofWE69qMfVjYbDL8eu8cE6TcvT9F/WPhMFlbCxtivGHHzNC3
N9jYIrUqM+UHExqurTfy4uHgu6K0z7VfmTDYdpSv6ioHJ+3hDy4fYcL0Y0Pu
tZ8cPF+l/zBqgAmsxI/2V84M4kqvPFmdDiYY1OSgRx2DuMJHY2dbHRNmz0vm
FO8bwuFSa5WNy5jwsDLOozd1CE/uVFDNzWdC3dfYuuY1w1hCQWBYJJUJq00t
YsJdhzFlTfUJpzgmHPaRt/6vZhj/7e2EsjAmZHqvlBdjjOCGYxuit14n5v+J
YEv15RHsXPyj+fkFJrTbvn8tWDaCc1o9incfZ4Jk6NUnHYKj2IsK1+YMCN1O
lt58ZBSTMsOdBlWZ0PVniDl/fxT72L9mrNrAhNYhYx7jhlEc8UfFy3UNExpX
JttsWcnF4f/6jzEXGJDMKBIP3c3FrLurWfJDDPCg7tcNOMvFKgVjjCd1DGjO
j5sSfcjFQsvYxq55DBA2/y1m8IGL65oP3/sQz4DHHSYPlHu5+MHN+vlbtxlQ
EniZ1TPPxU772593nif6s/XEjoqO4f5vf65hMwYo7Mqszt4yhgsSM47u02DA
TwOVjuW7x/AmXufu83QG5H7LtzilN4YBxwUcWMmA7XPHr3UfHsMlv1fE9H6l
Q7/gyPngo2O4/vVLuR3NdHjQHqd4y3IMj1RoCZnn08EuYf1NDtH+8LdzrcFT
OrDe5nz+aDKGeVwU8iRv0GHngNWQrP4YFk4kNTSfpsOmo+vl9TXHsJRxc9Nl
AzpI/eLfr6Awhqsjj8ivVqRD8qWU1b8kxrCxjxFvjCgdzhxV8M9fMYZPgepm
2d80GJu+mBf+nYvvOqRKlffSoEtxW0F0Cxe3JjIkXUpowLoQcm0sl4v33RHh
3/SKBrbr1Grjo7i4xeMz/uZKA+GAQUrMQS4+sffq7pvmNHj9+rt24yYunuCe
fKOpQYO1ia9COX9GcYrluhr1lTTgi3fJnn05ih2VVaWX98jAoTAJ0Y2eozhV
aXcjzxsZEJqpuX9HdxQbqb/xtNgnA2FefR+1WSPYa53Qy49rZeBvZApvacoI
9lG3u/yCJQ1dJpaxlZdGsP6+yTghf2m4tlGXL+u/ETwdL/U6tUIKchaOh30V
HsZ1nKzbYY+J78NFzxX3G4ZwfWxSnNA5KXjBGuDsDx/Co59XLYyslwKdyRbz
dYJDOMn9g83GC5KQdcDhRs4SB8+N3RAU0JWEhbebTuzP5+BVKyoePpAmtHut
uaEbB5t4Zfrca5IAkZoLan2DbPw8Rm9gDZKAlKKPU8xyFr7JVBj5JyEBFIe9
EqevsvAemsiD0HlxsHlYVmanzMIBq3N5fPMIvatw5hQawNS97MuBquJw2Pw/
mdipXlymviprj5g4eC8re2R9rBdzlpJGAhfFwP9AwdnZyh58/Gm8WWWJGKzv
e7dhPL4bX+td+V+rmRg8PqY9/N6oEz96VEUf2y0GeQO/WObvO/D+vwfe3qCL
QZiR54e1GzqwIS3p+s4pKuwQnOj/t9iGv+mefuH+gArcWoutVhktGKJrL8VN
UiDIs1TYXbseVydon9Hpp4DY5w/rqnbWYQ1ZFx6dOgps2l6f2by1Fms8kgrT
S6PA35pCb+r6aqwQv2NB/QKh8wT+9f+owCF8V9jXT1KgKvDGGrOJcjycPP1B
1IQCJ3ZwE+KHy7DZDTc92k4KaAcF9pf0luBdHSKLKTwUOEh+oLgjtRAbuzoF
as2QQVaoYGJLWgGWjv4URuaSoVJQL2YhIx+H/OitCm8kwxbWRV69DzlYOCA8
PfgFGWwvSRkxG1/jk99j6WUWZAiIPzQS3hOCOvK33d58iAxlVqu628ceormo
Vx4lumSos9VMNjz+FIVKmH69v4sMi5vk0tdGvUSOz9cKPSb4o5n6Wvg8ORvR
lY74PCT4xDSkvfDzYA4SM3QZKF5NhpCThfs7M3LRwem7jNcE37x8uSC5TqsA
OZ28GPxkmODJV3kqO2nFqEhfIZKPRYLRsGuGt/8Uo9db8La4boL3d4oYJ3WV
IPWy4J0HG0mQLhbrqBxWhnrKP5U61JAg7817ySTHcrTvdqrYq88kuMp49bdF
swKl89XdfVFEgicnP53y4H5GJVSZ4VMFBJ+qK55mFVaii0amt/bnksDmWFXc
8rAqJOJso3U7nRhfAwe7KlSjS+f2yvYR/InXffMNO1mHdn5Zv+0Bwaer0hd2
u6jXoy6N0A6PJyQo2Up3zVrbgHxCPm3//33EM5p9P/NONKKznevtN0cS+hF1
/kJVI4r31TD5QPBylEDzdXOlJuS74fMbuxAS3Pk2/u41TzPas0mzzJPg8cXB
cjmRM81IyTF+MZ/gdb2xP+8TapvRj+pAVSbB854v+PMslFqQjG+xbUEA0f/D
7LUdUS3ojvsBZ5+bJDiuZmev/LsFabuCruMNEjRMnS08Yt2KONemJq/5k0Ct
Ja7lfmErutVZ6vjpOgn8JydnpyTaUILF3sxthH688/k5l6ttaI2OaEuJHwni
36l58XS3IfHMRVYAoSWO2FhlqLajHo3OrxcJPdX0xfDSw3b06VTCmmBCt61D
QQen2tG8zOkztYQ+5G6JNAw7UM0uE4oGMf6nLT7Pd7/sQDvKkvXaCP35YVa/
/t8OlHGyYWMsEZ/ckSjKmaOdKPkdGrpHxJ/8l3ExIr0T1fhFf0gh8jNLjOEr
5+1CCfxRwzNE/ip3LKb+WXYhjpTEaxfCn/thr/Zpp3chEzsV3TVBJLBNfyIU
zNONVBQoa1iEv2uKOo82H+lGt2q3mvYT/t8wcmVIvuhG2xVWnl0dSgI3z+jz
DjPdyG71rTSHcBK0JtxQTN7Xgxgu7/y+EfOZ9ZNqxY3sQbEvfux/+ZDIP6q8
VWagB8nlss7fiybBeveNtw/K9iIzQe8zz2MIvvdu1He90ousuAYZdokksN5s
a36bvw+dmjL5LfCSBErLwrZ7mvQhztV0odE3JLjw8ds+08d9aP8eB5+ZNKIe
DPfqUPv7UOnAvwaVLMK/SsO+MkY/Kjr26OUbon5DVNyyTB37UdjdlujDH0jw
gM/EquJNP5o4LW6Lyon6i3Q01dk2gGIDykKDvpBgjKSSZHR2AI3qnLm5ooGo
9zieIrnXAyjVRSsjlVhv57qujL5bw0JNfLZnW4j1aFanlMWSY6Fa2UszKqMk
iHF+v+Suz0L/LMPL3swQ63X83tkKfxaaWocKPy6S4D+jQwk3Y1mIkw/jQrxk
SBvcHJCQy0Kxvyofu6wjQym7WPr3KAuNFlP+eIuTYXD6aIoCDxt1r3Sw+8Ig
Q97N+duYwkYbhd9pKaqQIUPw3sUxHTbSnYqrStlDhqAVps3rrdioa4X0Pbv9
ZMhpNetLPsdGLY/9XC2MyfA46d3a19fZKG3d/PEQYn+zpWWPrL7PRsmphXpL
p8gw/c6quuU5G60M+07PcCbDwdfKdJ5c4n2vtKPa/MhAbVwWfK2NjUiWH5UO
BpPBrMdt+5chNuLTOF6x6iEZnvx32NP9JxutNzxzgv8ZGe6v9wq98h8HCedt
FjmcQobrUtuiW4Q5SKhmdrovlwzabqlpQRIcNNq7a8O7EjLsbR/qithM8Pk/
k88tdWTAn/9KfVPmIN87eTxa3WT40r3oHKPJQbyqzf9+jpAh6ozJy0d6BE+P
C/ya/UmGBge/5wOHCd79XEg+8B8F0JsE+UtWHGSRSk/gClOAFLbqj7EtB8l1
WzV1SVJg34aawosE725MPTQpKUsB9vSR5e0XOIhfNmNfjjoFbK5Pnrp2mYNi
r9VLxh+gQF2KvaGtNxFv6/O6fgsKPF1zSe6mLweVj75Iv3KGAkm3L9j0+nOQ
bXQ29YwnBXz/YanzARz07P3ihawgCuT0ebxSCuQgm4K+9RaPKRAqXE/afJuD
0mZK3K2SKeAuWuJlQOit1+dmCj5QQBaFVj0mnh9RDBbwqaXA/vPa48K3OKg2
Zc22WOL7qu1rnJF8g4M85K5XSv+ggPjI6sbTfhxU0Tp1fMVyKqS+N/yFCL5v
3HbG2ZRChaDLU+kqHhwkFRl6bqUsFSRJnpfAlYPqj7uPMBEVtldHvjlJ+DGn
q3EsxZQK6S34cdgpDvrc2GL61IkK33jHPb9YEP6ejjJb9KWCsBevnaAxBz35
xB2pIs4DHWKZ1qb7OOhef/VQbjEVevXx6r5thP/7sF1nBxXOn14wokhxUOtj
6Ueuk1Sgy33N1iHqwc1pQnUZTQwEy31HHL+xkWdYegaPuhi0bw10O9LDRop8
+uPeR8TA8XNrjHQVG0WZvnnKuS0Gp2wTmfvj2cit5K927i8xkAz06tTYw0a2
mscPZK8Th2FFte44Ghsh1Guwc7s4YNqRiDxeNjojd06r+Zw4OF+f1/tVwUIq
2hwc9FUc3sumbOXdzUJ3g6vuygpJEB8Js6I961moUGvdDksFCfBIOsRD7R5A
c6oj5cbuEuC8ysLrtcoAKtecLvjEIwkPzTKPFFX0odonjBf5GyXhoJ9HlLpd
H8q7Nbdnj6EkmOkf/HN9sRfpbnn7ZjRaEmLeRmzZvaEXRdac2FugKgXsgu0y
Ige70XPTIItltlLAv0mpJ7i+Cxm18Rs1hUgB842c/AWjLoR/rLVbGJCCtwnV
hgaancgurSkCRUiD9srg6/LTbeinn//A7DIavNt6c/fGxEbUnyC4drMEDfAe
w6ek6gb0ji+4y3cHDRhbtc806Ncju//KPO470ICkW2MoolSDcpLZfDOVNLj6
+Leo/bNy5NAVbTvLosGOxMLl20dL0Y0vnrU8CzQwsXF6t2tzCbJK3FcgLkcH
m0/Uvle0QnRlufl0UzgdHuvbf1fd+gZNaLD3Br6hg5bHu92mxxPQ+cQKLVIJ
HXaQKc683yNQv4zKdNYPOjDslHZsDwzDq5e9+M08zADVdJfjsW7vcJbefCXv
GQY0ZdwKb85+j7MbbxcF+zLgguwT0Yylj3hCYlm8czIDXpVxTie3lOLUBTdO
xiID+IrZSq8TanAneWTmrggT1rQH4eZV9dheSVX+PcGPESf61yyqNeKGqN2Z
nQRv7pTqctFJasa86nOZH44xofCL+81D7S34sP6YReV5JnxPcary5W/DErK2
SVqhTOg4J3a/3aUDl599ueZJLMHbfLKKejGdeINVR+2fNwTv/rtdduZzF66T
CM4+ncsEjz3Rl7omu3FH0HqB6mImeG4eU9Yk9+JPZeqxG2qYkPT+vZiKeh+e
O6uX4trKhAcDxz+etOzHjkvv+V/1MoEk/DfA7tIA3qevLlk2yATTjm+8Uzos
zPSf6ykdY4LjXcOcT3UsHLwWsRK/M+H1IcuGKVM2LqXo2B2fZsIqnrpp6w42
3tZJ2ftzhuD1tCN/my04OHPxw3K7WSa8qo7cu72Ng8mH97PeEHp78K0kw0OD
+KeGVE7lLyakXSks/VcxiMUCNPjxTyYsfjzA2Ko+hH9c9hGPmGICl18QXr0Z
wt83Tlft+cqEhwq0fIv1w1ig5XR85QgTvsnusKJdG8bzv6uqdrCYIMd6sn94
YBi7/B0iBXYygXJkfikUjeCka9u+4wbCX5mzbstjR3CrcqHxWAUTvogtrds5
PYLP+BWWrihkwoqXLzuF949ij9JFG+lMJrRYXNsf8GAUx10VSN2VxIR3xvbO
t/tG8e3qqryjD5ngMyU3JMzk4vRV/j8DA5ngrnqkneTAxcuuZarXejDBycWW
8yiBi0WuBnxUOs2EipPGkhGdXBytL8ODTZlQFN66+J/gGL6V+bnh2l4mwAzN
cJLge+/yxR2XFZjwtfnPuuOnx3BYxnOnDHEmkO9+unXk7hju2ajTorKCCe39
spzOtDH86LLzvMgPBkgL5NgvfhnDB84Zehr1MMCgRlyqkjOGiy6lzE6VM+Ds
0f/YBnNjeMp6/aZVGQxwij3NjF45jk9u9H4b+4gBxfbXeopEx/FpD4WduX4M
kO1bc7pZYhyjd3ZwwpEB7ttf2o7JjOOe8JU6CQcZ0BiZ8IRKG8cvxtQib6kw
4I/X074rkuN4K4t5ZL0EA37nbeBKkMbxeXTxluV/DNjC/g9oq8fx9RPyM1aj
dCinaErELRLxqWqr0uvocLvgn3ba2Bim+5xMzsumg7nohd9nWsewxkE3J8Zj
OggnRnePF47hmpehJud86XBf6kHdoYQxTNO2+RtrR4dux05O1o0xPP7ha+l7
PTrY7RrRljs1hrXurk77Quwnjzia1G6NMSxyUzmHM0sD355DdnsmuNiTHF5Y
3keDPV+Uu+VLuZi1VXdbdjkNok69dxGI5uKTE2LmJfdpMNSu8XZgNxcvrpm9
P+FNA2qHtyjPai7+UP1OQ9mWBrSry9gnO0axd1i5F3M7Dfy1O3Tlz4/iDXIm
/a0UGsQyZl+V7BzFX+uevjr1Twa2iJvOcZZG8LNntZj9TAbSHimqk4JG8E61
mtcfh6XhDff4MsnQYXxyk3Cf8XtpSNk0VfTXcBgXp9vmW92VhhUFP+p/8g/j
LerCZ4eV/39/8oqbxgFDWKpO9IHYHSnwv/D7hNb5QXzo1c7jJkaSkOv/yOvA
FjYm9elRTDdLwpz0j/vi/Sy8IjDDh7NMEjTYPNNvH7DwwuO1+5ILJeDFw/ns
yKUBHL/7bsSXHRJgsPbqufrnfXjik5G2nKgEZD5idSGhPkzfQhqi/BSH+df1
L5Ku9GLQ5f0R+E4c+mMvFpzW78EyAhtC4jTFIcS5bj13shOfyW5O2EIXB1X6
+xvfrTpxcLrTxh184qCdosiSK+/APN3Kw8X1YjA/I1t+7kk7tnypVvbojBhY
m+7meanXiqs3Zj/uzqCCaCn/zvwLDfjqkMkBbjQVKKrTTz7sqsdBfaGmrjeo
IHjv0b2f/2qx4YX2IrY5Fcwzd8kyHlVjo8vscwziPDP34IMQrbkCi3K6LldM
UWDghMuS/4tyrM6bVdLcR4HfkXk1+73KcMi0z9KGAgqcM1JQFdxQgpekZYU8
L1PAaOh643exAkzZLSGn4UAB2+dOv6va8rCNemmnjRkF1C1WX3jx8B3Wu33g
etpOCjgoU909JN5ivGFc+NQSGeZOxa9TVYvDbRmHEhofk8E3MeeauPNzVO+r
0ZceSoY7509EtoW+RnsO5QQ23STOxyU3mnhTU1HWltGI0fNkKNMpL67nZqEL
x047btcjzrsrH1/zHy1AN+ReJzG0yGDsx6JV9Reib/UG00d2Eudzi/3K6c1F
iP/ST6bzBuI8rnQihdZZjCZPvM2x5iODVkb8FCmxHKV5BWlu/EvwhfV0+lJY
BeIIPlfbPEcCnixTB+bVzyhgm3V6/RgJPmRI/dxiXIXWNn0Vf9JEAnHu/Se9
/TXIrmXmrmAtCSQ3txje/VSL4tKFTmd/JkHVA6X0s0/r0HehP5oPPpJAZnPb
l7QjDegEbcDiaQoJdBp1ObfNmtCvrXE+na9IsGf/WknxvCa013neV/M5wfOy
B/l7yM3o2S2T1TeekoDhIyfAaWtGMcaZa04+Ifjrm6f0JpUW5OJh+93hEQmK
lP05DyJbkIrbphOjESTg91K14Oq3ovCu5Hv2YSRwv7TxW+2LVoTNLBpW3CPB
1/4Df9v/tqKAD4L/GoOJ9jANDz7LNqT4Kv13CcG3O77aqFu8bUNtX6Tjugj+
tZqrUqhZ2Y4iwvc2UW6R4Fnu8V2nTrSjk/xTvtcIfv79N1We9K4dTSnOh68k
+PpdzOx37qoORHOT+v2e4PH68G0m3cc6kHKYQGrE/3k/vmMzN7MDQfXxxDBf
Eqi2bN63dlknEj0b3ZF9jciH0e5qZtqJyvwYxn+ukmDuO9Pz7fNO9GeNMf8F
Qpf71Ulv+NmJjAOM1vIRWhr+bMnY24Uc7ZXdS31IcLFL0+xgeBeyd/+l8YrQ
vMPONjy9XWhc6NzNt4Seskr4VbG5G5kNGR1nE3ri3pb2p+7d6MyCAleNGC8y
xykt4GM3KvwvRDuf0AGcGqY3Xw/a9y8v/BgRn61v2uDVgz1IWPvH7BYi/nW/
NMJDHvYgt2SL55JEfrvZThXPu3tQ/O7vZapE/kzjMtpnmV7EXZ5w18ef8F/n
pOqUfS/aabZXaZjwS801N4b2uhftV7o/6RlAAkrnjQ7zsV6UqrCXbwfh//Dr
BI+wbX1I6+b3d2RifhJHuXNVzn2o6KzifiYxf3Ob+Xp5U/oQb3ckj9VdEnTw
GcRocvtQpWfCzvehJIgOCHl5eWM/Suoc2bWXqI+/9HHn17b96KLArPXMfRJk
ZqSZtD7tR9cczy41RZFgqYi3cL69H6nFTHh3PyaBa2HXf2SRASS4cs8uYaIe
i+7E+Gw+MIDYuvWr55NIcPJVrhIzdwA5tG3985ao56t2VrP840S75wNOFFHv
v/h9r00Ks1DV2xDlNxkkULgzr3J4Cwu9qK1y4maT4OyRBrVNe1lIpl2PzyKf
BPLrVzy+aMVCNoX692YKSWASa3VCwY2Fvtm7+X+qIIGRS7cazzMWGlavEPha
TcTLeHRwXS4Lnbux8pNBIwkOnlapflDNQoLJR5R62khQ7HMzKWCAhY7sVF0e
30PUp/lSOesnC2n3lXU9YJNgdXSseMpKNsp7H2pVNEoC8t8Xt/vF2Yib+1cw
Y4aoz9W6a28hNjqiH042WyTBoSvqbU8Ps1GofamHwjIybLHqW6TbstFJ8y39
mvxkSOVVtFnnxkY/+tJWBoiQwX7n29Jz/mwUcC4+4y+FDCkDCouK4Wy0Sjv3
QZYMGZ7a3/1sHcdGZ8MuKBUrkmFPxNF5dj4bJXo23pBSI8P7rRVYo5yNTrgO
olwgg4/Ng/a5BjZS39OmfUefDO2Gjl3rCd5baLJ3jD5ChtPyV20ih9nINZ4T
MmhDhv4hu1GXSTbKcUJR50+ToUT549+k32zkk7fCdZcrGfocvort/I+DCpLP
rEDeZFCOan9N4+cg0gFV4zsBZAi/GinkIMJBEtI/NUXDiPd1S7z6Q+agZLmy
Jhaxn3Mi1pROSBK8LXJ19fRzYv81M30tx+CgQdOYb3qZZNCUrYn4tImD3jcY
Bg5+IPJ7vTLj//et1K53YFV8JkPQ7E9GvTwH7Sw8sW6qmQzPum6uPLCdg97e
sd5hP0AGxQjrMwLKHJRjuv4U7SsZBpqu7yXvIHg9hFWwZZ4Mn7j/ghwJHaXz
3NF3BQWGVsbILBDP3y/6HCGzngKcuTMD9UoctHHj9jMiDAocUbsdwVHkoJYY
ZSmT7RRIe1/4TZl4/2oN/3GOFgW09OnPi7Zy0CRFTKDyIAWGJ6sO+m/kII8F
Vfz3GAX49E9f9aIRPF6+x/DuOQpEM38kPxfnIN2DD+fOX6PAl3sWev9EOeha
UJzIm3sUEPOXzLojyEGX6u+O7I6jwIL3ChXN5RykSd8neRFTQCQsy07yBxut
eGKrQGqiQPwnU5O9I2x07mSRLXWQAoNFu/sDu9koWSMzR2sVFfyd+CJti9ko
S2/6qYMEFYpXMs9MZ7ERY8Zyz3cFKjxrO6fxKImNtvsdMFK2oEJl5jIX/hts
9KAs8vGkCxVm3bb1NF34fzvHhEycH/avrXN/ZsNGcS9CG16mUeHQpzIHDWU2
iuaftv61SgzEpMq/rW5hoV10xbOb6GJQKcMsjXzPQiWMT3a16mJQ+EoL/j5l
odn0wbxr58TgnU7EzBU7FjosX20e1SEGD3IDZ1o+DSCaoqfM/C8xCG7cPEpy
G0Cbvfg0fq4XB8bA0xAn2gDabns/9K2ZONx5sztL6Eo/KjSa0vLsEYff5j+b
vxP8n7Y74ZzsSkk4+JCHx86xCz2ufPT3pqIkcJpXv7oz2IlOXs7777qlJDT6
XtKbONaJbkfar7ZPkwR9/65ZRZ0OtEdm+XiFjRTcE5nUNh9sRc+bu+fdO6QB
b5I0//iuHh3eqsPryC8DUeOZLTWydUh0ZGGwU0MGOuf3fhePqUGqflfStyTJ
wIWMv5X2x6rQTvmTgix1Gqwzi3+c6VmCfq9dQjfNaND+pxx5mWA0UbEi5YAr
DVT/Jjw8nlSIrvbwOii+pIFO0S3xPWvfocoy0oumtXQYz+69KPUmAlmc2PRy
uTwdeljd4cIUBmoWiBVRPEAHSe3s89qxEbi0o/a4sR8dmkipmRftknFyRxN5
mEuHQo/xgtBTn7Bq2OtSXl4G8JzbvM/kcgkOz75xpUeSAduLVU5pFJXh3yOJ
1vcPMeDp953fvtlU4V2xe2Il3jIgqHwbb8RAI9Zdcth6vYIBPm9MEG2hCWua
fjri0M2A+N6cyytILfhDZjv/w2UEr15OXtNk0IaDzPh/1pOY4DLp261wuh13
bvq9+9wWJgSXqKW2+XXgTQvCXpmGTLAJ5MBARhfe3H83WPcYwd8OH1Uyy7vx
yuWHgHGOCc335MeSOnuwJ+/9vrvBTNgsX/SqYr4Pt2um+wpGM8HgTbyrzYoB
7P+aopP/nAmz9j4eP1ay8MB6zvdLH5ig/tC6R1+QjS1DLfmulhN8fuid2v27
bFytFZT9qI4Y73MNtXAVB+/o/S+otI0Ju+hvnJ8FcHBVkZz/Qi8T6l6frxBf
4uBrlvxCGoNMeCEkdofffRDL/7iz7gaX4FWVit8Hhgex+JTN5BeCz59S9tnn
mw/hD1o7r4sS/L7GsHaXStkQllT3kTo2zYRRnyeMBPlh/HLB8nUSwfuplluU
+h4O44cy4DtCaHblX3b972Hcce1dwGZCa2t93GttNYLV8E2m4w8mVE8f5HHM
G8F2tkb6z78zoey1dGD3mlHsPHjRgTXOhFcPZP5LOj2KD70xPy0zwgTzhnt+
b/JHsZqJSKEdiwmy+ubfe/i4uLLR63B6FxPq00V3yB3m4o0lyXeWNTOhLeju
1ruPuHiidHa34xcmpFU/z/hK8HpChW1GL2bC3ri+JF3KGI6SfPLQOZfId7/R
RITJGLaWDF5OSmGCzgHqxYqgMbwm/95ldhwTSDfjqKyCMdwvpf+uLYIJre/V
KvpHx/BcN4zM3WTC77E+3ZK149haXNbb+DITfhY+NAtWHceeMxJ0lgMTNPcv
+e22GsfPb4c05pgxgeO+QO++Mo6VvPdmNe5jwiXVT2auEeM4WEdXSkuZCeue
anYuezWOSyTKonlpTHCNs17+LJ9o7/pbsUWICQeSunMOVYxjp9TzTrnzDMDL
jysyGsZxSsCQadYwocV9KRvbxrF22G/nDU0MuF5naOzUMY4PkB9Ekz8yQIBl
yFoi2iPtS8rDXzHA94v4t5nGcRyuVtkZHcEA29Pfw+2rxnFMqnfmLh8GdJYL
VR37OI6LFEfXX7ZnQKLWWdtfaeP484fDxRZGDKA4X+rTjhnHLIrnoTEVBgyL
WR+zuUXEE6OlvV2KAQ+yC2+buxDxx6bM7uBjQJbLtOeBQ+N4yE7p5eJXOpgr
CiYbbh/HnzxX8f4spENl/OfVnLExrL3YbSeZSAePC+t7tPAY9r4i1Shzmw4X
+K//i40cwxGCTfdbD9HhXEu+ZrP8GFYXOioSpUIHe6XBm9w5Lg7mmRo9KEbs
Pyuk9b0xF9tsC0st49AgNNDuyQ09LqZ3qVqEVtJAsMP+/Y5VXKziO9/jlEaD
Eysun277PIpXL1U9dLlCg8Ls7pajWqN48NemNdsEaXD5lF3sbrERfFO99K/U
kAws/xt937x2GG+uv/XD7K0MnNsQ+l7ebxiriwnrbDCQgZjVWR8v9A9hv6Zn
H4cCpEH5ZZ+194NBjBZgmb2oFEiG6bWfG2DhsN2laANXEtqdrF9qB7EwWbk8
KqRIEixvLlgOK7Bwcvn4On1nSTDfTP13dbEfX7mS03i/RgLOGN0ZTNnZizN5
H9NvvZQABZE7CSdv9WDzJ+iouL8ExMfOzem0dOOse6HSyqoSMHz9w+duty5M
0Xcz/pEmDg9GUr2ic9qxfcGGb1/vigOV58l3Db52vHPbwHyAiziE00/9dLVo
wxVGYX985cShd2eud/KfFpzoJfDbLVcMzsbmCKgdacIFi6mMIjYVkoVLGof3
VuGnn61b+aupULotTleNtxLTJepGG7KpUH/wh4D+5wr8JliytTiQCgaNe4sL
TMpwdm52wjIlKtg05TxLWPqIxbZ1qI1KUqGW/KSN/vQDdm7K+rCLnwpqNywu
nkDv8WDKlTtriPNDrMfh/dKROXhrh0mlVyxxvhi+1HCq/AUevNGzKjCEAv6X
VRJFIAF/djjT/d2bAgX4weD47Wisqds/1WpFgYtfZZaHC3ji2Ke86cVSFEji
XT+QvDoONfpX2nW/I0MAtSLx7rd8NCFNReuSifNudZaS0o8C5Pq0EEfGkSFt
1cy+walCpDV8g24fRIbzTqoeTkMYrdIp41c6QYbon8h8oq4M8dSfuhpkRoaT
ghW/BnA5ysKfN0kZkqF0YvWq9swKVM9YdWmZOhmGoyvyy4Ir0SNHNrEXk6GV
HSkRsbEGYbej2S1ryFB/afrg1ZW1qGe65v6+VWRIRDMRtqO1KGBmV9aXeRIs
/33OXSKxHp08fXXTsQES7PqGW0X/NiJHVYfX+7pI8GZ+jdmoYxOaIqkeOdFC
goqUX3zv6pvQt9yeqW1VBL+Ka3vuim1GY6nvqKLvSFC77nVy7eZWFDu22+z/
91kY/f52bvBGK8rjFS35kEqCpsV16SI9reiCYfwk3wuC/3hd16aFtKHla7Ml
nBIIvtldx6Gy25DDu+qD0wRfidcfv/tkVzvqdxou8yX43k/h2v2W/nY0q3I9
0u8BCWTdKq7fVepAFKm9Xq8InrPfWmRrFkDoF+71zgT/1TcXzpE2dKKvDd+G
/38fQ/ZjO0mhS53IRTTe8cttgpfS58nrSjrRnfFWyRKC37ck8ehqW3ehN2R1
6izBp6kMUp3Lyy4k8SxwlQnBr8rGpxqeTXahaKHuriaCd6dQ3bk+tW50vn/p
qhfBw5nYr4R5oxvl3Lbk6BC8fLSpetitqhtll/3mVSX4Gh/Y+f2zcA9S33Gn
x9ibBM9sz07QzXpQwk7jM/e8SDCvpjx+43EPOiQmnzzpSYK6re4/h3t60I/w
hFdehObOUgUPSvei6PMfnTYTOqWKujPvZC+KzJJdWrxCAsdmKxdaQi+S71J0
myV0Y0Ha65CBXqR1LaGHTDyfH1HY/1OqD2numDhynNAal+Z5bGz6EH+l6PQX
QnumRix8iu5DfcnvOo55/f++2UM50i19yLvg30YyEe+64PvC3kL96D8DvGyW
0NwGxYla3X50wtsieonI78KG40yx6/0oo7pSZBvhx7XN0feO5fUjLf70Z36E
X5l5gXNRX/tRgfs+rwU/EqgU9CuW0wdQ2eazzXGE3yGyekvD5gPoESdhzImY
jwILZemFOwMofXr9H5tbJNDagU3+fRhA631jDnkS82fZ9eDgzMQAWsGTu7nw
Dgm237FhTwix0GWxmIbNxPxvmdyhYLaR4N/wnVFFBP/nh86fVN7DQutOjpad
JupHfcfN9INOBC+33u3x+v99rftGTwT7slDAC8ELeU8IHmYb0tTus1D+1a29
0nFEfbqSVaxesdC1ax4h2US9FrCluyYKCD7/foztRtTz1lX3DSZrWaiRIXvw
+Bti/rNasB3B25tEtm758JYEc5HJ1x8tYyP/izcD5HJJoHN1cYO5KBu9/o9Z
W1tAApqDaYA/k42s3EVuxn4i3ncRFVF2sBG9/OjWJ2UkKPvxfkpMm43+nl5j
8JlYfwbb/+66TfD3Y1eni8x6ElTOOr+wOcFGcE9P9CKxftcdr5LT8mIj5SNh
6oPE+k6TbVXSDWSjVIWDyZEjxPzdPaP0OJIYX8d7+7VvJIg/09ujTPB37fxE
0nOC9w0WzLrWv2GjlZ4XulctkSB6zP3Lnmw2kiVV5KXxksF3v+C+5EI2svz4
QSpCgAxbL/a3WBJ8Pikjt5gjSgbeSS0eg1o2qqtbt1dMkgxXNldrX21ho6fL
IkaL//975GoRwYkuNlLZOfc1VZ4MN3K0SqMH2GjwQKd5zy4y6PLWFF8fYqPi
o/zyhwneZ6lRLBO5bPRwMTNAwIAMT6MpdQsTBO9RDdyEif2ylfbLMuQ7G418
zxW1JvbTD64ZW4yn2Oh0iHr4pBMZhsrzjukQfHnALFi48RIZTEwfrHIh9KaK
utIlPzLkDlxRLiae5xV9M3glhAxl1T3NeyfZqLBkZyZ6RIbxGMnWb1/ZKPb3
OmfLJDI8ZAqsKx1jo4/XbE6WZpDhhONtq4/DbMRVSGH5FZJB5/Aap24WGw1x
ybrhVWT46HlsQqyHjSYeKH+faSNDLN83f69WNjp2+D+trEEi35mY3J+EX5yb
0wkVP8jwqEuOL5jws/BJ+50dPBQIvzDatZPwu9Cq+fySMAV+r5O5N/eWjY5c
HVd4KU/w81GRsIwnRDzU4+J3NCmg8HRwe/w9NkorOU2vJfj9YmTY0Wg/Nnqi
+pTj60oBe5/B2Scn2Wgx79WavHwKfD6aeP82ieDd8a6QhmoKOB080ufEw0aS
v/xcLfopcLRNXnz3OAuN70rxKlhB8DPJ62rMBxaK4rXy+H2MCiHz95SGD7LQ
SBMPX/4lKkh49y9rVmQho2Zzm+kQKjjHfPQPFWGhH6bsnJEPVOAxs5AvejqA
Nkjv9p6nicEsXjdT69GPeGSF/K1XigN529dZi1c96KG86rXnG8Th/tDylba6
PUj1b7CPm7Y4dHl5sioHu5GWTqN64nWCn3NPxweTu5Gn1qYf53kkIFtCULDN
uhONu/FnuEtKQkObfLz20VbEVpmKv6ItCdvFrIxxZQtSrtao4z8rCWGyKfp8
u1pQKeNtaG++JHTEvRKoXdWMclf7zNGOScFclcftXsEGpJvWV8EtkoZb3SV0
v4IyJGn49feRr9Jw8rdpY5hiKXr/25GqKCEDl+vKnj6KL0bPUy56yvnIQNf4
t4ztDR8Qr92/KStpGrwb+TIz9zgF1XQFhOwZpUGsReT8QZW3ON6s5fxLHjqM
5W6OdpR4h3Wv5natEadDuPop2Vih93j3LT1qqxEddGHiSeOqYryg9OiDdxYd
mlfDHrH9VfjgcNbvUDcGJBjOhHxNbcVmkhcC8oMYsPDt/C16YRs2DJMcuRrH
gIz/WEonqtvxnp3xkfmVBB/zaAn/G+3ECs9ucreSmVBOG/KapvbhJt2VStYE
z+5/fm59EL0fp/L+3DSuzgR6g2iqxJYBTA79WSRow4SWe5wtpGgW3rZBLSLS
mQmL6q8aQshsHHlr43VrbyZsu9XGcXvIxr6GKfufPWRC30KdyfK7HNzQF7xi
TSIT3mm2T53hHcSU8zJlKWlE/07VwnTvQTwV0ih7Pp8JYfLLHmZ/G8TbrrzX
NSkh+Oa/rwOmJ4ew0petHkeqmfAkMzbJtX4IW9WzvM4RfHfqdHPs0O5h7DHa
4xVL8F8894DD/RfDuGi+ga93gAm9fIIhVgIj+PolRWnZYSYoem9Kk3AdwYna
hUq3x5hwne0YVdgwggV+RW2YIHj38/a1R6XkR7HsrmYTy0mi/YfRsU1Bozh6
6kpoLcG/H5OZd4v6RvEP/5mNegS/3ooePlSznYvvJq4criTarynX56r7c/Hs
7EqRQ0T/dQEVnjM1XDx6OfFMHzF+9gsZkTHRMRwtM7/pMvF+Khk+r7Acw88W
tZaRiPioDgIftB6PYa/9bzeUEvEb5JG/BbSOYX5dYQU/Ij/RxmD9GsFx7KIb
rmhE5H8mJP2VwN5xnKt1+I0i4Q/vl401mm7j2Kjf+IYc4Z+Idc+5Y3HjeMZj
ZpUe4W+pwDMFB4IXLUga3wMI/xlKD2NNx8bx3oErGtwEJjjYetBk+SdwpXT9
YW9i/i5drF72bcME9qK49O8JYkJT9LajcXsmsHeTe78aMd8kRvLk3sMT2MCw
NuwSUQ87SWEWnJMTeJ1/mfNPayZQKvwKglwm8NXYBxuwAZGP056WPZcm8Ij3
YHwfUV9PjWgcIc8JrL4PjZgT9SdwwS98FaGpN59sUyTq83IlpVeDeJ72qO/9
RV4m6H2tWP2eGE+s+ukMfYoB1tLBIWGnJrBJer+JQS8DWjzorCaTCRz2TPLQ
D6Le0+5bh0ehCfz7vaurdA4DHo8qLv++dQILe86pdBHrI/zPt6tTIhP4e6Wf
xNY7DKAJX/qePTOOw3QcHpDcGRCwOXPOkOBjoydfll7aMOB/FdppVJNXGgdw
XAFRluqbECBCYCCIoJ2xwOCSe4EALrSeIAgtm8soLYtaCbLIsAgMKoKiRAUp
IxaIk4JsKUQi3ABlVZbIKoGQtyTsKOBQGHCZ24//L/c87z33uef5nfeOP02s
f12Bs++2n0k29nOoztuA9GmUvCr1iKSYQivXUz0TDtPo3JkPebIPDLgp+Oaa
nsY0SvxU3P/xdwbMXuh/s7dnCgUvq9X/9IwB3ThMbtOpKRRS1GhhxWbAJ+f7
m9r9JhHrPHPCfxcDWj/X2bqRMonWBIfibmkz4H4n8eKujgnk40iLfT9oAj92
+Hwos51A2hoG6MYFE7jPq/IYWlShlfkwtr2nCRQp/3GKm6dCgbNs6Zb9JjD5
8ODou8Mq1GxX4PXVZhOofcHBPjtHidb/nrow5WgM93JDCk33jaHxdU5luk10
eP9gdKjqiALV9KULNjykw7hjzL9qDYwikV5Q+p0QOjw32MqkG4wiS9R1L24H
HYq/c3+14/EIcg9ZrGoPM4IiW8uL/JIhpHhtwzjPMoSm0WMJkfJexDpR9dLJ
0BDatm4+XMjsRS++PGMsXjGAFh0yj6IfexDvWoF2zK8G8LebufYuGq/RM/uI
bC07A6jYeUgzK7ETyZoPvjP2oMEAt9VkaUsjerN+k1eDAw1m8b2FPXca0Lqp
4879DBp86vZrb79vPapqq5K4v9eHNvcSTsve1aJKE32vo4/0IW/Lw4KTmUJU
whPfOfCJCn854BPXJk9G+T4bw9mzVFgbnllZr+aHzD95c/lDVOg7+xyox1wF
1kai766IqJCWojRnTT0AnJYHJ76IosJsgV5JRU4x6GK56TI3Yz9GSLNkVnUg
PeSGpv3/KHB+j47TtKYEeE/s9k6fpcDtdQnRnh8kwFkx/4tGLwXO5BWI/zvU
AL4hbFPoRRQYyUrdeiW+GcTwJK7OjyiQyupcf/lsCyg/Fu7Hv0OBUr2C66dc
WkGm9blxi1gKtJvXc6NuaAfXh7+BM174cska2LRyrgO0x5YfnXGnQB/tdUY8
h06gZ6W2YMrG8860YpWp1QWowsntdvso+L6v2aDv2Q24epKeATzfcZqr348r
pSDnq6H6aDn2XBxrJL+vF3AfOipXBgg4J3oWFuPQB2zpDWrlUgIGFr4z2Jbb
BzKKsnLbmrAH1//AD/TvB91PSsctJQQ8GJKm2PmiH2i+OimpqyHgPyvCpu/T
BsCir8vnNDw/f1tm1lnaPQA4c6tnGrAn366lNR63GgRB6h89bPgEdP3ik6To
2iAgd4hp/84jYOuVpurIvW9A6/eF5ydu4/Wemn/Ji/7z/bGPefUtAo7HudqN
YJ/Zte+/K8I+JGY/uw9QZOD68qXQGewLzbT3wmtnZaDSfznqOPZHm0LIlz+T
Af+eR9eUiQS89JPUe3pFBnQ9l74VYB+muQzOFzgOg5JCv77H2DtGe/wfbLsx
DOpuqrpbsAdR3sfvzbqGgX2Szx7jP/+3ap2OVW0fAXuMbPqKsLdqwN9JD+8R
0NGVXBGAPcYJ2/84OHsEzEZYPHfFnru+aizePTQC9F1jyIAIApav5VjzaHIQ
HfKvXXwuAR0dv54s9JaDIavZLGOcM0bFQ35ZcuDySGXdGk5AhgmcEnXJgeaC
s1o+zvz6pQWR5ijI9b1gJsD5TEjRS1+nUVAccbpsDOfAExUuj6Oxz9xKm7/G
622cWWKmlI4C0XB82iTOzbeL/6apxD4LurtLiOvx1rO8zdNSAPU1lrQM11tS
W9PB/YsCpHdFieT4e6SdHv/Jx/7SNZQasLAfeb20y4aeChAZEePQhffDplSd
SwYrAOWlu+9d7MdlRvsfiwkKYC9re5WKvUh/Ijh0/L4CWDuaKkqxF9UDL6cu
CRQgc/OBuS1JBPwc7a6tqlMA9KKSk51CwMM/FKnTXyuAwHDuki/24c/R2gW5
SgWYNNMVcrAPzUN1dc7+gb1YT9yMzSBgjoXuxYvqJKiY7QwazsT7c8lUJaGS
oNZ1ruVHHgETqsdunWSSYNhm6+5D2IflUvfYvXYk+M21hgqwD51rUxqPskmg
upJkEJVPwCMeVaF8Don7ca1pshDXP9F7lY19lt3eUpEpIKCn/PJbk2A8zxcU
x4eXYr8ZpooPRJAgqO2+NEOIz5u/Xc+9eBJc5Tw9ocQ+bIzI3ml5gwSfa9nV
XERAnYDE+GXsN2oSXQhxPzF2O3Sr5ZDAaZClceQlAWP6Xcac8kkQ1WwUlYH7
b4k0S3rBJ8H/AUNtdnE=
           "]]}, "Charting`Private`Tag#1"]}}, {}}, <|
     "HighlightElements" -> <|
       "Label" -> {"XYLabel"}, "Ball" -> {"InterpolatedBall"}|>, 
      "LayoutOptions" -> <|
       "PlotRange" -> {{5.362918857714484, 
         9.999723257521577}, {-0.8582829872633684, 0.66489067088677}}, 
        "Frame" -> {{True, True}, {True, True}}, 
        "AxesOrigin" -> {5.362918857714484, 0}, "ImageSize" -> {360, 432}, 
        "Axes" -> {False, False}, "AspectRatio" -> Automatic, "DefaultStyle" -> {
          Directive[
           Opacity[1.], 
           AbsoluteThickness[2], 
           FaceForm[
            Opacity[0.3]], 
           RGBColor[0.5, 0, 0.5]]}, 
        "HighlightLabelingFunctions" -> <|
         "CoordinatesToolOptions" -> Identity, 
          "ScalingFunctions" -> {{Identity, Identity}, {
            Identity, Identity}}|>, "Primitives" -> {}, "GCFlag" -> False|>, 
      "Meta" -> <|
       "DefaultHighlight" -> {"Dynamic", None}, "Index" -> {}, "Function" -> 
        ParametricPlot, "GroupHighlight" -> False|>|>, "DynamicHighlight"]], 
   {GrayLevel[0], DiskBox[{0, 0}, 2]}},
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{5.362918857714484, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox[
      "\"\\!\\(\\*StyleBox[\\\"r\\\",FontSlant->\\\"Italic\\\"]\\)\[ThinSpace]\
cos\[ThinSpace]\[CurlyTheta][\\!\\(\\*StyleBox[\\\"M\\\",FontSlant->\\\"\
Italic\\\"]\\)]\"", HoldForm], TraditionalForm], 
     FormBox[
      TagBox["\"\"", HoldForm], TraditionalForm]}, {
     FormBox[
      TagBox[
      "\"\\!\\(\\*StyleBox[\\\"r\\\",FontSlant->\\\"Italic\\\"]\\)\[ThinSpace]\
sin\[ThinSpace]\[CurlyTheta][\\!\\(\\*StyleBox[\\\"M\\\",FontSlant->\\\"\
Italic\\\"]\\)]\"", HoldForm], TraditionalForm], 
     FormBox[
      TagBox["\"\"", HoldForm], TraditionalForm]}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  LabelStyle->{FontSize -> 16, FontFamily -> "Times", 
    GrayLevel[0]},
  Method->{
   "ShrinkWrap" -> True, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "ScalingFunctions" -> 
    None},
  PlotRange->{{5.362918857714484, 9.999723257521577}, {-0.8582829872633684, 
   0.66489067088677}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{None, None}]], "Output",
 CellChangeTimes->{3.899453010905994*^9, 3.8994536125323277`*^9, 
  3.8994564421215*^9, 3.899456551648447*^9, 3.899456609742175*^9, 
  3.899456842605054*^9, 3.899459123501745*^9},
 CellLabel->
  "Out[620]=",ExpressionUUID->"cc3f9560-780f-41e5-9567-8b9a258c8401"],

Cell[BoxData["\<\"/Users/vojtechwitzany/Documents/GitHub/Exact-Solution-\
Spinning-particle-Schwarzschild/SpSchwMeridional.pdf\"\>"], "Output",
 CellChangeTimes->{3.899453010905994*^9, 3.8994536125323277`*^9, 
  3.8994564421215*^9, 3.899456551648447*^9, 3.899456609742175*^9, 
  3.899456842605054*^9, 3.899459124187313*^9},
 CellLabel->
  "Out[621]=",ExpressionUUID->"4a1027f9-c4ed-4917-9e3a-3592319f29d0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"GenericView", " ", "=", " ", 
  RowBox[{"Show", "[", 
   RowBox[{
    RowBox[{"ParametricPlot3D", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"r", " ", 
              RowBox[{"Cos", "[", "\[CurlyTheta]", "]"}]}], ",", 
             RowBox[{"r", " ", 
              RowBox[{"Sin", "[", "\[CurlyPhi]", "]"}], 
              RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}]}], ",", 
             RowBox[{"r", " ", 
              RowBox[{"Cos", "[", "\[CurlyPhi]0", "]"}], 
              RowBox[{"Sin", "[", "\[CurlyTheta]", "]"}]}]}], "}"}], "/.", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"t", "->", 
              RowBox[{"t0", "+", 
               RowBox[{"sp", " ", "\[Delta]t"}]}]}], ",", 
             RowBox[{"r", "->", 
              RowBox[{"r0", "+", 
               RowBox[{"sp", " ", "\[Delta]r"}]}]}], ",", 
             RowBox[{"\[CurlyPhi]", " ", "->", " ", 
              RowBox[{"\[CurlyPhi]0", " ", "+", " ", 
               RowBox[{"sp", " ", "\[Delta]\[CurlyPhi]"}]}]}], ",", 
             RowBox[{"\[CurlyTheta]", "->", 
              RowBox[{
               RowBox[{"\[Pi]", "/", "2"}], "+", 
               "\[Delta]\[CurlyTheta]"}]}]}], "}"}]}], "/.", 
          RowBox[{"{", 
           RowBox[{"\[Chi]0", "->", "\[Chi]0qr"}], "}"}]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"qr", "->", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "\[CapitalUpsilon]r0", "+", "\[Delta]\[CapitalUpsilon]r"}], 
              ")"}], " ", "\[Lambda]"}]}], ",", 
           RowBox[{"q\[CurlyPhi]", " ", "->", " ", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
              "\[CapitalUpsilon]\[CurlyPhi]0", "+", 
               "\[Delta]\[CapitalUpsilon]\[CurlyPhi]"}], ")"}], " ", 
             "\[Lambda]"}]}], ",", 
           RowBox[{"q\[Psi]", "->", 
            RowBox[{"\[CapitalUpsilon]\[Psi]0", " ", "\[Lambda]"}]}]}], 
          "}"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"p", "->", "pp"}], ",", 
          RowBox[{"e", "->", "ep"}], ",", 
          RowBox[{"s", "->", "smp"}], ",", 
          RowBox[{"sp", "->", "spp"}]}], "}"}]}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Lambda]", ",", "0", ",", 
        RowBox[{
         RowBox[{"PlotCyc", " ", 
          FractionBox[
           RowBox[{"2", "\[Pi]"}], 
           RowBox[{"(", 
            RowBox[{
            "\[CapitalUpsilon]\[CurlyPhi]0", "+", 
             "\[Delta]\[CapitalUpsilon]\[CurlyPhi]"}], ")"}]]}], "/.", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"p", "->", "pp"}], ",", 
           RowBox[{"e", "->", "ep"}], ",", 
           RowBox[{"s", "->", "smp"}], ",", 
           RowBox[{"sp", "->", "spp"}]}], "}"}]}]}], "}"}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", "Automatic", ",", 
         "Automatic"}], "}"}]}], ",", 
      RowBox[{"Boxed", "->", "False"}], ",", 
      RowBox[{"Axes", "->", "False"}], ",", 
      RowBox[{"Lighting", "->", "\"\<ThreePoint\>\""}], ",", 
      RowBox[{"MaxRecursion", "->", "10"}], ",", 
      RowBox[{"PlotPoints", "->", "500"}], ",", 
      RowBox[{"PlotStyle", "->", "Purple"}], ",", 
      RowBox[{"Method", "->", 
       RowBox[{"{", 
        RowBox[{"\"\<ShrinkWrap\>\"", "->", "True"}], "}"}]}]}], "]"}], ",", 
    RowBox[{"Graphics3D", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"MaterialShading", "[", 
        RowBox[{"<|", 
         RowBox[{
          RowBox[{"\"\<BaseColor\>\"", "->", 
           RowBox[{"GrayLevel", "[", "0.4", "]"}]}], ",", 
          RowBox[{"\"\<MetallicCoefficient\>\"", "->", "1"}], ",", 
          RowBox[{"\"\<RoughnessCoefficient\>\"", "->", "0.65"}]}], "|>"}], 
        "]"}], ",", 
       RowBox[{"Sphere", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", "2"}], "]"}]}], 
      "}"}], "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\<SpSchwGeneric.pdf\>\""}], ",", "GenericView"}], "]"}]}], "Input",
 CellChangeTimes->{{3.899450898886588*^9, 3.89945095614196*^9}, {
   3.899451114989605*^9, 3.899451117399693*^9}, {3.8994511490999823`*^9, 
   3.899451166196763*^9}, {3.899451257235427*^9, 3.89945128810594*^9}, {
   3.8994513392422132`*^9, 3.899451357872766*^9}, {3.899451398126931*^9, 
   3.899451428798518*^9}, {3.899451492316065*^9, 3.89945149346975*^9}, {
   3.899451589628129*^9, 3.899451602447603*^9}, {3.899451635195657*^9, 
   3.89945164741083*^9}, 3.8994517911248283`*^9, {3.899451938181057*^9, 
   3.8994519601127567`*^9}, {3.899452102208276*^9, 3.89945214798314*^9}, {
   3.8994523320452023`*^9, 3.899452336970687*^9}, 3.899452410177084*^9, {
   3.899452621968149*^9, 3.89945294924721*^9}, {3.899453131037383*^9, 
   3.8994531472685223`*^9}, 3.8994534166150618`*^9, {3.8994535114823647`*^9, 
   3.899453525162257*^9}, {3.899453562261496*^9, 3.8994535626203012`*^9}, {
   3.899454115993826*^9, 3.899454142450323*^9}, {3.8994541974636593`*^9, 
   3.8994542012442904`*^9}, 3.8994543302950153`*^9, {3.8994544395800657`*^9, 
   3.899454463400517*^9}, 3.899454529989558*^9, {3.899455060561042*^9, 
   3.899455074173691*^9}, {3.8994551578206043`*^9, 3.899455164255217*^9}, {
   3.899455378689652*^9, 3.899455424447988*^9}, {3.899455732079425*^9, 
   3.899455753859284*^9}, 3.899455831048726*^9, {3.899456666943633*^9, 
   3.899456668563805*^9}, {3.899456728148431*^9, 3.899456771027162*^9}, {
   3.899458000846031*^9, 3.899458001288327*^9}, {3.899458064153556*^9, 
   3.8994580795362186`*^9}, {3.899458133789674*^9, 3.8994581634392033`*^9}, {
   3.899458410179929*^9, 3.899458410376285*^9}, {3.899458542506385*^9, 
   3.8994585429469843`*^9}, 3.8995348414389553`*^9, {3.899534946969586*^9, 
   3.899534947161831*^9}, {3.899535087130801*^9, 3.899535121578945*^9}},
 CellLabel->
  "In[632]:=",ExpressionUUID->"569f6e63-76b2-425b-817b-b9eb6540727d"],

Cell[BoxData[
 Graphics3DBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.5, 0, 0.5], AbsoluteThickness[2], Line3DBox[CompressedData["

1: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
YSEBiWK8pMmtdna/4lsR2/HlC44T88Ap7vTmA3a5GWYJIezpKs93ho/Og0X4
7dIC7Hm5b2OTXrWiVzIaWeSBeRBmbR9uwl4Qd9TvQ2wr+gNnZ83a50H84qY/
tOK8pD0H+E6UR7UiXr4XTddJ87DTc0PZEnvGozcJ08GtSGf5nkJI5DxwaOUx
Ce7iJeVs3pp/wrkVOQpuPKw/OA+KNV+2BezmJX3Vfuk2fbQVKcV8PHTbZw5Y
442f8EjykvrUNw+rDLagS6VFMvLbZ+Hk2MSC8V5eUvtuP0evgRa0RyD9xFnW
WRArOaR0ATuFjrxS0t+CfkwIX/ZgngWLuI/OV7BHNy1tPd7XgvTuprwuo58F
7Vj6LifsAfyqe/W6W9DfGaPbyYszkGvp7BaGPX53ma1lewsqzK9to1TNwN5H
Gl8rsTcFy34NqW1B+1/MuLjYzcDBsh25B2R5SRtSkqsdWS3ohImHYkz2NHy0
3sL+D/tp+q1hd+63oGxPc0JUcwqu1g2/MNvPS9JwDaQrCmhBrNz9nHZHpyDy
a7LjJey/l3vc1/1b0PLJrskctSmQuhOqbo395cWdV/z9WhDHLdVPOnJToEm0
NThgn902pRh6rwUdvJji6s6Pv+c+k++L3dT7HTn+TgtyMV/a2jgxCQ4WGwkp
2Plrti9X2bcgNil6kwfhk/BsVKtpAvuYtHwT19kWFHHUIo3m1wQ4vtD9dF2O
lxT559HSx90taEj8+ws1h3HwWNFxlJHnJaVHsJjN7WpBCdN1R0NsxsG2+vxP
Wey5sk6lCtiv/cmYabMch1KRqCNy8tT/t/gZmC/Wgt520V50MRmHXN/Hq4rY
j1Ur83wVaUFxUuL30mEcNvXHKqtjF9RX3d/K34IaV6d+8XGMw99qvjoD7A9P
vNT+y9KCbr9X2LyWOwY9xT0mN7HflDqTcQT7teua17Uzx0BDNlTCGXtLyAyz
77YWZFpr2PI8Ywwm+WzmXLDTTf2o28zcglCaZrFSwhhk+abcccNe4y2tx8rY
gn4ud5JvhozB7usn9byxp9E6aO2ka0GaPwzFhi+MwdgZPraH2Nl5r0tpLpOR
vfjfoy00YyBkSSzFY9+yERQYskRGHKBnI/53FJoE3ksnYv/T/nCwdpGM2q99
jHRZGoUaTY0LSdgXgg6/Mlwgo7sciX/Zx0dBj4PhYzL2vl2n2cxmyaiZ2YJH
nzwKgaey+dOx23idmrYfJyNph9GbNSmjQKFp3pqJfaL5/alPY2T0r/zhMl/C
KIg7SM5TvaZ5MXlulIzSfmkF2MaOgmTVh9Yv2Jn+HbjgRiGjmAcCn7Y8GQWJ
iycfZ2MvJq5X+QyR0R16eUONO6PwbCWtMg+7fNS3mMgeMrr6sD6/QnsU6N9o
6ZVg553wnGvpJqNjbqGJXCdHwdEzYpTq1W84dXix7213CbeGUbAp3OpTiv3I
9aX1l51k9AaKfTcrjsKjyOBXCLvTQ68rKT/JSL/0XMYJoVG45U1KKMNuoXih
iNJORh4FNyujeEfhufMD7q/Y6V+JckljZwzJHR7aPgqwzfMB1YXazSs/tpJR
RTtZ5QHDKPQbz5uUYy/dHyeR30xG7y5ZSVXNUECHQZRUQc0H1ox7f5rI6O8J
RleecQpc2WLFWok9cUtC22HsNSYDVdeGKMAz1XqO6qGuhwPLGshIQE3Ve0sH
BaQf6HRRvYB2qHsTds/EvP5zZAqIaurzVmG/2OaspFFPRqesHHXTflCgeJuf
HtXbAomh73Vk1CMXrHjqKwV+lbllUF3ew0+NBbvrz8nMF8UU+E5SJVN9rj8t
0qCWjIxpwpTGcynwZmDvMtV9jmcQLTVkdFM2wOBRBgVOf3gj+w37Y+PAGB7s
lsW/hjtTKEC5uucY1QO2aE2bVpORL5Oz/94ECihf7jxNdQu72RMvv5HRlg6N
3d6xFJBNRuZUpwvxedldhfNk3rz+RxQFolRbrlC92HFpTgT7JsVsb+EnFJjb
w29N9bVdRlpXKskoQUdP4WYIBbzdH1+mumpB9OvkCjJSE5aaQQEUSNqvaEp1
+4OkxZFyMip30Mpkv0cBbVMmHapHpTZpS2E3ZnjvYXmHAmqr7KpUT+P7nmD3
lYz8P5zR+uJCAbMdWmJUT93jpDtLwnGzv/Pb2IYCI381R6jxud8llHQAuyz3
UkeyJQXWa9nLqF5Y+mXlNiIjp38FZUsXKGCtxhRDdQ/VyKTVEjI6USGSHGNI
AWbeJ4pUd9GSWqErIiO9M87ZnaoUCI/rV6KeOzl9u+7JQhxPLY3qvYoUYDwq
N07NqyNP+xOCCshoinx9wHsfBQ6Xf3pBdRo5Fe1t+WRUtBAvJSpOgWyfo+PU
/Kz5XvaSO4eMNrx6Nl3dRoEt2Z9PU/O51N/wkOQnMmp6ZTI60zMC0n0Vqv/d
o7rcsBsfcd1IvW15tGME3Bh3J1Lvnd1Z+v73H8golXm6L5I8AiaPcjdRXdf4
QpD8e5z/M0vzStUjEENyKCyi5u3hyeZD6WRUHexkdTdzBN6Xy07nYz9bnHFV
7w0ZfWcsd2O6PwJBDH8dqXXDjzLr4RJDRl/a7e1lpEbgpxVtG7W+JYm5fs9+
RkZ8Gj5fvMVH4ML2uDcJ1HvENLhjJZqMfngzbDQIjYAT13V7ap28uflukVcU
GQ0cd8u4zTECDmqxM3HYxybe/L0fQUa1ZXOnS/8OQy/lfHEMdgWbVveYR2T0
x4apzah+GDxfn70Zir2IjfVysQ8ZOYobkXxvDcP1T65q1DovbqE7T29LRknb
C0/NlgyB1U8Ox/3UOrkl6oiWDa5vfOoKJ/KHIJbXj5Hav/L3Vgc/vIbPpfC6
+PMvQ+DwVvy1NHYOzmVhtqtkdHqtkJdIHYK8Zvqi3djrH17X5ruC62rSBcPw
8CGIPgFFAth7hvJfSZuT0YKXJt0BqyGQDwhrZcBuaqJ50MAQ18Ob5x09GYdg
XbrBuQP32fz8CPnnKmQUyTPyVMR4EPSV32o7YbcwV7SW2kpGiW7Jd4pH++G9
6YdH1HngmOcXo1PvmpEt41pEjHQPaKWGFtvg+eRXTVqwV3oz+pSgd+W8cA9Y
+o0sXMI+vRpV+iGtGUXO7TohwNED/Gxvd5ti11EwkOZIbUY/WBwOx692w/ub
Jne0sKNAXdrON81IhyduI7W6G/7Ye/+SxD4Z7vbB/lUzKtJSay6+1g1iL6ci
RmVw/Bko/56EN6OLRZ9yF5K6YHQu4YcV9uYJ2ZA2t2Zkbbc29UygE6YfvvU8
Jc1LYhElG1kdb0aTLUFJuSw/QdGtt6RpDy9pe/2x23e7mlBuzESg+1ITRLKq
+7bt5CVZ0Y2//MLahLKce11DDPLA1eZ6Tc52XtLxcz3tQyxNaMrblEdWJA9+
Pp/pT8LudGOAkxe7SMFOlqbpXNBMnVt8gv3MX/5QL+Ym9Lm/cp3/cS4MhVxn
uoHdTljL+wRjEwplPTj5qS4HLDKkFoSwf9ifcaWNtgltkmncPHkqGzRDl4ru
s/OSsr0GVP8sNqLqa1kXU05kAo0Oi4w+Gy9JpKFc8FhnI5qqpowednsLvwu/
+zVuw3momFzTnNqIwii8TAt3bqDBASaJp1t4SQdNEmx/E40oJS6INaAvH+n+
GZthX+MhlQjuq80aqUdHbyQ3PNzbjBjSZzoW+nhIpoVNTIrD9Sgq7sR8qnIz
evk76F87dpnmAu3swXq0vvH4X8WxZiTNYCNcjP1o5rna7L56xDgv0PLPtBnF
3F81uI/d8GRdQ86venS2l+Li/KAZVR5w9uTCnvEhbTivvh6xZrZ7G/U0o1Sn
7EmFXh5SUcLHk8W59Shd7HHJpnAyMncla9zs5iFFH5/6VRlYj86pcweLLbQg
N/UScnsHD+lrF60nfsKibI04G/38dmT9IOWKE36vlTx/G8hn8wM52r89pqXe
jUYNg8YQfif27KiLIVNqkUBwLTOD4BC6a71k1h2P34NlW/0ixqtRUMMd7ofT
04h5js9OVZeHNFwfeqidqxyVxAf2Ghevoqq3bGkdt7hJjHL5oSi2AHnY+Rc/
FacjjRxv+FF2hIvkNkC5zLLlPVryyV7SK2Ag7YxQEu/v4CCdsmGQTu70QF2q
75yzNZhJ71qa0rq4tpPO8K3cDwx7A5ZRrtsMedhIhp6bDdJsWUmE4i6DRJQN
b+2kPR32byclia86nDRjIrVK72xzVyCBU57ux2OZHKQlMxPnp8/oST+HDeu9
/Cvh0uXt+a5kTpLaEcOLtJ00pJAM0Ws6ArXwQGywbLGEi8RjrVdTuLyMtM/J
p6QI1sKzhh8t4qVcpLRN6p5Mi9j3BPRvCNXCF/7AASPsQWcjd5vNLSOCZvx0
tmgtEBaXpj9jl7KytVudWEYOdV+3C0nUgn5c1jd7xEWqIX5lKfcvo7meSJZp
uVqYCv7lO0jiIvlvN1HJql1Gvb5HlsI0aiGI6N32o5yLJO2Ty/k2YRkhMuFX
6VwL6hc+h4TXcJGabS0VvbSXUbamgBNndS2cbd/C0NHCRXJJ+iYy9GoJVdmk
1EjdrgMwiwy5Oc5F0mTnzMk/vogC9n25ofr9BzzYGjD3cTs3aS7TPf/DoznU
lWn6r/VgIxiEb9U0N+Qm6Yt18SYKjSKK+YudLsqNYHtn4fFt7O9E1oq8+EbR
mlTocVaVRgg4f6Q5FLtdzFUzE85RFMUcHKCh2ghqi7PaJdjVh/kCmbeOIjql
nwu5ao3Qwtq+Wfg0N0nZS+CF6yIFcRq0RMcQjeAxFRvbQ3WOax+1ailohIel
95x2I0jvGdAzN+YmXXlaFDd+h4JqwrY9aLnYCI3f3JtPmXCT0sioRKhlBN3f
/Yqz9H4j5Goc0J26wE3KeMlcfOzhMJI+kdF9urkRXF03VZ+9xk1qlbpIF700
gGTo/yh72DdBXGnRoQx3btKQOYfEo4hOZF+y5wuHQxN4ub49VIh9Tmn5imxQ
J6I/8Ef6PfaP2WNKNdhtpNSfN9ztRNVKYXy9jk1wneQhTMGePEc7yWnbic5O
3hg84dwEe4pQntgdbtIhk8cqceqdyElyQ5ndrQliP/QxvcBuyGJjkzHxC+m8
vNCV4tMEdQpXFPw9uEk77e5IVZz8hTYEb7D/iGwCvZzyUA0vbhL6Lfqud/Un
chdg3MFc0AQ2LyTNY+7h9Znrlsos21BInP2Zk/TNMJR57NT5+9wkRz8PD325
JhS8vnKzG/upBYsEK+w3f4uxju/Gdfz0zoeuDM2QLts074B9Zon/1QOBJjRe
pleYsqUZ2B7khfhjL8taSS9maEJjK9uYGJiaQcjvkU8G9l/30nykuxvR3Rph
myrWZtCt03+0hh2NPhSkf9iIjpy5zKvB1wyNZQriLx9wk2yf3TC2/9aAJO91
6x+VaQabU3Rnvgdyk0KNLq+y7fuBWO43suw53Qxm+xVyZ4O5SVp/XYo6/3xD
HtZjdp/imkFK3NXqYig3qc9WXN11dxGSVv/XZvSqGb7V1IdYYT//rrZQ73ch
6qm5QSxjv3Ln3bvr2NnT3u6WqC1Eej+1WY/EN0PACKXTFfuFpwJVbU6FqLNt
97Pvic0Q3eK5FoZ9dZJdQbm4ADF8AZPht82gY7+hVII9KTCrctEoH8mGV8bw
ZzbD3mvuD3nDuEk05qwcVr456Pv6PmHvymao7KrIL8Je1pTQJJj7CXWWC0rJ
TTeDzy5Rya+PuUn+zDWOFeqRyP3VYmkz9i2e2k8qsRfTS8ZteRiBeKtEjF1n
moGWa3m2Gnv3aH20dms4Yhy86VY42wyn2ZveNGDnnuXtjm9/jHhOL6edWGgG
5S3PvnVhd9gvfPuzfAiy0IkqMf3dDKIdZluWsT9r2+ngXeuFOnnak33oyKAX
981m1xNuUljZbFKXtTM4vnh4vZqHDKZhUxlO2M95cFROz8VC9tjs0xu8ZEgs
vpTlgt39kphx3tuXIGKSVryNjwwzFKOc29i1nfYx+16Ig+/mTFtP85MhdV9x
2h3sDvdf/95e+QrY9sWGdQiQIf9yrJ4v9hAz3QEB3QR4LdF/clyUDE7e9588
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
wJvXZUDVTwyJxn/Nep3QA16YuC5+pX4H7x0Mgq6EiKENNwLmMh/1gCHvH5L8
lR9BZ67l0nqqGLJMiHnncq4HBAW0nRUtKIVWNvHGfj/F0GJn76eUTT3gz2OW
fm+Bbvju8O6xq0Li6OZXjUhP7FvP3nvUIdoNdSSVt4djl0h0sTfAnpjOrr9P
phumOG87l42d2nBzcoSrB2iOqfSsKXfDLzMqFQPYPRYVpzSw/2Zr3PzIoBv2
c9gZO5DEkUnlZ7s6zh5gdndwIdGnGxYlqjsdFxZHYdpHu2bZesAVc+FNv6nd
EGZu61YWFUfXXh3w3sfUA/yWNDbdzOmBwh9dW1okxFFu78l/r+a6wdKEkcNL
g164V5orelxeHL2v5hXpJncDEUWON7f9BuDTB6PtO9TEkdeWXZvHs7vBoonu
4PDyGKTu+6jx21Ac1WdEeJdiV9AfsvdgHodryg4G/diXm15Sg7Bvb7Tt+8sx
Dje2Nx9fwr61Z+qlNPa2ztBtrKRxqLCkbCVnJI44LcVYzbO6gYE960OZXeNQ
68pDuWvY7dSCt+VndgNd8D3OxnEcbrrVjHiNxRHv14NLXq+6gRL3xGpn3Tik
nhMVO3JEHIV/My8aT+oG8SmX/ggkTcCd+ad25JqKI27HPo/SaPzdXsmCHbJT
0GPAKHWvuTiSiWD9nHejG2Qc57fnqZ6GNzc32xueFkfxxj61QvrdQC/u+6G9
pHlogdtu9wvi6F4OW2CLXjegFeXWNYjOw/NOhZa3sH9euqvzBHt3wt7/XCXn
obVad9QD7DN03Wci2OlVW5MyFObh1tuyC0+xNxXUKIrv6wYD8S+iRffMQ915
cAthL4uT9JXW6QZ+C8cNmI7PQ+m1TlM+J7yvYmeFFDW6wfD5BHpr8DxENkHb
c7C3J1JZFVS7QeCVe39SV+dhIcv3L78uiqPDPzYnTkp2gzin8MLXfX9h+Npn
/ppL4iil1MXwHfaiu0NrRkN/4fdua/lf2C1b0idcsbP8y7YcHv0LT1cGqDRj
dxDL3zMi0Q16t50TVpn9C3cuhqrSsd+N3xvSJ94NSqYDefKZF+Cw4jn6P+zq
rnnu7aLdoHJ5/1covQDr37KKqLuIo5wNFXKfhbqBvaCcKv30Ajzmsj3nOfZX
rjWCvtzd4Gb2G5ZDvxZgNvPETevL4kibO+rvgwUaqFjP/eNVvAijZmzs718R
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
33fZk23D+p5Z3KfMu7+GqJLpvLm0VQwVljIq14b0Qv7LEnyX9WqIhRXX/r/Y
t18cnZIP6IUSeUuMlgM1RL+UsR5JQwytnYyU0vLuhS+K2oJeHaohtmpIjnNj
X9r84rqzWy/kHBTyPWRYQ7gZFayKYgd0RfuSY72w8rmlYYhVDRG0sENEDftM
/buuwI24T1oyub54sYYos6cun8Qek1KcMF/aA6PsDCbqEmqIdvYF+kvsb6OO
2U7z9sDO6GcmuxNrCG99UPEK+22rwqt8nLhe9q2+SUqqITjlewoysFdMiUnr
r3RDYqXL5HxKDdFYuCnmPWve0VfxaX3dsF9Y3JwzvYZ4J1+7nIP94u7gibM5
3dCJ5L5H82MNseVc/Lcf2HfMSYqN4PrKcb46Irq8hijJ3sjRjt2VqXB88XEX
7LzlunWhooY4NX7+UAf2stfGgUqRXdB6VLj6dGUNkXyVL7QTe3fCvcyTQV3w
8LPAGcWaGsLFx2S6G3v8ST3FQtcumFTctFzYUEPk8pBu92Ef/a/fJ3hvF9wv
4Tk61FVDyEgvJo9iV3jMmS7Y2QmrdvlY7J2tIUjv3B4tsJ7/7a+SGq0Thgs5
7kmeqyFuGpRtWsRuXVF3wk60E8adthRfs1BDhAz4ZLH8SgIpKpqnE5qYnPpe
s1RD/Noz9nEJe7q9//r5yQ64N6e/2p6NTrD1/buygl2uZvM99L0DJurIB5WS
6ITyJvkmll+4LvlvOqcDPtF22arMQSfK4pK2/cWuHuDrvTGjA37IEfOdWUMn
rCVftLE8uCkq9G50B5yKnygPXUsndh5tH/iH3SXMhMfCsQM2SdwwHOGnExov
yqVWsUuXz327fbwDZq2XqjIWoBO+loJHWK6lIeOXf6QDfn7j/nm9MJ34PfQq
nuWMxgVh2o4OyKarvMGfTCecGpdzWe46njVkptgBj1hP3u0VoROXd7yis/y2
3p+KW9IdMJ2ERvQpdILB/57B8nKFoo9fhDpg8vYnBzPE6MQtp3WTLD/MlE0d
4cT7Mx6QILCeTnDtK51n+cSUQJLMYju8tufisIcEndB91bLIctVbUcmmY+2w
R8h5e7MknZh5dmCO5UmcGW9CetthiK/btb3SdIKkxjfG8vfZ1vBzYzs8ftk3
+xkV74PVli6Waw+ltQ9XtMPLK7HDHLJ0Ys+G5xUsv8QZySZT2A5JFb8PVsnR
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
        "]]},
      Annotation[#, "Charting`Private`Tag$63691215#1"]& ]}, {}}, 
   {SurfaceAppearance[
    "PBRShading", "BaseColor" -> RGBColor[0.4, 0.4, 0.4, 1.], 
     "BaseColorMultiplier" -> 1., "BaseColorIsAutomatic" -> 0, 
     "SpecularColor" -> GrayLevel[1], "SpecularColorMultiplier" -> 1., 
     "SpecularColorIsAutomatic" -> 0, "CoatColor" -> GrayLevel[1], 
     "CoatColorIsAutomatic" -> 0, "CoatColorMultiplier" -> 0., "SheenColor" -> 
     GrayLevel[1], "SheenColorIsAutomatic" -> 0, "SheenColorMultiplier" -> 0.,
      "EmissionColor" -> GrayLevel[1], "EmissionColorIsAutomatic" -> 0, 
     "EmissionColorMultiplier" -> 0., "MetallicCoefficient" -> 1, 
     "RoughnessCoefficient" -> 0.65, "AmbientExposureFraction" -> 1., 
     "DiffuseRoughnessCoefficient" -> 0., "CoatRoughnessCoefficient" -> 0., 
     "SheenRoughnessCoefficient" -> 1., "SurfaceNormalsMultiplier" -> 1., 
     "SpecularAnisotropyCoefficient" -> 0., 
     "SpecularAnisotropyCoefficientRotation" -> 0., 
     "CoatAnisotropyCoefficient" -> 0., "CoatAnisotropyCoefficientRotation" -> 
     0., "TextureCoordinateScale" -> {1., 1.}, 
     "TextureCoordinateOffset" -> {0., 0.}, "BaseColorMapIndex" -> -1, 
     "SpecularColorMapIndex" -> -1, "CoatColorMapIndex" -> -1, 
     "SheenColorMapIndex" -> -1, "EmissionColorMapIndex" -> -1, 
     "MetallicCoefficientMapIndex" -> {-1, 0}, 
     "RoughnessCoefficientMapIndex" -> {-1, 0}, 
     "AmbientExposureFractionMapIndex" -> {-1, 0}, 
     "SurfaceNormalsMapIndex" -> -1, "TextureMapLayerCount" -> 0, 
     "Arguments" -> {
      "MaterialShading", <|
       "BaseColor" -> GrayLevel[0.4], "MetallicCoefficient" -> 1, 
        "RoughnessCoefficient" -> 0.65|>}, 
     EdgeForm[], 
     Texture[{{{0.}}}]], SphereBox[{0, 0, 0}, 2]}},
  Boxed->False,
  DisplayFunction->Identity,
  FaceGridsStyle->Automatic,
  ImagePadding->Automatic,
  Lighting->"ThreePoint",
  Method->{
   "ShrinkWrap" -> True, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}},
  PlotRange->{{-2, 2}, {-9.83233586070801, 
    9.945766677189827}, {-9.73722666816273, 9.901858338288188}},
  PlotRangePadding->{{0, 0}, {
     Scaled[0.05], 
     Scaled[0.05]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{0.8567994475001238, 2.1847080538466193`, -2.437815708010185},
  ViewVertical->{0.8995534619431508, 0.4322833846922353, 
   0.06272674409785094}]], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA+JdtxXPz+F963hgasNTEJ2mcPE7iC5zCheaC6Td0wRV
QfTT5ZvMQPSUDeu9QXTPfKV4EP1qA0M1iLbLUu0E0aFGsjtBNEtTyAEQfX3D
lfNgdc6XHoBosSnzpOYB6SfKTLEgetKX6BQQ/fRfSwmI5v7N1gCihXe+bQXR
75ySekH0o7XdF0G0iebOOyB6OoPJXxC9/IWn0nyQ+08uVgfR78NkDUC0SFP+
OhC9snKm/QIg7bHSwBNEi33f7wuip93aGQyiJ02dXASiZRjuV4PoS6EGzSC6
tGn+yaNAOuxPxl0QfS5X9R+IBgCdMpWo
  "],
 CellLabel->"Out[632]=",ImageCache->GraphicsData["CompressedBitmap", "\<\
eJzMvQe4bMeRHnZ0wtz0Eh4yHoB3ATzEh5wzBpEAQTCTy81LglyGZdhdcne1
QctZy5LXktZylG05aJ1zlJNsy9dyzjnnnHPO49O5qs9f3XVm5j7qfd+9d95M
T5/uqvqrqqurqz/44ve+9pVvffF7X//wi8cf+fkv/uzXvv7hd4/f+c7Pj291
v6Np2jubZmiOm358vW4a/Ou4aTZ847fs7375/eb7J6tmtfY/7Wp8w7b7A67d
77e/O/u2b9Ms7G/7XhP+2e/8pnvt/nS07+YofWcZvme/83vddz4ev2KH0J1M
H/EI6PY8H/TvcS3fMb9a+5x+5ZuHnzNg8A+Cnm+QJvkb7vXbgDDXge/cB/o+
sL9783/z/sr/HPHJrMiDbgQ93yP23IWeHZPBSA+l2f2ae/0W+A6iyDFodwDa
7ad2J9Ux/Ip7/abUtxOOPshSIOEizT32dweg0T6g0Vnzq41MQKP6nWRUBAFh
BM0hGO7g2i1pZ5fML8Sni6CDfWk0v+RevwG+04HvnJEHx9rdKrdjY70p0ksc
4S+SEaJHnVMO6RZCcDaGS8oO7Gh+wb1+XUmv867dstb3TXJ/jOl3gna9NNbv
kbGih3pBoXo7dMaE/wblZI/nDO677vVS6htRBMHgYmTrlTmP/3n3+jXl1G6U
R8PaXVD2d8+csf5cZawFsCGkLGuDu1ceHJMLO7ifda9fVU78FjAGNNazUn8P
zhncd8jgBtDIQx8hgI3mSDm7B+YM7tvu9SvKvm+X+2btDqXJPjRncN8ig0P8
KSgiBs990A7N7qpydnZw33SvX5b6vlt+KJvpnnJwxGOsD+5nyOAQ5e5SDm5h
f5kPnpAfv5w8/hvu9UvSUzy4mcijOSNvD7V7XGbcdHBflwfXylqyOvFOovWT
SlqDwTECteChV6TBFSjHOnhK5sR0cF8jg7MzRarGfbun3zafI8o8Iz98KtJf
da9fBDOmOrnUWVL0zyuZap/80+zJSGAYqSxRiI9XnNpz0nQQ/esDQYaA9Y08
3BdELoIxfIWNAQko6xtZyj3z+5U5vP8yeSjyvx4CnSGBewlQRGT7h/lDHzWv
7OBfm8O1DxmVlzXxeVjZt9bZsWP4EhtDVXIeBu2QrXkV0B1pGTuGL24/BsT7
V+bwgo+hql7tGPa3Jf5PkYcmQUKg2Ia8P+leI83WSQ/d35ae/KFV1fhwJIFC
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
mUt7qLJQmQIu4SeqZsElaAAS1Du5GSXo4vqmm246MK/2oiztmXatl6VHzj6S
T4tFMvZjnCNbpYbUl4/sfST41CSisTRaiPw7kYCS8i5FQ7yhytHGNn66Jj/V
Q/vxg/4HJFP2ucgxDsY+MIiroSEGshaG5wsjEoMTjiBEvROdUYjOrUeWHppX
VrAWUZysNzNSdvxyNpne+jBGmvzPgRTyWPhvGWUVNmWIUAW7ps1vSonR2mJ5
olLS7k5xKQLoHlZaKUqaGIkwin8WdpZWQD5Zu0LVAhYHT7onic3AXVorNl0U
m8EJy8i3g/Utt9xyZF7tRQEaTDvrGA1egL4yfAWaNS88TjEd0lgKXXpb56ix
wZS4WGoKiqeQiMloOyucIgY4FErBS5DNN/P1t9jn4z/LTNHhEffC0H00XmSq
ywCtyIQjhxNNg0SmjyLTGQFojSh0Rih6Ix6DEZRbjchY4VmY9xZcZFovMo+e
e5TrnL0Yb4OuD194d+Z36xfeZrd2fJolEqKkdq+JHl1DKmZndusrRF4gg3Ap
xYK/XJ0blSbWgbbOGjKQiNghcFuQpp5L0wCkqTOS0xsZGow03by+9dZb98yr
IcrVwOUKiZR3kox5M1poz+k8J2Hv7r87UVlUKQ1JNcWN4ILCraIRodbKxltK
odFymgsXWO4U6nRqi5CiCI3V7Noi3FppCm7URJoGSZr66EpbaWqjNHVGcnon
Q6M03bi+7bbb9syrIcrVwOVq8HI1tW69VUZGrvzPPg01ox0hqrz8+o4dLEIc
1wbPaW7namLYNtRbqJ0XrWfNLzuxnjwZudNVVIiCpDDl4kwKV4stn3rqqRO2
/5MJUl8UpNYISBsFqXfiMwrSDetLly7tmVdWuHouUn10u1svUh89/ChXVUOU
Ih81shZxfNU5+zsl3SzpQBkUWsWDsIrafZlIB7JqyB8pJEdpl2JIdqYWTlRv
tBSV2TVYT6Wjl6SjA2rGSkcbpaN3MjFKx8X17bffvmdeDVxOeq567OKtsV0H
ixamFa2ZCwCELa7C7laIBewBq2d5KB5k017WVNAxq03MF5ciZL5Ka3rkAGsF
iSmrDQUJ2+zVyGrgDCW56opylbROZ+SljXLVG2nqjVxdXN9xxx0L82qIEtZz
TdRHTWSNm78HyRq3IFID3fuqhSr3nd0VzJb9oHKvUi5DU99IG+nzQvOc+bXA
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
o8/o2xbQprD5kXlZcCNgx7Gak+4cqD9824ctoN845w2SYcy3W64NAd2qsAPL
djByjsi2P1thi8dot/4yXPscntIfIHq4QKRxiO4jdSOBekaWHWJcN3TG1dJG
n4kYR4NoLQF/u8TrGpzEtUqfcny15jLSLMAngtuGZwvsqsMtRWeDZfNqPyNo
f/GLX6wPvvSlL9E7+mxBX19Chduf0csCPgZ7HMFjoMeE3ObM7FR1C3J3DiXb
YmSjNhtMP3LqEVJWf3yl5eHs/PIhD685D6/i9dX9ERD9+ur8tFUTzDS3odqC
2kT0CNTafNiGQI3KFYA6mr2qpVF1vcnAPS0phjYY5Y+GYJDu1o+c0t4vHEA6
F69zcE5AuUPy0iG5xSu9WvBWhOP64Mtf/nJz8Nprr9E7+qzaNd9TuR79Dtwc
2HEEHwNqk1awk8yGh6OwzXm4hXV/m6NNhj93/nMxrCt+dWNwGFlb3sZutkvQ
He3CrkotBDin4vZUl0TUXo9h5u9nOBeXlSgQ7XPdC3eKczmYZ4rQNY/Q1ZR1
YVtShGaLO8NZ6MFw+rrSu8KLQ/MIHBP4GIjbrjgIG9yaV/sZwfj1119vDr7y
la805h19Vl1KZUxZA2wObgvsOFojWi6B2k5Z27TZm+e+aan4Uzc/RWIEkTqg
4kZj/di6+3gnSJmBaWp4kGd8yox080EW28vBMjGfP+sieATwbKjVrhvjAFfk
0roIvuTl6GX2Q0WTWmmgN8nhdi2tIZslagtUfEvaaUEhu1vFfSQAefa2g+tL
rj8mkEv8GwXrmHtrAR6Bu6PWJhA3hNsWwQbKHZxbYNcHb7zxxvLgq1/9Kr2j
z1qImyKmqHlxuJsa4/iNSLkUu/nKFDvq/szVn+Gjbbu9ip94+Nj1j7nklA3b
5njDph9qG3zzs3rhMpSa58+qOIHmT2SrOawrcZK67jdN9WtCOQjph/aPmBFX
0HIq91gWxSCBNkRxG7EHU9PhrsYhmpvkwLqIgx9a2EaHaTQxmjsGfsuoy8xL
qDcP15x2xyPoGMkgTBP+bIi2MDZoXXTAJQi/+eaby4Ovfe1r9I4+a8Hcfm0K
0ssC24Kax25EyCVAx2k0S8RfuPMFC8qvnviq28ocx2x3bGnNabij7wks9/PU
KzRP7Y6v51fJZoHcGIO2v7j5nJsdkrRZMhG5EcIfDYCsHFAveblZgazl33Vy
mQkLyzUPy1Vyl/IS7VKuujx4DUJzE/Pvjn6fKb061gFZGkPHvFsKyZxz8zRY
CsQCgB18K0Ktga95tf/7+te/vjz4xje+Qe8W9OGlVKQtTC+LbFOTFKYRovnw
2vSGJ8b50JqOlOwg+fQtTw9Cc49kyL7ZiBokyqr4qMfgIIJlkCjryXeQDEeg
Dm+FXhITt8vF+lujOeuOYT4M0OJlYRFQE7im4kcEIJtOFQBZTHXXICIr+PWh
ReQGH4U/+v7nJIglXo0iMefUOQCjCNyDl7C7MMBsu2rQ26LVwLaD7o/+6I+u
Dr75zW8uzLuF+ax6J5UwJQ2YLaDj8KwFMp+6lnj21877WmVJ9jNnngniMiLZ
/MD+7ndHgtuahEG0P611hfJi5qazPuctnE4gYbf9f9e2KwhKILjuAfRRy/s0
9mPSD7swuxrw5f744lJsNuPY8iaC7Eo6CqRbB1aDzVN3Tr2bnbCZS2yhpBYK
rvFYF41zOS6joEqoshG1xyShsBVYC8iDH/uxH7Ov1cG3vvWthXm3MF+1CG2L
EYbN78zLohSFXEuiY5SadtspKp70QuSZI9QwZyNLewgQY86DYfDzFz3vEJoZ
BmsQ2pqinRVrqTDFWbMSjK0GsyHUTDP7y8LM33CBSYC1uRn1+xi21QkuEerL
7kiR1WrVSrQ/hctOU9VKvI/MdY2IxRPOFbl7ys3VWbRLY2JLpaUoHI+FtUgH
KCf0UsxtEd0qswX3wbe//W37Wh38+I//+MK8W5ivWrQbN2BcAke9jc88NkuI
56luPlxG5NrI48W7Xqz4ONnI0bJrG5OjcbIl1z7vtaMBfJ/X3hbXmfS3+tpZ
bQPhGPWPHXmsEPUBmnMEG8E8qCCEeXYJaQ/zAd/uYU7YXuphLo6d5wnr/VKB
/jDZKr51yp91mdpIiU6V3YppN1hAdotDew7pqVw2HzTHfDsV0y3XthNT8UBZ
QjlDOAG8Q3FN8G6RbV7tZz/xEz+xOvjJn/xJeregD99JRYw3QIDnIT4GOyfh
pskaAt6HdpfVsueZxAkxRLwdfVVlw1BquwkQbpl3+yCObvMy3JrPRsXw5jNa
KAiLK0RFSv7+AM/KRNgQz9duXTsXnptkLqw+lNVi6LqRJr5upMtn35kN2lNg
LFFznrxGwdoOl23C2g6VYwhHQZqwaCO0gS/BlYD7ne98Z3Xw3e9+l97RZ9Vl
5msqhqBs43YKxqaZ0jg6Zug2XrfsnA+fETl//F2PD8g5R7EZPk9FsWPnS2Ln
JSgejrLDaSMtNRdBHYG/O4m6OwWB2nyU/h/OS/UIruruoE0NhJswC9bMx7zl
aNzEx5TE10AOry5p8IWrdxWx7hyAUd4rxbZzMZgzbQ14AXAJowTXVgQtcg/W
67V9LQ9+6qd+amHeLcxXLZTbYuYHA0jn4GwIAp+1igfcMf3mEdlBefvg1Stf
1TDvFy9+MUqGLYNkmCqnXXPSXdkzc4aXLC/tipAiZNtLVRB7nky/OZRHLiMx
7RsNdHGIjbh3OlZX4MCD0TujEem+O0W6JwMdJdEkss0T2zx5FhNtnsyOQR5H
5x7gXTQ2EK4J2y2sD376p3+6FUH7d3PwMz/zMzX9/yR9Yz2A8QYc8Cmwm8bw
PHg81k7FbZv7fumel+IhNmffNu0Nhtg+p3aUloMqcmpsmTdG+plzz0Qga2Im
TmHSz8rOQL0DrFKPHh2F5YB6P3HsiVFYjnh389YEbc2J9fejS/7UebISIKNR
M6fbPDeGojWn2na0bAIlHylzELMoTVi0EbpH8MJgtzn42Z/92VZ8P/dzP2fe
2Rd9V11uilFxC+04hseQ5ik000SJivPYjWh4C2c3kjYi1XBws4PaY+eoNkGe
BbO5LSgGc0TIqRkrcON0IkM2G/l+JEB5NmFGJ4Hy8xz6g3u7uygyAG+kgXWj
TJTVRacTofmvJbrtrOrmph+W5qY3gnE04yUNqWNGjobTPO9t2bid2eKZMITv
CNsE30WH5BbaWwc///M/T+9aTBuIt187bNtwncM14uQoTCf4uMP0s7c+G5Bx
tsgEYtpOeinxnINzuLx7yML56hG7lbIDd/f3u89+d+gSTkq0+yEZxAEqQxBn
s2Tdcb7+FusexwsE4n7fVRrEaGhdzx2lUyeAHkldZTG8rfDuAMFa9KKVnamE
GKLZPBmWis4xxbYJMI5cEJUJmgaiJiK3qK0PfuEXfmF58Iu/+IsL825hPmtB
bOO1BTLn3DHfNn4j5tpSYM7lx/zM9fYAxIm5rDA/VojjrcEKMZMeMzi+5UR/
DaM9Qx8desABbLm2Abkh5FJMTcToIfWme9/6aSu6CIOlwBoXj8shigbFWiKN
4mxVeqRBata5iTHaDYnvSUbZOTHKc14oYW0ZdJysjqNrzJ7j4a/FJ8BmRZBs
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
9NdJ7QfVj/xNPWL3Ag==\
\>", "ImageResolution" -> \
144.],ExpressionUUID->"b9496d93-4b69-46cf-841c-71c5d06795ec"],

Cell[BoxData["\<\"/Users/vojtechwitzany/Documents/GitHub/Exact-Solution-\
Spinning-particle-Schwarzschild/SpSchwGeneric.pdf\"\>"], "Output",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmVkYGBQA+JdtxXPz+F963hgasNTEJ2mcPE7iC5zCheaC6Td0wRV
QfTT5ZvMQPSUDeu9QXTPfKV4EP1qA0M1iLbLUu0E0aFGsjtBNEtTyAEQfX3D
lfNgdc6XHoBosSnzpOYB6SfKTLEgetKX6BQQ/fRfSwmI5v7N1gCihXe+bQXR
75ySekH0o7XdF0G0iebOOyB6OoPJXxC9/IWn0nyQ+08uVgfR78NkDUC0SFP+
OhC9snKm/QIg7bHSwBNEi33f7wuip93aGQyiJ02dXASiZRjuV4PoS6EGzSC6
tGn+yaNAOuxPxl0QzTrN/R+IBgCY1ZUq
  "],
 CellLabel->
  "Out[633]=",ExpressionUUID->"87f1535a-71f6-4393-9985-972a2c24562b"]
}, Open  ]]
}, Closed]],

Cell["Sandbox", "Section",
 CellChangeTimes->{{3.899188142587391*^9, 
  3.899188145662492*^9}},ExpressionUUID->"f87b786f-c268-46e4-b32f-\
449af04e9eb5"]
}, Open  ]]
},
Evaluator->"Local 2",
WindowSize->{2560, 1387},
WindowMargins->{{1352, Automatic}, {0, Automatic}},
Magnification->1.25,
FrontEndVersion->"13.3 for Mac OS X ARM (64-bit) (June 3, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"8d9b9cb6-9be6-495c-b5c0-65525cbf1cca"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 304, 7, 123, "Title",ExpressionUUID->"66b2ecea-b430-453a-a3c6-cbc44d55d7b9"],
Cell[887, 31, 1003, 16, 102, "Text",ExpressionUUID->"6c3a4c55-95b0-4a5d-b4c8-c61cf681604a"],
Cell[CellGroupData[{
Cell[1915, 51, 244, 4, 84, "Section",ExpressionUUID->"e8e02dbe-f151-4993-a0b6-8c9a41ec76f7"],
Cell[CellGroupData[{
Cell[2184, 59, 263, 5, 67, "Subsection",ExpressionUUID->"9a203dc2-7d6b-4f01-82bf-5a0438d7999b"],
Cell[2450, 66, 7456, 204, 454, "Input",ExpressionUUID->"ab0f109b-116e-41bf-be2b-37a65641a354"]
}, Closed]],
Cell[CellGroupData[{
Cell[9943, 275, 178, 3, 46, "Subsection",ExpressionUUID->"5dc9029d-102f-4ab6-971b-e336275861b6"],
Cell[10124, 280, 4173, 119, 350, "Input",ExpressionUUID->"cad8aa8e-71c6-4f38-9453-4e14a851686e"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[14346, 405, 159, 3, 65, "Section",ExpressionUUID->"8d53d2e3-4d2d-4fb7-9ec8-f7636cb4010d"],
Cell[CellGroupData[{
Cell[14530, 412, 228, 4, 67, "Subsection",ExpressionUUID->"67300c36-f5ac-4153-a131-fb5cf4f192cd"],
Cell[14761, 418, 1433, 38, 116, "Input",ExpressionUUID->"4b2cc0af-bc5f-49d8-8501-ae5001762b5e"]
}, Closed]],
Cell[CellGroupData[{
Cell[16231, 461, 180, 3, 46, "Subsection",ExpressionUUID->"dbf53751-8576-4c99-9ee9-01a91d9dc1b2"],
Cell[16414, 466, 4000, 107, 259, "Input",ExpressionUUID->"da398593-11da-4196-8c62-ea72521285b3"]
}, Closed]],
Cell[CellGroupData[{
Cell[20451, 578, 152, 3, 46, "Subsection",ExpressionUUID->"46748927-ee4c-4370-8de7-b7dd1a621f6f"],
Cell[CellGroupData[{
Cell[20628, 585, 1034, 16, 246, "Input",ExpressionUUID->"3cd38f6a-2e01-465c-ab07-ecded47b75ea"],
Cell[21665, 603, 1472, 27, 70, "Output",ExpressionUUID->"be46979f-e339-4e36-aa9d-139311af1cba"],
Cell[23140, 632, 1474, 27, 70, "Output",ExpressionUUID->"10942286-cacd-4bdd-9ca4-be7088ae2567"],
Cell[24617, 661, 1472, 27, 70, "Output",ExpressionUUID->"295209e4-d06a-41b1-a124-f8c7afc6445e"],
Cell[26092, 690, 1472, 27, 70, "Output",ExpressionUUID->"859266ae-5a36-449d-9a4b-d4fff312fae3"],
Cell[27567, 719, 1778, 38, 70, "Output",ExpressionUUID->"491736a0-8a2a-46c0-b78e-1ae583802fe3"],
Cell[29348, 759, 2363, 54, 70, "Output",ExpressionUUID->"e2af1531-3cd8-4d3a-b435-2f6d2de802cb"],
Cell[31714, 815, 2364, 54, 70, "Output",ExpressionUUID->"30c3248c-e3e4-4813-b506-ad2a7841b44d"],
Cell[34081, 871, 2021, 46, 70, "Output",ExpressionUUID->"45f8236e-38e8-4d15-a28a-70bbaab2ba61"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[36163, 924, 176, 3, 65, "Section",ExpressionUUID->"dedcc5ec-489b-4ef0-aa4b-dbb02f42656f"],
Cell[CellGroupData[{
Cell[36364, 931, 1015, 14, 67, "Subsection",ExpressionUUID->"b6fa96fc-d000-4190-80dc-03fc9501dc95"],
Cell[37382, 947, 4434, 117, 284, "Input",ExpressionUUID->"9936dec3-58f9-414c-b3fd-d7a15b20b2f1"]
}, Closed]],
Cell[CellGroupData[{
Cell[41853, 1069, 170, 3, 46, "Subsection",ExpressionUUID->"51b63890-f152-4eb3-82ca-9c209d60ae55"],
Cell[CellGroupData[{
Cell[42048, 1076, 3348, 80, 255, "Input",ExpressionUUID->"cc90965d-ac37-4cd2-827d-80b74fff7db3"],
Cell[45399, 1158, 8248, 235, 70, "Output",ExpressionUUID->"bddd3bf2-201f-4af2-97da-d262c39ba59f"]
}, Open  ]],
Cell[53662, 1396, 240, 5, 37, "Input",ExpressionUUID->"5e32ac32-2576-4528-93d6-917bf0ee1f15"],
Cell[CellGroupData[{
Cell[53927, 1405, 3473, 99, 155, "Input",ExpressionUUID->"7d8945b5-98b8-415e-9689-4985272aa12a"],
Cell[57403, 1506, 815, 13, 70, "Output",ExpressionUUID->"f7cfdcc8-491e-4a6c-aef9-513d43dccf72"],
Cell[58221, 1521, 817, 13, 70, "Output",ExpressionUUID->"c69550e6-7d73-450e-b43a-2dfd1d2c244b"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[59087, 1540, 711, 10, 46, "Subsection",ExpressionUUID->"1b963e1d-919a-4ca8-8d6a-bdb5811e76c0"],
Cell[59801, 1552, 3949, 100, 199, "Input",ExpressionUUID->"03c385a9-28fe-44ec-b98b-a8337cdeb3b6"]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[63799, 1658, 166, 3, 65, "Section",ExpressionUUID->"76946252-83fb-4288-866a-371bbe58976e"],
Cell[CellGroupData[{
Cell[63990, 1665, 750, 11, 67, "Subsection",ExpressionUUID->"0161c64f-fadd-4408-8797-e23557b25c18"],
Cell[CellGroupData[{
Cell[64765, 1680, 4833, 138, 216, "Input",ExpressionUUID->"6ae2a763-581a-4444-83f3-2be611138283"],
Cell[69601, 1820, 1894, 45, 70, "Output",ExpressionUUID->"41d6351c-1858-4e74-99c9-42e4cd72a6b5"],
Cell[71498, 1867, 3774, 91, 70, "Output",ExpressionUUID->"f9047258-5444-41c2-8b2a-4bdedef5abf0"],
Cell[75275, 1960, 3675, 93, 70, "Output",ExpressionUUID->"0a7a5256-ecfe-40d9-89a1-2efe4ee8052e"],
Cell[78953, 2055, 2487, 62, 70, "Output",ExpressionUUID->"90ed5a57-45a7-4150-b72f-014281d23766"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81477, 2122, 2432, 67, 142, "Input",ExpressionUUID->"2bf91785-eef0-4168-beea-00b0fe02527b"],
Cell[83912, 2191, 1190, 21, 70, "Output",ExpressionUUID->"87413ec4-1d40-4c98-a9c9-2b7debece0f6"],
Cell[85105, 2214, 1190, 21, 70, "Output",ExpressionUUID->"863b6b30-07f6-47c2-b441-3053bf6534cb"],
Cell[86298, 2237, 1190, 21, 70, "Output",ExpressionUUID->"c0e635ea-79df-47e8-9b10-77e22bb8d6ee"],
Cell[87491, 2260, 1190, 21, 70, "Output",ExpressionUUID->"04245cd8-bf28-4921-a060-4d1ad76ef113"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[88730, 2287, 529, 16, 49, "Subsection",ExpressionUUID->"27caf928-003a-4cc6-bfd1-fe967dbca317"],
Cell[CellGroupData[{
Cell[89284, 2307, 3132, 85, 168, "Input",ExpressionUUID->"fcb4e0ab-ac66-4209-ae8b-d18caee3d3f4"],
Cell[92419, 2394, 630, 11, 70, "Output",ExpressionUUID->"2d55dd73-e898-4315-b7df-b1c1c782d230"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93086, 2410, 1454, 40, 158, "Input",ExpressionUUID->"a8869a9e-aadc-4019-be8d-d658a7d89962"],
Cell[94543, 2452, 1913, 48, 70, "Output",ExpressionUUID->"df8f1bfc-ffdb-4214-a0a1-294218d8f901"],
Cell[96459, 2502, 837, 15, 70, "Output",ExpressionUUID->"8a1634f9-2a16-43c9-ae2b-51ff84446352"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[97357, 2524, 174, 3, 65, "Section",ExpressionUUID->"25265eec-160b-47d9-8387-8cfa0ab0414f"],
Cell[CellGroupData[{
Cell[97556, 2531, 174, 3, 67, "Subsection",ExpressionUUID->"03e61f85-dafa-4f68-bf60-14af5454d829"],
Cell[97733, 2536, 3073, 87, 255, "Input",ExpressionUUID->"b199a1f3-334c-4542-9498-849a96567973"],
Cell[CellGroupData[{
Cell[100831, 2627, 1007, 25, 116, "Input",ExpressionUUID->"03d94bc0-f308-44d6-90f6-f33bfa8dea34"],
Cell[101841, 2654, 815, 17, 70, "Output",ExpressionUUID->"353d6f52-78b3-4ce4-b372-0374beae5be6"],
Cell[102659, 2673, 686, 12, 70, "Output",ExpressionUUID->"9fa5f5df-75d7-4e96-aa82-60d3451a7d05"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[103394, 2691, 195, 3, 46, "Subsection",ExpressionUUID->"1e70321f-a7c1-414b-bb3a-5a3ba9d69e2b"],
Cell[CellGroupData[{
Cell[103614, 2698, 1562, 41, 90, "Input",ExpressionUUID->"e68e003f-5313-4947-ba46-93bcafd0a18b"],
Cell[105179, 2741, 4064, 118, 106, "Output",ExpressionUUID->"0a01ea12-5f87-4771-9748-025e2ced1e49"],
Cell[109246, 2861, 4080, 116, 106, "Output",ExpressionUUID->"1234d1d3-4198-4910-876f-c5d8573cbaa1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[113363, 2982, 1025, 24, 142, "Input",ExpressionUUID->"d776cc5b-660e-426f-88c2-532899eee5a2"],
Cell[114391, 3008, 1062, 26, 68, "Output",ExpressionUUID->"e8ec5318-d2cc-49b6-a851-2ebc7e232eb8"],
Cell[115456, 3036, 2758, 78, 52, "Output",ExpressionUUID->"bde428d9-7bc6-499b-bf2e-133dfa5069b8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[118251, 3119, 3023, 72, 142, "Input",ExpressionUUID->"81b38675-dced-494b-ae73-0a6bf423cefc"],
Cell[121277, 3193, 719, 16, 42, "Output",ExpressionUUID->"9aab66c2-1549-47f5-bea9-f38b596eafae"],
Cell[121999, 3211, 1834, 48, 70, "Output",ExpressionUUID->"dd050f83-4f83-42ba-933b-765cd256cdb0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[123870, 3264, 1699, 39, 64, "Input",ExpressionUUID->"dfe459ee-c713-4632-a235-fe9152f62bd6"],
Cell[125572, 3305, 2143, 47, 68, "Output",ExpressionUUID->"eca2a283-c148-4e33-a558-e3a60427d874"],
Cell[127718, 3354, 3504, 83, 79, "Output",ExpressionUUID->"17b6315d-12d2-43ce-ac93-827272668948"]
}, Open  ]],
Cell[131237, 3440, 382, 9, 37, "Input",ExpressionUUID->"08de6e5f-c8df-4cf1-938c-cee6cf5ff126"],
Cell[CellGroupData[{
Cell[131644, 3453, 2072, 56, 71, "Input",ExpressionUUID->"5518958b-e634-43a9-b546-5854f3aef5e2"],
Cell[133719, 3511, 601, 9, 42, "Output",ExpressionUUID->"cf8fbd9b-4ff0-4760-b564-944731e52ce3"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[134381, 3527, 235, 4, 65, "Section",ExpressionUUID->"51a50405-5f39-45d3-bd34-805c04e27922"],
Cell[CellGroupData[{
Cell[134641, 3535, 247, 4, 67, "Subsection",ExpressionUUID->"7685156a-9502-485e-bc19-7a12603fe77f"],
Cell[CellGroupData[{
Cell[134913, 3543, 2049, 54, 90, "Input",ExpressionUUID->"58ec0087-6d37-430e-98cf-746c3983c5d9"],
Cell[136965, 3599, 4439, 105, 69, "Output",ExpressionUUID->"ddeec4b0-454f-4c25-b4a9-633830dee88a"],
Cell[141407, 3706, 4454, 105, 69, "Output",ExpressionUUID->"ab691cc5-eb02-4053-88f4-d564d154d575"]
}, Open  ]],
Cell[CellGroupData[{
Cell[145898, 3816, 4811, 127, 168, "Input",ExpressionUUID->"9dbd40e3-d0a7-40bc-af75-d7d6de4e5340"],
Cell[150712, 3945, 1907, 43, 67, "Output",ExpressionUUID->"b36ae8d6-d79a-4ed7-a39b-3d92622310d3"],
Cell[152622, 3990, 1914, 43, 69, "Output",ExpressionUUID->"c4347a5a-227a-4e6c-9b2c-7d5e13aa754b"],
Cell[154539, 4035, 1054, 16, 42, "Output",ExpressionUUID->"848d6b25-a74e-4aee-a1ee-a68746c7046b"],
Cell[155596, 4053, 1054, 16, 62, "Output",ExpressionUUID->"e07444b6-8ece-46c8-861d-154a18267af0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[156687, 4074, 990, 24, 64, "Input",ExpressionUUID->"ab3a76bc-4637-474e-9fea-e967b7bd4bda"],
Cell[157680, 4100, 1827, 43, 68, "Output",ExpressionUUID->"cc55d642-c224-41b5-8e41-943ab22f87f7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[159544, 4148, 2820, 73, 71, "Input",ExpressionUUID->"b20d5812-0935-4b99-9a20-af9c1f350794"],
Cell[162367, 4223, 1580, 37, 67, "Output",ExpressionUUID->"1fcd10e1-c455-48c0-ad91-26b0150f5935"]
}, Open  ]],
Cell[CellGroupData[{
Cell[163984, 4265, 2856, 75, 102, "Input",ExpressionUUID->"004c1d1f-58d3-4e21-8703-b43263cc4449"],
Cell[166843, 4342, 900, 13, 42, "Output",ExpressionUUID->"ff5fa9e7-d6ce-49b9-a546-79ef3f795cec"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[167792, 4361, 249, 4, 46, "Subsection",ExpressionUUID->"63b52513-bb28-4c60-bcb9-65b09eb24e7f"],
Cell[CellGroupData[{
Cell[168066, 4369, 3288, 92, 142, "Input",ExpressionUUID->"ffed0b28-13ba-4acd-92c9-386bcb51f69e"],
Cell[171357, 4463, 2690, 59, 70, "Output",ExpressionUUID->"299f5092-f0b1-4420-8897-fe2e830ce57f"],
Cell[174050, 4524, 2506, 54, 70, "Output",ExpressionUUID->"599f538e-89de-4b9b-9588-c3bda0647bc5"],
Cell[176559, 4580, 1528, 29, 70, "Output",ExpressionUUID->"ce9e7020-00be-4d03-84b6-ad5fc1852e1c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178124, 4614, 6228, 162, 282, "Input",ExpressionUUID->"58308630-958f-4fbd-88ff-8a9214db59c4"],
Cell[184355, 4778, 2091, 53, 70, "Output",ExpressionUUID->"80f11a25-788f-4570-a8ef-9cf093983209"],
Cell[186449, 4833, 3804, 99, 70, "Output",ExpressionUUID->"21a66b57-9da6-4b4b-8136-0d93cbc2fa55"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[190302, 4938, 238, 4, 46, "Subsection",ExpressionUUID->"87861389-68a6-48a5-9d18-d0063a9a2feb"],
Cell[CellGroupData[{
Cell[190565, 4946, 1611, 39, 90, "Input",ExpressionUUID->"25eafbae-e458-41b3-8f4a-383145936054"],
Cell[192179, 4987, 6967, 167, 70, "Output",ExpressionUUID->"8aee5a82-5f96-4cd1-8f9b-c5bae3b6e2aa"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199183, 5159, 12513, 320, 671, "Input",ExpressionUUID->"605dcd28-01f2-433f-92da-b35e917b7d06"],
Cell[211699, 5481, 967, 17, 70, "Output",ExpressionUUID->"958ff299-dd30-4aba-9513-12b0efa99cfe"],
Cell[212669, 5500, 1563, 36, 70, "Output",ExpressionUUID->"ea5eb38e-0861-40e0-be84-2fc38abdee5d"],
Cell[214235, 5538, 2105, 53, 70, "Output",ExpressionUUID->"f45bbbc1-8ec5-4509-abe0-c47641c00a50"],
Cell[216343, 5593, 2217, 55, 70, "Output",ExpressionUUID->"9f1f49bf-2a11-4353-8aff-29eb2d949bc4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[218597, 5653, 3341, 77, 121, "Input",ExpressionUUID->"72bcd2eb-92cd-4c2b-8551-61ee1faba4ce"],
Cell[221941, 5732, 1678, 31, 70, "Output",ExpressionUUID->"58f75b59-1a27-4805-bd87-a82f8fa4118a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223656, 5768, 5662, 135, 202, "Input",ExpressionUUID->"3e3ecdad-303d-434f-9796-eaf7ebbb6773"],
Cell[229321, 5905, 1280, 27, 70, "Output",ExpressionUUID->"686033d1-a55a-4584-ac66-196f2c24d7de"],
Cell[230604, 5934, 1051, 19, 70, "Output",ExpressionUUID->"916db444-c1e6-42db-b6d2-a8b2cf4c4edc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231692, 5958, 1061, 29, 75, "Input",ExpressionUUID->"67a2876a-f9ab-4457-9bf2-0a5dd74919e5"],
Cell[232756, 5989, 4471, 124, 70, "Output",ExpressionUUID->"3aa70829-2c12-43bc-a793-d419a85b3b66"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237264, 6118, 2620, 73, 133, "Input",ExpressionUUID->"31870c69-715b-4431-ab63-abf28ff2f2c7"],
Cell[239887, 6193, 1240, 28, 70, "Output",ExpressionUUID->"15497660-c694-4e26-a04a-502a50bd7e15"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[241188, 6228, 279, 4, 65, "Section",ExpressionUUID->"5b819c66-de88-40f9-94ea-2b7b73fc7897"],
Cell[CellGroupData[{
Cell[241492, 6236, 541, 17, 70, "Subsection",ExpressionUUID->"83a82e81-2935-4a55-8308-156c333ca950"],
Cell[CellGroupData[{
Cell[242058, 6257, 1730, 43, 139, "Input",ExpressionUUID->"4ca21be1-83cf-445f-afab-6f56ef3b6238"],
Cell[243791, 6302, 1769, 41, 70, "Output",ExpressionUUID->"a4846ebe-035c-4dbc-a749-764f27ad125e"],
Cell[245563, 6345, 1468, 31, 70, "Output",ExpressionUUID->"af9e190e-fd84-4269-9912-53b321dd287a"],
Cell[247034, 6378, 1191, 23, 70, "Output",ExpressionUUID->"0564a06b-0887-44e3-b1e4-c604c7c114c4"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[248274, 6407, 1137, 23, 47, "Subsection",ExpressionUUID->"9610ae58-17c9-4f79-81ed-6f6084e56a31"],
Cell[CellGroupData[{
Cell[249436, 6434, 3905, 109, 534, "Input",ExpressionUUID->"818b5bea-f01b-418f-b71e-436704cd67d2"],
Cell[253344, 6545, 3050, 86, 70, "Output",ExpressionUUID->"b661f350-4bfa-447f-8816-b3092e70c48f"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[256443, 6637, 1033, 19, 47, "Subsection",ExpressionUUID->"b6af78ae-864f-459a-b34a-b8c78d89eb52"],
Cell[CellGroupData[{
Cell[257501, 6660, 4264, 112, 130, "Input",ExpressionUUID->"233d8380-b81d-444a-b186-e75cfe2c6a5a"],
Cell[261768, 6774, 3825, 96, 70, "Output",ExpressionUUID->"c8062b30-9f0f-465c-872c-39c2a078c06a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265630, 6875, 1748, 46, 89, "Input",ExpressionUUID->"9d52883b-f36c-458b-b829-6157f9775d1d"],
Cell[267381, 6923, 6997, 192, 70, "Output",ExpressionUUID->"de5166ff-15df-4df8-bd0e-b99781bf2b4d"]
}, Open  ]],
Cell[274393, 7118, 246, 4, 37, "Input",ExpressionUUID->"275c86fc-2801-47d6-a9b2-26ba9105707b"],
Cell[CellGroupData[{
Cell[274664, 7126, 807, 25, 37, "Input",ExpressionUUID->"b03bd200-6b42-4a78-8bf9-77d1a2aa3508"],
Cell[275474, 7153, 1256, 31, 70, "Output",ExpressionUUID->"2ede0661-3d69-425c-a0a3-c52d5426101d"]
}, Open  ]],
Cell[276745, 7187, 1545, 45, 75, "Input",ExpressionUUID->"9133c8bf-8d26-439e-bcfe-50a4ef749b96"]
}, Closed]],
Cell[CellGroupData[{
Cell[278327, 7237, 807, 11, 46, "Subsection",ExpressionUUID->"fa375f26-e35d-47ed-81c9-f8bc59dcc98e"],
Cell[CellGroupData[{
Cell[279159, 7252, 2416, 63, 64, "Input",ExpressionUUID->"44ca1895-6e4f-4787-83b2-96798a9bfb87"],
Cell[281578, 7317, 3607, 104, 70, "Output",ExpressionUUID->"04be0e36-d127-49a3-882e-0005fed8f0e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285222, 7426, 953, 23, 64, "Input",ExpressionUUID->"668f2032-1387-4835-993e-61cda46ebaab"],
Cell[286178, 7451, 1264, 28, 70, "Output",ExpressionUUID->"5c2eecb9-2b4e-461a-8dc9-b05572f4b790"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[287491, 7485, 173, 3, 46, "Subsection",ExpressionUUID->"b0b8a43e-9d0a-4c51-b514-f270c194b935"],
Cell[CellGroupData[{
Cell[287689, 7492, 2544, 69, 144, "Input",ExpressionUUID->"306f2f49-e9f1-4a57-9cb6-7e83df56d3c1"],
Cell[290236, 7563, 1182, 25, 70, "Output",ExpressionUUID->"1405f241-a919-4a56-a6fe-b73f28d4c7aa"],
Cell[291421, 7590, 969, 17, 70, "Output",ExpressionUUID->"2b3bf4b8-0462-4598-8db2-cf22453927d9"],
Cell[292393, 7609, 1079, 21, 70, "Output",ExpressionUUID->"12f9d01f-480a-4389-9a29-8731d1a31a25"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[293533, 7637, 227, 4, 65, "Section",ExpressionUUID->"6478f18a-954e-4ae9-bc84-2febb6b52087"],
Cell[293763, 7643, 828, 20, 64, "Input",ExpressionUUID->"893bc0f4-3ae0-49df-9c93-7eb435e75451"],
Cell[CellGroupData[{
Cell[294616, 7667, 366, 5, 67, "Subsection",ExpressionUUID->"20b41a83-3623-4303-9022-f024d8233a7d"],
Cell[CellGroupData[{
Cell[295007, 7676, 5214, 146, 401, "Input",ExpressionUUID->"5e4ab0dd-5c67-4612-852b-22574c229a14"],
Cell[300224, 7824, 2792, 88, 70, "Output",ExpressionUUID->"86ba15f7-dce5-4648-b1de-78dd795b6757"],
Cell[303019, 7914, 26630, 494, 70, "Output",ExpressionUUID->"22c2286d-fa9e-4f52-8a1b-0d962ea52521"],
Cell[329652, 8410, 92117, 1561, 70, "Output",ExpressionUUID->"b9e8ab2e-5f02-41a3-8896-f72bc8a87ac6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421806, 9976, 3168, 80, 274, "Input",ExpressionUUID->"8682a397-07af-46ba-97a1-09d31281340e"],
Cell[424977, 10058, 1212, 29, 70, "Output",ExpressionUUID->"9186e0e0-6c31-4e15-bec8-763960221ac7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[426238, 10093, 361, 11, 47, "Subsection",ExpressionUUID->"1bbda41a-2daa-4ee4-87c1-f7d3e65cf7ba"],
Cell[CellGroupData[{
Cell[426624, 10108, 8176, 224, 460, "Input",ExpressionUUID->"cbdc9ebb-f0fa-4001-96c2-8b22e4df9410"],
Cell[434803, 10334, 51713, 945, 70, "Output",ExpressionUUID->"55eeb60e-793d-42e6-8ce8-45b1cb8ac3c4"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[486565, 11285, 373, 11, 47, "Subsection",ExpressionUUID->"aade0b93-89fb-4843-bca9-69d421fd25dd"],
Cell[CellGroupData[{
Cell[486963, 11300, 10250, 297, 545, "Input",ExpressionUUID->"714a2b35-4b48-4a6c-8ce9-0a34c7feaf9f"],
Cell[497216, 11599, 18110, 356, 295, "Output",ExpressionUUID->"ca106dfe-f66e-4276-897f-f02af4d795fb"],
Cell[515329, 11957, 101145, 1714, 270, "Output",ExpressionUUID->"6e2267b0-2db3-4b49-9c61-c2ad90366dfd"]
}, Open  ]],
Cell[616489, 13674, 6290, 170, 392, "Input",ExpressionUUID->"fb2babea-ad2d-48b5-83c5-acce8ba5dbc1"]
}, Closed]],
Cell[CellGroupData[{
Cell[622816, 13849, 383, 11, 47, "Subsection",ExpressionUUID->"b1233e12-a3ec-4c16-a156-61ac238618b1"],
Cell[CellGroupData[{
Cell[623224, 13864, 4067, 120, 338, "Input",ExpressionUUID->"af30e24b-5473-4a9b-bedc-a03402ad55ac"],
Cell[627294, 13986, 5027, 164, 70, "Output",ExpressionUUID->"e47a8c16-c80b-4b85-87aa-93b04a9cdc09"],
Cell[632324, 14152, 17502, 350, 70, "Output",ExpressionUUID->"faf42ef9-043c-4c93-8d32-57d7d9097ac6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[649863, 14507, 847, 21, 58, "Input",ExpressionUUID->"c9f90d26-1d78-476f-96fb-6a694034a203"],
Cell[650713, 14530, 466, 10, 70, "Output",ExpressionUUID->"29290ced-dd70-45fd-a350-c2a6094b6f8e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[651228, 14546, 378, 11, 47, "Subsection",ExpressionUUID->"3afc80a2-487a-4f16-a406-dab8f35ad524"],
Cell[CellGroupData[{
Cell[651631, 14561, 7081, 194, 479, "Input",ExpressionUUID->"3dd05f46-001d-4205-8bfa-986ea5061dc4"],
Cell[658715, 14757, 17429, 349, 70, "Output",ExpressionUUID->"e3484c42-f6d9-4d81-bb9d-e59f7ab12b40"]
}, Open  ]],
Cell[CellGroupData[{
Cell[676181, 15111, 4593, 122, 340, "Input",ExpressionUUID->"3982f01e-b675-4c5c-9a21-8f49be94466f"],
Cell[680777, 15235, 3751, 97, 70, "Output",ExpressionUUID->"28a7ed47-e6d5-4168-904b-890315f7baf6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[684565, 15337, 2081, 54, 116, "Input",ExpressionUUID->"91b372d3-2661-4498-aff2-72533fb99c45"],
Cell[686649, 15393, 4352, 124, 70, "Output",ExpressionUUID->"e31e0e8a-dbc0-4a12-8698-e720ce27d2be"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[691050, 15523, 377, 10, 49, "Subsection",ExpressionUUID->"09c0f43e-a20c-41b0-ac48-cc510cfad86b"],
Cell[691430, 15535, 686, 12, 37, "Input",ExpressionUUID->"1d89dffa-e4c2-47fb-a173-aac4663f6d65"],
Cell[CellGroupData[{
Cell[692141, 15551, 3308, 83, 64, "Input",ExpressionUUID->"d08af839-55d6-489e-baca-273a167855bb"],
Cell[695452, 15636, 1416, 33, 93, "Output",ExpressionUUID->"e5d3eb8f-1ee9-478a-a08f-d400ad53ec2f"],
Cell[696871, 15671, 2621, 73, 92, "Output",ExpressionUUID->"cf3a4b30-07f6-4562-a568-674b7bc150fd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[699529, 15749, 3523, 94, 64, "Input",ExpressionUUID->"a3fab2c2-5b8d-4bfd-a7cf-2b3915f4b78e"],
Cell[703055, 15845, 5023, 154, 120, "Output",ExpressionUUID->"e163c84b-596f-4719-925a-ed23be74cf05"],
Cell[708081, 16001, 13619, 387, 327, "Output",ExpressionUUID->"ab65f519-6842-44e7-a54f-a8290d4f319d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[721737, 16393, 3517, 93, 64, "Input",ExpressionUUID->"f90c1bdc-e2f1-4816-b3e1-ca944e1bc2d5"],
Cell[725257, 16488, 706, 14, 65, "Output",ExpressionUUID->"693776a2-55c9-404f-a2cd-e5e4239eb4f6"],
Cell[725966, 16504, 1111, 29, 88, "Output",ExpressionUUID->"ba43d233-ccb7-4cee-b9ad-7c53477e45fb"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[727126, 16539, 331, 9, 49, "Subsection",ExpressionUUID->"59fed317-787c-465b-8c66-a121e1c39007"],
Cell[CellGroupData[{
Cell[727482, 16552, 381, 9, 57, "Subsubsection",ExpressionUUID->"6d2f0cd9-af40-4b89-90bd-8434bd8ecca1"],
Cell[CellGroupData[{
Cell[727888, 16565, 2480, 68, 64, "Input",ExpressionUUID->"9e79571a-cc83-48e6-89fb-3e35696f8d9f"],
Cell[730371, 16635, 1891, 56, 118, "Output",ExpressionUUID->"c8e65263-248f-4ce2-9d99-15c5391d5aaa"],
Cell[732265, 16693, 7531, 212, 258, "Output",ExpressionUUID->"792fd8bb-56c3-4557-94ce-62b431043013"]
}, Open  ]],
Cell[CellGroupData[{
Cell[739833, 16910, 10873, 295, 332, "Input",ExpressionUUID->"bd170ad8-5e30-43da-969f-d42b5d4d729d"],
Cell[750709, 17207, 1246, 33, 69, "Output",ExpressionUUID->"33e9c609-1472-4b67-bdd9-336e00a809db"],
Cell[751958, 17242, 1951, 57, 77, "Output",ExpressionUUID->"6af39845-506e-4d5d-a28e-4a0961dcdbe0"]
}, Open  ]],
Cell[753924, 17302, 362, 9, 64, "Input",ExpressionUUID->"26ecacdb-0fbd-484c-b028-37441d252041"]
}, Closed]],
Cell[CellGroupData[{
Cell[754323, 17316, 188, 3, 45, "Subsubsection",ExpressionUUID->"6a283803-2a17-45dc-90d3-737ceca56f83"],
Cell[CellGroupData[{
Cell[754536, 17323, 6436, 178, 272, "Input",ExpressionUUID->"3eb853d1-ce94-4b8a-bb2a-1d9e9aaabf49"],
Cell[760975, 17503, 917, 23, 77, "Output",ExpressionUUID->"0dcc5cfc-4b47-4fa4-8623-8e112ba34eda"],
Cell[761895, 17528, 2861, 86, 77, "Output",ExpressionUUID->"56d0179f-e92a-4ea0-8b6f-ea390fc60923"],
Cell[764759, 17616, 489, 8, 42, "Output",ExpressionUUID->"b3ecc818-8c0e-46ce-8c8a-ad04cc5afa27"]
}, Open  ]],
Cell[CellGroupData[{
Cell[765285, 17629, 2341, 57, 54, "Input",ExpressionUUID->"b8271b5d-86c7-4736-8422-b41f136ae3f6"],
Cell[767629, 17688, 9895, 305, 277, "Output",ExpressionUUID->"8b1fdd0a-d826-42b6-96c3-0abe6df38976"]
}, Open  ]],
Cell[CellGroupData[{
Cell[777561, 17998, 2474, 52, 54, "Input",ExpressionUUID->"80777af7-9869-473e-a998-d47404f86a66"],
Cell[780038, 18052, 514, 11, 35, "Message",ExpressionUUID->"d792301f-aec7-4228-a467-c30b095fd73b"],
Cell[780555, 18065, 514, 11, 35, "Message",ExpressionUUID->"d5fa9111-0b4b-48eb-965d-771720f7275c"],
Cell[781072, 18078, 515, 11, 35, "Message",ExpressionUUID->"2ddf193e-ebec-4a57-b12f-380d3fcf3b26"],
Cell[781590, 18091, 457, 10, 35, "Message",ExpressionUUID->"d86f7f05-5426-4c61-9644-eae420c336a7"],
Cell[782050, 18103, 106148, 3017, 2488, "Output",ExpressionUUID->"1611f1fc-b9ec-4233-9d0d-13e708eadc51"]
}, Open  ]],
Cell[888213, 21123, 2431, 46, 64, "Input",ExpressionUUID->"76933426-38ab-417f-9cd2-42836b97e854"],
Cell[CellGroupData[{
Cell[890669, 21173, 2345, 54, 37, "Input",ExpressionUUID->"dcaa8063-301b-496c-84eb-66b1d8a0a484"],
Cell[893017, 21229, 2987, 93, 90, "Output",ExpressionUUID->"b561876a-7f0f-4116-8e8a-a72cb91078aa"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[896053, 21328, 175, 3, 45, "Subsubsection",ExpressionUUID->"7a67ed8a-7902-4b13-9742-cd1b77e6d977"],
Cell[CellGroupData[{
Cell[896253, 21335, 1127, 32, 54, "Input",ExpressionUUID->"6a4a6fbc-ebff-4a39-a594-1e33fab8fd08"],
Cell[897383, 21369, 1231, 38, 81, "Output",ExpressionUUID->"0b6063c5-24f9-4d81-a9ff-750f64a261d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[898651, 21412, 2340, 58, 54, "Input",ExpressionUUID->"ba244e93-e662-461a-8a12-f2652f7716b2"],
Cell[900994, 21472, 6088, 181, 161, "Output",ExpressionUUID->"568ca9b1-7805-46c2-ad49-9311cbab65b0"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[907131, 21659, 265, 5, 45, "Subsubsection",ExpressionUUID->"fe4432e8-a283-4dfe-b87d-9a0f59da01e7"],
Cell[CellGroupData[{
Cell[907421, 21668, 2142, 56, 82, "Input",ExpressionUUID->"430d522e-6614-49b1-8ebd-2a997a9fc3c6"],
Cell[909566, 21726, 9510, 276, 363, "Output",ExpressionUUID->"eec05909-8977-4e91-90f3-b3c48df37efb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[919113, 22007, 2164, 57, 90, "Input",ExpressionUUID->"1ee0b63c-55a0-4ef7-acad-43015ae19d85"],
Cell[921280, 22066, 5891, 181, 173, "Output",ExpressionUUID->"a68821d9-4f5e-48ff-ab9c-9c149eed1d2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[927208, 22252, 2617, 71, 134, "Input",ExpressionUUID->"7bcec286-7d55-4d1d-a964-e70ffe0131f5"],
Cell[929828, 22325, 876, 26, 71, "Output",ExpressionUUID->"3f5bbe75-d676-4302-a58e-75abc85f7167"]
}, Open  ]]
}, Closed]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[930777, 22359, 157, 3, 65, "Section",ExpressionUUID->"fc671ac7-867e-4161-a6c4-7f8a920cbac5"],
Cell[CellGroupData[{
Cell[930959, 22366, 3218, 67, 376, "Input",ExpressionUUID->"013276b9-499b-4ad3-ad83-19405bd3ba7e"],
Cell[934180, 22435, 433, 8, 29, "Print",ExpressionUUID->"e5e17fea-1c31-48e4-a6ce-58973e56431a"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[934662, 22449, 160, 3, 65, "Section",ExpressionUUID->"2534492e-ad85-40a1-8028-3572ae7e291e"],
Cell[934825, 22454, 1496, 28, 90, "Input",ExpressionUUID->"96196bcf-8d24-4b38-b165-a786f4099e94"],
Cell[CellGroupData[{
Cell[936346, 22486, 5951, 140, 162, "Input",ExpressionUUID->"5e3dfbf0-5d77-4c7a-9cce-ec132fed21a9"],
Cell[942300, 22628, 168452, 2808, 454, "Output",ExpressionUUID->"53134288-4c19-40c2-90e6-bc7aca70262d"],
Cell[1110755, 25438, 528, 8, 42, "Output",ExpressionUUID->"2fbebfeb-76af-4ced-836e-d89af05ae330"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1111320, 25451, 5732, 135, 162, "Input",ExpressionUUID->"2f724e66-74ec-4c86-8362-005aaab8b52d"],
Cell[1117055, 25588, 144875, 2424, 196, "Output",ExpressionUUID->"cc3f9560-780f-41e5-9567-8b9a258c8401"],
Cell[1261933, 28014, 406, 6, 42, "Output",ExpressionUUID->"4a1027f9-c4ed-4917-9e3a-3592319f29d0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1262376, 28025, 6250, 140, 162, "Input",ExpressionUUID->"569f6e63-76b2-425b-817b-b9eb6540727d"],
Cell[1268629, 28167, 359072, 5903, 661, 266944, 4390, "CachedBoxData", "BoxData", "Output",ExpressionUUID->"b9496d93-4b69-46cf-841c-71c5d06795ec"],
Cell[1627704, 34072, 604, 11, 42, "Output",ExpressionUUID->"87f1535a-71f6-4393-9985-972a2c24562b"]
}, Open  ]]
}, Closed]],
Cell[1628335, 34087, 152, 3, 65, "Section",ExpressionUUID->"f87b786f-c268-46e4-b32f-449af04e9eb5"]
}, Open  ]]
}
]
*)

